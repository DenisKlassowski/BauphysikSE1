/* Generated code for Python module 'PyQt5.uic.Compiler.qtproxies'
 * created by Nuitka version 0.6.7
 *
 * This code is in part copyright 2019 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "__helpers.h"

/* The "_module_PyQt5$uic$Compiler$qtproxies" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_PyQt5$uic$Compiler$qtproxies;
PyDictObject *moduledict_PyQt5$uic$Compiler$qtproxies;

/* The declarations of module constants used, if any. */
static PyObject *const_tuple_2abd98543ace3a18eee0f12ccae60159_tuple;
static PyObject *const_str_plain_QDialog;
static PyObject *const_tuple_str_plain_self_str_plain_args_tuple;
extern PyObject *const_str_plain___spec__;
static PyObject *const_str_digest_c66db4fec36bbb504504ec0bc763bc01;
extern PyObject *const_str_plain___name__;
static PyObject *const_str_digest_8528e90b478df957f4b46b88bf029508;
extern PyObject *const_str_plain_object;
extern PyObject *const_str_plain_QFont;
static PyObject *const_str_plain_QTimeEdit;
static PyObject *const_str_plain_i18n_void_func;
static PyObject *const_str_digest_4dcfe10d04f1a816f6b491aaa018d207;
static PyObject *const_str_digest_0b6cff004ab8e493637648d0dd878e92;
extern PyObject *const_str_plain_QMainWindow;
static PyObject *const_str_plain_QPainter;
static PyObject *const_str_digest_938b51037dad752fd1fbf84cf8bf860b;
extern PyObject *const_str_plain_None;
static PyObject *const_str_plain_QColorDialog;
static PyObject *const_str_digest_41ac2d1fc11ba3132da11aaf2fab2cfe;
static PyObject *const_str_plain_QSpinBox;
static PyObject *const_str_digest_10f1597c2d51a2472f293de9d98a5ead;
static PyObject *const_str_digest_eaf312e63b45cc80c61e91a9fb9fc662;
static PyObject *const_str_digest_e9116ad3e836e6a65b3043a1ba7c5bec;
extern PyObject *const_str_plain___debug__;
extern PyObject *const_str_plain_flags;
extern PyObject *const_str_plain_str;
extern PyObject *const_str_plain_horizontalHeader;
static PyObject *const_str_digest_1da10d7760888df09a9dc6382ef15032;
static PyObject *const_str_digest_4888f35dc9ff812f34c91fd35d4a6cfa;
extern PyObject *const_str_plain_is_attribute;
extern PyObject *const_str_plain_QBoxLayout;
extern PyObject *const_str_plain_as_string;
static PyObject *const_str_digest_efd56ceff77b4993ab7bfa46696a762e;
static PyObject *const_str_digest_0d7821e7064e1cd5e934fef1d0f64c1f;
extern PyObject *const_str_plain_font;
extern PyObject *const_str_plain_metaObject;
extern PyObject *const_str_plain_QComboBox;
static PyObject *const_str_plain_noInstantiation;
extern PyObject *const_tuple_str_dot_tuple;
extern PyObject *const_str_plain_attribute;
extern PyObject *const_str_plain_locals;
extern PyObject *const_str_plain_name;
extern PyObject *const_str_plain_QWizard;
extern PyObject *const_str_plain_proxy;
static PyObject *const_str_plain_QColumnView;
extern PyObject *const_str_plain_QListWidget;
static PyObject *const_str_digest_d6e45e8670c28df2e5e320fbb80bb88a;
extern PyObject *const_str_plain_QtGui;
static PyObject *const_tuple_str_plain_self_str_plain_sp_tuple;
extern PyObject *const_str_plain_map;
extern PyObject *const_str_plain_False;
static PyObject *const_str_digest_d99d22dbfd677af04143c697a4a6cc7d;
extern PyObject *const_str_plain_objectname;
static PyObject *const_str_plain__printer;
extern PyObject *const_int_0;
static PyObject *const_str_digest_8d6215461f312bb3399dbff7458d5754;
static PyObject *const_str_plain_QProgressBar;
static PyObject *const_str_digest_3bade40a56a40f270e6778393ea5b0c5;
static PyObject *const_str_digest_48985109c9f73ad947465cd6672a0905;
extern PyObject *const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
static PyObject *const_str_plain_QInputDialog;
static PyObject *const_str_digest_c69b6de7bce089077512e10cfbe1ba3d;
static PyObject *const_str_digest_1bd12fdb4ca92db7ed4c0a9f5c58c1d0;
extern PyObject *const_tuple_str_plain_string_tuple;
extern PyObject *const_int_pos_50331648;
static PyObject *const_tuple_str_plain_self_str_plain_idx_tuple;
static PyObject *const_str_digest_48fa30560f2d0e47e015a9aae37c3092;
static PyObject *const_str_plain_QRadioButton;
extern PyObject *const_str_plain_type;
static PyObject *const_str_digest_524f735692c9d133d79579eca359ac14;
static PyObject *const_str_digest_00bf4bf917367e7d19dac4c4926c5b58;
extern PyObject *const_str_plain___cached__;
static PyObject *const_str_plain__uic_name;
static PyObject *const_str_plain__qwidgets;
static PyObject *const_str_plain_minimumSizeHint;
extern PyObject *const_str_plain_QIcon;
static PyObject *const_str_plain_QCalendarWidget;
extern PyObject *const_str_plain_QFormLayout;
static PyObject *const_tuple_str_plain_cls_str_plain_args_tuple;
static PyObject *const_str_plain_QFontDialog;
extern PyObject *const_int_pos_1;
static PyObject *const_str_plain_QObject;
static PyObject *const_tuple_str_plain_self_str_plain_page_tuple;
extern PyObject *const_str_plain_connectSlotsByName;
extern PyObject *const_str_plain_QWidget;
static PyObject *const_str_digest_ac8bce036c5564c1bc69505cb512f931;
static PyObject *const_str_plain_funcall;
static PyObject *const_str_digest_82953e72263762ee43fd71536cb103f9;
extern PyObject *const_str_plain_QSpacerItem;
extern PyObject *const_str_plain___prepare__;
static PyObject *const_str_digest_013032a9d7e44cb5522c0ff257493afd;
extern PyObject *const_str_plain_child;
extern PyObject *const_str_plain_module;
extern PyObject *const_str_plain_QApplication;
static PyObject *const_str_digest_aa8af3cff4d74d1fe88937f508d68e63;
extern PyObject *const_str_plain_translate;
static PyObject *const_str_plain_QFontComboBox;
extern PyObject *const_str_plain_QListWidgetItem;
static PyObject *const_str_plain_QOpenGLWidget;
extern PyObject *const_str_plain_QTableWidget;
extern PyObject *const_str_plain_QStatusBar;
static PyObject *const_str_digest_b0c7b94a51c06049f4da6b7e954193ac;
extern PyObject *const_str_plain_index;
static PyObject *const_tuple_str_plain_self_str_plain_string_str_plain_disambig_tuple;
extern PyObject *const_str_plain_sender;
static PyObject *const_str_plain_QTextEdit;
extern PyObject *const_str_plain_string;
static PyObject *const_str_plain_ProxyClassMember;
static PyObject *const_str_digest_401eefcca6b9ab5a260d38fee46f238b;
static PyObject *const_tuple_str_plain_module_str_plain_clsname_str_plain_cls_tuple;
static PyObject *const_tuple_str_plain_verticalHeaderItem_tuple;
extern PyObject *const_str_plain___file__;
static PyObject *const_str_digest_69d8a6396683f491be9a483281531410;
static PyObject *const_str_digest_40eec4196f357bab231d01e67583003c;
static PyObject *const_str_digest_e9f22005d8828bb0a675a8840855f13d;
extern PyObject *const_str_plain_QLinearGradient;
extern PyObject *const_str_plain_QLayout;
static PyObject *const_str_plain_QDial;
static PyObject *const_str_digest_9bf7aa484cf7493f050ed3db956edfc0;
static PyObject *const_str_digest_12c8e2c774140119b987939492d2b58b;
static PyObject *const_tuple_str_plain_self_str_plain_index_tuple;
extern PyObject *const_str_plain_QAbstractButton;
static PyObject *const_str_digest_c41a49663887372325faf65a709cb429;
static PyObject *const_str_digest_1765bd07a5f456c7d27f71bcb79097ec;
static PyObject *const_str_digest_b4f06ec77d4ca140b8f24cac703689b5;
static PyObject *const_str_plain__class;
static PyObject *const_str_digest_f7c1b42296fb13108a554d9570dda7a9;
extern PyObject *const_str_plain_QToolBar;
extern PyObject *const_str_plain_connect;
extern PyObject *const_str_plain_clsname;
static PyObject *const_str_digest_c6d21499095ee65b6849b7017838b553;
extern PyObject *const_str_plain___orig_bases__;
static PyObject *const_tuple_str_plain_self_str_plain_rname_str_plain_args_str_plain_name_tuple;
static PyObject *const_str_plain_sp;
static PyObject *const_str_digest_daa658fb12a7fec518774079fd0df864;
static PyObject *const_str_plain_page;
extern PyObject *const_str_plain_indenter;
extern PyObject *const_str_plain___qualname__;
static PyObject *const_str_plain_str_args;
static PyObject *const_str_plain_QLineEdit;
static PyObject *const_str_digest_5bbb887d79bb786add01d005507bcb11;
static PyObject *const_str_digest_4031e16feef643173885c27df2f4ad97;
extern PyObject *const_str_plain_slot;
static PyObject *const_str_digest_65fcb0c1d7d114cb0d0138ca4561a77f;
extern PyObject *const_str_plain_QTableWidgetItem;
extern PyObject *const_str_plain_Qt;
static PyObject *const_str_digest_86d61e4ccbc9938f77b58e3c2477a54c;
static PyObject *const_str_digest_95bba529d11e64d9d782a2d09977c6aa;
static PyObject *const_str_plain_QDateTimeEdit;
static PyObject *const_str_digest_2cb9647935ecf0d5be585c589b74d9e6;
static PyObject *const_str_digest_e5b4e12777ba15c67a9c431e109d9297;
static PyObject *const_tuple_str_plain_item_tuple;
static PyObject *const_str_digest_42acd81bf0526310bebd9713acd5dd71;
static PyObject *const_str_plain_QTextBrowser;
extern PyObject *const_str_plain_verticalHeaderItem;
extern PyObject *const_str_digest_4d848f1798a02d9a0d913955a64e8e94;
extern PyObject *const_str_plain_setSortingEnabled;
static PyObject *const_tuple_str_plain_self_str_plain_attribute_tuple;
static PyObject *const_str_digest_c9bbfd4d23003bd37def2410d491807c;
extern PyObject *const_str_plain_horizontalHeaderItem;
static PyObject *const_tuple_str_plain_self_str_plain_args_str_plain_text_tuple;
static PyObject *const_str_digest_4affdb4cc5ab447930b1364346a5bdfe;
static PyObject *const_str_plain_fromTheme;
extern PyObject *const_tuple_str_empty_tuple;
static PyObject *const_tuple_5f54ea17e43c779ec4f22e9769541d3f_tuple;
extern PyObject *const_str_plain___getitem__;
static PyObject *const_str_plain_QScrollBar;
static PyObject *const_str_digest_036450d673d90e4e404ec32ea5710f15;
static PyObject *const_str_digest_0b9be081086c46fe98cca54cb8354bb9;
static PyObject *const_str_plain_QAbstractSlider;
extern PyObject *const_str_plain_text;
static PyObject *const_str_digest_64be69029dd224d9920d16bf00102c4d;
static PyObject *const_str_digest_e5577d33a71deda15648281a9c38e536;
static PyObject *const_str_digest_309dbcb454ca90554e49ef5aeade526c;
extern PyObject *const_str_plain_origin;
extern PyObject *const_str_plain_strict_getattr;
extern PyObject *const_str_plain_QConicalGradient;
static PyObject *const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple;
extern PyObject *const_str_digest_75fd71b1edada749c2ef7ac810062295;
extern PyObject *const_str_plain_className;
extern PyObject *const_str_plain_QMenu;
static PyObject *const_str_digest_31a0bd6420283acca2fd18800703e60f;
static PyObject *const_str_digest_40728691f3b83351d6d26cc774f2202e;
static PyObject *const_str_plain__signal_name;
static PyObject *const_str_plain_QLCDNumber;
extern PyObject *const_str_plain_moduleMember;
static PyObject *const_str_digest_f6e21371c1f4b15e5d01ebc764f03c28;
extern PyObject *const_str_plain_hexversion;
static PyObject *const_str_digest_8e611e5c50f8f4d310824827087f3e3d;
extern PyObject *const_str_plain_signal_name;
static PyObject *const_str_plain_QCommandLinkButton;
extern PyObject *const_str_plain_QtWidgets;
extern PyObject *const_tuple_str_plain_write_code_tuple;
extern PyObject *const_str_plain_sys;
static PyObject *const_str_digest_730e8ad82247f44dfece14b82dacf72e;
static PyObject *const_str_digest_015c970859e71b90bf79702430ebbeb4;
extern PyObject *const_slice_none_int_neg_1_none;
extern PyObject *const_str_plain_tuple;
extern PyObject *const_str_plain_QPushButton;
static PyObject *const_str_digest_a4f2685d0d81ef2fc212a6dfcee469c3;
static PyObject *const_str_plain_QHBoxLayout;
extern PyObject *const_str_plain___init__;
extern PyObject *const_str_plain_QtCore;
static PyObject *const_tuple_str_plain_a_tuple;
static PyObject *const_str_plain_QGroupBox;
static PyObject *const_str_digest_3b908098af9cbacf226a468cfb530ee3;
extern PyObject *const_str_plain_has_location;
static PyObject *const_str_plain_QAbstractItemView;
extern PyObject *const_str_empty;
extern PyObject *const_str_plain_viewport;
extern PyObject *const_str_plain___getattribute__;
static PyObject *const_str_digest_066f989db0714ae36a3a63dcf2bdf0d6;
static PyObject *const_str_digest_391da66d20cdb746387abcfd798d09fe;
static PyObject *const_str_digest_038c02b78d2bf3e82c328228df37ca6d;
static PyObject *const_str_plain_QVBoxLayout;
static PyObject *const_str_digest_e484a09bebf1d21b810c6f5c2ebfeba9;
static PyObject *const_tuple_str_plain_uiname_str_plain_text_str_plain_disambig_tuple;
extern PyObject *const_str_plain_QRadialGradient;
static PyObject *const_str_digest_95f2c08a130f98bb2230089496c3e36d;
static PyObject *const_str_digest_2bab02ba220c4880cc88f1e6f24742ba;
static PyObject *const_str_plain_ProxySignalWithArguments;
static PyObject *const_str_plain_QHeaderView;
static PyObject *const_str_digest_a1eb9e592f7a093cdedcbaf3ea6c3e9f;
extern PyObject *const_int_neg_1;
extern PyObject *const_str_plain_QMenuBar;
extern PyObject *const_str_plain_indexOf;
static PyObject *const_str_plain_QDateEdit;
extern PyObject *const_str_plain_classmethod;
static PyObject *const_str_plain_i18n_print;
static PyObject *const_str_plain_AS_SIGNAL;
static PyObject *const_str_plain_QListView;
extern PyObject *const_str_plain_misc;
static PyObject *const_str_digest_7f71f416f71ae56656fd7ff43769d013;
extern PyObject *const_str_plain_QSizePolicy;
extern PyObject *const_str_plain_QTreeView;
extern PyObject *const_str_plain_QGridLayout;
static PyObject *const_str_plain_i18n_string;
static PyObject *const_tuple_str_plain_self_str_plain_slot_tuple;
extern PyObject *const_str_plain___doc__;
extern PyObject *const_str_plain_re;
static PyObject *const_str_digest_8494214dd9ec3978ab8d32073f1c0c52;
static PyObject *const_str_digest_be2368c83be9c87dbb63bcc0f8bd218c;
extern PyObject *const_str_plain_QTreeWidgetItem;
static PyObject *const_str_digest_c2d708a87186ecd7982a3b92a662625c;
static PyObject *const_str_digest_a6072ab0ebdd47933e20afbb074c5a0b;
static PyObject *const_str_digest_74634fb4f6e734c02a3fb63ddca5c3e0;
extern PyObject *const_str_plain_item;
extern PyObject *const_tuple_str_plain_self_tuple;
static PyObject *const_str_digest_d975ca18e2481f9808b44d1d6d449ecd;
extern PyObject *const_str_plain_QFrame;
extern PyObject *const_tuple_empty;
extern PyObject *const_str_plain_append;
extern PyObject *const_str_plain_setProperty;
extern PyObject *const_str_plain_QTabWidget;
static PyObject *const_str_plain_QLabel;
static PyObject *const_str_digest_62eec9ac327ec8d9d51c3a9ffef00567;
static PyObject *const_str_digest_8e6b9b6743ebab7ab0dc90d2a86ce125;
extern PyObject *const_str_digest_22116dbcc880f5504e969642694bea9a;
extern PyObject *const_str_plain_split;
extern PyObject *const_str_plain_QAction;
static PyObject *const_str_plain_QDialogButtonBox;
static PyObject *const_str_plain_ProxyClass;
static PyObject *const_tuple_str_plain_name_str_plain__printer_tuple;
extern PyObject *const_str_plain_sizePolicy;
static PyObject *const_str_digest_b548001e5497aabe31fe7a9ae5edffd7;
static PyObject *const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
static PyObject *const_str_digest_dfa587094f9f9550be0ad9fc7a7cfc84;
extern PyObject *const_str_plain_objectName;
static PyObject *const_str_plain_signal_index;
static PyObject *const_str_digest_6cfd256a9d9c861b5abed43048ea31a5;
static PyObject *const_str_digest_eac477c54d6d014c7d44d64755d332df;
static PyObject *const_str_digest_af7b3aa56d6be0c87c778461ec791222;
static PyObject *const_str_digest_d73a93f9b3cfb83c5b0e923f6070d0d0;
static PyObject *const_tuple_str_plain_args_str_plain_self_tuple;
static PyObject *const_str_plain_QSlider;
static PyObject *const_str_digest_26f156ef8a5c98e314353ccffdff7278;
static PyObject *const_str_digest_336cc38e97fe56995d82c7f04a555e86;
static PyObject *const_tuple_str_plain_self_str_plain_args_str_plain_name_tuple;
static PyObject *const_str_digest_06d4f90e9a26767aa5c6ebc8f28a2529;
static PyObject *const_tuple_str_plain_horizontalHeaderItem_tuple;
static PyObject *const_str_digest_49d30adacaea2be4fe6e4b50a417b2b9;
static PyObject *const_str_digest_87bbcf474bddfc911d32098375c5db6d;
extern PyObject *const_str_plain___class__;
static PyObject *const_str_digest_85e9149e6ad2319c715852a1d46576a2;
static PyObject *const_str_digest_5bab086fb5fb64013370541407492e3b;
static PyObject *const_str_plain_QKeySequenceEdit;
extern PyObject *const_str_plain___module__;
extern PyObject *const_str_plain___str__;
static PyObject *const_str_digest_abc91460cb147354c1d6f23cff0f2781;
extern PyObject *const_str_plain_menuAction;
static PyObject *const_str_digest_2f6d3749ee4d642bfa28f5311b8ba1b7;
static PyObject *const_str_digest_87d646b44c6fdfca3ea7025d61ede53d;
extern PyObject *const_str_plain_write_code;
extern PyObject *const_str_plain_QMetaObject;
static PyObject *const_str_digest_dc1d22f46ac99cb3d62711464e0b3a9e;
extern PyObject *const_str_plain_ProxyBase;
extern PyObject *const_str_plain_QPalette;
static PyObject *const_str_plain_QAbstractScrollArea;
static PyObject *const_str_plain___call__;
static PyObject *const_str_plain_func_call;
static PyObject *const_str_plain_QFileDialog;
static PyObject *const_str_digest_46c5a773d646b350d46d185eb97ec319;
static PyObject *const_str_digest_e4eb3d0ee268186f51ad5b16de16b65c;
extern PyObject *const_str_plain_QToolBox;
static PyObject *const_str_digest_b27bb63e9dae809a75d3790a98b95b72;
static PyObject *const_str_digest_2e6257f631d3cac8eb55a7363981e82d;
static PyObject *const_str_digest_bbfddf3a2d8cd4fa3c160ae60b25e373;
static PyObject *const_str_digest_aef66aa48a399f74b516a121b227c11b;
extern PyObject *const_str_plain_uiname;
static PyObject *const_str_digest_109e8aab7b60bf26f70d7308849b5aa4;
static PyObject *const_str_digest_17148cfb82ca51e0b7a9df37852d2daa;
static PyObject *const_str_digest_b0b78118bef5bba7ee774949183b592c;
extern PyObject *const_str_plain_metaclass;
static PyObject *const_str_digest_4504b672b8e7c5dc18910102a8c49eef;
static PyObject *const_str_digest_06915942a3070c74376c0c83b360cd40;
extern PyObject *const_tuple_str_plain___class___tuple;
static PyObject *const_tuple_str_plain_self_str_plain__FakeMetaObject_tuple;
extern PyObject *const_str_angle_metaclass;
static PyObject *const_str_plain_i18n_func;
static PyObject *const_str_plain_function_name;
static PyObject *const_str_digest_1838c865c30d69b8b3ef38b2992bb4b2;
extern PyObject *const_str_plain_QBrush;
static PyObject *const_str_plain__signal_index;
static PyObject *const_str_plain_arg;
static PyObject *const_str_plain_Unnamed;
extern PyObject *const_str_plain_args;
static PyObject *const_str_plain_QPlainTextEdit;
static PyObject *const_str_digest_5fc15d61a5340199c2e50eee206bb40e;
static PyObject *const_tuple_str_plain_ProxyBase_tuple;
static PyObject *const_str_digest_2a7e220ade4be8f2c3b8596f5728419c;
extern PyObject *const_str_plain_a;
extern PyObject *const_str_plain_QTableView;
extern PyObject *const_str_plain_layout;
static PyObject *const_str_digest_2b55a9bec1eca188774820147f7a688f;
extern PyObject *const_str_plain_staticmethod;
static PyObject *const_str_plain_QSplitter;
static PyObject *const_str_digest_1046321cd1e5c670e97ac2786c6f8eda;
static PyObject *const_str_digest_8160e5c847c84e4d1492c0ce11d1324f;
extern PyObject *const_str_plain_cls;
extern PyObject *const_str_plain_join;
static PyObject *const_str_digest_17dbf1120b5730e87af274283d813a48;
static PyObject *const_str_plain_QWizardPage;
static PyObject *const_str_digest_b960eb01aa4da10709a2e74c3339462e;
static PyObject *const_str_digest_81d39b77439daaee6b385a2bf0805190;
static PyObject *const_tuple_str_plain_setSortingEnabled_tuple;
static PyObject *const_str_digest_265fdac0f13dfed40e92824ef8373d65;
extern PyObject *const_str_dot;
extern PyObject *const_str_plain_topLevelItem;
static PyObject *const_str_digest_8f6d8431f8330a0e0e88e343619a317c;
extern PyObject *const_str_chr_44;
static PyObject *const_str_plain_QToolButton;
static PyObject *const_str_digest_5e3f4d6001cc1ce596d7a3a3679b06fb;
static PyObject *const_tuple_tuple_empty_false_tuple;
extern PyObject *const_str_plain_QActionGroup;
static PyObject *const_str_digest_d93e165baf38636c16e3abc7d249b07f;
static PyObject *const_str_digest_e7f9c8b6aa5904b185ea8d09bb2f82ee;
extern PyObject *const_str_plain_i18n_strings;
static PyObject *const_str_plain_issubclass;
static PyObject *const_str_digest_f97888d25f6ccb9b8ef720f600e420dd;
extern PyObject *const_str_plain_LiteralProxyClass;
static PyObject *const_str_digest_fb084c6a3ced24839e9b1b2234a8219d;
static PyObject *const_str_plain_needs_translation;
static PyObject *const_str_digest_26315b6bed3fbaa50143a904d5c70cf4;
static PyObject *const_str_plain_QCheckBox;
static PyObject *const_str_digest_9999ca3f5f5fa0a4d6b13c08c083ab18;
static PyObject *const_str_digest_441f8f9ef47ab1cac2a615ec75deb66f;
static PyObject *const_str_digest_e2c99cabda74aeb55eab2a5db3680efa;
static PyObject *const_str_digest_4d59462542f561c3c69bc696d0fb9319;
extern PyObject *const_str_plain_QTreeWidget;
extern PyObject *const_str_plain_Literal;
static PyObject *const_dict_adbd77622c4af5dbd9dfeebc0a1fc797;
static PyObject *const_str_plain__sender;
static PyObject *const_tuple_a605d5fbbd62119af1fb7108946be055_tuple;
static PyObject *const_str_plain_ProxyNamespace;
extern PyObject *const_str_plain_QStackedWidget;
static PyObject *const_str_digest_e102df442c0b3e2a83bcb2f08ac5aea4;
extern PyObject *const_str_plain_QScrollArea;
static PyObject *const_str_plain_QGraphicsView;
static PyObject *const_str_digest_aaf09899f7a5a84a2641d71d728efe8b;
extern PyObject *const_tuple_str_plain_Literal_str_plain_moduleMember_tuple;
extern PyObject *const_str_plain_QDockWidget;
static PyObject *const_str_digest_d0786a0d0073a9ca345b70a69f90d8b6;
extern PyObject *const_str_plain_i18n_context;
static PyObject *const_str_digest_90bb03fed547099e44ef288e48076cbc;
static PyObject *const_str_digest_fd7deb4e9f8f7904ec6fcb9c49d99391;
extern PyObject *const_str_angle_listcomp;
static PyObject *const_str_digest_a7636f57d1f8f80548278378b7bf84e2;
static PyObject *const_str_digest_5ff651c6aff8f0acdd8250626275cd5a;
extern PyObject *const_str_plain_header;
extern PyObject *const_str_digest_3114c7847ed30512509505e34fc4f6e0;
static PyObject *const_str_digest_b78ed9489a3c145073b2e9f9a8a9e18d;
extern PyObject *const_str_plain_disambig;
static PyObject *const_str_plain__FakeMetaObject;
static PyObject *const_tuple_str_plain_isSortingEnabled_tuple;
static PyObject *const_str_digest_04888fc8efd3262f9b19d61edb07222c;
extern PyObject *const_str_plain_isSortingEnabled;
static PyObject *const_str_digest_85b731fa2761c6bc50e2a4f6b46a4ecb;
extern PyObject *const_str_plain_QButtonGroup;
static PyObject *const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple;
extern PyObject *const_str_plain_idx;
extern PyObject *const_tuple_type_object_tuple;
extern PyObject *const_str_plain_addTab;
extern PyObject *const_str_plain_QMdiArea;
static PyObject *const_str_plain_QAbstractSpinBox;
static PyObject *const_str_digest_65d948469dd02582ee8c9c2a1f0bb263;
static PyObject *const_str_digest_3899e3d3c1ec2841852f9b791ab87e70;
extern PyObject *const_str_plain_rname;
static PyObject *const_str_plain_QMessageBox;
static PyObject *const_str_digest_fdfcf59bbdde7a85bbb68ddd5058c46c;
extern PyObject *const_str_plain_addItem;
extern PyObject *const_str_plain_self;
static PyObject *const_str_digest_56cfbe8c43c38edc3b3bd9fb1cb1389c;
static PyObject *const_str_digest_ed21bf033d5d2fce06622e9e9ba71e5d;
static PyObject *const_str_digest_b4ae43e0124e9d6d4041f0b627dc0af7;
extern PyObject *const_str_plain_QDoubleSpinBox;
static PyObject *const_str_digest_f99eab529fb8bc79979274901309f5a2;
extern PyObject *const_str_plain_verticalHeader;
extern PyObject *const_int_pos_2;
static PyObject *const_str_digest_fb38d371e7c507a7a9fd52d923345989;
static PyObject *const_str_digest_48f20dc073d6b0ffa0d0f294dd45a8fb;
extern PyObject *const_str_plain_headerItem;
extern PyObject *const_tuple_str_plain_as_string_tuple;
static PyObject *const_str_plain_AS_ARGUMENT;
static PyObject *module_filename_obj;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    const_tuple_2abd98543ace3a18eee0f12ccae60159_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_2abd98543ace3a18eee0f12ccae60159_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_2abd98543ace3a18eee0f12ccae60159_tuple, 1, const_str_plain_sender); Py_INCREF(const_str_plain_sender);
    PyTuple_SET_ITEM(const_tuple_2abd98543ace3a18eee0f12ccae60159_tuple, 2, const_str_plain_signal_name); Py_INCREF(const_str_plain_signal_name);
    const_str_plain_signal_index = UNSTREAM_STRING_ASCII(&constant_bin[ 10674 ], 12, 1);
    PyTuple_SET_ITEM(const_tuple_2abd98543ace3a18eee0f12ccae60159_tuple, 3, const_str_plain_signal_index); Py_INCREF(const_str_plain_signal_index);
    const_str_plain_QDialog = UNSTREAM_STRING_ASCII(&constant_bin[ 1626 ], 7, 1);
    const_tuple_str_plain_self_str_plain_args_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_tuple, 1, const_str_plain_args); Py_INCREF(const_str_plain_args);
    const_str_digest_c66db4fec36bbb504504ec0bc763bc01 = UNSTREAM_STRING_ASCII(&constant_bin[ 10686 ], 20, 0);
    const_str_digest_8528e90b478df957f4b46b88bf029508 = UNSTREAM_STRING_ASCII(&constant_bin[ 10706 ], 50, 0);
    const_str_plain_QTimeEdit = UNSTREAM_STRING_ASCII(&constant_bin[ 10756 ], 9, 1);
    const_str_plain_i18n_void_func = UNSTREAM_STRING_ASCII(&constant_bin[ 1966 ], 14, 1);
    const_str_digest_4dcfe10d04f1a816f6b491aaa018d207 = UNSTREAM_STRING_ASCII(&constant_bin[ 10765 ], 29, 0);
    const_str_digest_0b6cff004ab8e493637648d0dd878e92 = UNSTREAM_STRING_ASCII(&constant_bin[ 10794 ], 21, 0);
    const_str_plain_QPainter = UNSTREAM_STRING_ASCII(&constant_bin[ 10815 ], 8, 1);
    const_str_digest_938b51037dad752fd1fbf84cf8bf860b = UNSTREAM_STRING_ASCII(&constant_bin[ 10823 ], 28, 0);
    const_str_plain_QColorDialog = UNSTREAM_STRING_ASCII(&constant_bin[ 10851 ], 12, 1);
    const_str_digest_41ac2d1fc11ba3132da11aaf2fab2cfe = UNSTREAM_STRING_ASCII(&constant_bin[ 10863 ], 21, 0);
    const_str_plain_QSpinBox = UNSTREAM_STRING_ASCII(&constant_bin[ 10884 ], 8, 1);
    const_str_digest_10f1597c2d51a2472f293de9d98a5ead = UNSTREAM_STRING_ASCII(&constant_bin[ 10892 ], 23, 0);
    const_str_digest_eaf312e63b45cc80c61e91a9fb9fc662 = UNSTREAM_STRING_ASCII(&constant_bin[ 10915 ], 20, 0);
    const_str_digest_e9116ad3e836e6a65b3043a1ba7c5bec = UNSTREAM_STRING_ASCII(&constant_bin[ 10935 ], 21, 0);
    const_str_digest_1da10d7760888df09a9dc6382ef15032 = UNSTREAM_STRING_ASCII(&constant_bin[ 10956 ], 21, 0);
    const_str_digest_4888f35dc9ff812f34c91fd35d4a6cfa = UNSTREAM_STRING_ASCII(&constant_bin[ 10977 ], 25, 0);
    const_str_digest_efd56ceff77b4993ab7bfa46696a762e = UNSTREAM_STRING_ASCII(&constant_bin[ 11002 ], 11, 0);
    const_str_digest_0d7821e7064e1cd5e934fef1d0f64c1f = UNSTREAM_STRING_ASCII(&constant_bin[ 11013 ], 21, 0);
    const_str_plain_noInstantiation = UNSTREAM_STRING_ASCII(&constant_bin[ 11034 ], 15, 1);
    const_str_plain_QColumnView = UNSTREAM_STRING_ASCII(&constant_bin[ 11049 ], 11, 1);
    const_str_digest_d6e45e8670c28df2e5e320fbb80bb88a = UNSTREAM_STRING_ASCII(&constant_bin[ 11060 ], 16, 0);
    const_tuple_str_plain_self_str_plain_sp_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_sp_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    const_str_plain_sp = UNSTREAM_STRING_ASCII(&constant_bin[ 188 ], 2, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_sp_tuple, 1, const_str_plain_sp); Py_INCREF(const_str_plain_sp);
    const_str_digest_d99d22dbfd677af04143c697a4a6cc7d = UNSTREAM_STRING_ASCII(&constant_bin[ 11076 ], 27, 0);
    const_str_plain__printer = UNSTREAM_STRING_ASCII(&constant_bin[ 11095 ], 8, 1);
    const_str_digest_8d6215461f312bb3399dbff7458d5754 = UNSTREAM_STRING_ASCII(&constant_bin[ 11103 ], 22, 0);
    const_str_plain_QProgressBar = UNSTREAM_STRING_ASCII(&constant_bin[ 11125 ], 12, 1);
    const_str_digest_3bade40a56a40f270e6778393ea5b0c5 = UNSTREAM_STRING_ASCII(&constant_bin[ 11137 ], 37, 0);
    const_str_digest_48985109c9f73ad947465cd6672a0905 = UNSTREAM_STRING_ASCII(&constant_bin[ 11174 ], 19, 0);
    const_str_plain_QInputDialog = UNSTREAM_STRING_ASCII(&constant_bin[ 11193 ], 12, 1);
    const_str_digest_c69b6de7bce089077512e10cfbe1ba3d = UNSTREAM_STRING_ASCII(&constant_bin[ 11205 ], 38, 0);
    const_str_digest_1bd12fdb4ca92db7ed4c0a9f5c58c1d0 = UNSTREAM_STRING_ASCII(&constant_bin[ 11243 ], 21, 0);
    const_tuple_str_plain_self_str_plain_idx_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_idx_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_idx_tuple, 1, const_str_plain_idx); Py_INCREF(const_str_plain_idx);
    const_str_digest_48fa30560f2d0e47e015a9aae37c3092 = UNSTREAM_STRING_ASCII(&constant_bin[ 4577 ], 4, 0);
    const_str_plain_QRadioButton = UNSTREAM_STRING_ASCII(&constant_bin[ 11113 ], 12, 1);
    const_str_digest_524f735692c9d133d79579eca359ac14 = UNSTREAM_STRING_ASCII(&constant_bin[ 11264 ], 24, 0);
    const_str_digest_00bf4bf917367e7d19dac4c4926c5b58 = UNSTREAM_STRING_ASCII(&constant_bin[ 11288 ], 19, 0);
    const_str_plain__uic_name = UNSTREAM_STRING_ASCII(&constant_bin[ 11307 ], 9, 1);
    const_str_plain__qwidgets = UNSTREAM_STRING_ASCII(&constant_bin[ 2166 ], 9, 1);
    const_str_plain_minimumSizeHint = UNSTREAM_STRING_ASCII(&constant_bin[ 11316 ], 15, 1);
    const_str_plain_QCalendarWidget = UNSTREAM_STRING_ASCII(&constant_bin[ 11331 ], 15, 1);
    const_tuple_str_plain_cls_str_plain_args_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_cls_str_plain_args_tuple, 0, const_str_plain_cls); Py_INCREF(const_str_plain_cls);
    PyTuple_SET_ITEM(const_tuple_str_plain_cls_str_plain_args_tuple, 1, const_str_plain_args); Py_INCREF(const_str_plain_args);
    const_str_plain_QFontDialog = UNSTREAM_STRING_ASCII(&constant_bin[ 11346 ], 11, 1);
    const_str_plain_QObject = UNSTREAM_STRING_ASCII(&constant_bin[ 3330 ], 7, 1);
    const_tuple_str_plain_self_str_plain_page_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_page_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    const_str_plain_page = UNSTREAM_STRING_ASCII(&constant_bin[ 11357 ], 4, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_page_tuple, 1, const_str_plain_page); Py_INCREF(const_str_plain_page);
    const_str_digest_ac8bce036c5564c1bc69505cb512f931 = UNSTREAM_STRING_ASCII(&constant_bin[ 11361 ], 11, 0);
    const_str_plain_funcall = UNSTREAM_STRING_ASCII(&constant_bin[ 11372 ], 7, 1);
    const_str_digest_82953e72263762ee43fd71536cb103f9 = UNSTREAM_STRING_ASCII(&constant_bin[ 11379 ], 22, 0);
    const_str_digest_013032a9d7e44cb5522c0ff257493afd = UNSTREAM_STRING_ASCII(&constant_bin[ 11401 ], 27, 0);
    const_str_digest_aa8af3cff4d74d1fe88937f508d68e63 = UNSTREAM_STRING_ASCII(&constant_bin[ 11428 ], 15, 0);
    const_str_plain_QFontComboBox = UNSTREAM_STRING_ASCII(&constant_bin[ 11443 ], 13, 1);
    const_str_plain_QOpenGLWidget = UNSTREAM_STRING_ASCII(&constant_bin[ 11456 ], 13, 1);
    const_str_digest_b0c7b94a51c06049f4da6b7e954193ac = UNSTREAM_STRING_ASCII(&constant_bin[ 11469 ], 20, 0);
    const_tuple_str_plain_self_str_plain_string_str_plain_disambig_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_string_str_plain_disambig_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_string_str_plain_disambig_tuple, 1, const_str_plain_string); Py_INCREF(const_str_plain_string);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_string_str_plain_disambig_tuple, 2, const_str_plain_disambig); Py_INCREF(const_str_plain_disambig);
    const_str_plain_QTextEdit = UNSTREAM_STRING_ASCII(&constant_bin[ 1865 ], 9, 1);
    const_str_plain_ProxyClassMember = UNSTREAM_STRING_ASCII(&constant_bin[ 1291 ], 16, 1);
    const_str_digest_401eefcca6b9ab5a260d38fee46f238b = UNSTREAM_STRING_ASCII(&constant_bin[ 11489 ], 21, 0);
    const_tuple_str_plain_module_str_plain_clsname_str_plain_cls_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_module_str_plain_clsname_str_plain_cls_tuple, 0, const_str_plain_module); Py_INCREF(const_str_plain_module);
    PyTuple_SET_ITEM(const_tuple_str_plain_module_str_plain_clsname_str_plain_cls_tuple, 1, const_str_plain_clsname); Py_INCREF(const_str_plain_clsname);
    PyTuple_SET_ITEM(const_tuple_str_plain_module_str_plain_clsname_str_plain_cls_tuple, 2, const_str_plain_cls); Py_INCREF(const_str_plain_cls);
    const_tuple_str_plain_verticalHeaderItem_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_verticalHeaderItem_tuple, 0, const_str_plain_verticalHeaderItem); Py_INCREF(const_str_plain_verticalHeaderItem);
    const_str_digest_69d8a6396683f491be9a483281531410 = UNSTREAM_STRING_ASCII(&constant_bin[ 11510 ], 21, 0);
    const_str_digest_40eec4196f357bab231d01e67583003c = UNSTREAM_STRING_ASCII(&constant_bin[ 11531 ], 19, 0);
    const_str_digest_e9f22005d8828bb0a675a8840855f13d = UNSTREAM_STRING_ASCII(&constant_bin[ 11550 ], 17, 0);
    const_str_plain_QDial = UNSTREAM_STRING_ASCII(&constant_bin[ 1626 ], 5, 1);
    const_str_digest_9bf7aa484cf7493f050ed3db956edfc0 = UNSTREAM_STRING_ASCII(&constant_bin[ 11567 ], 33, 0);
    const_str_digest_12c8e2c774140119b987939492d2b58b = UNSTREAM_STRING_ASCII(&constant_bin[ 11600 ], 9, 0);
    const_tuple_str_plain_self_str_plain_index_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_index_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_index_tuple, 1, const_str_plain_index); Py_INCREF(const_str_plain_index);
    const_str_digest_c41a49663887372325faf65a709cb429 = UNSTREAM_STRING_ASCII(&constant_bin[ 11609 ], 18, 0);
    const_str_digest_1765bd07a5f456c7d27f71bcb79097ec = UNSTREAM_STRING_ASCII(&constant_bin[ 11627 ], 18, 0);
    const_str_digest_b4f06ec77d4ca140b8f24cac703689b5 = UNSTREAM_STRING_ASCII(&constant_bin[ 11645 ], 37, 0);
    const_str_plain__class = UNSTREAM_STRING_ASCII(&constant_bin[ 2197 ], 6, 1);
    const_str_digest_f7c1b42296fb13108a554d9570dda7a9 = UNSTREAM_STRING_ASCII(&constant_bin[ 11682 ], 21, 0);
    const_str_digest_c6d21499095ee65b6849b7017838b553 = UNSTREAM_STRING_ASCII(&constant_bin[ 11703 ], 22, 0);
    const_tuple_str_plain_self_str_plain_rname_str_plain_args_str_plain_name_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_rname_str_plain_args_str_plain_name_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_rname_str_plain_args_str_plain_name_tuple, 1, const_str_plain_rname); Py_INCREF(const_str_plain_rname);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_rname_str_plain_args_str_plain_name_tuple, 2, const_str_plain_args); Py_INCREF(const_str_plain_args);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_rname_str_plain_args_str_plain_name_tuple, 3, const_str_plain_name); Py_INCREF(const_str_plain_name);
    const_str_digest_daa658fb12a7fec518774079fd0df864 = UNSTREAM_STRING_ASCII(&constant_bin[ 11725 ], 25, 0);
    const_str_plain_str_args = UNSTREAM_STRING_ASCII(&constant_bin[ 11750 ], 8, 1);
    const_str_plain_QLineEdit = UNSTREAM_STRING_ASCII(&constant_bin[ 11758 ], 9, 1);
    const_str_digest_5bbb887d79bb786add01d005507bcb11 = UNSTREAM_STRING_ASCII(&constant_bin[ 11767 ], 15, 0);
    const_str_digest_4031e16feef643173885c27df2f4ad97 = UNSTREAM_STRING_ASCII(&constant_bin[ 11782 ], 34, 0);
    const_str_digest_65fcb0c1d7d114cb0d0138ca4561a77f = UNSTREAM_STRING_ASCII(&constant_bin[ 11816 ], 21, 0);
    const_str_digest_86d61e4ccbc9938f77b58e3c2477a54c = UNSTREAM_STRING_ASCII(&constant_bin[ 11837 ], 112, 0);
    const_str_digest_95bba529d11e64d9d782a2d09977c6aa = UNSTREAM_STRING_ASCII(&constant_bin[ 11949 ], 25, 0);
    const_str_plain_QDateTimeEdit = UNSTREAM_STRING_ASCII(&constant_bin[ 1761 ], 13, 1);
    const_str_digest_2cb9647935ecf0d5be585c589b74d9e6 = UNSTREAM_STRING_ASCII(&constant_bin[ 11974 ], 19, 0);
    const_str_digest_e5b4e12777ba15c67a9c431e109d9297 = UNSTREAM_STRING_ASCII(&constant_bin[ 11993 ], 14, 0);
    const_tuple_str_plain_item_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_item_tuple, 0, const_str_plain_item); Py_INCREF(const_str_plain_item);
    const_str_digest_42acd81bf0526310bebd9713acd5dd71 = UNSTREAM_STRING_ASCII(&constant_bin[ 12007 ], 25, 0);
    const_str_plain_QTextBrowser = UNSTREAM_STRING_ASCII(&constant_bin[ 12032 ], 12, 1);
    const_tuple_str_plain_self_str_plain_attribute_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_attribute_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_attribute_tuple, 1, const_str_plain_attribute); Py_INCREF(const_str_plain_attribute);
    const_str_digest_c9bbfd4d23003bd37def2410d491807c = UNSTREAM_STRING_ASCII(&constant_bin[ 11998 ], 9, 0);
    const_tuple_str_plain_self_str_plain_args_str_plain_text_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_str_plain_text_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_str_plain_text_tuple, 1, const_str_plain_args); Py_INCREF(const_str_plain_args);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_str_plain_text_tuple, 2, const_str_plain_text); Py_INCREF(const_str_plain_text);
    const_str_digest_4affdb4cc5ab447930b1364346a5bdfe = UNSTREAM_STRING_ASCII(&constant_bin[ 12044 ], 26, 0);
    const_str_plain_fromTheme = UNSTREAM_STRING_ASCII(&constant_bin[ 12070 ], 9, 1);
    const_tuple_5f54ea17e43c779ec4f22e9769541d3f_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_5f54ea17e43c779ec4f22e9769541d3f_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_5f54ea17e43c779ec4f22e9769541d3f_tuple, 1, const_str_plain_proxy); Py_INCREF(const_str_plain_proxy);
    const_str_plain_function_name = UNSTREAM_STRING_ASCII(&constant_bin[ 12079 ], 13, 1);
    PyTuple_SET_ITEM(const_tuple_5f54ea17e43c779ec4f22e9769541d3f_tuple, 2, const_str_plain_function_name); Py_INCREF(const_str_plain_function_name);
    PyTuple_SET_ITEM(const_tuple_5f54ea17e43c779ec4f22e9769541d3f_tuple, 3, const_str_plain_flags); Py_INCREF(const_str_plain_flags);
    const_str_plain_QScrollBar = UNSTREAM_STRING_ASCII(&constant_bin[ 12092 ], 10, 1);
    const_str_digest_036450d673d90e4e404ec32ea5710f15 = UNSTREAM_STRING_ASCII(&constant_bin[ 12102 ], 14, 0);
    const_str_digest_0b9be081086c46fe98cca54cb8354bb9 = UNSTREAM_STRING_ASCII(&constant_bin[ 12116 ], 11, 0);
    const_str_plain_QAbstractSlider = UNSTREAM_STRING_ASCII(&constant_bin[ 1655 ], 15, 1);
    const_str_digest_64be69029dd224d9920d16bf00102c4d = UNSTREAM_STRING_ASCII(&constant_bin[ 12127 ], 31, 0);
    const_str_digest_e5577d33a71deda15648281a9c38e536 = UNSTREAM_STRING_ASCII(&constant_bin[ 12158 ], 25, 0);
    const_str_digest_309dbcb454ca90554e49ef5aeade526c = UNSTREAM_STRING_ASCII(&constant_bin[ 12183 ], 22, 0);
    const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple = PyTuple_New(6);
    PyTuple_SET_ITEM(const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple, 1, const_str_plain_args); Py_INCREF(const_str_plain_args);
    PyTuple_SET_ITEM(const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple, 2, const_str_plain_str_args); Py_INCREF(const_str_plain_str_args);
    const_str_plain_func_call = UNSTREAM_STRING_ASCII(&constant_bin[ 12205 ], 9, 1);
    PyTuple_SET_ITEM(const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple, 3, const_str_plain_func_call); Py_INCREF(const_str_plain_func_call);
    const_str_plain_needs_translation = UNSTREAM_STRING_ASCII(&constant_bin[ 12214 ], 17, 1);
    PyTuple_SET_ITEM(const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple, 4, const_str_plain_needs_translation); Py_INCREF(const_str_plain_needs_translation);
    const_str_plain_arg = UNSTREAM_STRING_ASCII(&constant_bin[ 4244 ], 3, 1);
    PyTuple_SET_ITEM(const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple, 5, const_str_plain_arg); Py_INCREF(const_str_plain_arg);
    const_str_digest_31a0bd6420283acca2fd18800703e60f = UNSTREAM_STRING_ASCII(&constant_bin[ 12231 ], 24, 0);
    const_str_digest_40728691f3b83351d6d26cc774f2202e = UNSTREAM_STRING_ASCII(&constant_bin[ 12255 ], 34, 0);
    const_str_plain__signal_name = UNSTREAM_STRING_ASCII(&constant_bin[ 12289 ], 12, 1);
    const_str_plain_QLCDNumber = UNSTREAM_STRING_ASCII(&constant_bin[ 12301 ], 10, 1);
    const_str_digest_f6e21371c1f4b15e5d01ebc764f03c28 = UNSTREAM_STRING_ASCII(&constant_bin[ 11137 ], 18, 0);
    const_str_digest_8e611e5c50f8f4d310824827087f3e3d = UNSTREAM_STRING_ASCII(&constant_bin[ 12311 ], 24, 0);
    const_str_plain_QCommandLinkButton = UNSTREAM_STRING_ASCII(&constant_bin[ 10833 ], 18, 1);
    const_str_digest_730e8ad82247f44dfece14b82dacf72e = UNSTREAM_STRING_ASCII(&constant_bin[ 12335 ], 26, 0);
    const_str_digest_015c970859e71b90bf79702430ebbeb4 = UNSTREAM_STRING_ASCII(&constant_bin[ 12361 ], 21, 0);
    const_str_digest_a4f2685d0d81ef2fc212a6dfcee469c3 = UNSTREAM_STRING_ASCII(&constant_bin[ 12382 ], 194, 0);
    const_str_plain_QHBoxLayout = UNSTREAM_STRING_ASCII(&constant_bin[ 12576 ], 11, 1);
    const_tuple_str_plain_a_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_a_tuple, 0, const_str_plain_a); Py_INCREF(const_str_plain_a);
    const_str_plain_QGroupBox = UNSTREAM_STRING_ASCII(&constant_bin[ 12587 ], 9, 1);
    const_str_digest_3b908098af9cbacf226a468cfb530ee3 = UNSTREAM_STRING_ASCII(&constant_bin[ 12596 ], 26, 0);
    const_str_plain_QAbstractItemView = UNSTREAM_STRING_ASCII(&constant_bin[ 1896 ], 17, 1);
    const_str_digest_066f989db0714ae36a3a63dcf2bdf0d6 = UNSTREAM_STRING_ASCII(&constant_bin[ 12622 ], 211, 0);
    const_str_digest_391da66d20cdb746387abcfd798d09fe = UNSTREAM_STRING_ASCII(&constant_bin[ 12833 ], 28, 0);
    const_str_digest_038c02b78d2bf3e82c328228df37ca6d = UNSTREAM_STRING_ASCII(&constant_bin[ 12861 ], 26, 0);
    const_str_plain_QVBoxLayout = UNSTREAM_STRING_ASCII(&constant_bin[ 10945 ], 11, 1);
    const_str_digest_e484a09bebf1d21b810c6f5c2ebfeba9 = UNSTREAM_STRING_ASCII(&constant_bin[ 12887 ], 33, 0);
    const_tuple_str_plain_uiname_str_plain_text_str_plain_disambig_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_uiname_str_plain_text_str_plain_disambig_tuple, 0, const_str_plain_uiname); Py_INCREF(const_str_plain_uiname);
    PyTuple_SET_ITEM(const_tuple_str_plain_uiname_str_plain_text_str_plain_disambig_tuple, 1, const_str_plain_text); Py_INCREF(const_str_plain_text);
    PyTuple_SET_ITEM(const_tuple_str_plain_uiname_str_plain_text_str_plain_disambig_tuple, 2, const_str_plain_disambig); Py_INCREF(const_str_plain_disambig);
    const_str_digest_95f2c08a130f98bb2230089496c3e36d = UNSTREAM_STRING_ASCII(&constant_bin[ 12920 ], 20, 0);
    const_str_digest_2bab02ba220c4880cc88f1e6f24742ba = UNSTREAM_STRING_ASCII(&constant_bin[ 12940 ], 31, 0);
    const_str_plain_ProxySignalWithArguments = UNSTREAM_STRING_ASCII(&constant_bin[ 1329 ], 24, 1);
    const_str_plain_QHeaderView = UNSTREAM_STRING_ASCII(&constant_bin[ 10966 ], 11, 1);
    const_str_digest_a1eb9e592f7a093cdedcbaf3ea6c3e9f = UNSTREAM_STRING_ASCII(&constant_bin[ 12971 ], 17, 0);
    const_str_plain_QDateEdit = UNSTREAM_STRING_ASCII(&constant_bin[ 12988 ], 9, 1);
    const_str_plain_i18n_print = UNSTREAM_STRING_ASCII(&constant_bin[ 1089 ], 10, 1);
    const_str_plain_AS_SIGNAL = UNSTREAM_STRING_ASCII(&constant_bin[ 1260 ], 9, 1);
    const_str_plain_QListView = UNSTREAM_STRING_ASCII(&constant_bin[ 1935 ], 9, 1);
    const_str_digest_7f71f416f71ae56656fd7ff43769d013 = UNSTREAM_STRING_ASCII(&constant_bin[ 12997 ], 74, 0);
    const_str_plain_i18n_string = UNSTREAM_STRING_ASCII(&constant_bin[ 1055 ], 11, 1);
    const_tuple_str_plain_self_str_plain_slot_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_slot_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_slot_tuple, 1, const_str_plain_slot); Py_INCREF(const_str_plain_slot);
    const_str_digest_8494214dd9ec3978ab8d32073f1c0c52 = UNSTREAM_STRING_ASCII(&constant_bin[ 13071 ], 32, 0);
    const_str_digest_be2368c83be9c87dbb63bcc0f8bd218c = UNSTREAM_STRING_ASCII(&constant_bin[ 13103 ], 18, 0);
    const_str_digest_c2d708a87186ecd7982a3b92a662625c = UNSTREAM_STRING_ASCII(&constant_bin[ 13121 ], 16, 0);
    const_str_digest_a6072ab0ebdd47933e20afbb074c5a0b = UNSTREAM_STRING_ASCII(&constant_bin[ 13137 ], 19, 0);
    const_str_digest_74634fb4f6e734c02a3fb63ddca5c3e0 = UNSTREAM_STRING_ASCII(&constant_bin[ 13156 ], 9, 0);
    const_str_digest_d975ca18e2481f9808b44d1d6d449ecd = UNSTREAM_STRING_ASCII(&constant_bin[ 13165 ], 28, 0);
    const_str_plain_QLabel = UNSTREAM_STRING_ASCII(&constant_bin[ 13131 ], 6, 1);
    const_str_digest_62eec9ac327ec8d9d51c3a9ffef00567 = UNSTREAM_STRING_ASCII(&constant_bin[ 12044 ], 22, 0);
    const_str_digest_8e6b9b6743ebab7ab0dc90d2a86ce125 = UNSTREAM_STRING_ASCII(&constant_bin[ 13193 ], 21, 0);
    const_str_plain_QDialogButtonBox = UNSTREAM_STRING_ASCII(&constant_bin[ 13214 ], 16, 1);
    const_str_plain_ProxyClass = UNSTREAM_STRING_ASCII(&constant_bin[ 1128 ], 10, 1);
    const_tuple_str_plain_name_str_plain__printer_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_name_str_plain__printer_tuple, 0, const_str_plain_name); Py_INCREF(const_str_plain_name);
    PyTuple_SET_ITEM(const_tuple_str_plain_name_str_plain__printer_tuple, 1, const_str_plain__printer); Py_INCREF(const_str_plain__printer);
    const_str_digest_b548001e5497aabe31fe7a9ae5edffd7 = UNSTREAM_STRING_ASCII(&constant_bin[ 13230 ], 18, 0);
    const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5 = UNSTREAM_STRING_ASCII(&constant_bin[ 11653 ], 28, 0);
    const_str_digest_dfa587094f9f9550be0ad9fc7a7cfc84 = UNSTREAM_STRING_ASCII(&constant_bin[ 13248 ], 26, 0);
    const_str_digest_6cfd256a9d9c861b5abed43048ea31a5 = UNSTREAM_STRING_ASCII(&constant_bin[ 13274 ], 21, 0);
    const_str_digest_eac477c54d6d014c7d44d64755d332df = UNSTREAM_STRING_ASCII(&constant_bin[ 11401 ], 20, 0);
    const_str_digest_af7b3aa56d6be0c87c778461ec791222 = UNSTREAM_STRING_ASCII(&constant_bin[ 9221 ], 5, 0);
    const_str_digest_d73a93f9b3cfb83c5b0e923f6070d0d0 = UNSTREAM_STRING_ASCII(&constant_bin[ 10706 ], 14, 0);
    const_tuple_str_plain_args_str_plain_self_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_args_str_plain_self_tuple, 0, const_str_plain_args); Py_INCREF(const_str_plain_args);
    PyTuple_SET_ITEM(const_tuple_str_plain_args_str_plain_self_tuple, 1, const_str_plain_self); Py_INCREF(const_str_plain_self);
    const_str_plain_QSlider = UNSTREAM_STRING_ASCII(&constant_bin[ 12981 ], 7, 1);
    const_str_digest_26f156ef8a5c98e314353ccffdff7278 = UNSTREAM_STRING_ASCII(&constant_bin[ 13295 ], 17, 0);
    const_str_digest_336cc38e97fe56995d82c7f04a555e86 = UNSTREAM_STRING_ASCII(&constant_bin[ 13312 ], 60, 0);
    const_tuple_str_plain_self_str_plain_args_str_plain_name_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_str_plain_name_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_str_plain_name_tuple, 1, const_str_plain_args); Py_INCREF(const_str_plain_args);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_args_str_plain_name_tuple, 2, const_str_plain_name); Py_INCREF(const_str_plain_name);
    const_str_digest_06d4f90e9a26767aa5c6ebc8f28a2529 = UNSTREAM_STRING_ASCII(&constant_bin[ 13372 ], 24, 0);
    const_tuple_str_plain_horizontalHeaderItem_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_horizontalHeaderItem_tuple, 0, const_str_plain_horizontalHeaderItem); Py_INCREF(const_str_plain_horizontalHeaderItem);
    const_str_digest_49d30adacaea2be4fe6e4b50a417b2b9 = UNSTREAM_STRING_ASCII(&constant_bin[ 13396 ], 37, 0);
    const_str_digest_87bbcf474bddfc911d32098375c5db6d = UNSTREAM_STRING_ASCII(&constant_bin[ 11993 ], 7, 0);
    const_str_digest_85e9149e6ad2319c715852a1d46576a2 = UNSTREAM_STRING_ASCII(&constant_bin[ 13433 ], 19, 0);
    const_str_digest_5bab086fb5fb64013370541407492e3b = UNSTREAM_STRING_ASCII(&constant_bin[ 10706 ], 25, 0);
    const_str_plain_QKeySequenceEdit = UNSTREAM_STRING_ASCII(&constant_bin[ 13452 ], 16, 1);
    const_str_digest_abc91460cb147354c1d6f23cff0f2781 = UNSTREAM_STRING_ASCII(&constant_bin[ 13468 ], 12, 0);
    const_str_digest_2f6d3749ee4d642bfa28f5311b8ba1b7 = UNSTREAM_STRING_ASCII(&constant_bin[ 13480 ], 21, 0);
    const_str_digest_87d646b44c6fdfca3ea7025d61ede53d = UNSTREAM_STRING_ASCII(&constant_bin[ 13501 ], 27, 0);
    const_str_digest_dc1d22f46ac99cb3d62711464e0b3a9e = UNSTREAM_STRING_ASCII(&constant_bin[ 13528 ], 25, 0);
    const_str_plain_QAbstractScrollArea = UNSTREAM_STRING_ASCII(&constant_bin[ 1824 ], 19, 1);
    const_str_plain___call__ = UNSTREAM_STRING_ASCII(&constant_bin[ 11742 ], 8, 1);
    const_str_plain_QFileDialog = UNSTREAM_STRING_ASCII(&constant_bin[ 10804 ], 11, 1);
    const_str_digest_46c5a773d646b350d46d185eb97ec319 = UNSTREAM_STRING_ASCII(&constant_bin[ 13553 ], 20, 0);
    const_str_digest_e4eb3d0ee268186f51ad5b16de16b65c = UNSTREAM_STRING_ASCII(&constant_bin[ 13573 ], 14, 0);
    const_str_digest_b27bb63e9dae809a75d3790a98b95b72 = UNSTREAM_STRING_ASCII(&constant_bin[ 13587 ], 22, 0);
    const_str_digest_2e6257f631d3cac8eb55a7363981e82d = UNSTREAM_STRING_ASCII(&constant_bin[ 13609 ], 19, 0);
    const_str_digest_bbfddf3a2d8cd4fa3c160ae60b25e373 = UNSTREAM_STRING_ASCII(&constant_bin[ 12183 ], 17, 0);
    const_str_digest_aef66aa48a399f74b516a121b227c11b = UNSTREAM_STRING_ASCII(&constant_bin[ 11550 ], 15, 0);
    const_str_digest_109e8aab7b60bf26f70d7308849b5aa4 = UNSTREAM_STRING_ASCII(&constant_bin[ 13248 ], 15, 0);
    const_str_digest_17148cfb82ca51e0b7a9df37852d2daa = UNSTREAM_STRING_ASCII(&constant_bin[ 13628 ], 22, 0);
    const_str_digest_b0b78118bef5bba7ee774949183b592c = UNSTREAM_STRING_ASCII(&constant_bin[ 13650 ], 21, 0);
    const_str_digest_4504b672b8e7c5dc18910102a8c49eef = UNSTREAM_STRING_ASCII(&constant_bin[ 13671 ], 18, 0);
    const_str_digest_06915942a3070c74376c0c83b360cd40 = UNSTREAM_STRING_ASCII(&constant_bin[ 13689 ], 32, 0);
    const_tuple_str_plain_self_str_plain__FakeMetaObject_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain__FakeMetaObject_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    const_str_plain__FakeMetaObject = UNSTREAM_STRING_ASCII(&constant_bin[ 10741 ], 15, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain__FakeMetaObject_tuple, 1, const_str_plain__FakeMetaObject); Py_INCREF(const_str_plain__FakeMetaObject);
    const_str_plain_i18n_func = UNSTREAM_STRING_ASCII(&constant_bin[ 2002 ], 9, 1);
    const_str_digest_1838c865c30d69b8b3ef38b2992bb4b2 = UNSTREAM_STRING_ASCII(&constant_bin[ 13721 ], 26, 0);
    const_str_plain__signal_index = UNSTREAM_STRING_ASCII(&constant_bin[ 13747 ], 13, 1);
    const_str_plain_Unnamed = UNSTREAM_STRING_ASCII(&constant_bin[ 13760 ], 7, 1);
    const_str_plain_QPlainTextEdit = UNSTREAM_STRING_ASCII(&constant_bin[ 12321 ], 14, 1);
    const_str_digest_5fc15d61a5340199c2e50eee206bb40e = UNSTREAM_STRING_ASCII(&constant_bin[ 13767 ], 17, 0);
    const_tuple_str_plain_ProxyBase_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ProxyBase_tuple, 0, const_str_plain_ProxyBase); Py_INCREF(const_str_plain_ProxyBase);
    const_str_digest_2a7e220ade4be8f2c3b8596f5728419c = UNSTREAM_STRING_ASCII(&constant_bin[ 13784 ], 21, 0);
    const_str_digest_2b55a9bec1eca188774820147f7a688f = UNSTREAM_STRING_ASCII(&constant_bin[ 13805 ], 33, 0);
    const_str_plain_QSplitter = UNSTREAM_STRING_ASCII(&constant_bin[ 13443 ], 9, 1);
    const_str_digest_1046321cd1e5c670e97ac2786c6f8eda = UNSTREAM_STRING_ASCII(&constant_bin[ 13838 ], 25, 0);
    const_str_digest_8160e5c847c84e4d1492c0ce11d1324f = UNSTREAM_STRING_ASCII(&constant_bin[ 13863 ], 20, 0);
    const_str_digest_17dbf1120b5730e87af274283d813a48 = UNSTREAM_STRING_ASCII(&constant_bin[ 13883 ], 21, 0);
    const_str_plain_QWizardPage = UNSTREAM_STRING_ASCII(&constant_bin[ 13904 ], 11, 1);
    const_str_digest_b960eb01aa4da10709a2e74c3339462e = UNSTREAM_STRING_ASCII(&constant_bin[ 13915 ], 21, 0);
    const_str_digest_81d39b77439daaee6b385a2bf0805190 = UNSTREAM_STRING_ASCII(&constant_bin[ 13936 ], 18, 0);
    const_tuple_str_plain_setSortingEnabled_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_setSortingEnabled_tuple, 0, const_str_plain_setSortingEnabled); Py_INCREF(const_str_plain_setSortingEnabled);
    const_str_digest_265fdac0f13dfed40e92824ef8373d65 = UNSTREAM_STRING_ASCII(&constant_bin[ 13954 ], 19, 0);
    const_str_digest_8f6d8431f8330a0e0e88e343619a317c = UNSTREAM_STRING_ASCII(&constant_bin[ 13973 ], 32, 0);
    const_str_plain_QToolButton = UNSTREAM_STRING_ASCII(&constant_bin[ 13203 ], 11, 1);
    const_str_digest_5e3f4d6001cc1ce596d7a3a3679b06fb = UNSTREAM_STRING_ASCII(&constant_bin[ 14005 ], 21, 0);
    const_tuple_tuple_empty_false_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_tuple_empty_false_tuple, 0, const_tuple_empty); Py_INCREF(const_tuple_empty);
    PyTuple_SET_ITEM(const_tuple_tuple_empty_false_tuple, 1, Py_False); Py_INCREF(Py_False);
    const_str_digest_d93e165baf38636c16e3abc7d249b07f = UNSTREAM_STRING_ASCII(&constant_bin[ 12940 ], 25, 0);
    const_str_digest_e7f9c8b6aa5904b185ea8d09bb2f82ee = UNSTREAM_STRING_ASCII(&constant_bin[ 14026 ], 26, 0);
    const_str_plain_issubclass = UNSTREAM_STRING_ASCII(&constant_bin[ 14052 ], 10, 1);
    const_str_digest_f97888d25f6ccb9b8ef720f600e420dd = UNSTREAM_STRING_ASCII(&constant_bin[ 14062 ], 32, 0);
    const_str_digest_fb084c6a3ced24839e9b1b2234a8219d = UNSTREAM_STRING_ASCII(&constant_bin[ 14094 ], 19, 0);
    const_str_digest_26315b6bed3fbaa50143a904d5c70cf4 = UNSTREAM_STRING_ASCII(&constant_bin[ 14113 ], 21, 0);
    const_str_plain_QCheckBox = UNSTREAM_STRING_ASCII(&constant_bin[ 13964 ], 9, 1);
    const_str_digest_9999ca3f5f5fa0a4d6b13c08c083ab18 = UNSTREAM_STRING_ASCII(&constant_bin[ 13728 ], 19, 0);
    const_str_digest_441f8f9ef47ab1cac2a615ec75deb66f = UNSTREAM_STRING_ASCII(&constant_bin[ 14134 ], 12, 0);
    const_str_digest_e2c99cabda74aeb55eab2a5db3680efa = UNSTREAM_STRING_ASCII(&constant_bin[ 14146 ], 23, 0);
    const_str_digest_4d59462542f561c3c69bc696d0fb9319 = UNSTREAM_STRING_ASCII(&constant_bin[ 11379 ], 17, 0);
    const_dict_adbd77622c4af5dbd9dfeebc0a1fc797 = _PyDict_NewPresized( 1 );
    PyDict_SetItem(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797, const_str_plain_noInstantiation, Py_True);
    assert(PyDict_Size(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797) == 1);
    const_str_plain__sender = UNSTREAM_STRING_ASCII(&constant_bin[ 14169 ], 7, 1);
    const_tuple_a605d5fbbd62119af1fb7108946be055_tuple = PyTuple_New(6);
    PyTuple_SET_ITEM(const_tuple_a605d5fbbd62119af1fb7108946be055_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_a605d5fbbd62119af1fb7108946be055_tuple, 1, const_str_plain_objectname); Py_INCREF(const_str_plain_objectname);
    PyTuple_SET_ITEM(const_tuple_a605d5fbbd62119af1fb7108946be055_tuple, 2, const_str_plain_is_attribute); Py_INCREF(const_str_plain_is_attribute);
    PyTuple_SET_ITEM(const_tuple_a605d5fbbd62119af1fb7108946be055_tuple, 3, const_str_plain_args); Py_INCREF(const_str_plain_args);
    PyTuple_SET_ITEM(const_tuple_a605d5fbbd62119af1fb7108946be055_tuple, 4, const_str_plain_noInstantiation); Py_INCREF(const_str_plain_noInstantiation);
    PyTuple_SET_ITEM(const_tuple_a605d5fbbd62119af1fb7108946be055_tuple, 5, const_str_plain_funcall); Py_INCREF(const_str_plain_funcall);
    const_str_plain_ProxyNamespace = UNSTREAM_STRING_ASCII(&constant_bin[ 1438 ], 14, 1);
    const_str_digest_e102df442c0b3e2a83bcb2f08ac5aea4 = UNSTREAM_STRING_ASCII(&constant_bin[ 14176 ], 23, 0);
    const_str_plain_QGraphicsView = UNSTREAM_STRING_ASCII(&constant_bin[ 14156 ], 13, 1);
    const_str_digest_aaf09899f7a5a84a2641d71d728efe8b = UNSTREAM_STRING_ASCII(&constant_bin[ 14199 ], 27, 0);
    const_str_digest_d0786a0d0073a9ca345b70a69f90d8b6 = UNSTREAM_STRING_ASCII(&constant_bin[ 14226 ], 28, 0);
    const_str_digest_90bb03fed547099e44ef288e48076cbc = UNSTREAM_STRING_ASCII(&constant_bin[ 14254 ], 13, 0);
    const_str_digest_fd7deb4e9f8f7904ec6fcb9c49d99391 = UNSTREAM_STRING_ASCII(&constant_bin[ 14267 ], 19, 0);
    const_str_digest_a7636f57d1f8f80548278378b7bf84e2 = UNSTREAM_STRING_ASCII(&constant_bin[ 12001 ], 6, 0);
    const_str_digest_5ff651c6aff8f0acdd8250626275cd5a = UNSTREAM_STRING_ASCII(&constant_bin[ 14286 ], 19, 0);
    const_str_digest_b78ed9489a3c145073b2e9f9a8a9e18d = UNSTREAM_STRING_ASCII(&constant_bin[ 14305 ], 35, 0);
    const_tuple_str_plain_isSortingEnabled_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_isSortingEnabled_tuple, 0, const_str_plain_isSortingEnabled); Py_INCREF(const_str_plain_isSortingEnabled);
    const_str_digest_04888fc8efd3262f9b19d61edb07222c = UNSTREAM_STRING_ASCII(&constant_bin[ 12270 ], 14, 0);
    const_str_digest_85b731fa2761c6bc50e2a4f6b46a4ecb = UNSTREAM_STRING_ASCII(&constant_bin[ 14340 ], 21, 0);
    const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple = PyTuple_New(12);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 0, const_str_plain_QCalendarWidget); Py_INCREF(const_str_plain_QCalendarWidget);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 1, const_str_plain_QDialogButtonBox); Py_INCREF(const_str_plain_QDialogButtonBox);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 2, const_str_plain_QDockWidget); Py_INCREF(const_str_plain_QDockWidget);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 3, const_str_plain_QGroupBox); Py_INCREF(const_str_plain_QGroupBox);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 4, const_str_plain_QLineEdit); Py_INCREF(const_str_plain_QLineEdit);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 5, const_str_plain_QMainWindow); Py_INCREF(const_str_plain_QMainWindow);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 6, const_str_plain_QMenuBar); Py_INCREF(const_str_plain_QMenuBar);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 7, const_str_plain_QOpenGLWidget); Py_INCREF(const_str_plain_QOpenGLWidget);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 8, const_str_plain_QProgressBar); Py_INCREF(const_str_plain_QProgressBar);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 9, const_str_plain_QStatusBar); Py_INCREF(const_str_plain_QStatusBar);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 10, const_str_plain_QToolBar); Py_INCREF(const_str_plain_QToolBar);
    PyTuple_SET_ITEM(const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple, 11, const_str_plain_QWizardPage); Py_INCREF(const_str_plain_QWizardPage);
    const_str_plain_QAbstractSpinBox = UNSTREAM_STRING_ASCII(&constant_bin[ 1723 ], 16, 1);
    const_str_digest_65d948469dd02582ee8c9c2a1f0bb263 = UNSTREAM_STRING_ASCII(&constant_bin[ 14361 ], 11, 0);
    const_str_digest_3899e3d3c1ec2841852f9b791ab87e70 = UNSTREAM_STRING_ASCII(&constant_bin[ 14372 ], 24, 0);
    const_str_plain_QMessageBox = UNSTREAM_STRING_ASCII(&constant_bin[ 14350 ], 11, 1);
    const_str_digest_fdfcf59bbdde7a85bbb68ddd5058c46c = UNSTREAM_STRING_ASCII(&constant_bin[ 14396 ], 15, 0);
    const_str_digest_56cfbe8c43c38edc3b3bd9fb1cb1389c = UNSTREAM_STRING_ASCII(&constant_bin[ 13396 ], 20, 0);
    const_str_digest_ed21bf033d5d2fce06622e9e9ba71e5d = UNSTREAM_STRING_ASCII(&constant_bin[ 14411 ], 33, 0);
    const_str_digest_b4ae43e0124e9d6d4041f0b627dc0af7 = UNSTREAM_STRING_ASCII(&constant_bin[ 4326 ], 22, 0);
    const_str_digest_f99eab529fb8bc79979274901309f5a2 = UNSTREAM_STRING_ASCII(&constant_bin[ 14444 ], 22, 0);
    const_str_digest_fb38d371e7c507a7a9fd52d923345989 = UNSTREAM_STRING_ASCII(&constant_bin[ 14466 ], 22, 0);
    const_str_digest_48f20dc073d6b0ffa0d0f294dd45a8fb = UNSTREAM_STRING_ASCII(&constant_bin[ 14488 ], 26, 0);
    const_str_plain_AS_ARGUMENT = UNSTREAM_STRING_ASCII(&constant_bin[ 1194 ], 11, 1);

    constants_created = true;
}

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_PyQt5$uic$Compiler$qtproxies(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;


}
#endif

// The module code objects.
static PyCodeObject *codeobj_dda184083fcb57bcf7bb9787b01f5c0e;
static PyCodeObject *codeobj_d988ce8ae87f78fb5ef322326ef27f66;
static PyCodeObject *codeobj_8af776f3a17238462f66bcf0f452b6c9;
static PyCodeObject *codeobj_5187a6dce54a4b84b026582d33ef8fb8;
static PyCodeObject *codeobj_fd946e4f778f362b85bee3d204f62634;
static PyCodeObject *codeobj_254425c2a370604fc2bd4045785d9b68;
static PyCodeObject *codeobj_a9d6db0955b7ba28bfba73ef240b3f90;
static PyCodeObject *codeobj_84f7195f6a25d49c9ccba9b3ed0478e5;
static PyCodeObject *codeobj_9751a35f21e78be8ee8556a3adf4c17d;
static PyCodeObject *codeobj_677ae2976b24110d4f56789d42886e8b;
static PyCodeObject *codeobj_02387612e1579a729119b86a0e26e9e5;
static PyCodeObject *codeobj_b45d33ae6b169d8890b4fa59e78d380e;
static PyCodeObject *codeobj_06ad95b98bf6ea4d7da60b866487fc74;
static PyCodeObject *codeobj_ae620f7e43f56488ccde52f5336808c1;
static PyCodeObject *codeobj_a22e0e1aa09d904eb786d76c3dcebdb5;
static PyCodeObject *codeobj_8e5a210a9997e6027f0b1cf555f7a089;
static PyCodeObject *codeobj_a36b19e6c8b2ca45e826f66d7f0b7e16;
static PyCodeObject *codeobj_1bca3a6f0a6831653abb6bc56056eae1;
static PyCodeObject *codeobj_bacb55f861c453ab9ab67002e7cba0fe;
static PyCodeObject *codeobj_50a860bdb6599023474a313618a2830b;
static PyCodeObject *codeobj_a9231d8273ddef68b5e33e09c5b1cc0d;
static PyCodeObject *codeobj_0ec3e70513a8a2f96719c578db147471;
static PyCodeObject *codeobj_d77951b0e8e96dc949c573a17a62cabd;
static PyCodeObject *codeobj_d8c51ce26a6825461415e7bb5df0a78e;
static PyCodeObject *codeobj_d4fb0a29e397c067d8a0e3c06d49624c;
static PyCodeObject *codeobj_9ba87b2645640b4295d0601ecddbda10;
static PyCodeObject *codeobj_5cf0cbd1aa4d248d6810c0ff068e00bb;
static PyCodeObject *codeobj_42e31513adb02c535811075ecdb45015;
static PyCodeObject *codeobj_b29ac8a41d2a0662a5268a5b443ef409;
static PyCodeObject *codeobj_421e8f99e3be9d53de851a4d61e12f7e;
static PyCodeObject *codeobj_51852662c8e30fa9b766d24c14cb86b7;
static PyCodeObject *codeobj_cd993275863b9fcdf2d617df1988feda;
static PyCodeObject *codeobj_16727c081d46cd908ae4808ca94ba3d9;
static PyCodeObject *codeobj_ff9a9d4e96aac6f2e2eb5001d138f8dd;
static PyCodeObject *codeobj_469a94b77317568ec1dd93a47a4dbf10;
static PyCodeObject *codeobj_4c7ee7148285a78796ae7a7c87e8ab09;
static PyCodeObject *codeobj_db0ff685ae3ab0935405198eadd8d276;
static PyCodeObject *codeobj_69aa1adcb150fd01e858c12e9c0d7280;
static PyCodeObject *codeobj_1dee8c3f9184c0a022625429fedfb052;
static PyCodeObject *codeobj_37e0a5a3dc9eee21c6b61803ff2f37ad;
static PyCodeObject *codeobj_33b1cd2af13f98e0f559f37e0f7919cd;
static PyCodeObject *codeobj_bedb444e02cd7070a29a0979b62186ca;
static PyCodeObject *codeobj_8bde67b85e57206bdc4f729bbc874972;
static PyCodeObject *codeobj_a7e3bf7055b60b672017b8e1ca05ec40;
static PyCodeObject *codeobj_543ac5bdd2fcc3bd2c6579e08af759d7;
static PyCodeObject *codeobj_e3001715ab2dbe2285fc7e39347e8dd4;
static PyCodeObject *codeobj_b7e51e5cdf11f4f3f202c05817b7ea70;
static PyCodeObject *codeobj_4c037b0927f25d3119d3186480846459;
static PyCodeObject *codeobj_cfb1bf6cf2db819c698a6437b74a501a;
static PyCodeObject *codeobj_3f536d65250de8b954715e28e3e1d6f0;
static PyCodeObject *codeobj_f17f264110181394d3f8c53d58fe91c4;
static PyCodeObject *codeobj_99b368de22d19265612088108949ccef;
static PyCodeObject *codeobj_4f73d7bd3a53964b384bfa29cf150139;
static PyCodeObject *codeobj_70789be152d6d6f7e8e655ad5f96ba2c;
static PyCodeObject *codeobj_d73851f0ad486506911ebd8f09fbffbb;
static PyCodeObject *codeobj_6a3c5c32e1ada044f7ef155c0aab46f0;
static PyCodeObject *codeobj_e12096df9e3dd20e891d8af578f99dd3;
static PyCodeObject *codeobj_d8929de1e6b326e6eef3a58bc3031e70;
static PyCodeObject *codeobj_d779fb009bda0a8b0d32c88987e3c826;
static PyCodeObject *codeobj_17dc6318e6443c8eb2d9cc30038b43b2;
static PyCodeObject *codeobj_e1df4f80e7ef74b03db16c41f11dd040;
static PyCodeObject *codeobj_bb3ea6d1df352ff32b718db12dd43d9e;
static PyCodeObject *codeobj_421edfd039acbe71dbd99f62ae91488a;
static PyCodeObject *codeobj_37394409c847815e54a9bb366c0a92c8;
static PyCodeObject *codeobj_cb827efeb479d5f4af4c344b8ad97317;
static PyCodeObject *codeobj_b5f526cb54bc83b207fe897000f91920;

static void createModuleCodeObjects(void) {
    module_filename_obj = MAKE_RELATIVE_PATH(const_str_digest_64be69029dd224d9920d16bf00102c4d);
    codeobj_dda184083fcb57bcf7bb9787b01f5c0e = MAKE_CODEOBJECT(module_filename_obj, 172, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_angle_listcomp, const_tuple_str_plain_a_tuple, 1, 0, 0);
    codeobj_d988ce8ae87f78fb5ef322326ef27f66 = MAKE_CODEOBJECT(module_filename_obj, 1, CO_NOFREE, const_str_digest_b4f06ec77d4ca140b8f24cac703689b5, const_tuple_empty, 0, 0, 0);
    codeobj_8af776f3a17238462f66bcf0f452b6c9 = MAKE_CODEOBJECT(module_filename_obj, 212, CO_NOFREE, const_str_plain_LiteralProxyClass, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_5187a6dce54a4b84b026582d33ef8fb8 = MAKE_CODEOBJECT(module_filename_obj, 180, CO_NOFREE, const_str_plain_ProxyClass, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_fd946e4f778f362b85bee3d204f62634 = MAKE_CODEOBJECT(module_filename_obj, 108, CO_NOFREE, const_str_plain_ProxyClassMember, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_254425c2a370604fc2bd4045785d9b68 = MAKE_CODEOBJECT(module_filename_obj, 161, CO_NOFREE, const_str_plain_ProxySignalWithArguments, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_a9d6db0955b7ba28bfba73ef240b3f90 = MAKE_CODEOBJECT(module_filename_obj, 387, CO_NOFREE, const_str_plain_QAbstractScrollArea, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_84f7195f6a25d49c9ccba9b3ed0478e5 = MAKE_CODEOBJECT(module_filename_obj, 289, CO_NOFREE, const_str_plain_QApplication, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_9751a35f21e78be8ee8556a3adf4c17d = MAKE_CODEOBJECT(module_filename_obj, 271, CO_NOFREE, const_str_plain_QIcon, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_677ae2976b24110d4f56789d42886e8b = MAKE_CODEOBJECT(module_filename_obj, 421, CO_NOFREE, const_str_plain_QListWidget, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_02387612e1579a729119b86a0e26e9e5 = MAKE_CODEOBJECT(module_filename_obj, 334, CO_NOFREE, const_str_plain_QMenu, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_b45d33ae6b169d8890b4fa59e78d380e = MAKE_CODEOBJECT(module_filename_obj, 252, CO_NOFREE, const_str_plain_QMetaObject, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_06ad95b98bf6ea4d7da60b866487fc74 = MAKE_CODEOBJECT(module_filename_obj, 257, CO_NOFREE, const_str_plain_QObject, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_ae620f7e43f56488ccde52f5336808c1 = MAKE_CODEOBJECT(module_filename_obj, 338, CO_NOFREE, const_str_plain_QTabWidget, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_a22e0e1aa09d904eb786d76c3dcebdb5 = MAKE_CODEOBJECT(module_filename_obj, 405, CO_NOFREE, const_str_plain_QTableView, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_8e5a210a9997e6027f0b1cf555f7a089 = MAKE_CODEOBJECT(module_filename_obj, 428, CO_NOFREE, const_str_plain_QTableWidget, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_a36b19e6c8b2ca45e826f66d7f0b7e16 = MAKE_CODEOBJECT(module_filename_obj, 369, CO_NOFREE, const_str_plain_QToolBox, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_1bca3a6f0a6831653abb6bc56056eae1 = MAKE_CODEOBJECT(module_filename_obj, 414, CO_NOFREE, const_str_plain_QTreeView, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_bacb55f861c453ab9ab67002e7cba0fe = MAKE_CODEOBJECT(module_filename_obj, 440, CO_NOFREE, const_str_plain_QTreeWidget, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_50a860bdb6599023474a313618a2830b = MAKE_CODEOBJECT(module_filename_obj, 435, CO_NOFREE, const_str_plain_QTreeWidgetItem, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_a9231d8273ddef68b5e33e09c5b1cc0d = MAKE_CODEOBJECT(module_filename_obj, 309, CO_NOFREE, const_str_plain_QWidget, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_0ec3e70513a8a2f96719c578db147471 = MAKE_CODEOBJECT(module_filename_obj, 245, CO_NOFREE, const_str_plain_QtCore, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_d77951b0e8e96dc949c573a17a62cabd = MAKE_CODEOBJECT(module_filename_obj, 270, CO_NOFREE, const_str_plain_QtGui, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_d8c51ce26a6825461415e7bb5df0a78e = MAKE_CODEOBJECT(module_filename_obj, 288, CO_NOFREE, const_str_plain_QtWidgets, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_d4fb0a29e397c067d8a0e3c06d49624c = MAKE_CODEOBJECT(module_filename_obj, 261, CO_OPTIMIZED | CO_NOFREE, const_str_plain__FakeMetaObject, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_9ba87b2645640b4295d0601ecddbda10 = MAKE_CODEOBJECT(module_filename_obj, 117, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, const_str_plain___call__, const_tuple_687ca9667a376cf74155ff03da6d8b15_tuple, 1, 0, 0);
    codeobj_5cf0cbd1aa4d248d6810c0ff068e00bb = MAKE_CODEOBJECT(module_filename_obj, 139, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___getattribute__, const_tuple_str_plain_self_str_plain_attribute_tuple, 2, 0, 0);
    codeobj_42e31513adb02c535811075ecdb45015 = MAKE_CODEOBJECT(module_filename_obj, 205, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___getattribute__, const_tuple_str_plain_self_str_plain_attribute_tuple, 2, 0, 0);
    codeobj_b29ac8a41d2a0662a5268a5b443ef409 = MAKE_CODEOBJECT(module_filename_obj, 152, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___getitem__, const_tuple_str_plain_self_str_plain_idx_tuple, 2, 0, 0);
    codeobj_421e8f99e3be9d53de851a4d61e12f7e = MAKE_CODEOBJECT(module_filename_obj, 222, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, const_str_plain___init__, const_tuple_str_plain_self_str_plain_args_tuple, 1, 0, 0);
    codeobj_51852662c8e30fa9b766d24c14cb86b7 = MAKE_CODEOBJECT(module_filename_obj, 183, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___init__, const_tuple_a605d5fbbd62119af1fb7108946be055_tuple, 5, 0, 0);
    codeobj_cd993275863b9fcdf2d617df1988feda = MAKE_CODEOBJECT(module_filename_obj, 109, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___init__, const_tuple_5f54ea17e43c779ec4f22e9769541d3f_tuple, 4, 0, 0);
    codeobj_16727c081d46cd908ae4808ca94ba3d9 = MAKE_CODEOBJECT(module_filename_obj, 165, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___init__, const_tuple_2abd98543ace3a18eee0f12ccae60159_tuple, 4, 0, 0);
    codeobj_ff9a9d4e96aac6f2e2eb5001d138f8dd = MAKE_CODEOBJECT(module_filename_obj, 82, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___init__, const_tuple_str_plain_self_str_plain_string_str_plain_disambig_tuple, 3, 0, 0);
    codeobj_469a94b77317568ec1dd93a47a4dbf10 = MAKE_CODEOBJECT(module_filename_obj, 86, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___str__, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_4c7ee7148285a78796ae7a7c87e8ab09 = MAKE_CODEOBJECT(module_filename_obj, 114, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___str__, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_db0ff685ae3ab0935405198eadd8d276 = MAKE_CODEOBJECT(module_filename_obj, 202, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain___str__, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_69aa1adcb150fd01e858c12e9c0d7280 = MAKE_CODEOBJECT(module_filename_obj, 62, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS, const_str_plain__printer, const_tuple_str_plain_self_str_plain_args_str_plain_name_tuple, 1, 0, 0);
    codeobj_1dee8c3f9184c0a022625429fedfb052 = MAKE_CODEOBJECT(module_filename_obj, 67, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS, const_str_plain__printer, const_tuple_str_plain_self_str_plain_rname_str_plain_args_str_plain_name_tuple, 2, 0, 0);
    codeobj_37e0a5a3dc9eee21c6b61803ff2f37ad = MAKE_CODEOBJECT(module_filename_obj, 370, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, const_str_plain_addItem, const_tuple_str_plain_self_str_plain_args_str_plain_text_tuple, 1, 0, 0);
    codeobj_33b1cd2af13f98e0f559f37e0f7919cd = MAKE_CODEOBJECT(module_filename_obj, 339, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, const_str_plain_addTab, const_tuple_str_plain_self_str_plain_args_str_plain_text_tuple, 1, 0, 0);
    codeobj_bedb444e02cd7070a29a0979b62186ca = MAKE_CODEOBJECT(module_filename_obj, 436, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_child, const_tuple_str_plain_self_str_plain_index_tuple, 2, 0, 0);
    codeobj_8bde67b85e57206bdc4f729bbc874972 = MAKE_CODEOBJECT(module_filename_obj, 262, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS, const_str_plain_className, const_tuple_str_plain_args_str_plain_self_tuple, 0, 0, 0);
    codeobj_a7e3bf7055b60b672017b8e1ca05ec40 = MAKE_CODEOBJECT(module_filename_obj, 176, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_connect, const_tuple_str_plain_self_str_plain_slot_tuple, 2, 0, 0);
    codeobj_543ac5bdd2fcc3bd2c6579e08af759d7 = MAKE_CODEOBJECT(module_filename_obj, 254, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, const_str_plain_connectSlotsByName, const_tuple_str_plain_cls_str_plain_args_tuple, 1, 0, 0);
    codeobj_e3001715ab2dbe2285fc7e39347e8dd4 = MAKE_CODEOBJECT(module_filename_obj, 310, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_font, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_b7e51e5cdf11f4f3f202c05817b7ea70 = MAKE_CODEOBJECT(module_filename_obj, 415, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_header, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_4c037b0927f25d3119d3186480846459 = MAKE_CODEOBJECT(module_filename_obj, 444, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_headerItem, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_cfb1bf6cf2db819c698a6437b74a501a = MAKE_CODEOBJECT(module_filename_obj, 406, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_horizontalHeader, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_3f536d65250de8b954715e28e3e1d6f0 = MAKE_CODEOBJECT(module_filename_obj, 66, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_i18n_func, const_tuple_str_plain_name_str_plain__printer_tuple, 1, 0, 0);
    codeobj_f17f264110181394d3f8c53d58fe91c4 = MAKE_CODEOBJECT(module_filename_obj, 58, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_i18n_print, const_tuple_str_plain_string_tuple, 1, 0, 0);
    codeobj_99b368de22d19265612088108949ccef = MAKE_CODEOBJECT(module_filename_obj, 81, CO_NOFREE, const_str_plain_i18n_string, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_4f73d7bd3a53964b384bfa29cf150139 = MAKE_CODEOBJECT(module_filename_obj, 61, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_i18n_void_func, const_tuple_str_plain_name_str_plain__printer_tuple, 1, 0, 0);
    codeobj_70789be152d6d6f7e8e655ad5f96ba2c = MAKE_CODEOBJECT(module_filename_obj, 349, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_indexOf, const_tuple_str_plain_self_str_plain_page_tuple, 2, 0, 0);
    codeobj_d73851f0ad486506911ebd8f09fbffbb = MAKE_CODEOBJECT(module_filename_obj, 380, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_indexOf, const_tuple_str_plain_self_str_plain_page_tuple, 2, 0, 0);
    codeobj_6a3c5c32e1ada044f7ef155c0aab46f0 = MAKE_CODEOBJECT(module_filename_obj, 383, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_layout, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_e12096df9e3dd20e891d8af578f99dd3 = MAKE_CODEOBJECT(module_filename_obj, 335, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_menuAction, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_d8929de1e6b326e6eef3a58bc3031e70 = MAKE_CODEOBJECT(module_filename_obj, 260, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_metaObject, const_tuple_str_plain_self_str_plain__FakeMetaObject_tuple, 1, 0, 0);
    codeobj_d779fb009bda0a8b0d32c88987e3c826 = MAKE_CODEOBJECT(module_filename_obj, 313, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_minimumSizeHint, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_17dc6318e6443c8eb2d9cc30038b43b2 = MAKE_CODEOBJECT(module_filename_obj, 266, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_objectName, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_e1df4f80e7ef74b03db16c41f11dd040 = MAKE_CODEOBJECT(module_filename_obj, 316, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_sizePolicy, const_tuple_str_plain_self_str_plain_sp_tuple, 1, 0, 0);
    codeobj_bb3ea6d1df352ff32b718db12dd43d9e = MAKE_CODEOBJECT(module_filename_obj, 73, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_strict_getattr, const_tuple_str_plain_module_str_plain_clsname_str_plain_cls_tuple, 2, 0, 0);
    codeobj_421edfd039acbe71dbd99f62ae91488a = MAKE_CODEOBJECT(module_filename_obj, 448, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_topLevelItem, const_tuple_str_plain_self_str_plain_index_tuple, 2, 0, 0);
    codeobj_37394409c847815e54a9bb366c0a92c8 = MAKE_CODEOBJECT(module_filename_obj, 291, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_translate, const_tuple_str_plain_uiname_str_plain_text_str_plain_disambig_tuple, 3, 0, 0);
    codeobj_cb827efeb479d5f4af4c344b8ad97317 = MAKE_CODEOBJECT(module_filename_obj, 410, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_verticalHeader, const_tuple_str_plain_self_tuple, 1, 0, 0);
    codeobj_b5f526cb54bc83b207fe897000f91920 = MAKE_CODEOBJECT(module_filename_obj, 388, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_viewport, const_tuple_str_plain_self_tuple, 1, 0, 0);
}

// The module function declarations.
NUITKA_CROSS_MODULE PyObject *impl___internal__$$$function_1__mro_entries_conversion(PyObject **python_pars);


NUITKA_CROSS_MODULE PyObject *impl___internal__$$$function_4_complex_call_helper_star_list(PyObject **python_pars);


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_11___getitem__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_12___init__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_13_connect();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_14___init__(PyObject *defaults);


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_15___str__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_17___init__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject$$$function_1_className();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_1_i18n_print();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_20_objectName();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_21_translate();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_22_font();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_23_minimumSizeHint();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_25_menuAction();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_26_addTab();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_27_indexOf();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_28_addItem();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_29_indexOf();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func$$$function_1__printer();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_30_layout();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_31_viewport();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_32_horizontalHeader();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_33_verticalHeader();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_34_header();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_35_child();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_36_headerItem();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_37_topLevelItem();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func$$$function_1__printer();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_5___init__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_6___str__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_7___init__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_8___str__();


static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_9___call__();


// The module function definitions.
static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_1_i18n_print(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_string = python_pars[0];
    struct Nuitka_FrameObject *frame_f17f264110181394d3f8c53d58fe91c4;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_f17f264110181394d3f8c53d58fe91c4 = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_f17f264110181394d3f8c53d58fe91c4, codeobj_f17f264110181394d3f8c53d58fe91c4, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_f17f264110181394d3f8c53d58fe91c4 = cache_frame_f17f264110181394d3f8c53d58fe91c4;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_f17f264110181394d3f8c53d58fe91c4);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_f17f264110181394d3f8c53d58fe91c4) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_strings);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_strings);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1049 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 59;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_string);
        tmp_args_element_name_1 = par_string;
        frame_f17f264110181394d3f8c53d58fe91c4->m_frame.f_lineno = 59;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_append, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 59;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f17f264110181394d3f8c53d58fe91c4);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f17f264110181394d3f8c53d58fe91c4);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_f17f264110181394d3f8c53d58fe91c4, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_f17f264110181394d3f8c53d58fe91c4->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_f17f264110181394d3f8c53d58fe91c4, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_f17f264110181394d3f8c53d58fe91c4,
        type_description_1,
        par_string
    );


    // Release cached frame.
    if (frame_f17f264110181394d3f8c53d58fe91c4 == cache_frame_f17f264110181394d3f8c53d58fe91c4) {
        Py_DECREF(frame_f17f264110181394d3f8c53d58fe91c4);
    }
    cache_frame_f17f264110181394d3f8c53d58fe91c4 = NULL;

    assertFrameObject(frame_f17f264110181394d3f8c53d58fe91c4);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_1_i18n_print);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_string);
    Py_DECREF(par_string);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_string);
    Py_DECREF(par_string);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    struct Nuitka_CellObject *par_name = PyCell_NEW1(python_pars[0]);
    PyObject *var__printer = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func$$$function_1__printer();

        ((struct Nuitka_FunctionObject *)tmp_assign_source_1)->m_closure[0] = par_name;
        Py_INCREF(((struct Nuitka_FunctionObject *)tmp_assign_source_1)->m_closure[0]);


        assert(var__printer == NULL);
        var__printer = tmp_assign_source_1;
    }
    // Tried code:
    CHECK_OBJECT(var__printer);
    tmp_return_value = var__printer;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var__printer);
    Py_DECREF(var__printer);
    var__printer = NULL;

    goto function_return_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func);
    return NULL;


function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_name);
    Py_DECREF(par_name);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func$$$function_1__printer(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_args = python_pars[1];
    struct Nuitka_FrameObject *frame_69aa1adcb150fd01e858c12e9c0d7280;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_69aa1adcb150fd01e858c12e9c0d7280 = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_69aa1adcb150fd01e858c12e9c0d7280, codeobj_69aa1adcb150fd01e858c12e9c0d7280, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_69aa1adcb150fd01e858c12e9c0d7280 = cache_frame_69aa1adcb150fd01e858c12e9c0d7280;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_69aa1adcb150fd01e858c12e9c0d7280);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_69aa1adcb150fd01e858c12e9c0d7280) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_called_name_2;
        PyObject *tmp_source_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_called_name_3;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_4;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_print);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_print);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1083 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 63;
            type_description_1 = "ooc";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_c9bbfd4d23003bd37def2410d491807c;
        CHECK_OBJECT(par_self);
        tmp_tuple_element_1 = par_self;
        tmp_right_name_1 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
        if (PyCell_GET(self->m_closure[0]) == NULL) {
            Py_DECREF(tmp_right_name_1);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "name");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 63;
            type_description_1 = "ooc";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_1 = PyCell_GET(self->m_closure[0]);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
        tmp_source_name_1 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_join);
        assert(!(tmp_called_name_2 == NULL));
        tmp_called_name_3 = (PyObject *)&PyMap_Type;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
        }

        if (tmp_mvar_value_2 == NULL) {
            Py_DECREF(tmp_right_name_1);
            Py_DECREF(tmp_called_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 63;
            type_description_1 = "ooc";
            goto frame_exception_exit_1;
        }

        tmp_args_element_name_3 = tmp_mvar_value_2;
        CHECK_OBJECT(par_args);
        tmp_args_element_name_4 = par_args;
        frame_69aa1adcb150fd01e858c12e9c0d7280->m_frame.f_lineno = 63;
        {
            PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_args_element_name_2 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_3, call_args);
        }

        if (tmp_args_element_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 63;
            type_description_1 = "ooc";
            goto frame_exception_exit_1;
        }
        frame_69aa1adcb150fd01e858c12e9c0d7280->m_frame.f_lineno = 63;
        tmp_tuple_element_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_2);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_args_element_name_2);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 63;
            type_description_1 = "ooc";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 2, tmp_tuple_element_1);
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;
            type_description_1 = "ooc";
            goto frame_exception_exit_1;
        }
        frame_69aa1adcb150fd01e858c12e9c0d7280->m_frame.f_lineno = 63;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;
            type_description_1 = "ooc";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_69aa1adcb150fd01e858c12e9c0d7280);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_69aa1adcb150fd01e858c12e9c0d7280);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_69aa1adcb150fd01e858c12e9c0d7280, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_69aa1adcb150fd01e858c12e9c0d7280->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_69aa1adcb150fd01e858c12e9c0d7280, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_69aa1adcb150fd01e858c12e9c0d7280,
        type_description_1,
        par_self,
        par_args,
        self->m_closure[0]
    );


    // Release cached frame.
    if (frame_69aa1adcb150fd01e858c12e9c0d7280 == cache_frame_69aa1adcb150fd01e858c12e9c0d7280) {
        Py_DECREF(frame_69aa1adcb150fd01e858c12e9c0d7280);
    }
    cache_frame_69aa1adcb150fd01e858c12e9c0d7280 = NULL;

    assertFrameObject(frame_69aa1adcb150fd01e858c12e9c0d7280);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func$$$function_1__printer);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    struct Nuitka_CellObject *par_name = PyCell_NEW1(python_pars[0]);
    PyObject *var__printer = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func$$$function_1__printer();

        ((struct Nuitka_FunctionObject *)tmp_assign_source_1)->m_closure[0] = par_name;
        Py_INCREF(((struct Nuitka_FunctionObject *)tmp_assign_source_1)->m_closure[0]);


        assert(var__printer == NULL);
        var__printer = tmp_assign_source_1;
    }
    // Tried code:
    CHECK_OBJECT(var__printer);
    tmp_return_value = var__printer;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var__printer);
    Py_DECREF(var__printer);
    var__printer = NULL;

    goto function_return_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func);
    return NULL;


function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_name);
    Py_DECREF(par_name);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func$$$function_1__printer(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_rname = python_pars[1];
    PyObject *par_args = python_pars[2];
    struct Nuitka_FrameObject *frame_1dee8c3f9184c0a022625429fedfb052;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    static struct Nuitka_FrameObject *cache_frame_1dee8c3f9184c0a022625429fedfb052 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_1dee8c3f9184c0a022625429fedfb052, codeobj_1dee8c3f9184c0a022625429fedfb052, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_1dee8c3f9184c0a022625429fedfb052 = cache_frame_1dee8c3f9184c0a022625429fedfb052;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_1dee8c3f9184c0a022625429fedfb052);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_1dee8c3f9184c0a022625429fedfb052) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_called_name_2;
        PyObject *tmp_source_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_called_name_3;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_4;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_print);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_print);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1083 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 68;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_e5b4e12777ba15c67a9c431e109d9297;
        CHECK_OBJECT(par_rname);
        tmp_tuple_element_1 = par_rname;
        tmp_right_name_1 = PyTuple_New(4);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
        CHECK_OBJECT(par_self);
        tmp_tuple_element_1 = par_self;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
        if (PyCell_GET(self->m_closure[0]) == NULL) {
            Py_DECREF(tmp_right_name_1);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "name");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 68;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_1 = PyCell_GET(self->m_closure[0]);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 2, tmp_tuple_element_1);
        tmp_source_name_1 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_join);
        assert(!(tmp_called_name_2 == NULL));
        tmp_called_name_3 = (PyObject *)&PyMap_Type;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
        }

        if (tmp_mvar_value_2 == NULL) {
            Py_DECREF(tmp_right_name_1);
            Py_DECREF(tmp_called_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 68;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }

        tmp_args_element_name_3 = tmp_mvar_value_2;
        CHECK_OBJECT(par_args);
        tmp_args_element_name_4 = par_args;
        frame_1dee8c3f9184c0a022625429fedfb052->m_frame.f_lineno = 68;
        {
            PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_args_element_name_2 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_3, call_args);
        }

        if (tmp_args_element_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 68;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }
        frame_1dee8c3f9184c0a022625429fedfb052->m_frame.f_lineno = 68;
        tmp_tuple_element_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_2);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_args_element_name_2);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 68;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 3, tmp_tuple_element_1);
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 68;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }
        frame_1dee8c3f9184c0a022625429fedfb052->m_frame.f_lineno = 68;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 68;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_called_name_4;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_5;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_Literal);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Literal);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 528 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 69;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }

        tmp_called_name_4 = tmp_mvar_value_3;
        CHECK_OBJECT(par_rname);
        tmp_args_element_name_5 = par_rname;
        frame_1dee8c3f9184c0a022625429fedfb052->m_frame.f_lineno = 69;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_5);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 69;
            type_description_1 = "oooc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_1dee8c3f9184c0a022625429fedfb052);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_1dee8c3f9184c0a022625429fedfb052);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_1dee8c3f9184c0a022625429fedfb052);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_1dee8c3f9184c0a022625429fedfb052, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_1dee8c3f9184c0a022625429fedfb052->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_1dee8c3f9184c0a022625429fedfb052, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_1dee8c3f9184c0a022625429fedfb052,
        type_description_1,
        par_self,
        par_rname,
        par_args,
        self->m_closure[0]
    );


    // Release cached frame.
    if (frame_1dee8c3f9184c0a022625429fedfb052 == cache_frame_1dee8c3f9184c0a022625429fedfb052) {
        Py_DECREF(frame_1dee8c3f9184c0a022625429fedfb052);
    }
    cache_frame_1dee8c3f9184c0a022625429fedfb052 = NULL;

    assertFrameObject(frame_1dee8c3f9184c0a022625429fedfb052);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func$$$function_1__printer);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_rname);
    Py_DECREF(par_rname);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_rname);
    Py_DECREF(par_rname);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_module = python_pars[0];
    PyObject *par_clsname = python_pars[1];
    PyObject *var_cls = NULL;
    struct Nuitka_FrameObject *frame_bb3ea6d1df352ff32b718db12dd43d9e;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    static struct Nuitka_FrameObject *cache_frame_bb3ea6d1df352ff32b718db12dd43d9e = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_bb3ea6d1df352ff32b718db12dd43d9e, codeobj_bb3ea6d1df352ff32b718db12dd43d9e, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_bb3ea6d1df352ff32b718db12dd43d9e = cache_frame_bb3ea6d1df352ff32b718db12dd43d9e;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_bb3ea6d1df352ff32b718db12dd43d9e);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_bb3ea6d1df352ff32b718db12dd43d9e) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_getattr_target_1;
        PyObject *tmp_getattr_attr_1;
        CHECK_OBJECT(par_module);
        tmp_getattr_target_1 = par_module;
        CHECK_OBJECT(par_clsname);
        tmp_getattr_attr_1 = par_clsname;
        tmp_assign_source_1 = BUILTIN_GETATTR(tmp_getattr_target_1, tmp_getattr_attr_1, NULL);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        assert(var_cls == NULL);
        var_cls = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_mvar_value_1;
        int tmp_truth_name_1;
        tmp_called_name_1 = LOOKUP_BUILTIN(const_str_plain_issubclass);
        assert(tmp_called_name_1 != NULL);
        CHECK_OBJECT(var_cls);
        tmp_args_element_name_1 = var_cls;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_LiteralProxyClass);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_LiteralProxyClass);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1115 ], 39, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 75;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_name_2 = tmp_mvar_value_1;
        frame_bb3ea6d1df352ff32b718db12dd43d9e->m_frame.f_lineno = 75;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_call_result_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 75;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_raise_type_1;
            PyObject *tmp_make_exception_arg_1;
            CHECK_OBJECT(var_cls);
            tmp_make_exception_arg_1 = var_cls;
            frame_bb3ea6d1df352ff32b718db12dd43d9e->m_frame.f_lineno = 76;
            tmp_raise_type_1 = CALL_FUNCTION_WITH_SINGLE_ARG(PyExc_AttributeError, tmp_make_exception_arg_1);
            assert(!(tmp_raise_type_1 == NULL));
            exception_type = tmp_raise_type_1;
            exception_lineno = 76;
            RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        goto branch_end_1;
        branch_no_1:;
        CHECK_OBJECT(var_cls);
        tmp_return_value = var_cls;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_end_1:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bb3ea6d1df352ff32b718db12dd43d9e);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_bb3ea6d1df352ff32b718db12dd43d9e);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bb3ea6d1df352ff32b718db12dd43d9e);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_bb3ea6d1df352ff32b718db12dd43d9e, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_bb3ea6d1df352ff32b718db12dd43d9e->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_bb3ea6d1df352ff32b718db12dd43d9e, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_bb3ea6d1df352ff32b718db12dd43d9e,
        type_description_1,
        par_module,
        par_clsname,
        var_cls
    );


    // Release cached frame.
    if (frame_bb3ea6d1df352ff32b718db12dd43d9e == cache_frame_bb3ea6d1df352ff32b718db12dd43d9e) {
        Py_DECREF(frame_bb3ea6d1df352ff32b718db12dd43d9e);
    }
    cache_frame_bb3ea6d1df352ff32b718db12dd43d9e = NULL;

    assertFrameObject(frame_bb3ea6d1df352ff32b718db12dd43d9e);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_cls);
    Py_DECREF(var_cls);
    var_cls = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_cls);
    var_cls = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_module);
    Py_DECREF(par_module);
    CHECK_OBJECT(par_clsname);
    Py_DECREF(par_clsname);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_module);
    Py_DECREF(par_module);
    CHECK_OBJECT(par_clsname);
    Py_DECREF(par_clsname);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_5___init__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_string = python_pars[1];
    PyObject *par_disambig = python_pars[2];
    struct Nuitka_FrameObject *frame_ff9a9d4e96aac6f2e2eb5001d138f8dd;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_ff9a9d4e96aac6f2e2eb5001d138f8dd = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_ff9a9d4e96aac6f2e2eb5001d138f8dd, codeobj_ff9a9d4e96aac6f2e2eb5001d138f8dd, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_ff9a9d4e96aac6f2e2eb5001d138f8dd = cache_frame_ff9a9d4e96aac6f2e2eb5001d138f8dd;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_ff9a9d4e96aac6f2e2eb5001d138f8dd);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_ff9a9d4e96aac6f2e2eb5001d138f8dd) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        CHECK_OBJECT(par_string);
        tmp_assattr_name_1 = par_string;
        CHECK_OBJECT(par_self);
        tmp_assattr_target_1 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_string, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        CHECK_OBJECT(par_disambig);
        tmp_assattr_name_2 = par_disambig;
        CHECK_OBJECT(par_self);
        tmp_assattr_target_2 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_disambig, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_ff9a9d4e96aac6f2e2eb5001d138f8dd);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_ff9a9d4e96aac6f2e2eb5001d138f8dd);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_ff9a9d4e96aac6f2e2eb5001d138f8dd, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_ff9a9d4e96aac6f2e2eb5001d138f8dd->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_ff9a9d4e96aac6f2e2eb5001d138f8dd, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_ff9a9d4e96aac6f2e2eb5001d138f8dd,
        type_description_1,
        par_self,
        par_string,
        par_disambig
    );


    // Release cached frame.
    if (frame_ff9a9d4e96aac6f2e2eb5001d138f8dd == cache_frame_ff9a9d4e96aac6f2e2eb5001d138f8dd) {
        Py_DECREF(frame_ff9a9d4e96aac6f2e2eb5001d138f8dd);
    }
    cache_frame_ff9a9d4e96aac6f2e2eb5001d138f8dd = NULL;

    assertFrameObject(frame_ff9a9d4e96aac6f2e2eb5001d138f8dd);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_5___init__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_string);
    Py_DECREF(par_string);
    CHECK_OBJECT(par_disambig);
    Py_DECREF(par_disambig);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_string);
    Py_DECREF(par_string);
    CHECK_OBJECT(par_disambig);
    Py_DECREF(par_disambig);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_6___str__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_469a94b77317568ec1dd93a47a4dbf10;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    static struct Nuitka_FrameObject *cache_frame_469a94b77317568ec1dd93a47a4dbf10 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_469a94b77317568ec1dd93a47a4dbf10, codeobj_469a94b77317568ec1dd93a47a4dbf10, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_469a94b77317568ec1dd93a47a4dbf10 = cache_frame_469a94b77317568ec1dd93a47a4dbf10;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_469a94b77317568ec1dd93a47a4dbf10);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_469a94b77317568ec1dd93a47a4dbf10) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_source_name_1;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_compexpr_left_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_disambig);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 87;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = Py_None;
        tmp_condition_result_1 = (tmp_compexpr_left_1 == tmp_compexpr_right_1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_left_name_1;
            PyObject *tmp_right_name_1;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_mvar_value_1;
            PyObject *tmp_called_name_1;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_args_element_name_1;
            PyObject *tmp_source_name_2;
            tmp_left_name_1 = const_str_digest_8160e5c847c84e4d1492c0ce11d1324f;
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_context);

            if (unlikely(tmp_mvar_value_1 == NULL)) {
                tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_context);
            }

            if (tmp_mvar_value_1 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1154 ], 34, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 88;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }

            tmp_tuple_element_1 = tmp_mvar_value_1;
            tmp_right_name_1 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_1);
            PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
            }

            if (tmp_mvar_value_2 == NULL) {
                Py_DECREF(tmp_right_name_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 88;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }

            tmp_called_name_1 = tmp_mvar_value_2;
            CHECK_OBJECT(par_self);
            tmp_source_name_2 = par_self;
            tmp_args_element_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_string);
            if (tmp_args_element_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_1);

                exception_lineno = 88;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }
            frame_469a94b77317568ec1dd93a47a4dbf10->m_frame.f_lineno = 88;
            tmp_tuple_element_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
            Py_DECREF(tmp_args_element_name_1);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_1);

                exception_lineno = 88;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }
            PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
            tmp_return_value = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
            Py_DECREF(tmp_right_name_1);
            if (tmp_return_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 88;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }
            goto frame_return_exit_1;
        }
        branch_no_1:;
    }
    {
        PyObject *tmp_left_name_2;
        PyObject *tmp_right_name_2;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_called_name_2;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_source_name_3;
        PyObject *tmp_called_name_3;
        PyObject *tmp_mvar_value_5;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_source_name_4;
        tmp_left_name_2 = const_str_digest_06d4f90e9a26767aa5c6ebc8f28a2529;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_context);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_context);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1154 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_2 = tmp_mvar_value_3;
        tmp_right_name_2 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_right_name_2, 0, tmp_tuple_element_2);
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
        }

        if (tmp_mvar_value_4 == NULL) {
            Py_DECREF(tmp_right_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_called_name_2 = tmp_mvar_value_4;
        CHECK_OBJECT(par_self);
        tmp_source_name_3 = par_self;
        tmp_args_element_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_string);
        if (tmp_args_element_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_2);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_469a94b77317568ec1dd93a47a4dbf10->m_frame.f_lineno = 90;
        tmp_tuple_element_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_2);
        Py_DECREF(tmp_args_element_name_2);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_2);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_2, 1, tmp_tuple_element_2);
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
        }

        if (tmp_mvar_value_5 == NULL) {
            Py_DECREF(tmp_right_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_called_name_3 = tmp_mvar_value_5;
        CHECK_OBJECT(par_self);
        tmp_source_name_4 = par_self;
        tmp_args_element_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_disambig);
        if (tmp_args_element_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_2);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_469a94b77317568ec1dd93a47a4dbf10->m_frame.f_lineno = 90;
        tmp_tuple_element_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_3);
        Py_DECREF(tmp_args_element_name_3);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_2);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_2, 2, tmp_tuple_element_2);
        tmp_return_value = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_2, tmp_right_name_2);
        Py_DECREF(tmp_right_name_2);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_469a94b77317568ec1dd93a47a4dbf10);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_469a94b77317568ec1dd93a47a4dbf10);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_469a94b77317568ec1dd93a47a4dbf10);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_469a94b77317568ec1dd93a47a4dbf10, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_469a94b77317568ec1dd93a47a4dbf10->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_469a94b77317568ec1dd93a47a4dbf10, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_469a94b77317568ec1dd93a47a4dbf10,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_469a94b77317568ec1dd93a47a4dbf10 == cache_frame_469a94b77317568ec1dd93a47a4dbf10) {
        Py_DECREF(frame_469a94b77317568ec1dd93a47a4dbf10);
    }
    cache_frame_469a94b77317568ec1dd93a47a4dbf10 = NULL;

    assertFrameObject(frame_469a94b77317568ec1dd93a47a4dbf10);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_6___str__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_7___init__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_proxy = python_pars[1];
    PyObject *par_function_name = python_pars[2];
    PyObject *par_flags = python_pars[3];
    struct Nuitka_FrameObject *frame_cd993275863b9fcdf2d617df1988feda;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_cd993275863b9fcdf2d617df1988feda = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_cd993275863b9fcdf2d617df1988feda, codeobj_cd993275863b9fcdf2d617df1988feda, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_cd993275863b9fcdf2d617df1988feda = cache_frame_cd993275863b9fcdf2d617df1988feda;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_cd993275863b9fcdf2d617df1988feda);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_cd993275863b9fcdf2d617df1988feda) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        CHECK_OBJECT(par_proxy);
        tmp_assattr_name_1 = par_proxy;
        CHECK_OBJECT(par_self);
        tmp_assattr_target_1 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_proxy, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;
            type_description_1 = "oooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        CHECK_OBJECT(par_function_name);
        tmp_assattr_name_2 = par_function_name;
        CHECK_OBJECT(par_self);
        tmp_assattr_target_2 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_function_name, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;
            type_description_1 = "oooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_3;
        PyObject *tmp_assattr_target_3;
        CHECK_OBJECT(par_flags);
        tmp_assattr_name_3 = par_flags;
        CHECK_OBJECT(par_self);
        tmp_assattr_target_3 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_flags, tmp_assattr_name_3);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 112;
            type_description_1 = "oooo";
            goto frame_exception_exit_1;
        }
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_cd993275863b9fcdf2d617df1988feda);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_cd993275863b9fcdf2d617df1988feda);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_cd993275863b9fcdf2d617df1988feda, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_cd993275863b9fcdf2d617df1988feda->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_cd993275863b9fcdf2d617df1988feda, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_cd993275863b9fcdf2d617df1988feda,
        type_description_1,
        par_self,
        par_proxy,
        par_function_name,
        par_flags
    );


    // Release cached frame.
    if (frame_cd993275863b9fcdf2d617df1988feda == cache_frame_cd993275863b9fcdf2d617df1988feda) {
        Py_DECREF(frame_cd993275863b9fcdf2d617df1988feda);
    }
    cache_frame_cd993275863b9fcdf2d617df1988feda = NULL;

    assertFrameObject(frame_cd993275863b9fcdf2d617df1988feda);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_7___init__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_proxy);
    Py_DECREF(par_proxy);
    CHECK_OBJECT(par_function_name);
    Py_DECREF(par_function_name);
    CHECK_OBJECT(par_flags);
    Py_DECREF(par_flags);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_proxy);
    Py_DECREF(par_proxy);
    CHECK_OBJECT(par_function_name);
    Py_DECREF(par_function_name);
    CHECK_OBJECT(par_flags);
    Py_DECREF(par_flags);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_8___str__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_4c7ee7148285a78796ae7a7c87e8ab09;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_4c7ee7148285a78796ae7a7c87e8ab09 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_4c7ee7148285a78796ae7a7c87e8ab09, codeobj_4c7ee7148285a78796ae7a7c87e8ab09, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_4c7ee7148285a78796ae7a7c87e8ab09 = cache_frame_4c7ee7148285a78796ae7a7c87e8ab09;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_4c7ee7148285a78796ae7a7c87e8ab09);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_4c7ee7148285a78796ae7a7c87e8ab09) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_source_name_2;
        tmp_left_name_1 = const_str_digest_3114c7847ed30512509505e34fc4f6e0;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_proxy);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = PyTuple_New(2);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
        CHECK_OBJECT(par_self);
        tmp_source_name_2 = par_self;
        tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_function_name);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 115;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
        tmp_return_value = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c7ee7148285a78796ae7a7c87e8ab09);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c7ee7148285a78796ae7a7c87e8ab09);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c7ee7148285a78796ae7a7c87e8ab09);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_4c7ee7148285a78796ae7a7c87e8ab09, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_4c7ee7148285a78796ae7a7c87e8ab09->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_4c7ee7148285a78796ae7a7c87e8ab09, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_4c7ee7148285a78796ae7a7c87e8ab09,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_4c7ee7148285a78796ae7a7c87e8ab09 == cache_frame_4c7ee7148285a78796ae7a7c87e8ab09) {
        Py_DECREF(frame_4c7ee7148285a78796ae7a7c87e8ab09);
    }
    cache_frame_4c7ee7148285a78796ae7a7c87e8ab09 = NULL;

    assertFrameObject(frame_4c7ee7148285a78796ae7a7c87e8ab09);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_8___str__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_9___call__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_args = python_pars[1];
    PyObject *var_str_args = NULL;
    PyObject *var_func_call = NULL;
    PyObject *var_needs_translation = NULL;
    PyObject *var_arg = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    struct Nuitka_FrameObject *frame_9ba87b2645640b4295d0601ecddbda10;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    bool tmp_result;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    static struct Nuitka_FrameObject *cache_frame_9ba87b2645640b4295d0601ecddbda10 = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_9ba87b2645640b4295d0601ecddbda10, codeobj_9ba87b2645640b4295d0601ecddbda10, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_9ba87b2645640b4295d0601ecddbda10 = cache_frame_9ba87b2645640b4295d0601ecddbda10;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_9ba87b2645640b4295d0601ecddbda10);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_9ba87b2645640b4295d0601ecddbda10) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_source_name_1;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_compexpr_left_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_function_name);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_plain_setProperty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_assign_source_1;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_called_name_1;
            PyObject *tmp_mvar_value_1;
            PyObject *tmp_args_element_name_1;
            PyObject *tmp_subscribed_name_1;
            PyObject *tmp_subscript_name_1;
            PyObject *tmp_called_name_2;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_args_element_name_2;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_subscript_name_2;
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

            if (unlikely(tmp_mvar_value_1 == NULL)) {
                tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
            }

            if (tmp_mvar_value_1 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 119;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_name_1 = tmp_mvar_value_1;
            CHECK_OBJECT(par_args);
            tmp_subscribed_name_1 = par_args;
            tmp_subscript_name_1 = const_int_0;
            tmp_args_element_name_1 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_1, tmp_subscript_name_1, 0);
            if (tmp_args_element_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 119;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            frame_9ba87b2645640b4295d0601ecddbda10->m_frame.f_lineno = 119;
            tmp_tuple_element_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
            Py_DECREF(tmp_args_element_name_1);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 119;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_1 = PyTuple_New(2);
            PyTuple_SET_ITEM(tmp_assign_source_1, 0, tmp_tuple_element_1);
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
            }

            if (tmp_mvar_value_2 == NULL) {
                Py_DECREF(tmp_assign_source_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 119;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_name_2 = tmp_mvar_value_2;
            CHECK_OBJECT(par_args);
            tmp_subscribed_name_2 = par_args;
            tmp_subscript_name_2 = const_int_pos_1;
            tmp_args_element_name_2 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_2, tmp_subscript_name_2, 1);
            if (tmp_args_element_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_assign_source_1);

                exception_lineno = 119;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            frame_9ba87b2645640b4295d0601ecddbda10->m_frame.f_lineno = 119;
            tmp_tuple_element_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_2);
            Py_DECREF(tmp_args_element_name_2);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_assign_source_1);

                exception_lineno = 119;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            PyTuple_SET_ITEM(tmp_assign_source_1, 1, tmp_tuple_element_1);
            assert(var_str_args == NULL);
            var_str_args = tmp_assign_source_1;
        }
        goto branch_end_1;
        branch_no_1:;
        {
            PyObject *tmp_assign_source_2;
            PyObject *tmp_called_name_3;
            PyObject *tmp_args_element_name_3;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_args_element_name_4;
            tmp_called_name_3 = (PyObject *)&PyMap_Type;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 121;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }

            tmp_args_element_name_3 = tmp_mvar_value_3;
            CHECK_OBJECT(par_args);
            tmp_args_element_name_4 = par_args;
            frame_9ba87b2645640b4295d0601ecddbda10->m_frame.f_lineno = 121;
            {
                PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4};
                tmp_assign_source_2 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_3, call_args);
            }

            if (tmp_assign_source_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 121;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            assert(var_str_args == NULL);
            var_str_args = tmp_assign_source_2;
        }
        branch_end_1:;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_source_name_2;
        PyObject *tmp_source_name_3;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_args_element_name_5;
        tmp_left_name_1 = const_str_digest_c9bbfd4d23003bd37def2410d491807c;
        CHECK_OBJECT(par_self);
        tmp_source_name_2 = par_self;
        tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_proxy);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 123;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_2);
        CHECK_OBJECT(par_self);
        tmp_source_name_3 = par_self;
        tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_function_name);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 124;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_2);
        tmp_called_instance_1 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
        CHECK_OBJECT(var_str_args);
        tmp_args_element_name_5 = var_str_args;
        frame_9ba87b2645640b4295d0601ecddbda10->m_frame.f_lineno = 125;
        {
            PyObject *call_args[] = {tmp_args_element_name_5};
            tmp_tuple_element_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_join, call_args);
        }

        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 125;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 2, tmp_tuple_element_2);
        tmp_assign_source_3 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 123;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        assert(var_func_call == NULL);
        var_func_call = tmp_assign_source_3;
    }
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_left_name_2;
        PyObject *tmp_source_name_4;
        PyObject *tmp_right_name_2;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_op_bitand_res_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(par_self);
        tmp_source_name_4 = par_self;
        tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_flags);
        if (tmp_left_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_AS_ARGUMENT);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_AS_ARGUMENT);
        }

        if (tmp_mvar_value_4 == NULL) {
            Py_DECREF(tmp_left_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1188 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 126;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }

        tmp_right_name_2 = tmp_mvar_value_4;
        tmp_op_bitand_res_1 = BINARY_OPERATION_BITAND_OBJECT_OBJECT(tmp_left_name_2, tmp_right_name_2);
        Py_DECREF(tmp_left_name_2);
        if (tmp_op_bitand_res_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_op_bitand_res_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_op_bitand_res_1);

            exception_lineno = 126;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_op_bitand_res_1);
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_assattr_name_1;
            PyObject *tmp_assattr_target_1;
            PyObject *tmp_source_name_5;
            CHECK_OBJECT(var_func_call);
            tmp_assattr_name_1 = var_func_call;
            CHECK_OBJECT(par_self);
            tmp_source_name_5 = par_self;
            tmp_assattr_target_1 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_proxy);
            if (tmp_assattr_target_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 127;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain__uic_name, tmp_assattr_name_1);
            Py_DECREF(tmp_assattr_target_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 127;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_source_name_6;
            CHECK_OBJECT(par_self);
            tmp_source_name_6 = par_self;
            tmp_return_value = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_proxy);
            if (tmp_return_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 128;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            goto frame_return_exit_1;
        }
        goto branch_end_2;
        branch_no_2:;
        {
            PyObject *tmp_assign_source_4;
            tmp_assign_source_4 = Py_False;
            assert(var_needs_translation == NULL);
            Py_INCREF(tmp_assign_source_4);
            var_needs_translation = tmp_assign_source_4;
        }
        {
            PyObject *tmp_assign_source_5;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_args);
            tmp_iter_arg_1 = par_args;
            tmp_assign_source_5 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 131;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_5;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_6;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_6 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_6 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooo";
                    exception_lineno = 131;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_6;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_7;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_7 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_arg;
                var_arg = tmp_assign_source_7;
                Py_INCREF(var_arg);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_3;
            PyObject *tmp_isinstance_inst_1;
            PyObject *tmp_isinstance_cls_1;
            PyObject *tmp_mvar_value_5;
            CHECK_OBJECT(var_arg);
            tmp_isinstance_inst_1 = var_arg;
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_string);

            if (unlikely(tmp_mvar_value_5 == NULL)) {
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_string);
            }

            if (tmp_mvar_value_5 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1221 ], 33, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 132;
                type_description_1 = "oooooo";
                goto try_except_handler_2;
            }

            tmp_isinstance_cls_1 = tmp_mvar_value_5;
            tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_1, tmp_isinstance_cls_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 132;
                type_description_1 = "oooooo";
                goto try_except_handler_2;
            }
            tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                goto branch_yes_3;
            } else {
                goto branch_no_3;
            }
            branch_yes_3:;
            {
                PyObject *tmp_assign_source_8;
                tmp_assign_source_8 = Py_True;
                {
                    PyObject *old = var_needs_translation;
                    var_needs_translation = tmp_assign_source_8;
                    Py_INCREF(var_needs_translation);
                    Py_XDECREF(old);
                }

            }
            branch_no_3:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;
            type_description_1 = "oooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_1;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_1 = exception_type;
        exception_keeper_value_1 = exception_value;
        exception_keeper_tb_1 = exception_tb;
        exception_keeper_lineno_1 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_1;
        exception_value = exception_keeper_value_1;
        exception_tb = exception_keeper_tb_1;
        exception_lineno = exception_keeper_lineno_1;

        goto frame_exception_exit_1;
        // End of try:
        try_end_1:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_4;
            int tmp_truth_name_2;
            if (var_needs_translation == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "needs_translation");
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 134;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }

            tmp_truth_name_2 = CHECK_IF_TRUE(var_needs_translation);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 134;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_4 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            {
                PyObject *tmp_called_name_4;
                PyObject *tmp_mvar_value_6;
                PyObject *tmp_call_result_1;
                PyObject *tmp_args_element_name_6;
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_print);

                if (unlikely(tmp_mvar_value_6 == NULL)) {
                    tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_print);
                }

                if (tmp_mvar_value_6 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 1083 ], 32, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 135;
                    type_description_1 = "oooooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_name_4 = tmp_mvar_value_6;
                CHECK_OBJECT(var_func_call);
                tmp_args_element_name_6 = var_func_call;
                frame_9ba87b2645640b4295d0601ecddbda10->m_frame.f_lineno = 135;
                tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_6);
                if (tmp_call_result_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 135;
                    type_description_1 = "oooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_1);
            }
            goto branch_end_4;
            branch_no_4:;
            {
                PyObject *tmp_called_name_5;
                PyObject *tmp_mvar_value_7;
                PyObject *tmp_call_result_2;
                PyObject *tmp_args_element_name_7;
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_write_code);

                if (unlikely(tmp_mvar_value_7 == NULL)) {
                    tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_write_code);
                }

                if (tmp_mvar_value_7 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 351 ], 32, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 137;
                    type_description_1 = "oooooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_name_5 = tmp_mvar_value_7;
                CHECK_OBJECT(var_func_call);
                tmp_args_element_name_7 = var_func_call;
                frame_9ba87b2645640b4295d0601ecddbda10->m_frame.f_lineno = 137;
                tmp_call_result_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_7);
                if (tmp_call_result_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 137;
                    type_description_1 = "oooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_2);
            }
            branch_end_4:;
        }
        branch_end_2:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9ba87b2645640b4295d0601ecddbda10);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_9ba87b2645640b4295d0601ecddbda10);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9ba87b2645640b4295d0601ecddbda10);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_9ba87b2645640b4295d0601ecddbda10, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_9ba87b2645640b4295d0601ecddbda10->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_9ba87b2645640b4295d0601ecddbda10, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_9ba87b2645640b4295d0601ecddbda10,
        type_description_1,
        par_self,
        par_args,
        var_str_args,
        var_func_call,
        var_needs_translation,
        var_arg
    );


    // Release cached frame.
    if (frame_9ba87b2645640b4295d0601ecddbda10 == cache_frame_9ba87b2645640b4295d0601ecddbda10) {
        Py_DECREF(frame_9ba87b2645640b4295d0601ecddbda10);
    }
    cache_frame_9ba87b2645640b4295d0601ecddbda10 = NULL;

    assertFrameObject(frame_9ba87b2645640b4295d0601ecddbda10);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_9___call__);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_str_args);
    Py_DECREF(var_str_args);
    var_str_args = NULL;

    CHECK_OBJECT((PyObject *)var_func_call);
    Py_DECREF(var_func_call);
    var_func_call = NULL;

    Py_XDECREF(var_needs_translation);
    var_needs_translation = NULL;

    Py_XDECREF(var_arg);
    var_arg = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_str_args);
    var_str_args = NULL;

    Py_XDECREF(var_func_call);
    var_func_call = NULL;

    Py_XDECREF(var_needs_translation);
    var_needs_translation = NULL;

    Py_XDECREF(var_arg);
    var_arg = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_9___call__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_attribute = python_pars[1];
    struct Nuitka_FrameObject *frame_5cf0cbd1aa4d248d6810c0ff068e00bb;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_preserved_type_1;
    PyObject *exception_preserved_value_1;
    PyTracebackObject *exception_preserved_tb_1;
    int tmp_res;
    bool tmp_result;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    static struct Nuitka_FrameObject *cache_frame_5cf0cbd1aa4d248d6810c0ff068e00bb = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_5cf0cbd1aa4d248d6810c0ff068e00bb, codeobj_5cf0cbd1aa4d248d6810c0ff068e00bb, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_5cf0cbd1aa4d248d6810c0ff068e00bb = cache_frame_5cf0cbd1aa4d248d6810c0ff068e00bb;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_5cf0cbd1aa4d248d6810c0ff068e00bb);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_5cf0cbd1aa4d248d6810c0ff068e00bb) == 2); // Frame stack

    // Framed code:
    // Tried code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        tmp_called_instance_1 = (PyObject *)&PyBaseObject_Type;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_1 = par_self;
        CHECK_OBJECT(par_attribute);
        tmp_args_element_name_2 = par_attribute;
        frame_5cf0cbd1aa4d248d6810c0ff068e00bb->m_frame.f_lineno = 145;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_1, const_str_plain___getattribute__, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 145;
            type_description_1 = "oo";
            goto try_except_handler_1;
        }
        goto frame_return_exit_1;
    }
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__);
    return NULL;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Preserve existing published exception.
    exception_preserved_type_1 = EXC_TYPE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_type_1);
    exception_preserved_value_1 = EXC_VALUE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_value_1);
    exception_preserved_tb_1 = (PyTracebackObject *)EXC_TRACEBACK(PyThreadState_GET());
    Py_XINCREF(exception_preserved_tb_1);

    if (exception_keeper_tb_1 == NULL) {
        exception_keeper_tb_1 = MAKE_TRACEBACK(frame_5cf0cbd1aa4d248d6810c0ff068e00bb, exception_keeper_lineno_1);
    } else if (exception_keeper_lineno_1 != 0) {
        exception_keeper_tb_1 = ADD_TRACEBACK(exception_keeper_tb_1, frame_5cf0cbd1aa4d248d6810c0ff068e00bb, exception_keeper_lineno_1);
    }

    NORMALIZE_EXCEPTION(&exception_keeper_type_1, &exception_keeper_value_1, &exception_keeper_tb_1);
    PyException_SetTraceback(exception_keeper_value_1, (PyObject *)exception_keeper_tb_1);
    PUBLISH_EXCEPTION(&exception_keeper_type_1, &exception_keeper_value_1, &exception_keeper_tb_1);
    // Tried code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        tmp_compexpr_left_1 = EXC_TYPE(PyThreadState_GET());
        tmp_compexpr_right_1 = PyExc_AttributeError;
        tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 146;
            type_description_1 = "oo";
            goto try_except_handler_2;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            nuitka_bool tmp_condition_result_2;
            int tmp_and_left_truth_1;
            nuitka_bool tmp_and_left_value_1;
            nuitka_bool tmp_and_right_value_1;
            PyObject *tmp_compexpr_left_2;
            PyObject *tmp_compexpr_right_2;
            PyObject *tmp_left_name_1;
            PyObject *tmp_source_name_1;
            PyObject *tmp_right_name_1;
            PyObject *tmp_mvar_value_1;
            PyObject *tmp_op_bitand_res_1;
            int tmp_truth_name_1;
            CHECK_OBJECT(par_attribute);
            tmp_compexpr_left_2 = par_attribute;
            tmp_compexpr_right_2 = const_str_plain_connect;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 147;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_1 == 1) {
                goto and_right_1;
            } else {
                goto and_left_1;
            }
            and_right_1:;
            CHECK_OBJECT(par_self);
            tmp_source_name_1 = par_self;
            tmp_left_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_flags);
            if (tmp_left_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 147;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_AS_SIGNAL);

            if (unlikely(tmp_mvar_value_1 == NULL)) {
                tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_AS_SIGNAL);
            }

            if (tmp_mvar_value_1 == NULL) {
                Py_DECREF(tmp_left_name_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1254 ], 31, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 147;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }

            tmp_right_name_1 = tmp_mvar_value_1;
            tmp_op_bitand_res_1 = BINARY_OPERATION_BITAND_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
            Py_DECREF(tmp_left_name_1);
            if (tmp_op_bitand_res_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 147;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            tmp_truth_name_1 = CHECK_IF_TRUE(tmp_op_bitand_res_1);
            if (tmp_truth_name_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_op_bitand_res_1);

                exception_lineno = 147;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            tmp_and_right_value_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_op_bitand_res_1);
            tmp_condition_result_2 = tmp_and_right_value_1;
            goto and_end_1;
            and_left_1:;
            tmp_condition_result_2 = tmp_and_left_value_1;
            and_end_1:;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                PyObject *tmp_called_name_1;
                PyObject *tmp_mvar_value_2;
                PyObject *tmp_args_element_name_3;
                PyObject *tmp_args_element_name_4;
                PyObject *tmp_args_element_name_5;
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);

                if (unlikely(tmp_mvar_value_2 == NULL)) {
                    tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);
                }

                if (tmp_mvar_value_2 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 1285 ], 38, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 148;
                    type_description_1 = "oo";
                    goto try_except_handler_2;
                }

                tmp_called_name_1 = tmp_mvar_value_2;
                CHECK_OBJECT(par_self);
                tmp_args_element_name_3 = par_self;
                CHECK_OBJECT(par_attribute);
                tmp_args_element_name_4 = par_attribute;
                tmp_args_element_name_5 = const_int_0;
                frame_5cf0cbd1aa4d248d6810c0ff068e00bb->m_frame.f_lineno = 148;
                {
                    PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4, tmp_args_element_name_5};
                    tmp_return_value = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
                }

                if (tmp_return_value == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 148;
                    type_description_1 = "oo";
                    goto try_except_handler_2;
                }
                goto try_return_handler_2;
            }
            branch_no_2:;
        }
        tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        if (unlikely(tmp_result == false)) {
            exception_lineno = 150;
        }

        if (exception_tb && exception_tb->tb_frame == &frame_5cf0cbd1aa4d248d6810c0ff068e00bb->m_frame) frame_5cf0cbd1aa4d248d6810c0ff068e00bb->m_frame.f_lineno = exception_tb->tb_lineno;
        type_description_1 = "oo";
        goto try_except_handler_2;
        goto branch_end_1;
        branch_no_1:;
        tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        if (unlikely(tmp_result == false)) {
            exception_lineno = 144;
        }

        if (exception_tb && exception_tb->tb_frame == &frame_5cf0cbd1aa4d248d6810c0ff068e00bb->m_frame) frame_5cf0cbd1aa4d248d6810c0ff068e00bb->m_frame.f_lineno = exception_tb->tb_lineno;
        type_description_1 = "oo";
        goto try_except_handler_2;
        branch_end_1:;
    }
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__);
    return NULL;
    // Return handler code:
    try_return_handler_2:;
    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_1, exception_preserved_value_1, exception_preserved_tb_1);
    goto frame_return_exit_1;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_1, exception_preserved_value_1, exception_preserved_tb_1);
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    // End of try:

#if 0
    RESTORE_FRAME_EXCEPTION(frame_5cf0cbd1aa4d248d6810c0ff068e00bb);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_5cf0cbd1aa4d248d6810c0ff068e00bb);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_5cf0cbd1aa4d248d6810c0ff068e00bb);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_5cf0cbd1aa4d248d6810c0ff068e00bb, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_5cf0cbd1aa4d248d6810c0ff068e00bb->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_5cf0cbd1aa4d248d6810c0ff068e00bb, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_5cf0cbd1aa4d248d6810c0ff068e00bb,
        type_description_1,
        par_self,
        par_attribute
    );


    // Release cached frame.
    if (frame_5cf0cbd1aa4d248d6810c0ff068e00bb == cache_frame_5cf0cbd1aa4d248d6810c0ff068e00bb) {
        Py_DECREF(frame_5cf0cbd1aa4d248d6810c0ff068e00bb);
    }
    cache_frame_5cf0cbd1aa4d248d6810c0ff068e00bb = NULL;

    assertFrameObject(frame_5cf0cbd1aa4d248d6810c0ff068e00bb);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_attribute);
    Py_DECREF(par_attribute);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_attribute);
    Py_DECREF(par_attribute);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_11___getitem__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_idx = python_pars[1];
    struct Nuitka_FrameObject *frame_b29ac8a41d2a0662a5268a5b443ef409;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_b29ac8a41d2a0662a5268a5b443ef409 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_b29ac8a41d2a0662a5268a5b443ef409, codeobj_b29ac8a41d2a0662a5268a5b443ef409, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_b29ac8a41d2a0662a5268a5b443ef409 = cache_frame_b29ac8a41d2a0662a5268a5b443ef409;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_b29ac8a41d2a0662a5268a5b443ef409);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_b29ac8a41d2a0662a5268a5b443ef409) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_source_name_2;
        PyObject *tmp_args_element_name_3;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxySignalWithArguments);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxySignalWithArguments);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1323 ], 46, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 158;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_args_element_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_proxy);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_source_name_2 = par_self;
        tmp_args_element_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_function_name);
        if (tmp_args_element_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_args_element_name_1);

            exception_lineno = 158;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_idx);
        tmp_args_element_name_3 = par_idx;
        frame_b29ac8a41d2a0662a5268a5b443ef409->m_frame.f_lineno = 158;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2, tmp_args_element_name_3};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_2);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b29ac8a41d2a0662a5268a5b443ef409);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_b29ac8a41d2a0662a5268a5b443ef409);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b29ac8a41d2a0662a5268a5b443ef409);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_b29ac8a41d2a0662a5268a5b443ef409, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_b29ac8a41d2a0662a5268a5b443ef409->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_b29ac8a41d2a0662a5268a5b443ef409, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_b29ac8a41d2a0662a5268a5b443ef409,
        type_description_1,
        par_self,
        par_idx
    );


    // Release cached frame.
    if (frame_b29ac8a41d2a0662a5268a5b443ef409 == cache_frame_b29ac8a41d2a0662a5268a5b443ef409) {
        Py_DECREF(frame_b29ac8a41d2a0662a5268a5b443ef409);
    }
    cache_frame_b29ac8a41d2a0662a5268a5b443ef409 = NULL;

    assertFrameObject(frame_b29ac8a41d2a0662a5268a5b443ef409);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_11___getitem__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_idx);
    Py_DECREF(par_idx);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_idx);
    Py_DECREF(par_idx);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_12___init__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_sender = python_pars[1];
    PyObject *par_signal_name = python_pars[2];
    PyObject *par_signal_index = python_pars[3];
    PyObject *outline_0_var_a = NULL;
    PyObject *tmp_listcomp_1__$0 = NULL;
    PyObject *tmp_listcomp_1__contraction = NULL;
    PyObject *tmp_listcomp_1__iter_value_0 = NULL;
    struct Nuitka_FrameObject *frame_16727c081d46cd908ae4808ca94ba3d9;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    struct Nuitka_FrameObject *frame_dda184083fcb57bcf7bb9787b01f5c0e_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    static struct Nuitka_FrameObject *cache_frame_dda184083fcb57bcf7bb9787b01f5c0e_2 = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    static struct Nuitka_FrameObject *cache_frame_16727c081d46cd908ae4808ca94ba3d9 = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_16727c081d46cd908ae4808ca94ba3d9, codeobj_16727c081d46cd908ae4808ca94ba3d9, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_16727c081d46cd908ae4808ca94ba3d9 = cache_frame_16727c081d46cd908ae4808ca94ba3d9;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_16727c081d46cd908ae4808ca94ba3d9);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_16727c081d46cd908ae4808ca94ba3d9) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        CHECK_OBJECT(par_sender);
        tmp_assattr_name_1 = par_sender;
        CHECK_OBJECT(par_self);
        tmp_assattr_target_1 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain__sender, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 166;
            type_description_1 = "oooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        CHECK_OBJECT(par_signal_name);
        tmp_assattr_name_2 = par_signal_name;
        CHECK_OBJECT(par_self);
        tmp_assattr_target_2 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain__signal_name, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 167;
            type_description_1 = "oooo";
            goto frame_exception_exit_1;
        }
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_isinstance_inst_1;
        PyObject *tmp_isinstance_cls_1;
        CHECK_OBJECT(par_signal_index);
        tmp_isinstance_inst_1 = par_signal_index;
        tmp_isinstance_cls_1 = (PyObject *)&PyTuple_Type;
        tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_1, tmp_isinstance_cls_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 171;
            type_description_1 = "oooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_assattr_name_3;
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_1;
            PyObject *tmp_args_element_name_1;
            PyObject *tmp_assattr_target_3;
            tmp_source_name_1 = const_str_chr_44;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_join);
            assert(!(tmp_called_name_1 == NULL));
            // Tried code:
            {
                PyObject *tmp_assign_source_1;
                PyObject *tmp_iter_arg_1;
                CHECK_OBJECT(par_signal_index);
                tmp_iter_arg_1 = par_signal_index;
                tmp_assign_source_1 = MAKE_ITERATOR(tmp_iter_arg_1);
                if (tmp_assign_source_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 172;
                    type_description_1 = "oooo";
                    goto try_except_handler_1;
                }
                assert(tmp_listcomp_1__$0 == NULL);
                tmp_listcomp_1__$0 = tmp_assign_source_1;
            }
            {
                PyObject *tmp_assign_source_2;
                tmp_assign_source_2 = PyList_New(0);
                assert(tmp_listcomp_1__contraction == NULL);
                tmp_listcomp_1__contraction = tmp_assign_source_2;
            }
            MAKE_OR_REUSE_FRAME(cache_frame_dda184083fcb57bcf7bb9787b01f5c0e_2, codeobj_dda184083fcb57bcf7bb9787b01f5c0e, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
            frame_dda184083fcb57bcf7bb9787b01f5c0e_2 = cache_frame_dda184083fcb57bcf7bb9787b01f5c0e_2;

            // Push the new frame as the currently active one.
            pushFrameStack(frame_dda184083fcb57bcf7bb9787b01f5c0e_2);

            // Mark the frame object as in use, ref count 1 will be up for reuse.
            assert(Py_REFCNT(frame_dda184083fcb57bcf7bb9787b01f5c0e_2) == 2); // Frame stack

            // Framed code:
            // Tried code:
            loop_start_1:;
            {
                PyObject *tmp_next_source_1;
                PyObject *tmp_assign_source_3;
                CHECK_OBJECT(tmp_listcomp_1__$0);
                tmp_next_source_1 = tmp_listcomp_1__$0;
                tmp_assign_source_3 = ITERATOR_NEXT(tmp_next_source_1);
                if (tmp_assign_source_3 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_1;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_2 = "o";
                        exception_lineno = 172;
                        goto try_except_handler_2;
                    }
                }

                {
                    PyObject *old = tmp_listcomp_1__iter_value_0;
                    tmp_listcomp_1__iter_value_0 = tmp_assign_source_3;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_4;
                CHECK_OBJECT(tmp_listcomp_1__iter_value_0);
                tmp_assign_source_4 = tmp_listcomp_1__iter_value_0;
                {
                    PyObject *old = outline_0_var_a;
                    outline_0_var_a = tmp_assign_source_4;
                    Py_INCREF(outline_0_var_a);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_append_list_1;
                PyObject *tmp_append_value_1;
                PyObject *tmp_left_name_1;
                PyObject *tmp_right_name_1;
                CHECK_OBJECT(tmp_listcomp_1__contraction);
                tmp_append_list_1 = tmp_listcomp_1__contraction;
                tmp_left_name_1 = const_str_digest_48fa30560f2d0e47e015a9aae37c3092;
                CHECK_OBJECT(outline_0_var_a);
                tmp_right_name_1 = outline_0_var_a;
                tmp_append_value_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
                if (tmp_append_value_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 172;
                    type_description_2 = "o";
                    goto try_except_handler_2;
                }
                assert(PyList_Check(tmp_append_list_1));
                tmp_res = PyList_Append(tmp_append_list_1, tmp_append_value_1);
                Py_DECREF(tmp_append_value_1);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 172;
                    type_description_2 = "o";
                    goto try_except_handler_2;
                }
            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 172;
                type_description_2 = "o";
                goto try_except_handler_2;
            }
            goto loop_start_1;
            loop_end_1:;
            CHECK_OBJECT(tmp_listcomp_1__contraction);
            tmp_args_element_name_1 = tmp_listcomp_1__contraction;
            Py_INCREF(tmp_args_element_name_1);
            goto try_return_handler_2;
            // tried codes exits in all cases
            NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_12___init__);
            return NULL;
            // Return handler code:
            try_return_handler_2:;
            CHECK_OBJECT((PyObject *)tmp_listcomp_1__$0);
            Py_DECREF(tmp_listcomp_1__$0);
            tmp_listcomp_1__$0 = NULL;

            CHECK_OBJECT((PyObject *)tmp_listcomp_1__contraction);
            Py_DECREF(tmp_listcomp_1__contraction);
            tmp_listcomp_1__contraction = NULL;

            Py_XDECREF(tmp_listcomp_1__iter_value_0);
            tmp_listcomp_1__iter_value_0 = NULL;

            goto frame_return_exit_1;
            // Exception handler code:
            try_except_handler_2:;
            exception_keeper_type_1 = exception_type;
            exception_keeper_value_1 = exception_value;
            exception_keeper_tb_1 = exception_tb;
            exception_keeper_lineno_1 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            CHECK_OBJECT((PyObject *)tmp_listcomp_1__$0);
            Py_DECREF(tmp_listcomp_1__$0);
            tmp_listcomp_1__$0 = NULL;

            CHECK_OBJECT((PyObject *)tmp_listcomp_1__contraction);
            Py_DECREF(tmp_listcomp_1__contraction);
            tmp_listcomp_1__contraction = NULL;

            Py_XDECREF(tmp_listcomp_1__iter_value_0);
            tmp_listcomp_1__iter_value_0 = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_1;
            exception_value = exception_keeper_value_1;
            exception_tb = exception_keeper_tb_1;
            exception_lineno = exception_keeper_lineno_1;

            goto frame_exception_exit_2;
            // End of try:

#if 0
            RESTORE_FRAME_EXCEPTION(frame_dda184083fcb57bcf7bb9787b01f5c0e_2);
#endif

            // Put the previous frame back on top.
            popFrameStack();

            goto frame_no_exception_1;

            frame_return_exit_1:;
#if 0
            RESTORE_FRAME_EXCEPTION(frame_dda184083fcb57bcf7bb9787b01f5c0e_2);
#endif

            // Put the previous frame back on top.
            popFrameStack();

            goto try_return_handler_1;

            frame_exception_exit_2:;

#if 0
            RESTORE_FRAME_EXCEPTION(frame_dda184083fcb57bcf7bb9787b01f5c0e_2);
#endif

            if (exception_tb == NULL) {
                exception_tb = MAKE_TRACEBACK(frame_dda184083fcb57bcf7bb9787b01f5c0e_2, exception_lineno);
            }
            else if (exception_tb->tb_frame != &frame_dda184083fcb57bcf7bb9787b01f5c0e_2->m_frame) {
                exception_tb = ADD_TRACEBACK(exception_tb, frame_dda184083fcb57bcf7bb9787b01f5c0e_2, exception_lineno);
            }

            // Attachs locals to frame if any.
            Nuitka_Frame_AttachLocals(
                (struct Nuitka_FrameObject *)frame_dda184083fcb57bcf7bb9787b01f5c0e_2,
                type_description_2,
                outline_0_var_a
            );


            // Release cached frame.
            if (frame_dda184083fcb57bcf7bb9787b01f5c0e_2 == cache_frame_dda184083fcb57bcf7bb9787b01f5c0e_2) {
                Py_DECREF(frame_dda184083fcb57bcf7bb9787b01f5c0e_2);
            }
            cache_frame_dda184083fcb57bcf7bb9787b01f5c0e_2 = NULL;

            assertFrameObject(frame_dda184083fcb57bcf7bb9787b01f5c0e_2);

            // Put the previous frame back on top.
            popFrameStack();

            // Return the error.
            goto nested_frame_exit_1;

            frame_no_exception_1:;
            goto skip_nested_handling_1;
            nested_frame_exit_1:;
            type_description_1 = "oooo";
            goto try_except_handler_1;
            skip_nested_handling_1:;
            // tried codes exits in all cases
            NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_12___init__);
            return NULL;
            // Return handler code:
            try_return_handler_1:;
            Py_XDECREF(outline_0_var_a);
            outline_0_var_a = NULL;

            goto outline_result_1;
            // Exception handler code:
            try_except_handler_1:;
            exception_keeper_type_2 = exception_type;
            exception_keeper_value_2 = exception_value;
            exception_keeper_tb_2 = exception_tb;
            exception_keeper_lineno_2 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(outline_0_var_a);
            outline_0_var_a = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_2;
            exception_value = exception_keeper_value_2;
            exception_tb = exception_keeper_tb_2;
            exception_lineno = exception_keeper_lineno_2;

            goto outline_exception_1;
            // End of try:
            // Return statement must have exited already.
            NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_12___init__);
            return NULL;
            outline_exception_1:;
            exception_lineno = 172;
            goto frame_exception_exit_1;
            outline_result_1:;
            frame_16727c081d46cd908ae4808ca94ba3d9->m_frame.f_lineno = 172;
            tmp_assattr_name_3 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_element_name_1);
            if (tmp_assattr_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 172;
                type_description_1 = "oooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(par_self);
            tmp_assattr_target_3 = par_self;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain__signal_index, tmp_assattr_name_3);
            Py_DECREF(tmp_assattr_name_3);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 172;
                type_description_1 = "oooo";
                goto frame_exception_exit_1;
            }
        }
        goto branch_end_1;
        branch_no_1:;
        {
            PyObject *tmp_assattr_name_4;
            PyObject *tmp_left_name_2;
            PyObject *tmp_right_name_2;
            PyObject *tmp_assattr_target_4;
            tmp_left_name_2 = const_str_digest_48fa30560f2d0e47e015a9aae37c3092;
            CHECK_OBJECT(par_signal_index);
            tmp_right_name_2 = par_signal_index;
            tmp_assattr_name_4 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_2, tmp_right_name_2);
            if (tmp_assattr_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 174;
                type_description_1 = "oooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(par_self);
            tmp_assattr_target_4 = par_self;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain__signal_index, tmp_assattr_name_4);
            Py_DECREF(tmp_assattr_name_4);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 174;
                type_description_1 = "oooo";
                goto frame_exception_exit_1;
            }
        }
        branch_end_1:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_16727c081d46cd908ae4808ca94ba3d9);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_2;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_16727c081d46cd908ae4808ca94ba3d9);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_16727c081d46cd908ae4808ca94ba3d9, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_16727c081d46cd908ae4808ca94ba3d9->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_16727c081d46cd908ae4808ca94ba3d9, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_16727c081d46cd908ae4808ca94ba3d9,
        type_description_1,
        par_self,
        par_sender,
        par_signal_name,
        par_signal_index
    );


    // Release cached frame.
    if (frame_16727c081d46cd908ae4808ca94ba3d9 == cache_frame_16727c081d46cd908ae4808ca94ba3d9) {
        Py_DECREF(frame_16727c081d46cd908ae4808ca94ba3d9);
    }
    cache_frame_16727c081d46cd908ae4808ca94ba3d9 = NULL;

    assertFrameObject(frame_16727c081d46cd908ae4808ca94ba3d9);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_2:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_12___init__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_sender);
    Py_DECREF(par_sender);
    CHECK_OBJECT(par_signal_name);
    Py_DECREF(par_signal_name);
    CHECK_OBJECT(par_signal_index);
    Py_DECREF(par_signal_index);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_sender);
    Py_DECREF(par_sender);
    CHECK_OBJECT(par_signal_name);
    Py_DECREF(par_signal_name);
    CHECK_OBJECT(par_signal_index);
    Py_DECREF(par_signal_index);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_13_connect(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_slot = python_pars[1];
    struct Nuitka_FrameObject *frame_a7e3bf7055b60b672017b8e1ca05ec40;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_a7e3bf7055b60b672017b8e1ca05ec40 = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_a7e3bf7055b60b672017b8e1ca05ec40, codeobj_a7e3bf7055b60b672017b8e1ca05ec40, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_a7e3bf7055b60b672017b8e1ca05ec40 = cache_frame_a7e3bf7055b60b672017b8e1ca05ec40;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_a7e3bf7055b60b672017b8e1ca05ec40);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_a7e3bf7055b60b672017b8e1ca05ec40) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_source_name_2;
        PyObject *tmp_source_name_3;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_write_code);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_write_code);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 351 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 177;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_b0b78118bef5bba7ee774949183b592c;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain__sender);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 177;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = PyTuple_New(4);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
        CHECK_OBJECT(par_self);
        tmp_source_name_2 = par_self;
        tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain__signal_name);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 177;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
        CHECK_OBJECT(par_self);
        tmp_source_name_3 = par_self;
        tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain__signal_index);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 177;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 2, tmp_tuple_element_1);
        CHECK_OBJECT(par_slot);
        tmp_tuple_element_1 = par_slot;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 3, tmp_tuple_element_1);
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 177;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_a7e3bf7055b60b672017b8e1ca05ec40->m_frame.f_lineno = 177;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 177;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_a7e3bf7055b60b672017b8e1ca05ec40);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_a7e3bf7055b60b672017b8e1ca05ec40);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_a7e3bf7055b60b672017b8e1ca05ec40, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_a7e3bf7055b60b672017b8e1ca05ec40->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_a7e3bf7055b60b672017b8e1ca05ec40, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_a7e3bf7055b60b672017b8e1ca05ec40,
        type_description_1,
        par_self,
        par_slot
    );


    // Release cached frame.
    if (frame_a7e3bf7055b60b672017b8e1ca05ec40 == cache_frame_a7e3bf7055b60b672017b8e1ca05ec40) {
        Py_DECREF(frame_a7e3bf7055b60b672017b8e1ca05ec40);
    }
    cache_frame_a7e3bf7055b60b672017b8e1ca05ec40 = NULL;

    assertFrameObject(frame_a7e3bf7055b60b672017b8e1ca05ec40);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_13_connect);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_slot);
    Py_DECREF(par_slot);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_slot);
    Py_DECREF(par_slot);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_14___init__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_objectname = python_pars[1];
    PyObject *par_is_attribute = python_pars[2];
    PyObject *par_args = python_pars[3];
    PyObject *par_noInstantiation = python_pars[4];
    PyObject *var_funcall = NULL;
    struct Nuitka_FrameObject *frame_51852662c8e30fa9b766d24c14cb86b7;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    bool tmp_result;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_51852662c8e30fa9b766d24c14cb86b7 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_51852662c8e30fa9b766d24c14cb86b7, codeobj_51852662c8e30fa9b766d24c14cb86b7, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_51852662c8e30fa9b766d24c14cb86b7 = cache_frame_51852662c8e30fa9b766d24c14cb86b7;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_51852662c8e30fa9b766d24c14cb86b7);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_51852662c8e30fa9b766d24c14cb86b7) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(par_objectname);
        tmp_truth_name_1 = CHECK_IF_TRUE(par_objectname);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 184;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            nuitka_bool tmp_condition_result_2;
            int tmp_truth_name_2;
            CHECK_OBJECT(par_is_attribute);
            tmp_truth_name_2 = CHECK_IF_TRUE(par_is_attribute);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 185;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_2 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                PyObject *tmp_assign_source_1;
                PyObject *tmp_left_name_1;
                PyObject *tmp_right_name_1;
                tmp_left_name_1 = const_str_digest_af7b3aa56d6be0c87c778461ec791222;
                CHECK_OBJECT(par_objectname);
                tmp_right_name_1 = par_objectname;
                tmp_assign_source_1 = BINARY_OPERATION_ADD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
                if (tmp_assign_source_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 186;
                    type_description_1 = "oooooo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = par_objectname;
                    assert(old != NULL);
                    par_objectname = tmp_assign_source_1;
                    Py_DECREF(old);
                }

            }
            branch_no_2:;
        }
        {
            PyObject *tmp_assattr_name_1;
            PyObject *tmp_assattr_target_1;
            CHECK_OBJECT(par_objectname);
            tmp_assattr_name_1 = par_objectname;
            CHECK_OBJECT(par_self);
            tmp_assattr_target_1 = par_self;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain__uic_name, tmp_assattr_name_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 188;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
        }
        goto branch_end_1;
        branch_no_1:;
        {
            PyObject *tmp_assattr_name_2;
            PyObject *tmp_assattr_target_2;
            tmp_assattr_name_2 = const_str_plain_Unnamed;
            CHECK_OBJECT(par_self);
            tmp_assattr_target_2 = par_self;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain__uic_name, tmp_assattr_name_2);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 190;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
        }
        branch_end_1:;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_operand_name_1;
        CHECK_OBJECT(par_noInstantiation);
        tmp_operand_name_1 = par_noInstantiation;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 192;
            type_description_1 = "oooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_3 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_assign_source_2;
            PyObject *tmp_left_name_2;
            PyObject *tmp_right_name_2;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_called_name_1;
            PyObject *tmp_mvar_value_1;
            PyObject *tmp_args_element_name_1;
            PyObject *tmp_source_name_1;
            PyObject *tmp_args_element_name_2;
            PyObject *tmp_source_name_2;
            PyObject *tmp_source_name_3;
            PyObject *tmp_called_name_2;
            PyObject *tmp_source_name_4;
            PyObject *tmp_args_element_name_3;
            PyObject *tmp_called_name_3;
            PyObject *tmp_args_element_name_4;
            PyObject *tmp_args_element_name_5;
            tmp_left_name_2 = const_str_digest_a7636f57d1f8f80548278378b7bf84e2;
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_moduleMember);

            if (unlikely(tmp_mvar_value_1 == NULL)) {
                tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_moduleMember);
            }

            if (tmp_mvar_value_1 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 593 ], 34, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 194;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_name_1 = tmp_mvar_value_1;
            CHECK_OBJECT(par_self);
            tmp_source_name_1 = par_self;
            tmp_args_element_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_module);
            if (tmp_args_element_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 194;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(par_self);
            tmp_source_name_3 = par_self;
            tmp_source_name_2 = LOOKUP_ATTRIBUTE_CLASS_SLOT(tmp_source_name_3);
            if (tmp_source_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_args_element_name_1);

                exception_lineno = 194;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            tmp_args_element_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain___name__);
            Py_DECREF(tmp_source_name_2);
            if (tmp_args_element_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_args_element_name_1);

                exception_lineno = 194;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            frame_51852662c8e30fa9b766d24c14cb86b7->m_frame.f_lineno = 194;
            {
                PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
                tmp_tuple_element_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
            }

            Py_DECREF(tmp_args_element_name_1);
            Py_DECREF(tmp_args_element_name_2);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 194;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_2 = PyTuple_New(2);
            PyTuple_SET_ITEM(tmp_right_name_2, 0, tmp_tuple_element_1);
            tmp_source_name_4 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
            tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_join);
            assert(!(tmp_called_name_2 == NULL));
            tmp_called_name_3 = (PyObject *)&PyMap_Type;
            tmp_args_element_name_4 = (PyObject *)&PyUnicode_Type;
            CHECK_OBJECT(par_args);
            tmp_args_element_name_5 = par_args;
            frame_51852662c8e30fa9b766d24c14cb86b7->m_frame.f_lineno = 195;
            {
                PyObject *call_args[] = {tmp_args_element_name_4, tmp_args_element_name_5};
                tmp_args_element_name_3 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_3, call_args);
            }

            if (tmp_args_element_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_2);
                Py_DECREF(tmp_called_name_2);

                exception_lineno = 195;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            frame_51852662c8e30fa9b766d24c14cb86b7->m_frame.f_lineno = 195;
            tmp_tuple_element_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_3);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_args_element_name_3);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_2);

                exception_lineno = 195;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            PyTuple_SET_ITEM(tmp_right_name_2, 1, tmp_tuple_element_1);
            tmp_assign_source_2 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_2, tmp_right_name_2);
            Py_DECREF(tmp_right_name_2);
            if (tmp_assign_source_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 193;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            assert(var_funcall == NULL);
            var_funcall = tmp_assign_source_2;
        }
        {
            nuitka_bool tmp_condition_result_4;
            int tmp_truth_name_3;
            if (par_objectname == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "objectname");
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 197;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }

            tmp_truth_name_3 = CHECK_IF_TRUE(par_objectname);
            if (tmp_truth_name_3 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 197;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_4 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            {
                PyObject *tmp_assign_source_3;
                PyObject *tmp_left_name_3;
                PyObject *tmp_right_name_3;
                PyObject *tmp_tuple_element_2;
                tmp_left_name_3 = const_str_digest_87bbcf474bddfc911d32098375c5db6d;
                if (par_objectname == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "objectname");
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 198;
                    type_description_1 = "oooooo";
                    goto frame_exception_exit_1;
                }

                tmp_tuple_element_2 = par_objectname;
                tmp_right_name_3 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_right_name_3, 0, tmp_tuple_element_2);
                CHECK_OBJECT(var_funcall);
                tmp_tuple_element_2 = var_funcall;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_right_name_3, 1, tmp_tuple_element_2);
                tmp_assign_source_3 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_3, tmp_right_name_3);
                Py_DECREF(tmp_right_name_3);
                if (tmp_assign_source_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 198;
                    type_description_1 = "oooooo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = var_funcall;
                    assert(old != NULL);
                    var_funcall = tmp_assign_source_3;
                    Py_DECREF(old);
                }

            }
            branch_no_4:;
        }
        {
            PyObject *tmp_called_name_4;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_call_result_1;
            PyObject *tmp_args_element_name_6;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_write_code);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_write_code);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 351 ], 32, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 200;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_name_4 = tmp_mvar_value_2;
            CHECK_OBJECT(var_funcall);
            tmp_args_element_name_6 = var_funcall;
            frame_51852662c8e30fa9b766d24c14cb86b7->m_frame.f_lineno = 200;
            tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_6);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 200;
                type_description_1 = "oooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        branch_no_3:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_51852662c8e30fa9b766d24c14cb86b7);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_51852662c8e30fa9b766d24c14cb86b7);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_51852662c8e30fa9b766d24c14cb86b7, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_51852662c8e30fa9b766d24c14cb86b7->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_51852662c8e30fa9b766d24c14cb86b7, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_51852662c8e30fa9b766d24c14cb86b7,
        type_description_1,
        par_self,
        par_objectname,
        par_is_attribute,
        par_args,
        par_noInstantiation,
        var_funcall
    );


    // Release cached frame.
    if (frame_51852662c8e30fa9b766d24c14cb86b7 == cache_frame_51852662c8e30fa9b766d24c14cb86b7) {
        Py_DECREF(frame_51852662c8e30fa9b766d24c14cb86b7);
    }
    cache_frame_51852662c8e30fa9b766d24c14cb86b7 = NULL;

    assertFrameObject(frame_51852662c8e30fa9b766d24c14cb86b7);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_14___init__);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(par_objectname);
    par_objectname = NULL;

    Py_XDECREF(var_funcall);
    var_funcall = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(par_objectname);
    par_objectname = NULL;

    Py_XDECREF(var_funcall);
    var_funcall = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_14___init__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_is_attribute);
    Py_DECREF(par_is_attribute);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_noInstantiation);
    Py_DECREF(par_noInstantiation);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_is_attribute);
    Py_DECREF(par_is_attribute);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_noInstantiation);
    Py_DECREF(par_noInstantiation);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_15___str__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_db0ff685ae3ab0935405198eadd8d276;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_db0ff685ae3ab0935405198eadd8d276 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_db0ff685ae3ab0935405198eadd8d276, codeobj_db0ff685ae3ab0935405198eadd8d276, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_db0ff685ae3ab0935405198eadd8d276 = cache_frame_db0ff685ae3ab0935405198eadd8d276;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_db0ff685ae3ab0935405198eadd8d276);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_db0ff685ae3ab0935405198eadd8d276) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_source_name_1;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_return_value = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain__uic_name);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 203;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_db0ff685ae3ab0935405198eadd8d276);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_db0ff685ae3ab0935405198eadd8d276);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_db0ff685ae3ab0935405198eadd8d276);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_db0ff685ae3ab0935405198eadd8d276, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_db0ff685ae3ab0935405198eadd8d276->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_db0ff685ae3ab0935405198eadd8d276, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_db0ff685ae3ab0935405198eadd8d276,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_db0ff685ae3ab0935405198eadd8d276 == cache_frame_db0ff685ae3ab0935405198eadd8d276) {
        Py_DECREF(frame_db0ff685ae3ab0935405198eadd8d276);
    }
    cache_frame_db0ff685ae3ab0935405198eadd8d276 = NULL;

    assertFrameObject(frame_db0ff685ae3ab0935405198eadd8d276);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_15___str__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_attribute = python_pars[1];
    struct Nuitka_FrameObject *frame_42e31513adb02c535811075ecdb45015;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_preserved_type_1;
    PyObject *exception_preserved_value_1;
    PyTracebackObject *exception_preserved_tb_1;
    int tmp_res;
    bool tmp_result;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    static struct Nuitka_FrameObject *cache_frame_42e31513adb02c535811075ecdb45015 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_42e31513adb02c535811075ecdb45015, codeobj_42e31513adb02c535811075ecdb45015, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_42e31513adb02c535811075ecdb45015 = cache_frame_42e31513adb02c535811075ecdb45015;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_42e31513adb02c535811075ecdb45015);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_42e31513adb02c535811075ecdb45015) == 2); // Frame stack

    // Framed code:
    // Tried code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        tmp_called_instance_1 = (PyObject *)&PyBaseObject_Type;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_1 = par_self;
        CHECK_OBJECT(par_attribute);
        tmp_args_element_name_2 = par_attribute;
        frame_42e31513adb02c535811075ecdb45015->m_frame.f_lineno = 207;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_1, const_str_plain___getattribute__, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 207;
            type_description_1 = "oo";
            goto try_except_handler_1;
        }
        goto frame_return_exit_1;
    }
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__);
    return NULL;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Preserve existing published exception.
    exception_preserved_type_1 = EXC_TYPE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_type_1);
    exception_preserved_value_1 = EXC_VALUE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_value_1);
    exception_preserved_tb_1 = (PyTracebackObject *)EXC_TRACEBACK(PyThreadState_GET());
    Py_XINCREF(exception_preserved_tb_1);

    if (exception_keeper_tb_1 == NULL) {
        exception_keeper_tb_1 = MAKE_TRACEBACK(frame_42e31513adb02c535811075ecdb45015, exception_keeper_lineno_1);
    } else if (exception_keeper_lineno_1 != 0) {
        exception_keeper_tb_1 = ADD_TRACEBACK(exception_keeper_tb_1, frame_42e31513adb02c535811075ecdb45015, exception_keeper_lineno_1);
    }

    NORMALIZE_EXCEPTION(&exception_keeper_type_1, &exception_keeper_value_1, &exception_keeper_tb_1);
    PyException_SetTraceback(exception_keeper_value_1, (PyObject *)exception_keeper_tb_1);
    PUBLISH_EXCEPTION(&exception_keeper_type_1, &exception_keeper_value_1, &exception_keeper_tb_1);
    // Tried code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        tmp_compexpr_left_1 = EXC_TYPE(PyThreadState_GET());
        tmp_compexpr_right_1 = PyExc_AttributeError;
        tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 208;
            type_description_1 = "oo";
            goto try_except_handler_2;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_name_1;
            PyObject *tmp_mvar_value_1;
            PyObject *tmp_args_element_name_3;
            PyObject *tmp_args_element_name_4;
            PyObject *tmp_args_element_name_5;
            PyObject *tmp_source_name_1;
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);

            if (unlikely(tmp_mvar_value_1 == NULL)) {
                tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);
            }

            if (tmp_mvar_value_1 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1285 ], 38, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 209;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }

            tmp_called_name_1 = tmp_mvar_value_1;
            CHECK_OBJECT(par_self);
            tmp_args_element_name_3 = par_self;
            CHECK_OBJECT(par_attribute);
            tmp_args_element_name_4 = par_attribute;
            CHECK_OBJECT(par_self);
            tmp_source_name_1 = par_self;
            tmp_args_element_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_flags);
            if (tmp_args_element_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 209;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            frame_42e31513adb02c535811075ecdb45015->m_frame.f_lineno = 209;
            {
                PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4, tmp_args_element_name_5};
                tmp_return_value = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
            }

            Py_DECREF(tmp_args_element_name_5);
            if (tmp_return_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 209;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            goto try_return_handler_2;
        }
        goto branch_end_1;
        branch_no_1:;
        tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        if (unlikely(tmp_result == false)) {
            exception_lineno = 206;
        }

        if (exception_tb && exception_tb->tb_frame == &frame_42e31513adb02c535811075ecdb45015->m_frame) frame_42e31513adb02c535811075ecdb45015->m_frame.f_lineno = exception_tb->tb_lineno;
        type_description_1 = "oo";
        goto try_except_handler_2;
        branch_end_1:;
    }
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__);
    return NULL;
    // Return handler code:
    try_return_handler_2:;
    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_1, exception_preserved_value_1, exception_preserved_tb_1);
    goto frame_return_exit_1;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_1, exception_preserved_value_1, exception_preserved_tb_1);
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    // End of try:

#if 0
    RESTORE_FRAME_EXCEPTION(frame_42e31513adb02c535811075ecdb45015);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_42e31513adb02c535811075ecdb45015);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_42e31513adb02c535811075ecdb45015);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_42e31513adb02c535811075ecdb45015, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_42e31513adb02c535811075ecdb45015->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_42e31513adb02c535811075ecdb45015, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_42e31513adb02c535811075ecdb45015,
        type_description_1,
        par_self,
        par_attribute
    );


    // Release cached frame.
    if (frame_42e31513adb02c535811075ecdb45015 == cache_frame_42e31513adb02c535811075ecdb45015) {
        Py_DECREF(frame_42e31513adb02c535811075ecdb45015);
    }
    cache_frame_42e31513adb02c535811075ecdb45015 = NULL;

    assertFrameObject(frame_42e31513adb02c535811075ecdb45015);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_attribute);
    Py_DECREF(par_attribute);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_attribute);
    Py_DECREF(par_attribute);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_17___init__(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_args = python_pars[1];
    struct Nuitka_FrameObject *frame_421e8f99e3be9d53de851a4d61e12f7e;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_421e8f99e3be9d53de851a4d61e12f7e = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_421e8f99e3be9d53de851a4d61e12f7e, codeobj_421e8f99e3be9d53de851a4d61e12f7e, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_421e8f99e3be9d53de851a4d61e12f7e = cache_frame_421e8f99e3be9d53de851a4d61e12f7e;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_421e8f99e3be9d53de851a4d61e12f7e);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_421e8f99e3be9d53de851a4d61e12f7e) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_source_name_2;
        PyObject *tmp_source_name_3;
        PyObject *tmp_called_name_2;
        PyObject *tmp_source_name_4;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_called_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_5;
        PyObject *tmp_assattr_target_1;
        tmp_left_name_1 = const_str_digest_a7636f57d1f8f80548278378b7bf84e2;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_moduleMember);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_moduleMember);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 593 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 224;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_args_element_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_module);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 224;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_source_name_3 = par_self;
        tmp_source_name_2 = LOOKUP_ATTRIBUTE_CLASS_SLOT(tmp_source_name_3);
        if (tmp_source_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_args_element_name_1);

            exception_lineno = 224;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain___name__);
        Py_DECREF(tmp_source_name_2);
        if (tmp_args_element_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_args_element_name_1);

            exception_lineno = 224;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_421e8f99e3be9d53de851a4d61e12f7e->m_frame.f_lineno = 224;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_tuple_element_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_2);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 224;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = PyTuple_New(2);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
        tmp_source_name_4 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_join);
        assert(!(tmp_called_name_2 == NULL));
        tmp_called_name_3 = (PyObject *)&PyMap_Type;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_as_string);
        }

        if (tmp_mvar_value_2 == NULL) {
            Py_DECREF(tmp_right_name_1);
            Py_DECREF(tmp_called_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 872 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 225;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_name_4 = tmp_mvar_value_2;
        CHECK_OBJECT(par_args);
        tmp_args_element_name_5 = par_args;
        frame_421e8f99e3be9d53de851a4d61e12f7e->m_frame.f_lineno = 225;
        {
            PyObject *call_args[] = {tmp_args_element_name_4, tmp_args_element_name_5};
            tmp_args_element_name_3 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_3, call_args);
        }

        if (tmp_args_element_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 225;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_421e8f99e3be9d53de851a4d61e12f7e->m_frame.f_lineno = 225;
        tmp_tuple_element_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_3);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_args_element_name_3);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 225;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
        tmp_assattr_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_assattr_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 223;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_assattr_target_1 = par_self;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain__uic_name, tmp_assattr_name_1);
        Py_DECREF(tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 223;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_421e8f99e3be9d53de851a4d61e12f7e);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_421e8f99e3be9d53de851a4d61e12f7e);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_421e8f99e3be9d53de851a4d61e12f7e, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_421e8f99e3be9d53de851a4d61e12f7e->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_421e8f99e3be9d53de851a4d61e12f7e, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_421e8f99e3be9d53de851a4d61e12f7e,
        type_description_1,
        par_self,
        par_args
    );


    // Release cached frame.
    if (frame_421e8f99e3be9d53de851a4d61e12f7e == cache_frame_421e8f99e3be9d53de851a4d61e12f7e) {
        Py_DECREF(frame_421e8f99e3be9d53de851a4d61e12f7e);
    }
    cache_frame_421e8f99e3be9d53de851a4d61e12f7e = NULL;

    assertFrameObject(frame_421e8f99e3be9d53de851a4d61e12f7e);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_17___init__);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_cls = python_pars[0];
    PyObject *par_args = python_pars[1];
    struct Nuitka_FrameObject *frame_543ac5bdd2fcc3bd2c6579e08af759d7;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_543ac5bdd2fcc3bd2c6579e08af759d7 = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_543ac5bdd2fcc3bd2c6579e08af759d7, codeobj_543ac5bdd2fcc3bd2c6579e08af759d7, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_543ac5bdd2fcc3bd2c6579e08af759d7 = cache_frame_543ac5bdd2fcc3bd2c6579e08af759d7;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_543ac5bdd2fcc3bd2c6579e08af759d7);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_543ac5bdd2fcc3bd2c6579e08af759d7) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_dircall_arg1_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_dircall_arg2_1;
        PyObject *tmp_call_result_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1285 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 255;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_cls);
        tmp_args_element_name_1 = par_cls;
        tmp_args_element_name_2 = const_str_plain_connectSlotsByName;
        tmp_args_element_name_3 = const_int_0;
        frame_543ac5bdd2fcc3bd2c6579e08af759d7->m_frame.f_lineno = 255;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2, tmp_args_element_name_3};
            tmp_dircall_arg1_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        if (tmp_dircall_arg1_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 255;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_args);
        tmp_dircall_arg2_1 = par_args;
        Py_INCREF(tmp_dircall_arg2_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1, tmp_dircall_arg2_1};
            tmp_call_result_1 = impl___internal__$$$function_4_complex_call_helper_star_list(dir_call_args);
        }
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 255;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_543ac5bdd2fcc3bd2c6579e08af759d7);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_543ac5bdd2fcc3bd2c6579e08af759d7);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_543ac5bdd2fcc3bd2c6579e08af759d7, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_543ac5bdd2fcc3bd2c6579e08af759d7->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_543ac5bdd2fcc3bd2c6579e08af759d7, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_543ac5bdd2fcc3bd2c6579e08af759d7,
        type_description_1,
        par_cls,
        par_args
    );


    // Release cached frame.
    if (frame_543ac5bdd2fcc3bd2c6579e08af759d7 == cache_frame_543ac5bdd2fcc3bd2c6579e08af759d7) {
        Py_DECREF(frame_543ac5bdd2fcc3bd2c6579e08af759d7);
    }
    cache_frame_543ac5bdd2fcc3bd2c6579e08af759d7 = NULL;

    assertFrameObject(frame_543ac5bdd2fcc3bd2c6579e08af759d7);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_cls);
    Py_DECREF(par_cls);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_cls);
    Py_DECREF(par_cls);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    struct Nuitka_CellObject *par_self = PyCell_NEW1(python_pars[0]);
    PyObject *var__FakeMetaObject = NULL;
    PyObject *outline_0_var___class__ = NULL;
    PyObject *tmp_class_creation_1__bases = NULL;
    PyObject *tmp_class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_class_creation_1__metaclass = NULL;
    PyObject *tmp_class_creation_1__prepared = NULL;
    struct Nuitka_FrameObject *frame_d8929de1e6b326e6eef3a58bc3031e70;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_dictdel_dict;
    PyObject *tmp_dictdel_key;
    bool tmp_result;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261 = NULL;
    PyObject *tmp_dictset_value;
    struct Nuitka_FrameObject *frame_d4fb0a29e397c067d8a0e3c06d49624c_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    static struct Nuitka_FrameObject *cache_frame_d4fb0a29e397c067d8a0e3c06d49624c_2 = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *tmp_return_value = NULL;
    static struct Nuitka_FrameObject *cache_frame_d8929de1e6b326e6eef3a58bc3031e70 = NULL;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_d8929de1e6b326e6eef3a58bc3031e70, codeobj_d8929de1e6b326e6eef3a58bc3031e70, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_d8929de1e6b326e6eef3a58bc3031e70 = cache_frame_d8929de1e6b326e6eef3a58bc3031e70;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_d8929de1e6b326e6eef3a58bc3031e70);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_d8929de1e6b326e6eef3a58bc3031e70) == 2); // Frame stack

    // Framed code:
    // Tried code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_dircall_arg1_1;
        tmp_dircall_arg1_1 = const_tuple_type_object_tuple;
        Py_INCREF(tmp_dircall_arg1_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1};
            tmp_assign_source_1 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        assert(tmp_class_creation_1__bases == NULL);
        tmp_class_creation_1__bases = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = PyDict_New();
        assert(tmp_class_creation_1__class_decl_dict == NULL);
        tmp_class_creation_1__class_decl_dict = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_metaclass_name_1;
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_key_name_1;
        PyObject *tmp_dict_name_1;
        PyObject *tmp_dict_name_2;
        PyObject *tmp_key_name_2;
        nuitka_bool tmp_condition_result_2;
        int tmp_truth_name_1;
        PyObject *tmp_type_arg_1;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_bases_name_1;
        tmp_key_name_1 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_1 = tmp_class_creation_1__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_1, tmp_key_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_1;
        } else {
            goto condexpr_false_1;
        }
        condexpr_true_1:;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_2 = tmp_class_creation_1__class_decl_dict;
        tmp_key_name_2 = const_str_plain_metaclass;
        tmp_metaclass_name_1 = DICT_GET_ITEM(tmp_dict_name_2, tmp_key_name_2);
        if (tmp_metaclass_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        goto condexpr_end_1;
        condexpr_false_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_class_creation_1__bases);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_2;
        } else {
            goto condexpr_false_2;
        }
        condexpr_true_2:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_subscribed_name_1 = tmp_class_creation_1__bases;
        tmp_subscript_name_1 = const_int_0;
        tmp_type_arg_1 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_1, tmp_subscript_name_1, 0);
        if (tmp_type_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        tmp_metaclass_name_1 = BUILTIN_TYPE1(tmp_type_arg_1);
        Py_DECREF(tmp_type_arg_1);
        if (tmp_metaclass_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        goto condexpr_end_2;
        condexpr_false_2:;
        tmp_metaclass_name_1 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_1);
        condexpr_end_2:;
        condexpr_end_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_bases_name_1 = tmp_class_creation_1__bases;
        tmp_assign_source_3 = SELECT_METACLASS(tmp_metaclass_name_1, tmp_bases_name_1);
        Py_DECREF(tmp_metaclass_name_1);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        assert(tmp_class_creation_1__metaclass == NULL);
        tmp_class_creation_1__metaclass = tmp_assign_source_3;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_key_name_3;
        PyObject *tmp_dict_name_3;
        tmp_key_name_3 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_3 = tmp_class_creation_1__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_3, tmp_key_name_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_1__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_2;
        }
        branch_no_1:;
    }
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_source_name_1;
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_source_name_1 = tmp_class_creation_1__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_1, const_str_plain___prepare__);
        tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_assign_source_4;
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_2;
            PyObject *tmp_args_name_1;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_kw_name_1;
            CHECK_OBJECT(tmp_class_creation_1__metaclass);
            tmp_source_name_2 = tmp_class_creation_1__metaclass;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain___prepare__);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "co";
                goto try_except_handler_2;
            }
            tmp_tuple_element_1 = const_str_plain__FakeMetaObject;
            tmp_args_name_1 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_1);
            PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_tuple_element_1 = tmp_class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_1);
            PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
            CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
            tmp_kw_name_1 = tmp_class_creation_1__class_decl_dict;
            frame_d8929de1e6b326e6eef3a58bc3031e70->m_frame.f_lineno = 261;
            tmp_assign_source_4 = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_name_1);
            if (tmp_assign_source_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "co";
                goto try_except_handler_2;
            }
            assert(tmp_class_creation_1__prepared == NULL);
            tmp_class_creation_1__prepared = tmp_assign_source_4;
        }
        {
            nuitka_bool tmp_condition_result_5;
            PyObject *tmp_operand_name_1;
            PyObject *tmp_source_name_3;
            CHECK_OBJECT(tmp_class_creation_1__prepared);
            tmp_source_name_3 = tmp_class_creation_1__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_3, const_str_plain___getitem__);
            tmp_operand_name_1 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "co";
                goto try_except_handler_2;
            }
            tmp_condition_result_5 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                goto branch_yes_3;
            } else {
                goto branch_no_3;
            }
            branch_yes_3:;
            {
                PyObject *tmp_raise_type_1;
                PyObject *tmp_raise_value_1;
                PyObject *tmp_left_name_1;
                PyObject *tmp_right_name_1;
                PyObject *tmp_tuple_element_2;
                PyObject *tmp_getattr_target_1;
                PyObject *tmp_getattr_attr_1;
                PyObject *tmp_getattr_default_1;
                PyObject *tmp_source_name_4;
                PyObject *tmp_type_arg_2;
                tmp_raise_type_1 = PyExc_TypeError;
                tmp_left_name_1 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_1__metaclass);
                tmp_getattr_target_1 = tmp_class_creation_1__metaclass;
                tmp_getattr_attr_1 = const_str_plain___name__;
                tmp_getattr_default_1 = const_str_angle_metaclass;
                tmp_tuple_element_2 = BUILTIN_GETATTR(tmp_getattr_target_1, tmp_getattr_attr_1, tmp_getattr_default_1);
                if (tmp_tuple_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 261;
                    type_description_1 = "co";
                    goto try_except_handler_2;
                }
                tmp_right_name_1 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_2);
                CHECK_OBJECT(tmp_class_creation_1__prepared);
                tmp_type_arg_2 = tmp_class_creation_1__prepared;
                tmp_source_name_4 = BUILTIN_TYPE1(tmp_type_arg_2);
                assert(!(tmp_source_name_4 == NULL));
                tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain___name__);
                Py_DECREF(tmp_source_name_4);
                if (tmp_tuple_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_1);

                    exception_lineno = 261;
                    type_description_1 = "co";
                    goto try_except_handler_2;
                }
                PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_2);
                tmp_raise_value_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
                Py_DECREF(tmp_right_name_1);
                if (tmp_raise_value_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 261;
                    type_description_1 = "co";
                    goto try_except_handler_2;
                }
                exception_type = tmp_raise_type_1;
                Py_INCREF(tmp_raise_type_1);
                exception_value = tmp_raise_value_1;
                exception_lineno = 261;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "co";
                goto try_except_handler_2;
            }
            branch_no_3:;
        }
        goto branch_end_2;
        branch_no_2:;
        {
            PyObject *tmp_assign_source_5;
            tmp_assign_source_5 = PyDict_New();
            assert(tmp_class_creation_1__prepared == NULL);
            tmp_class_creation_1__prepared = tmp_assign_source_5;
        }
        branch_end_2:;
    }
    {
        PyObject *tmp_assign_source_6;
        {
            PyObject *tmp_set_locals_1;
            CHECK_OBJECT(tmp_class_creation_1__prepared);
            tmp_set_locals_1 = tmp_class_creation_1__prepared;
            locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261 = tmp_set_locals_1;
            Py_INCREF(tmp_set_locals_1);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_4;
        }
        tmp_dictset_value = const_str_digest_8528e90b478df957f4b46b88bf029508;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 261;
            type_description_1 = "co";
            goto try_except_handler_4;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_d4fb0a29e397c067d8a0e3c06d49624c_2, codeobj_d4fb0a29e397c067d8a0e3c06d49624c, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_d4fb0a29e397c067d8a0e3c06d49624c_2 = cache_frame_d4fb0a29e397c067d8a0e3c06d49624c_2;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_d4fb0a29e397c067d8a0e3c06d49624c_2);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_d4fb0a29e397c067d8a0e3c06d49624c_2) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject$$$function_1_className();

        ((struct Nuitka_FunctionObject *)tmp_dictset_value)->m_closure[0] = par_self;
        Py_INCREF(((struct Nuitka_FunctionObject *)tmp_dictset_value)->m_closure[0]);


        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261, const_str_plain_className, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 262;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d4fb0a29e397c067d8a0e3c06d49624c_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_1;

        frame_exception_exit_2:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d4fb0a29e397c067d8a0e3c06d49624c_2);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_d4fb0a29e397c067d8a0e3c06d49624c_2, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_d4fb0a29e397c067d8a0e3c06d49624c_2->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_d4fb0a29e397c067d8a0e3c06d49624c_2, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_d4fb0a29e397c067d8a0e3c06d49624c_2,
            type_description_2,
            outline_0_var___class__
        );


        // Release cached frame.
        if (frame_d4fb0a29e397c067d8a0e3c06d49624c_2 == cache_frame_d4fb0a29e397c067d8a0e3c06d49624c_2) {
            Py_DECREF(frame_d4fb0a29e397c067d8a0e3c06d49624c_2);
        }
        cache_frame_d4fb0a29e397c067d8a0e3c06d49624c_2 = NULL;

        assertFrameObject(frame_d4fb0a29e397c067d8a0e3c06d49624c_2);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_1;

        frame_no_exception_1:;
        goto skip_nested_handling_1;
        nested_frame_exit_1:;
        type_description_1 = "co";
        goto try_except_handler_4;
        skip_nested_handling_1:;
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_compexpr_left_1;
            PyObject *tmp_compexpr_right_1;
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_compexpr_left_1 = tmp_class_creation_1__bases;
            tmp_compexpr_right_1 = const_tuple_type_object_tuple;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "co";
                goto try_except_handler_4;
            }
            tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            tmp_dictset_value = const_tuple_type_object_tuple;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "co";
                goto try_except_handler_4;
            }
            branch_no_4:;
        }
        {
            PyObject *tmp_assign_source_7;
            PyObject *tmp_called_name_2;
            PyObject *tmp_args_name_2;
            PyObject *tmp_tuple_element_3;
            PyObject *tmp_kw_name_2;
            CHECK_OBJECT(tmp_class_creation_1__metaclass);
            tmp_called_name_2 = tmp_class_creation_1__metaclass;
            tmp_tuple_element_3 = const_str_plain__FakeMetaObject;
            tmp_args_name_2 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_3);
            PyTuple_SET_ITEM(tmp_args_name_2, 0, tmp_tuple_element_3);
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_tuple_element_3 = tmp_class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_3);
            PyTuple_SET_ITEM(tmp_args_name_2, 1, tmp_tuple_element_3);
            tmp_tuple_element_3 = locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261;
            Py_INCREF(tmp_tuple_element_3);
            PyTuple_SET_ITEM(tmp_args_name_2, 2, tmp_tuple_element_3);
            CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
            tmp_kw_name_2 = tmp_class_creation_1__class_decl_dict;
            frame_d8929de1e6b326e6eef3a58bc3031e70->m_frame.f_lineno = 261;
            tmp_assign_source_7 = CALL_FUNCTION(tmp_called_name_2, tmp_args_name_2, tmp_kw_name_2);
            Py_DECREF(tmp_args_name_2);
            if (tmp_assign_source_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "co";
                goto try_except_handler_4;
            }
            assert(outline_0_var___class__ == NULL);
            outline_0_var___class__ = tmp_assign_source_7;
        }
        CHECK_OBJECT(outline_0_var___class__);
        tmp_assign_source_6 = outline_0_var___class__;
        Py_INCREF(tmp_assign_source_6);
        goto try_return_handler_4;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject);
        return NULL;
        // Return handler code:
        try_return_handler_4:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261);
        locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261 = NULL;
        goto try_return_handler_3;
        // Exception handler code:
        try_except_handler_4:;
        exception_keeper_type_1 = exception_type;
        exception_keeper_value_1 = exception_value;
        exception_keeper_tb_1 = exception_tb;
        exception_keeper_lineno_1 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261);
        locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_1;
        exception_value = exception_keeper_value_1;
        exception_tb = exception_keeper_tb_1;
        exception_lineno = exception_keeper_lineno_1;

        goto try_except_handler_3;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject);
        return NULL;
        // Return handler code:
        try_return_handler_3:;
        CHECK_OBJECT((PyObject *)outline_0_var___class__);
        Py_DECREF(outline_0_var___class__);
        outline_0_var___class__ = NULL;

        goto outline_result_1;
        // Exception handler code:
        try_except_handler_3:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto outline_exception_1;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject);
        return NULL;
        outline_exception_1:;
        exception_lineno = 261;
        goto try_except_handler_2;
        outline_result_1:;
        assert(var__FakeMetaObject == NULL);
        var__FakeMetaObject = tmp_assign_source_6;
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;

    Py_XDECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_1__bases);
    Py_DECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_1__class_decl_dict);
    Py_DECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_1__metaclass);
    Py_DECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_1__prepared);
    Py_DECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;

    {
        PyObject *tmp_called_name_3;
        CHECK_OBJECT(var__FakeMetaObject);
        tmp_called_name_3 = var__FakeMetaObject;
        frame_d8929de1e6b326e6eef3a58bc3031e70->m_frame.f_lineno = 264;
        tmp_return_value = CALL_FUNCTION_NO_ARGS(tmp_called_name_3);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 264;
            type_description_1 = "co";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d8929de1e6b326e6eef3a58bc3031e70);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_2;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_d8929de1e6b326e6eef3a58bc3031e70);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d8929de1e6b326e6eef3a58bc3031e70);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_d8929de1e6b326e6eef3a58bc3031e70, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_d8929de1e6b326e6eef3a58bc3031e70->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_d8929de1e6b326e6eef3a58bc3031e70, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_d8929de1e6b326e6eef3a58bc3031e70,
        type_description_1,
        par_self,
        var__FakeMetaObject
    );


    // Release cached frame.
    if (frame_d8929de1e6b326e6eef3a58bc3031e70 == cache_frame_d8929de1e6b326e6eef3a58bc3031e70) {
        Py_DECREF(frame_d8929de1e6b326e6eef3a58bc3031e70);
    }
    cache_frame_d8929de1e6b326e6eef3a58bc3031e70 = NULL;

    assertFrameObject(frame_d8929de1e6b326e6eef3a58bc3031e70);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_2:;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)par_self);
    Py_DECREF(par_self);
    par_self = NULL;

    CHECK_OBJECT((PyObject *)var__FakeMetaObject);
    Py_DECREF(var__FakeMetaObject);
    var__FakeMetaObject = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT((PyObject *)par_self);
    Py_DECREF(par_self);
    par_self = NULL;

    Py_XDECREF(var__FakeMetaObject);
    var__FakeMetaObject = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject);
    return NULL;

function_exception_exit:
    Py_XDECREF(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    Py_XDECREF(locals_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject_261);


   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject$$$function_1_className(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_args = python_pars[0];
    struct Nuitka_FrameObject *frame_8bde67b85e57206bdc4f729bbc874972;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_8bde67b85e57206bdc4f729bbc874972 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_8bde67b85e57206bdc4f729bbc874972, codeobj_8bde67b85e57206bdc4f729bbc874972, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_8bde67b85e57206bdc4f729bbc874972 = cache_frame_8bde67b85e57206bdc4f729bbc874972;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_8bde67b85e57206bdc4f729bbc874972);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_8bde67b85e57206bdc4f729bbc874972) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_source_name_1;
        PyObject *tmp_source_name_2;
        if (PyCell_GET(self->m_closure[0]) == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "self");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 263;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_source_name_2 = PyCell_GET(self->m_closure[0]);
        tmp_source_name_1 = LOOKUP_ATTRIBUTE_CLASS_SLOT(tmp_source_name_2);
        if (tmp_source_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 263;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_return_value = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain___name__);
        Py_DECREF(tmp_source_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 263;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_8bde67b85e57206bdc4f729bbc874972);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_8bde67b85e57206bdc4f729bbc874972);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_8bde67b85e57206bdc4f729bbc874972);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_8bde67b85e57206bdc4f729bbc874972, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_8bde67b85e57206bdc4f729bbc874972->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_8bde67b85e57206bdc4f729bbc874972, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_8bde67b85e57206bdc4f729bbc874972,
        type_description_1,
        par_args,
        self->m_closure[0]
    );


    // Release cached frame.
    if (frame_8bde67b85e57206bdc4f729bbc874972 == cache_frame_8bde67b85e57206bdc4f729bbc874972) {
        Py_DECREF(frame_8bde67b85e57206bdc4f729bbc874972);
    }
    cache_frame_8bde67b85e57206bdc4f729bbc874972 = NULL;

    assertFrameObject(frame_8bde67b85e57206bdc4f729bbc874972);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject$$$function_1_className);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_20_objectName(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_17dc6318e6443c8eb2d9cc30038b43b2;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_17dc6318e6443c8eb2d9cc30038b43b2 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_17dc6318e6443c8eb2d9cc30038b43b2, codeobj_17dc6318e6443c8eb2d9cc30038b43b2, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_17dc6318e6443c8eb2d9cc30038b43b2 = cache_frame_17dc6318e6443c8eb2d9cc30038b43b2;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_17dc6318e6443c8eb2d9cc30038b43b2);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_17dc6318e6443c8eb2d9cc30038b43b2) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_self);
        tmp_source_name_1 = par_self;
        tmp_called_instance_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain__uic_name);
        if (tmp_called_instance_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 267;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_17dc6318e6443c8eb2d9cc30038b43b2->m_frame.f_lineno = 267;
        tmp_subscribed_name_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_split, &PyTuple_GET_ITEM(const_tuple_str_dot_tuple, 0));

        Py_DECREF(tmp_called_instance_1);
        if (tmp_subscribed_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 267;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_subscript_name_1 = const_int_neg_1;
        tmp_return_value = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_1, tmp_subscript_name_1, -1);
        Py_DECREF(tmp_subscribed_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 267;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_17dc6318e6443c8eb2d9cc30038b43b2);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_17dc6318e6443c8eb2d9cc30038b43b2);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_17dc6318e6443c8eb2d9cc30038b43b2);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_17dc6318e6443c8eb2d9cc30038b43b2, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_17dc6318e6443c8eb2d9cc30038b43b2->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_17dc6318e6443c8eb2d9cc30038b43b2, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_17dc6318e6443c8eb2d9cc30038b43b2,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_17dc6318e6443c8eb2d9cc30038b43b2 == cache_frame_17dc6318e6443c8eb2d9cc30038b43b2) {
        Py_DECREF(frame_17dc6318e6443c8eb2d9cc30038b43b2);
    }
    cache_frame_17dc6318e6443c8eb2d9cc30038b43b2 = NULL;

    assertFrameObject(frame_17dc6318e6443c8eb2d9cc30038b43b2);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_20_objectName);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_21_translate(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_uiname = python_pars[0];
    PyObject *par_text = python_pars[1];
    PyObject *par_disambig = python_pars[2];
    struct Nuitka_FrameObject *frame_37394409c847815e54a9bb366c0a92c8;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_37394409c847815e54a9bb366c0a92c8 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_37394409c847815e54a9bb366c0a92c8, codeobj_37394409c847815e54a9bb366c0a92c8, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_37394409c847815e54a9bb366c0a92c8 = cache_frame_37394409c847815e54a9bb366c0a92c8;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_37394409c847815e54a9bb366c0a92c8);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_37394409c847815e54a9bb366c0a92c8) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_args_element_name_2;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_string);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_string);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1221 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 292;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_text);
        tmp_or_left_value_1 = par_text;
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        tmp_or_right_value_1 = const_str_empty;
        tmp_args_element_name_1 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_args_element_name_1 = tmp_or_left_value_1;
        or_end_1:;
        CHECK_OBJECT(par_disambig);
        tmp_args_element_name_2 = par_disambig;
        frame_37394409c847815e54a9bb366c0a92c8->m_frame.f_lineno = 292;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_37394409c847815e54a9bb366c0a92c8);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_37394409c847815e54a9bb366c0a92c8);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_37394409c847815e54a9bb366c0a92c8);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_37394409c847815e54a9bb366c0a92c8, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_37394409c847815e54a9bb366c0a92c8->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_37394409c847815e54a9bb366c0a92c8, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_37394409c847815e54a9bb366c0a92c8,
        type_description_1,
        par_uiname,
        par_text,
        par_disambig
    );


    // Release cached frame.
    if (frame_37394409c847815e54a9bb366c0a92c8 == cache_frame_37394409c847815e54a9bb366c0a92c8) {
        Py_DECREF(frame_37394409c847815e54a9bb366c0a92c8);
    }
    cache_frame_37394409c847815e54a9bb366c0a92c8 = NULL;

    assertFrameObject(frame_37394409c847815e54a9bb366c0a92c8);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_21_translate);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_uiname);
    Py_DECREF(par_uiname);
    CHECK_OBJECT(par_text);
    Py_DECREF(par_text);
    CHECK_OBJECT(par_disambig);
    Py_DECREF(par_disambig);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_uiname);
    Py_DECREF(par_uiname);
    CHECK_OBJECT(par_text);
    Py_DECREF(par_text);
    CHECK_OBJECT(par_disambig);
    Py_DECREF(par_disambig);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_22_font(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_e3001715ab2dbe2285fc7e39347e8dd4;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_e3001715ab2dbe2285fc7e39347e8dd4 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_e3001715ab2dbe2285fc7e39347e8dd4, codeobj_e3001715ab2dbe2285fc7e39347e8dd4, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_e3001715ab2dbe2285fc7e39347e8dd4 = cache_frame_e3001715ab2dbe2285fc7e39347e8dd4;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_e3001715ab2dbe2285fc7e39347e8dd4);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_e3001715ab2dbe2285fc7e39347e8dd4) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_Literal);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Literal);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 528 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 311;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_12c8e2c774140119b987939492d2b58b;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 311;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_e3001715ab2dbe2285fc7e39347e8dd4->m_frame.f_lineno = 311;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 311;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_e3001715ab2dbe2285fc7e39347e8dd4);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_e3001715ab2dbe2285fc7e39347e8dd4);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_e3001715ab2dbe2285fc7e39347e8dd4);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_e3001715ab2dbe2285fc7e39347e8dd4, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_e3001715ab2dbe2285fc7e39347e8dd4->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_e3001715ab2dbe2285fc7e39347e8dd4, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_e3001715ab2dbe2285fc7e39347e8dd4,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_e3001715ab2dbe2285fc7e39347e8dd4 == cache_frame_e3001715ab2dbe2285fc7e39347e8dd4) {
        Py_DECREF(frame_e3001715ab2dbe2285fc7e39347e8dd4);
    }
    cache_frame_e3001715ab2dbe2285fc7e39347e8dd4 = NULL;

    assertFrameObject(frame_e3001715ab2dbe2285fc7e39347e8dd4);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_22_font);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_23_minimumSizeHint(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_d779fb009bda0a8b0d32c88987e3c826;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_d779fb009bda0a8b0d32c88987e3c826 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_d779fb009bda0a8b0d32c88987e3c826, codeobj_d779fb009bda0a8b0d32c88987e3c826, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_d779fb009bda0a8b0d32c88987e3c826 = cache_frame_d779fb009bda0a8b0d32c88987e3c826;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_d779fb009bda0a8b0d32c88987e3c826);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_d779fb009bda0a8b0d32c88987e3c826) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_Literal);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Literal);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 528 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 314;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_b0c7b94a51c06049f4da6b7e954193ac;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 314;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_d779fb009bda0a8b0d32c88987e3c826->m_frame.f_lineno = 314;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 314;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d779fb009bda0a8b0d32c88987e3c826);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_d779fb009bda0a8b0d32c88987e3c826);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d779fb009bda0a8b0d32c88987e3c826);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_d779fb009bda0a8b0d32c88987e3c826, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_d779fb009bda0a8b0d32c88987e3c826->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_d779fb009bda0a8b0d32c88987e3c826, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_d779fb009bda0a8b0d32c88987e3c826,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_d779fb009bda0a8b0d32c88987e3c826 == cache_frame_d779fb009bda0a8b0d32c88987e3c826) {
        Py_DECREF(frame_d779fb009bda0a8b0d32c88987e3c826);
    }
    cache_frame_d779fb009bda0a8b0d32c88987e3c826 = NULL;

    assertFrameObject(frame_d779fb009bda0a8b0d32c88987e3c826);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_23_minimumSizeHint);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *var_sp = NULL;
    struct Nuitka_FrameObject *frame_e1df4f80e7ef74b03db16c41f11dd040;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_e1df4f80e7ef74b03db16c41f11dd040 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_e1df4f80e7ef74b03db16c41f11dd040, codeobj_e1df4f80e7ef74b03db16c41f11dd040, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_e1df4f80e7ef74b03db16c41f11dd040 = cache_frame_e1df4f80e7ef74b03db16c41f11dd040;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_e1df4f80e7ef74b03db16c41f11dd040);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_e1df4f80e7ef74b03db16c41f11dd040) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_LiteralProxyClass);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_LiteralProxyClass);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1115 ], 39, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 317;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        frame_e1df4f80e7ef74b03db16c41f11dd040->m_frame.f_lineno = 317;
        tmp_assign_source_1 = CALL_FUNCTION_NO_ARGS(tmp_called_name_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 317;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        assert(var_sp == NULL);
        var_sp = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_assattr_target_1;
        tmp_left_name_1 = const_str_digest_aa8af3cff4d74d1fe88937f508d68e63;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_assattr_name_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assattr_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 318;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_sp);
        tmp_assattr_target_1 = var_sp;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain__uic_name, tmp_assattr_name_1);
        Py_DECREF(tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 318;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_e1df4f80e7ef74b03db16c41f11dd040);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_e1df4f80e7ef74b03db16c41f11dd040);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_e1df4f80e7ef74b03db16c41f11dd040, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_e1df4f80e7ef74b03db16c41f11dd040->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_e1df4f80e7ef74b03db16c41f11dd040, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_e1df4f80e7ef74b03db16c41f11dd040,
        type_description_1,
        par_self,
        var_sp
    );


    // Release cached frame.
    if (frame_e1df4f80e7ef74b03db16c41f11dd040 == cache_frame_e1df4f80e7ef74b03db16c41f11dd040) {
        Py_DECREF(frame_e1df4f80e7ef74b03db16c41f11dd040);
    }
    cache_frame_e1df4f80e7ef74b03db16c41f11dd040 = NULL;

    assertFrameObject(frame_e1df4f80e7ef74b03db16c41f11dd040);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    CHECK_OBJECT(var_sp);
    tmp_return_value = var_sp;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_sp);
    Py_DECREF(var_sp);
    var_sp = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_sp);
    var_sp = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_25_menuAction(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_e12096df9e3dd20e891d8af578f99dd3;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_e12096df9e3dd20e891d8af578f99dd3 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_e12096df9e3dd20e891d8af578f99dd3, codeobj_e12096df9e3dd20e891d8af578f99dd3, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_e12096df9e3dd20e891d8af578f99dd3 = cache_frame_e12096df9e3dd20e891d8af578f99dd3;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_e12096df9e3dd20e891d8af578f99dd3);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_e12096df9e3dd20e891d8af578f99dd3) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_Literal);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Literal);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 528 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 336;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_fdfcf59bbdde7a85bbb68ddd5058c46c;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 336;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_e12096df9e3dd20e891d8af578f99dd3->m_frame.f_lineno = 336;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 336;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_e12096df9e3dd20e891d8af578f99dd3);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_e12096df9e3dd20e891d8af578f99dd3);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_e12096df9e3dd20e891d8af578f99dd3);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_e12096df9e3dd20e891d8af578f99dd3, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_e12096df9e3dd20e891d8af578f99dd3->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_e12096df9e3dd20e891d8af578f99dd3, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_e12096df9e3dd20e891d8af578f99dd3,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_e12096df9e3dd20e891d8af578f99dd3 == cache_frame_e12096df9e3dd20e891d8af578f99dd3) {
        Py_DECREF(frame_e12096df9e3dd20e891d8af578f99dd3);
    }
    cache_frame_e12096df9e3dd20e891d8af578f99dd3 = NULL;

    assertFrameObject(frame_e12096df9e3dd20e891d8af578f99dd3);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_25_menuAction);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_26_addTab(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_args = python_pars[1];
    PyObject *var_text = NULL;
    struct Nuitka_FrameObject *frame_33b1cd2af13f98e0f559f37e0f7919cd;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_33b1cd2af13f98e0f559f37e0f7919cd = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_33b1cd2af13f98e0f559f37e0f7919cd, codeobj_33b1cd2af13f98e0f559f37e0f7919cd, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_33b1cd2af13f98e0f559f37e0f7919cd = cache_frame_33b1cd2af13f98e0f559f37e0f7919cd;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_33b1cd2af13f98e0f559f37e0f7919cd);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_33b1cd2af13f98e0f559f37e0f7919cd) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_args);
        tmp_subscribed_name_1 = par_args;
        tmp_subscript_name_1 = const_int_neg_1;
        tmp_assign_source_1 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_1, tmp_subscript_name_1, -1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 340;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        assert(var_text == NULL);
        var_text = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_isinstance_inst_1;
        PyObject *tmp_isinstance_cls_1;
        PyObject *tmp_mvar_value_1;
        CHECK_OBJECT(var_text);
        tmp_isinstance_inst_1 = var_text;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_string);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_string);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1221 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 342;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_isinstance_cls_1 = tmp_mvar_value_1;
        tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_1, tmp_isinstance_cls_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 342;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_name_1;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_call_result_1;
            PyObject *tmp_args_element_name_1;
            PyObject *tmp_left_name_1;
            PyObject *tmp_right_name_1;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_source_name_1;
            PyObject *tmp_source_name_2;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_subscript_name_2;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_print);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_print);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1083 ], 32, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 343;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }

            tmp_called_name_1 = tmp_mvar_value_2;
            tmp_left_name_1 = const_str_digest_2b55a9bec1eca188774820147f7a688f;
            CHECK_OBJECT(par_self);
            tmp_source_name_1 = par_self;
            tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain__uic_name);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 344;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_1 = PyTuple_New(4);
            PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
            CHECK_OBJECT(par_self);
            tmp_source_name_2 = par_self;
            tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain__uic_name);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_1);

                exception_lineno = 344;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
            CHECK_OBJECT(par_args);
            tmp_subscribed_name_2 = par_args;
            tmp_subscript_name_2 = const_int_0;
            tmp_tuple_element_1 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_2, tmp_subscript_name_2, 0);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_1);

                exception_lineno = 344;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            PyTuple_SET_ITEM(tmp_right_name_1, 2, tmp_tuple_element_1);
            CHECK_OBJECT(var_text);
            tmp_tuple_element_1 = var_text;
            Py_INCREF(tmp_tuple_element_1);
            PyTuple_SET_ITEM(tmp_right_name_1, 3, tmp_tuple_element_1);
            tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
            Py_DECREF(tmp_right_name_1);
            if (tmp_args_element_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 343;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            frame_33b1cd2af13f98e0f559f37e0f7919cd->m_frame.f_lineno = 343;
            tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
            Py_DECREF(tmp_args_element_name_1);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 343;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_2;
            PyObject *tmp_left_name_2;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_subscript_name_3;
            PyObject *tmp_right_name_2;
            CHECK_OBJECT(par_args);
            tmp_subscribed_name_3 = par_args;
            tmp_subscript_name_3 = const_slice_none_int_neg_1_none;
            tmp_left_name_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            if (tmp_left_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_2 = const_tuple_str_empty_tuple;
            tmp_assign_source_2 = BINARY_OPERATION_ADD_OBJECT_TUPLE(tmp_left_name_2, tmp_right_name_2);
            Py_DECREF(tmp_left_name_2);
            if (tmp_assign_source_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = par_args;
                assert(old != NULL);
                par_args = tmp_assign_source_2;
                Py_DECREF(old);
            }

        }
        branch_no_1:;
    }
    {
        PyObject *tmp_dircall_arg1_1;
        PyObject *tmp_called_name_2;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_dircall_arg2_1;
        PyObject *tmp_call_result_2;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1285 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 347;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_2 = tmp_mvar_value_3;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_2 = par_self;
        tmp_args_element_name_3 = const_str_plain_addTab;
        tmp_args_element_name_4 = const_int_0;
        frame_33b1cd2af13f98e0f559f37e0f7919cd->m_frame.f_lineno = 347;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_dircall_arg1_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_2, call_args);
        }

        if (tmp_dircall_arg1_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 347;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_args);
        tmp_dircall_arg2_1 = par_args;
        Py_INCREF(tmp_dircall_arg2_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1, tmp_dircall_arg2_1};
            tmp_call_result_2 = impl___internal__$$$function_4_complex_call_helper_star_list(dir_call_args);
        }
        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 347;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_2);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_33b1cd2af13f98e0f559f37e0f7919cd);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_33b1cd2af13f98e0f559f37e0f7919cd);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_33b1cd2af13f98e0f559f37e0f7919cd, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_33b1cd2af13f98e0f559f37e0f7919cd->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_33b1cd2af13f98e0f559f37e0f7919cd, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_33b1cd2af13f98e0f559f37e0f7919cd,
        type_description_1,
        par_self,
        par_args,
        var_text
    );


    // Release cached frame.
    if (frame_33b1cd2af13f98e0f559f37e0f7919cd == cache_frame_33b1cd2af13f98e0f559f37e0f7919cd) {
        Py_DECREF(frame_33b1cd2af13f98e0f559f37e0f7919cd);
    }
    cache_frame_33b1cd2af13f98e0f559f37e0f7919cd = NULL;

    assertFrameObject(frame_33b1cd2af13f98e0f559f37e0f7919cd);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_26_addTab);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)par_args);
    Py_DECREF(par_args);
    par_args = NULL;

    CHECK_OBJECT((PyObject *)var_text);
    Py_DECREF(var_text);
    var_text = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(par_args);
    par_args = NULL;

    Py_XDECREF(var_text);
    var_text = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_26_addTab);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_27_indexOf(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_page = python_pars[1];
    struct Nuitka_FrameObject *frame_70789be152d6d6f7e8e655ad5f96ba2c;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_70789be152d6d6f7e8e655ad5f96ba2c = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_70789be152d6d6f7e8e655ad5f96ba2c, codeobj_70789be152d6d6f7e8e655ad5f96ba2c, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_70789be152d6d6f7e8e655ad5f96ba2c = cache_frame_70789be152d6d6f7e8e655ad5f96ba2c;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_70789be152d6d6f7e8e655ad5f96ba2c);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_70789be152d6d6f7e8e655ad5f96ba2c) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_Literal);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Literal);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 528 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 350;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_04888fc8efd3262f9b19d61edb07222c;
        CHECK_OBJECT(par_self);
        tmp_tuple_element_1 = par_self;
        tmp_right_name_1 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
        CHECK_OBJECT(par_page);
        tmp_tuple_element_1 = par_page;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 350;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_70789be152d6d6f7e8e655ad5f96ba2c->m_frame.f_lineno = 350;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 350;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_70789be152d6d6f7e8e655ad5f96ba2c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_70789be152d6d6f7e8e655ad5f96ba2c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_70789be152d6d6f7e8e655ad5f96ba2c);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_70789be152d6d6f7e8e655ad5f96ba2c, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_70789be152d6d6f7e8e655ad5f96ba2c->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_70789be152d6d6f7e8e655ad5f96ba2c, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_70789be152d6d6f7e8e655ad5f96ba2c,
        type_description_1,
        par_self,
        par_page
    );


    // Release cached frame.
    if (frame_70789be152d6d6f7e8e655ad5f96ba2c == cache_frame_70789be152d6d6f7e8e655ad5f96ba2c) {
        Py_DECREF(frame_70789be152d6d6f7e8e655ad5f96ba2c);
    }
    cache_frame_70789be152d6d6f7e8e655ad5f96ba2c = NULL;

    assertFrameObject(frame_70789be152d6d6f7e8e655ad5f96ba2c);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_27_indexOf);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_page);
    Py_DECREF(par_page);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_page);
    Py_DECREF(par_page);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_28_addItem(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_args = python_pars[1];
    PyObject *var_text = NULL;
    struct Nuitka_FrameObject *frame_37e0a5a3dc9eee21c6b61803ff2f37ad;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_37e0a5a3dc9eee21c6b61803ff2f37ad = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_37e0a5a3dc9eee21c6b61803ff2f37ad, codeobj_37e0a5a3dc9eee21c6b61803ff2f37ad, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_37e0a5a3dc9eee21c6b61803ff2f37ad = cache_frame_37e0a5a3dc9eee21c6b61803ff2f37ad;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_37e0a5a3dc9eee21c6b61803ff2f37ad);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_37e0a5a3dc9eee21c6b61803ff2f37ad) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_args);
        tmp_subscribed_name_1 = par_args;
        tmp_subscript_name_1 = const_int_neg_1;
        tmp_assign_source_1 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_1, tmp_subscript_name_1, -1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 371;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        assert(var_text == NULL);
        var_text = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_isinstance_inst_1;
        PyObject *tmp_isinstance_cls_1;
        PyObject *tmp_mvar_value_1;
        CHECK_OBJECT(var_text);
        tmp_isinstance_inst_1 = var_text;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_string);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_string);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1221 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 373;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_isinstance_cls_1 = tmp_mvar_value_1;
        tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_1, tmp_isinstance_cls_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 373;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_name_1;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_call_result_1;
            PyObject *tmp_args_element_name_1;
            PyObject *tmp_left_name_1;
            PyObject *tmp_right_name_1;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_source_name_1;
            PyObject *tmp_source_name_2;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_subscript_name_2;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_print);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_print);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1083 ], 32, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 374;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }

            tmp_called_name_1 = tmp_mvar_value_2;
            tmp_left_name_1 = const_str_digest_40728691f3b83351d6d26cc774f2202e;
            CHECK_OBJECT(par_self);
            tmp_source_name_1 = par_self;
            tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain__uic_name);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 375;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_1 = PyTuple_New(4);
            PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
            CHECK_OBJECT(par_self);
            tmp_source_name_2 = par_self;
            tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain__uic_name);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_1);

                exception_lineno = 375;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
            CHECK_OBJECT(par_args);
            tmp_subscribed_name_2 = par_args;
            tmp_subscript_name_2 = const_int_0;
            tmp_tuple_element_1 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_2, tmp_subscript_name_2, 0);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_right_name_1);

                exception_lineno = 375;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            PyTuple_SET_ITEM(tmp_right_name_1, 2, tmp_tuple_element_1);
            CHECK_OBJECT(var_text);
            tmp_tuple_element_1 = var_text;
            Py_INCREF(tmp_tuple_element_1);
            PyTuple_SET_ITEM(tmp_right_name_1, 3, tmp_tuple_element_1);
            tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
            Py_DECREF(tmp_right_name_1);
            if (tmp_args_element_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 374;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            frame_37e0a5a3dc9eee21c6b61803ff2f37ad->m_frame.f_lineno = 374;
            tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
            Py_DECREF(tmp_args_element_name_1);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 374;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_2;
            PyObject *tmp_left_name_2;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_subscript_name_3;
            PyObject *tmp_right_name_2;
            CHECK_OBJECT(par_args);
            tmp_subscribed_name_3 = par_args;
            tmp_subscript_name_3 = const_slice_none_int_neg_1_none;
            tmp_left_name_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            if (tmp_left_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 376;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_2 = const_tuple_str_empty_tuple;
            tmp_assign_source_2 = BINARY_OPERATION_ADD_OBJECT_TUPLE(tmp_left_name_2, tmp_right_name_2);
            Py_DECREF(tmp_left_name_2);
            if (tmp_assign_source_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 376;
                type_description_1 = "ooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = par_args;
                assert(old != NULL);
                par_args = tmp_assign_source_2;
                Py_DECREF(old);
            }

        }
        branch_no_1:;
    }
    {
        PyObject *tmp_dircall_arg1_1;
        PyObject *tmp_called_name_2;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_dircall_arg2_1;
        PyObject *tmp_call_result_2;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClassMember);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1285 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 378;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_2 = tmp_mvar_value_3;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_2 = par_self;
        tmp_args_element_name_3 = const_str_plain_addItem;
        tmp_args_element_name_4 = const_int_0;
        frame_37e0a5a3dc9eee21c6b61803ff2f37ad->m_frame.f_lineno = 378;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_dircall_arg1_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_2, call_args);
        }

        if (tmp_dircall_arg1_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 378;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_args);
        tmp_dircall_arg2_1 = par_args;
        Py_INCREF(tmp_dircall_arg2_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1, tmp_dircall_arg2_1};
            tmp_call_result_2 = impl___internal__$$$function_4_complex_call_helper_star_list(dir_call_args);
        }
        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 378;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_2);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_37e0a5a3dc9eee21c6b61803ff2f37ad);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_37e0a5a3dc9eee21c6b61803ff2f37ad);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_37e0a5a3dc9eee21c6b61803ff2f37ad, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_37e0a5a3dc9eee21c6b61803ff2f37ad->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_37e0a5a3dc9eee21c6b61803ff2f37ad, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_37e0a5a3dc9eee21c6b61803ff2f37ad,
        type_description_1,
        par_self,
        par_args,
        var_text
    );


    // Release cached frame.
    if (frame_37e0a5a3dc9eee21c6b61803ff2f37ad == cache_frame_37e0a5a3dc9eee21c6b61803ff2f37ad) {
        Py_DECREF(frame_37e0a5a3dc9eee21c6b61803ff2f37ad);
    }
    cache_frame_37e0a5a3dc9eee21c6b61803ff2f37ad = NULL;

    assertFrameObject(frame_37e0a5a3dc9eee21c6b61803ff2f37ad);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_28_addItem);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)par_args);
    Py_DECREF(par_args);
    par_args = NULL;

    CHECK_OBJECT((PyObject *)var_text);
    Py_DECREF(var_text);
    var_text = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(par_args);
    par_args = NULL;

    Py_XDECREF(var_text);
    var_text = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_28_addItem);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_29_indexOf(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_page = python_pars[1];
    struct Nuitka_FrameObject *frame_d73851f0ad486506911ebd8f09fbffbb;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_d73851f0ad486506911ebd8f09fbffbb = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_d73851f0ad486506911ebd8f09fbffbb, codeobj_d73851f0ad486506911ebd8f09fbffbb, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_d73851f0ad486506911ebd8f09fbffbb = cache_frame_d73851f0ad486506911ebd8f09fbffbb;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_d73851f0ad486506911ebd8f09fbffbb);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_d73851f0ad486506911ebd8f09fbffbb) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_Literal);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Literal);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 528 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 381;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        tmp_left_name_1 = const_str_digest_04888fc8efd3262f9b19d61edb07222c;
        CHECK_OBJECT(par_self);
        tmp_tuple_element_1 = par_self;
        tmp_right_name_1 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_1);
        CHECK_OBJECT(par_page);
        tmp_tuple_element_1 = par_page;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_1);
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 381;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_d73851f0ad486506911ebd8f09fbffbb->m_frame.f_lineno = 381;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 381;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d73851f0ad486506911ebd8f09fbffbb);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_d73851f0ad486506911ebd8f09fbffbb);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d73851f0ad486506911ebd8f09fbffbb);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_d73851f0ad486506911ebd8f09fbffbb, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_d73851f0ad486506911ebd8f09fbffbb->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_d73851f0ad486506911ebd8f09fbffbb, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_d73851f0ad486506911ebd8f09fbffbb,
        type_description_1,
        par_self,
        par_page
    );


    // Release cached frame.
    if (frame_d73851f0ad486506911ebd8f09fbffbb == cache_frame_d73851f0ad486506911ebd8f09fbffbb) {
        Py_DECREF(frame_d73851f0ad486506911ebd8f09fbffbb);
    }
    cache_frame_d73851f0ad486506911ebd8f09fbffbb = NULL;

    assertFrameObject(frame_d73851f0ad486506911ebd8f09fbffbb);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_29_indexOf);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_page);
    Py_DECREF(par_page);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_page);
    Py_DECREF(par_page);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_30_layout(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_6a3c5c32e1ada044f7ef155c0aab46f0;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_6a3c5c32e1ada044f7ef155c0aab46f0 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_6a3c5c32e1ada044f7ef155c0aab46f0, codeobj_6a3c5c32e1ada044f7ef155c0aab46f0, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_6a3c5c32e1ada044f7ef155c0aab46f0 = cache_frame_6a3c5c32e1ada044f7ef155c0aab46f0;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_6a3c5c32e1ada044f7ef155c0aab46f0);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_6a3c5c32e1ada044f7ef155c0aab46f0) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 384;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QLayout);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 384;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_ac8bce036c5564c1bc69505cb512f931;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 384;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_6a3c5c32e1ada044f7ef155c0aab46f0->m_frame.f_lineno = 384;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 384;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_6a3c5c32e1ada044f7ef155c0aab46f0);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_6a3c5c32e1ada044f7ef155c0aab46f0);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_6a3c5c32e1ada044f7ef155c0aab46f0);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_6a3c5c32e1ada044f7ef155c0aab46f0, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_6a3c5c32e1ada044f7ef155c0aab46f0->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_6a3c5c32e1ada044f7ef155c0aab46f0, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_6a3c5c32e1ada044f7ef155c0aab46f0,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_6a3c5c32e1ada044f7ef155c0aab46f0 == cache_frame_6a3c5c32e1ada044f7ef155c0aab46f0) {
        Py_DECREF(frame_6a3c5c32e1ada044f7ef155c0aab46f0);
    }
    cache_frame_6a3c5c32e1ada044f7ef155c0aab46f0 = NULL;

    assertFrameObject(frame_6a3c5c32e1ada044f7ef155c0aab46f0);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_30_layout);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_31_viewport(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_b5f526cb54bc83b207fe897000f91920;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_b5f526cb54bc83b207fe897000f91920 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_b5f526cb54bc83b207fe897000f91920, codeobj_b5f526cb54bc83b207fe897000f91920, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_b5f526cb54bc83b207fe897000f91920 = cache_frame_b5f526cb54bc83b207fe897000f91920;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_b5f526cb54bc83b207fe897000f91920);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_b5f526cb54bc83b207fe897000f91920) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 389;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QWidget);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_90bb03fed547099e44ef288e48076cbc;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 389;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_b5f526cb54bc83b207fe897000f91920->m_frame.f_lineno = 389;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b5f526cb54bc83b207fe897000f91920);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_b5f526cb54bc83b207fe897000f91920);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b5f526cb54bc83b207fe897000f91920);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_b5f526cb54bc83b207fe897000f91920, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_b5f526cb54bc83b207fe897000f91920->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_b5f526cb54bc83b207fe897000f91920, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_b5f526cb54bc83b207fe897000f91920,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_b5f526cb54bc83b207fe897000f91920 == cache_frame_b5f526cb54bc83b207fe897000f91920) {
        Py_DECREF(frame_b5f526cb54bc83b207fe897000f91920);
    }
    cache_frame_b5f526cb54bc83b207fe897000f91920 = NULL;

    assertFrameObject(frame_b5f526cb54bc83b207fe897000f91920);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_31_viewport);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_32_horizontalHeader(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_cfb1bf6cf2db819c698a6437b74a501a;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_cfb1bf6cf2db819c698a6437b74a501a = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_cfb1bf6cf2db819c698a6437b74a501a, codeobj_cfb1bf6cf2db819c698a6437b74a501a, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_cfb1bf6cf2db819c698a6437b74a501a = cache_frame_cfb1bf6cf2db819c698a6437b74a501a;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_cfb1bf6cf2db819c698a6437b74a501a);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_cfb1bf6cf2db819c698a6437b74a501a) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 407;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QHeaderView);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 407;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_5e3f4d6001cc1ce596d7a3a3679b06fb;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 407;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_cfb1bf6cf2db819c698a6437b74a501a->m_frame.f_lineno = 407;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 407;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_cfb1bf6cf2db819c698a6437b74a501a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_cfb1bf6cf2db819c698a6437b74a501a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_cfb1bf6cf2db819c698a6437b74a501a);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_cfb1bf6cf2db819c698a6437b74a501a, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_cfb1bf6cf2db819c698a6437b74a501a->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_cfb1bf6cf2db819c698a6437b74a501a, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_cfb1bf6cf2db819c698a6437b74a501a,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_cfb1bf6cf2db819c698a6437b74a501a == cache_frame_cfb1bf6cf2db819c698a6437b74a501a) {
        Py_DECREF(frame_cfb1bf6cf2db819c698a6437b74a501a);
    }
    cache_frame_cfb1bf6cf2db819c698a6437b74a501a = NULL;

    assertFrameObject(frame_cfb1bf6cf2db819c698a6437b74a501a);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_32_horizontalHeader);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_33_verticalHeader(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_cb827efeb479d5f4af4c344b8ad97317;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_cb827efeb479d5f4af4c344b8ad97317 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_cb827efeb479d5f4af4c344b8ad97317, codeobj_cb827efeb479d5f4af4c344b8ad97317, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_cb827efeb479d5f4af4c344b8ad97317 = cache_frame_cb827efeb479d5f4af4c344b8ad97317;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_cb827efeb479d5f4af4c344b8ad97317);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_cb827efeb479d5f4af4c344b8ad97317) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 411;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QHeaderView);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 411;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_a6072ab0ebdd47933e20afbb074c5a0b;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 411;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_cb827efeb479d5f4af4c344b8ad97317->m_frame.f_lineno = 411;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 411;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_cb827efeb479d5f4af4c344b8ad97317);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_cb827efeb479d5f4af4c344b8ad97317);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_cb827efeb479d5f4af4c344b8ad97317);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_cb827efeb479d5f4af4c344b8ad97317, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_cb827efeb479d5f4af4c344b8ad97317->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_cb827efeb479d5f4af4c344b8ad97317, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_cb827efeb479d5f4af4c344b8ad97317,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_cb827efeb479d5f4af4c344b8ad97317 == cache_frame_cb827efeb479d5f4af4c344b8ad97317) {
        Py_DECREF(frame_cb827efeb479d5f4af4c344b8ad97317);
    }
    cache_frame_cb827efeb479d5f4af4c344b8ad97317 = NULL;

    assertFrameObject(frame_cb827efeb479d5f4af4c344b8ad97317);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_33_verticalHeader);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_34_header(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_b7e51e5cdf11f4f3f202c05817b7ea70;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_b7e51e5cdf11f4f3f202c05817b7ea70 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_b7e51e5cdf11f4f3f202c05817b7ea70, codeobj_b7e51e5cdf11f4f3f202c05817b7ea70, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_b7e51e5cdf11f4f3f202c05817b7ea70 = cache_frame_b7e51e5cdf11f4f3f202c05817b7ea70;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_b7e51e5cdf11f4f3f202c05817b7ea70);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_b7e51e5cdf11f4f3f202c05817b7ea70) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 416;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QHeaderView);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 416;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_65d948469dd02582ee8c9c2a1f0bb263;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 416;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_b7e51e5cdf11f4f3f202c05817b7ea70->m_frame.f_lineno = 416;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 416;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b7e51e5cdf11f4f3f202c05817b7ea70);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_b7e51e5cdf11f4f3f202c05817b7ea70);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b7e51e5cdf11f4f3f202c05817b7ea70);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_b7e51e5cdf11f4f3f202c05817b7ea70, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_b7e51e5cdf11f4f3f202c05817b7ea70->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_b7e51e5cdf11f4f3f202c05817b7ea70, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_b7e51e5cdf11f4f3f202c05817b7ea70,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_b7e51e5cdf11f4f3f202c05817b7ea70 == cache_frame_b7e51e5cdf11f4f3f202c05817b7ea70) {
        Py_DECREF(frame_b7e51e5cdf11f4f3f202c05817b7ea70);
    }
    cache_frame_b7e51e5cdf11f4f3f202c05817b7ea70 = NULL;

    assertFrameObject(frame_b7e51e5cdf11f4f3f202c05817b7ea70);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_34_header);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_35_child(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_index = python_pars[1];
    struct Nuitka_FrameObject *frame_bedb444e02cd7070a29a0979b62186ca;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_bedb444e02cd7070a29a0979b62186ca = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_bedb444e02cd7070a29a0979b62186ca, codeobj_bedb444e02cd7070a29a0979b62186ca, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_bedb444e02cd7070a29a0979b62186ca = cache_frame_bedb444e02cd7070a29a0979b62186ca;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_bedb444e02cd7070a29a0979b62186ca);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_bedb444e02cd7070a29a0979b62186ca) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 437;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QTreeWidgetItem);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 437;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_441f8f9ef47ab1cac2a615ec75deb66f;
        CHECK_OBJECT(par_self);
        tmp_tuple_element_2 = par_self;
        tmp_right_name_1 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_2);
        CHECK_OBJECT(par_index);
        tmp_tuple_element_2 = par_index;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_2);
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 437;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_bedb444e02cd7070a29a0979b62186ca->m_frame.f_lineno = 437;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 437;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bedb444e02cd7070a29a0979b62186ca);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_bedb444e02cd7070a29a0979b62186ca);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bedb444e02cd7070a29a0979b62186ca);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_bedb444e02cd7070a29a0979b62186ca, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_bedb444e02cd7070a29a0979b62186ca->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_bedb444e02cd7070a29a0979b62186ca, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_bedb444e02cd7070a29a0979b62186ca,
        type_description_1,
        par_self,
        par_index
    );


    // Release cached frame.
    if (frame_bedb444e02cd7070a29a0979b62186ca == cache_frame_bedb444e02cd7070a29a0979b62186ca) {
        Py_DECREF(frame_bedb444e02cd7070a29a0979b62186ca);
    }
    cache_frame_bedb444e02cd7070a29a0979b62186ca = NULL;

    assertFrameObject(frame_bedb444e02cd7070a29a0979b62186ca);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_35_child);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_index);
    Py_DECREF(par_index);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_index);
    Py_DECREF(par_index);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_36_headerItem(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_FrameObject *frame_4c037b0927f25d3119d3186480846459;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_4c037b0927f25d3119d3186480846459 = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_4c037b0927f25d3119d3186480846459, codeobj_4c037b0927f25d3119d3186480846459, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
    frame_4c037b0927f25d3119d3186480846459 = cache_frame_4c037b0927f25d3119d3186480846459;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_4c037b0927f25d3119d3186480846459);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_4c037b0927f25d3119d3186480846459) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 445;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QWidget);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 445;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_5bbb887d79bb786add01d005507bcb11;
        CHECK_OBJECT(par_self);
        tmp_right_name_1 = par_self;
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 445;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_4c037b0927f25d3119d3186480846459->m_frame.f_lineno = 445;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 445;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c037b0927f25d3119d3186480846459);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c037b0927f25d3119d3186480846459);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c037b0927f25d3119d3186480846459);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_4c037b0927f25d3119d3186480846459, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_4c037b0927f25d3119d3186480846459->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_4c037b0927f25d3119d3186480846459, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_4c037b0927f25d3119d3186480846459,
        type_description_1,
        par_self
    );


    // Release cached frame.
    if (frame_4c037b0927f25d3119d3186480846459 == cache_frame_4c037b0927f25d3119d3186480846459) {
        Py_DECREF(frame_4c037b0927f25d3119d3186480846459);
    }
    cache_frame_4c037b0927f25d3119d3186480846459 = NULL;

    assertFrameObject(frame_4c037b0927f25d3119d3186480846459);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_36_headerItem);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_PyQt5$uic$Compiler$qtproxies$$$function_37_topLevelItem(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_index = python_pars[1];
    struct Nuitka_FrameObject *frame_421edfd039acbe71dbd99f62ae91488a;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_421edfd039acbe71dbd99f62ae91488a = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_421edfd039acbe71dbd99f62ae91488a, codeobj_421edfd039acbe71dbd99f62ae91488a, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *)+sizeof(void *));
    frame_421edfd039acbe71dbd99f62ae91488a = cache_frame_421edfd039acbe71dbd99f62ae91488a;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_421edfd039acbe71dbd99f62ae91488a);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_421edfd039acbe71dbd99f62ae91488a) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtWidgets);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 449;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_QTreeWidgetItem);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 449;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_48985109c9f73ad947465cd6672a0905;
        CHECK_OBJECT(par_self);
        tmp_tuple_element_2 = par_self;
        tmp_right_name_1 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_2);
        CHECK_OBJECT(par_index);
        tmp_tuple_element_2 = par_index;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_2);
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 449;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(3);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = Py_False;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_tuple_empty;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_adbd77622c4af5dbd9dfeebc0a1fc797);
        frame_421edfd039acbe71dbd99f62ae91488a->m_frame.f_lineno = 449;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 449;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_421edfd039acbe71dbd99f62ae91488a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_421edfd039acbe71dbd99f62ae91488a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_421edfd039acbe71dbd99f62ae91488a);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_421edfd039acbe71dbd99f62ae91488a, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_421edfd039acbe71dbd99f62ae91488a->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_421edfd039acbe71dbd99f62ae91488a, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_421edfd039acbe71dbd99f62ae91488a,
        type_description_1,
        par_self,
        par_index
    );


    // Release cached frame.
    if (frame_421edfd039acbe71dbd99f62ae91488a == cache_frame_421edfd039acbe71dbd99f62ae91488a) {
        Py_DECREF(frame_421edfd039acbe71dbd99f62ae91488a);
    }
    cache_frame_421edfd039acbe71dbd99f62ae91488a = NULL;

    assertFrameObject(frame_421edfd039acbe71dbd99f62ae91488a);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies$$$function_37_topLevelItem);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_index);
    Py_DECREF(par_index);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_index);
    Py_DECREF(par_index);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__,
        const_str_plain___getattribute__,
#if PYTHON_VERSION >= 300
        const_str_digest_9bf7aa484cf7493f050ed3db956edfc0,
#endif
        codeobj_5cf0cbd1aa4d248d6810c0ff068e00bb,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        const_str_digest_86d61e4ccbc9938f77b58e3c2477a54c,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_11___getitem__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_11___getitem__,
        const_str_plain___getitem__,
#if PYTHON_VERSION >= 300
        const_str_digest_d975ca18e2481f9808b44d1d6d449ecd,
#endif
        codeobj_b29ac8a41d2a0662a5268a5b443ef409,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        const_str_digest_066f989db0714ae36a3a63dcf2bdf0d6,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_12___init__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_12___init__,
        const_str_plain___init__,
#if PYTHON_VERSION >= 300
        const_str_digest_ed21bf033d5d2fce06622e9e9ba71e5d,
#endif
        codeobj_16727c081d46cd908ae4808ca94ba3d9,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_13_connect() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_13_connect,
        const_str_plain_connect,
#if PYTHON_VERSION >= 300
        const_str_digest_8f6d8431f8330a0e0e88e343619a317c,
#endif
        codeobj_a7e3bf7055b60b672017b8e1ca05ec40,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_14___init__(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_14___init__,
        const_str_plain___init__,
#if PYTHON_VERSION >= 300
        const_str_digest_9999ca3f5f5fa0a4d6b13c08c083ab18,
#endif
        codeobj_51852662c8e30fa9b766d24c14cb86b7,
        defaults,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_15___str__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_15___str__,
        const_str_plain___str__,
#if PYTHON_VERSION >= 300
        const_str_digest_4504b672b8e7c5dc18910102a8c49eef,
#endif
        codeobj_db0ff685ae3ab0935405198eadd8d276,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__,
        const_str_plain___getattribute__,
#if PYTHON_VERSION >= 300
        const_str_digest_aaf09899f7a5a84a2641d71d728efe8b,
#endif
        codeobj_42e31513adb02c535811075ecdb45015,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_17___init__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_17___init__,
        const_str_plain___init__,
#if PYTHON_VERSION >= 300
        const_str_digest_1838c865c30d69b8b3ef38b2992bb4b2,
#endif
        codeobj_421e8f99e3be9d53de851a4d61e12f7e,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName,
        const_str_plain_connectSlotsByName,
#if PYTHON_VERSION >= 300
        const_str_digest_3bade40a56a40f270e6778393ea5b0c5,
#endif
        codeobj_543ac5bdd2fcc3bd2c6579e08af759d7,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject,
        const_str_plain_metaObject,
#if PYTHON_VERSION >= 300
        const_str_digest_5bab086fb5fb64013370541407492e3b,
#endif
        codeobj_d8929de1e6b326e6eef3a58bc3031e70,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject$$$function_1_className() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject$$$function_1_className,
        const_str_plain_className,
#if PYTHON_VERSION >= 300
        const_str_digest_336cc38e97fe56995d82c7f04a555e86,
#endif
        codeobj_8bde67b85e57206bdc4f729bbc874972,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        1
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_1_i18n_print() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_1_i18n_print,
        const_str_plain_i18n_print,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_f17f264110181394d3f8c53d58fe91c4,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_20_objectName() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_20_objectName,
        const_str_plain_objectName,
#if PYTHON_VERSION >= 300
        const_str_digest_4888f35dc9ff812f34c91fd35d4a6cfa,
#endif
        codeobj_17dc6318e6443c8eb2d9cc30038b43b2,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_21_translate() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_21_translate,
        const_str_plain_translate,
#if PYTHON_VERSION >= 300
        const_str_digest_8494214dd9ec3978ab8d32073f1c0c52,
#endif
        codeobj_37394409c847815e54a9bb366c0a92c8,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_22_font() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_22_font,
        const_str_plain_font,
#if PYTHON_VERSION >= 300
        const_str_digest_309dbcb454ca90554e49ef5aeade526c,
#endif
        codeobj_e3001715ab2dbe2285fc7e39347e8dd4,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_23_minimumSizeHint() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_23_minimumSizeHint,
        const_str_plain_minimumSizeHint,
#if PYTHON_VERSION >= 300
        const_str_digest_e484a09bebf1d21b810c6f5c2ebfeba9,
#endif
        codeobj_d779fb009bda0a8b0d32c88987e3c826,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy,
        const_str_plain_sizePolicy,
#if PYTHON_VERSION >= 300
        const_str_digest_391da66d20cdb746387abcfd798d09fe,
#endif
        codeobj_e1df4f80e7ef74b03db16c41f11dd040,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_25_menuAction() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_25_menuAction,
        const_str_plain_menuAction,
#if PYTHON_VERSION >= 300
        const_str_digest_dfa587094f9f9550be0ad9fc7a7cfc84,
#endif
        codeobj_e12096df9e3dd20e891d8af578f99dd3,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_26_addTab() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_26_addTab,
        const_str_plain_addTab,
#if PYTHON_VERSION >= 300
        const_str_digest_013032a9d7e44cb5522c0ff257493afd,
#endif
        codeobj_33b1cd2af13f98e0f559f37e0f7919cd,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_27_indexOf() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_27_indexOf,
        const_str_plain_indexOf,
#if PYTHON_VERSION >= 300
        const_str_digest_d0786a0d0073a9ca345b70a69f90d8b6,
#endif
        codeobj_70789be152d6d6f7e8e655ad5f96ba2c,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_28_addItem() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_28_addItem,
        const_str_plain_addItem,
#if PYTHON_VERSION >= 300
        const_str_digest_3b908098af9cbacf226a468cfb530ee3,
#endif
        codeobj_37e0a5a3dc9eee21c6b61803ff2f37ad,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_29_indexOf() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_29_indexOf,
        const_str_plain_indexOf,
#if PYTHON_VERSION >= 300
        const_str_digest_730e8ad82247f44dfece14b82dacf72e,
#endif
        codeobj_d73851f0ad486506911ebd8f09fbffbb,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func,
        const_str_plain_i18n_void_func,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_4f73d7bd3a53964b384bfa29cf150139,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func$$$function_1__printer() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func$$$function_1__printer,
        const_str_plain__printer,
#if PYTHON_VERSION >= 300
        const_str_digest_06915942a3070c74376c0c83b360cd40,
#endif
        codeobj_69aa1adcb150fd01e858c12e9c0d7280,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        1
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_30_layout() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_30_layout,
        const_str_plain_layout,
#if PYTHON_VERSION >= 300
        const_str_digest_1046321cd1e5c670e97ac2786c6f8eda,
#endif
        codeobj_6a3c5c32e1ada044f7ef155c0aab46f0,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_31_viewport() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_31_viewport,
        const_str_plain_viewport,
#if PYTHON_VERSION >= 300
        const_str_digest_c69b6de7bce089077512e10cfbe1ba3d,
#endif
        codeobj_b5f526cb54bc83b207fe897000f91920,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_32_horizontalHeader() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_32_horizontalHeader,
        const_str_plain_horizontalHeader,
#if PYTHON_VERSION >= 300
        const_str_digest_49d30adacaea2be4fe6e4b50a417b2b9,
#endif
        codeobj_cfb1bf6cf2db819c698a6437b74a501a,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_33_verticalHeader() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_33_verticalHeader,
        const_str_plain_verticalHeader,
#if PYTHON_VERSION >= 300
        const_str_digest_b78ed9489a3c145073b2e9f9a8a9e18d,
#endif
        codeobj_cb827efeb479d5f4af4c344b8ad97317,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_34_header() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_34_header,
        const_str_plain_header,
#if PYTHON_VERSION >= 300
        const_str_digest_48f20dc073d6b0ffa0d0f294dd45a8fb,
#endif
        codeobj_b7e51e5cdf11f4f3f202c05817b7ea70,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_35_child() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_35_child,
        const_str_plain_child,
#if PYTHON_VERSION >= 300
        const_str_digest_2bab02ba220c4880cc88f1e6f24742ba,
#endif
        codeobj_bedb444e02cd7070a29a0979b62186ca,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_36_headerItem() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_36_headerItem,
        const_str_plain_headerItem,
#if PYTHON_VERSION >= 300
        const_str_digest_f97888d25f6ccb9b8ef720f600e420dd,
#endif
        codeobj_4c037b0927f25d3119d3186480846459,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_37_topLevelItem() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_37_topLevelItem,
        const_str_plain_topLevelItem,
#if PYTHON_VERSION >= 300
        const_str_digest_4031e16feef643173885c27df2f4ad97,
#endif
        codeobj_421edfd039acbe71dbd99f62ae91488a,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func,
        const_str_plain_i18n_func,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_3f536d65250de8b954715e28e3e1d6f0,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func$$$function_1__printer() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func$$$function_1__printer,
        const_str_plain__printer,
#if PYTHON_VERSION >= 300
        const_str_digest_d99d22dbfd677af04143c697a4a6cc7d,
#endif
        codeobj_1dee8c3f9184c0a022625429fedfb052,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        1
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr,
        const_str_plain_strict_getattr,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_bb3ea6d1df352ff32b718db12dd43d9e,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_5___init__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_5___init__,
        const_str_plain___init__,
#if PYTHON_VERSION >= 300
        const_str_digest_eaf312e63b45cc80c61e91a9fb9fc662,
#endif
        codeobj_ff9a9d4e96aac6f2e2eb5001d138f8dd,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_6___str__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_6___str__,
        const_str_plain___str__,
#if PYTHON_VERSION >= 300
        const_str_digest_40eec4196f357bab231d01e67583003c,
#endif
        codeobj_469a94b77317568ec1dd93a47a4dbf10,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_7___init__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_7___init__,
        const_str_plain___init__,
#if PYTHON_VERSION >= 300
        const_str_digest_e5577d33a71deda15648281a9c38e536,
#endif
        codeobj_cd993275863b9fcdf2d617df1988feda,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_8___str__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_8___str__,
        const_str_plain___str__,
#if PYTHON_VERSION >= 300
        const_str_digest_3899e3d3c1ec2841852f9b791ab87e70,
#endif
        codeobj_4c7ee7148285a78796ae7a7c87e8ab09,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_9___call__() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_PyQt5$uic$Compiler$qtproxies$$$function_9___call__,
        const_str_plain___call__,
#if PYTHON_VERSION >= 300
        const_str_digest_daa658fb12a7fec518774079fd0df864,
#endif
        codeobj_9ba87b2645640b4295d0601ecddbda10,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        NULL,
        0
    );

    return (PyObject *)result;
}



#if PYTHON_VERSION >= 300
static struct PyModuleDef mdef_PyQt5$uic$Compiler$qtproxies =
{
    PyModuleDef_HEAD_INIT,
    NULL,                /* m_name, filled later */
    NULL,                /* m_doc */
    -1,                  /* m_size */
    NULL,                /* m_methods */
    NULL,                /* m_reload */
    NULL,                /* m_traverse */
    NULL,                /* m_clear */
    NULL,                /* m_free */
  };
#endif

extern PyObject *const_str_plain___compiled__;

extern PyObject *const_str_plain___package__;
extern PyObject *const_str_empty;

#if PYTHON_VERSION >= 300
extern PyObject *const_str_dot;
extern PyObject *const_str_plain___loader__;
#endif

#if PYTHON_VERSION >= 340
extern PyObject *const_str_plain___spec__;
extern PyObject *const_str_plain__initializing;
extern PyObject *const_str_plain_submodule_search_locations;
#endif

extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();
#if PYTHON_VERSION >= 350
extern void _initCompiledCoroutineTypes();
#endif
#if PYTHON_VERSION >= 360
extern void _initCompiledAsyncgenTypes();
#endif

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill

function_impl_code functable_PyQt5$uic$Compiler$qtproxies[] = {
    impl_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func$$$function_1__printer,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func$$$function_1__printer,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject$$$function_1_className,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_1_i18n_print,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_5___init__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_6___str__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_7___init__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_8___str__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_9___call__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_11___getitem__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_12___init__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_13_connect,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_14___init__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_15___str__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_17___init__,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_20_objectName,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_21_translate,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_22_font,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_23_minimumSizeHint,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_25_menuAction,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_26_addTab,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_27_indexOf,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_28_addItem,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_29_indexOf,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_30_layout,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_31_viewport,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_32_horizontalHeader,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_33_verticalHeader,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_34_header,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_35_child,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_36_headerItem,
    impl_PyQt5$uic$Compiler$qtproxies$$$function_37_topLevelItem,
    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        PyErr_Format(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_PyQt5$uic$Compiler$qtproxies;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        PyErr_Format(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = PyTuple_New(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = PyTuple_New(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_PyQt5$uic$Compiler$qtproxies) || offset < 0) {
        PyErr_Format(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODEOBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    // TODO: More stuff needed for Python3, best to re-order arguments of MAKE_CODEOBJECT.
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_PyQt5$uic$Compiler$qtproxies[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_PyQt5$uic$Compiler$qtproxies,
        doc,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_PyQt5$uic$Compiler$qtproxies(char const *module_full_name) {
#if defined(_NUITKA_EXE) || PYTHON_VERSION >= 300
    static bool _init_done = false;

    // Modules might be imported repeatedly, which is to be ignored.
    if (_init_done) {
        return module_PyQt5$uic$Compiler$qtproxies;
    } else {
        _init_done = true;
    }
#endif

#ifdef _NUITKA_MODULE
    // In case of a stand alone extension module, need to call initialization
    // the init here because that's the first and only time we are going to get
    // called here.

    // May have to activate constants blob.
#if defined(_NUITKA_CONSTANTS_FROM_RESOURCE)
    loadConstantsResource();
#endif

    // Initialize the constant values used.
    _initBuiltinModule();
    createGlobalConstants();

    /* Initialize the compiled types of Nuitka. */
    _initCompiledCellType();
    _initCompiledGeneratorType();
    _initCompiledFunctionType();
    _initCompiledMethodType();
    _initCompiledFrameType();
#if PYTHON_VERSION >= 350
    _initCompiledCoroutineTypes();
#endif
#if PYTHON_VERSION >= 360
    _initCompiledAsyncgenTypes();
#endif

#if PYTHON_VERSION < 300
    _initSlotCompare();
#endif
#if PYTHON_VERSION >= 270
    _initSlotIternext();
#endif

    patchBuiltinModule();
    patchTypeComparison();

    // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
    PRINT_STRING("PyQt5.uic.Compiler.qtproxies: Calling setupMetaPathBasedLoader().\n");
#endif
    setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 300
    patchInspectModule();
#endif

#endif

    /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("PyQt5.uic.Compiler.qtproxies: Calling createModuleConstants().\n");
#endif
    createModuleConstants();

    /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("PyQt5.uic.Compiler.qtproxies: Calling createModuleCodeObjects().\n");
#endif
    createModuleCodeObjects();

    // PRINT_STRING("in initPyQt5$uic$Compiler$qtproxies\n");

    // Create the module object first. There are no methods initially, all are
    // added dynamically in actual code only.  Also no "__doc__" is initially
    // set at this time, as it could not contain NUL characters this way, they
    // are instead set in early module code.  No "self" for modules, we have no
    // use for it.
#if PYTHON_VERSION < 300
    module_PyQt5$uic$Compiler$qtproxies = Py_InitModule4(
        module_full_name,        // Module Name
        NULL,                    // No methods initially, all are added
                                 // dynamically in actual module code only.
        NULL,                    // No "__doc__" is initially set, as it could
                                 // not contain NUL this way, added early in
                                 // actual code.
        NULL,                    // No self for modules, we don't use it.
        PYTHON_API_VERSION
    );
#else
    mdef_PyQt5$uic$Compiler$qtproxies.m_name = module_full_name;
    module_PyQt5$uic$Compiler$qtproxies = PyModule_Create(&mdef_PyQt5$uic$Compiler$qtproxies);
#endif

    moduledict_PyQt5$uic$Compiler$qtproxies = MODULE_DICT(module_PyQt5$uic$Compiler$qtproxies);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    {
        PyObject *function_tables = PyObject_GetAttrString((PyObject *)builtin_module, "compiled_function_tables");
        if (function_tables == NULL)
        {
            DROP_ERROR_OCCURRED();
            function_tables = PyDict_New();
        }
        PyObject_SetAttrString((PyObject *)builtin_module, "compiled_function_tables", function_tables);
        PyObject *funcs = PyTuple_New(2);
        PyTuple_SetItem(funcs, 0, PyCFunction_New(&_method_def_reduce_compiled_function, NULL));
        PyTuple_SetItem(funcs, 1, PyCFunction_New(&_method_def_create_compiled_function, NULL));
        PyDict_SetItemString(function_tables, module_full_name, funcs);
    }
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_PyQt5$uic$Compiler$qtproxies,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_PyQt5$uic$Compiler$qtproxies,
            (Nuitka_StringObject *)const_str_plain___package__,
            const_str_empty
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_PyQt5$uic$Compiler$qtproxies,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL)
        {
            UPDATE_STRING_DICT1(
                moduledict_PyQt5$uic$Compiler$qtproxies,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1)
        {
            UPDATE_STRING_DICT1(
                moduledict_PyQt5$uic$Compiler$qtproxies,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_PyQt5$uic$Compiler$qtproxies);

// Seems to work for Python2.7 out of the box, but for Python3, the module
// doesn't automatically enter "sys.modules", so do it manually.
#if PYTHON_VERSION >= 300
    {
        int r = PyDict_SetItemString(PyImport_GetModuleDict(), module_full_name, module_PyQt5$uic$Compiler$qtproxies);
        assert(r != -1);
    }
#endif

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL)
    {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if !defined(_NUITKA_EXE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 300
    UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = PyImport_ImportModule("importlib._bootstrap");
        CHECK_OBJECT(bootstrap_module);
        PyObject *module_spec_class = PyObject_GetAttrString(bootstrap_module, "ModuleSpec");
        Py_DECREF(bootstrap_module);

        PyObject *args[] = {
            GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___name__),
            (PyObject *)&Nuitka_Loader_Type
        };

        PyObject *spec_value = CALL_FUNCTION_WITH_ARGS2(
            module_spec_class,
            args
        );
        Py_DECREF(module_spec_class);

        // We can assume this to never fail, or else we are in trouble anyway.
        CHECK_OBJECT(spec_value);

// For packages set the submodule search locations as well, even if to empty
// list, so investigating code will consider it a package.
#if 0
        SET_ATTRIBUTE(spec_value, const_str_plain_submodule_search_locations, PyList_New(0));
#endif

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    PyObject *outline_0_var___class__ = NULL;
    PyObject *outline_1_var___class__ = NULL;
    PyObject *outline_2_var___class__ = NULL;
    PyObject *outline_3_var___class__ = NULL;
    PyObject *outline_4_var___class__ = NULL;
    PyObject *outline_5_var___class__ = NULL;
    PyObject *outline_6_var___class__ = NULL;
    PyObject *outline_7_var___class__ = NULL;
    PyObject *outline_8_var___class__ = NULL;
    PyObject *outline_9_var___class__ = NULL;
    PyObject *outline_10_var___class__ = NULL;
    PyObject *outline_11_var___class__ = NULL;
    PyObject *outline_12_var___class__ = NULL;
    PyObject *outline_13_var___class__ = NULL;
    PyObject *outline_14_var___class__ = NULL;
    PyObject *outline_15_var___class__ = NULL;
    PyObject *outline_16_var___class__ = NULL;
    PyObject *outline_17_var___class__ = NULL;
    PyObject *outline_18_var___class__ = NULL;
    PyObject *outline_19_var___class__ = NULL;
    PyObject *outline_20_var___class__ = NULL;
    PyObject *outline_21_var___class__ = NULL;
    PyObject *outline_22_var___class__ = NULL;
    PyObject *outline_23_var___class__ = NULL;
    PyObject *outline_24_var___class__ = NULL;
    PyObject *outline_25_var___class__ = NULL;
    PyObject *outline_26_var___class__ = NULL;
    PyObject *outline_27_var___class__ = NULL;
    PyObject *outline_28_var___class__ = NULL;
    PyObject *outline_29_var___class__ = NULL;
    PyObject *outline_30_var___class__ = NULL;
    PyObject *outline_31_var___class__ = NULL;
    PyObject *outline_32_var___class__ = NULL;
    PyObject *outline_33_var___class__ = NULL;
    PyObject *outline_34_var___class__ = NULL;
    PyObject *outline_35_var___class__ = NULL;
    PyObject *outline_36_var___class__ = NULL;
    PyObject *outline_37_var___class__ = NULL;
    PyObject *outline_38_var___class__ = NULL;
    PyObject *outline_39_var___class__ = NULL;
    PyObject *outline_40_var___class__ = NULL;
    PyObject *outline_41_var___class__ = NULL;
    PyObject *outline_42_var___class__ = NULL;
    PyObject *outline_43_var___class__ = NULL;
    PyObject *outline_44_var___class__ = NULL;
    PyObject *outline_45_var___class__ = NULL;
    PyObject *outline_46_var___class__ = NULL;
    PyObject *outline_47_var___class__ = NULL;
    PyObject *outline_48_var___class__ = NULL;
    PyObject *outline_49_var___class__ = NULL;
    PyObject *outline_50_var___class__ = NULL;
    PyObject *outline_51_var___class__ = NULL;
    PyObject *outline_52_var___class__ = NULL;
    PyObject *outline_53_var___class__ = NULL;
    PyObject *outline_54_var___class__ = NULL;
    PyObject *outline_55_var___class__ = NULL;
    PyObject *outline_56_var___class__ = NULL;
    PyObject *outline_57_var___class__ = NULL;
    PyObject *outline_58_var___class__ = NULL;
    PyObject *outline_59_var___class__ = NULL;
    PyObject *outline_60_var___class__ = NULL;
    PyObject *outline_61_var___class__ = NULL;
    PyObject *outline_62_var___class__ = NULL;
    PyObject *outline_63_var___class__ = NULL;
    PyObject *outline_64_var___class__ = NULL;
    PyObject *outline_65_var___class__ = NULL;
    PyObject *outline_66_var___class__ = NULL;
    PyObject *outline_67_var___class__ = NULL;
    PyObject *outline_68_var___class__ = NULL;
    PyObject *outline_69_var___class__ = NULL;
    PyObject *outline_70_var___class__ = NULL;
    PyObject *outline_71_var___class__ = NULL;
    PyObject *outline_72_var___class__ = NULL;
    PyObject *outline_73_var___class__ = NULL;
    PyObject *outline_74_var___class__ = NULL;
    PyObject *outline_75_var___class__ = NULL;
    PyObject *outline_76_var___class__ = NULL;
    PyObject *outline_77_var___class__ = NULL;
    PyObject *outline_78_var___class__ = NULL;
    PyObject *outline_79_var___class__ = NULL;
    PyObject *outline_80_var___class__ = NULL;
    PyObject *outline_81_var___class__ = NULL;
    PyObject *outline_82_var___class__ = NULL;
    PyObject *outline_83_var___class__ = NULL;
    PyObject *outline_84_var___class__ = NULL;
    PyObject *outline_85_var___class__ = NULL;
    PyObject *outline_86_var___class__ = NULL;
    PyObject *tmp_QtCore$class_creation_1__bases = NULL;
    PyObject *tmp_QtCore$class_creation_1__bases_orig = NULL;
    PyObject *tmp_QtCore$class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_QtCore$class_creation_1__metaclass = NULL;
    PyObject *tmp_QtCore$class_creation_1__prepared = NULL;
    PyObject *tmp_QtCore$class_creation_2__bases = NULL;
    PyObject *tmp_QtCore$class_creation_2__bases_orig = NULL;
    PyObject *tmp_QtCore$class_creation_2__class_decl_dict = NULL;
    PyObject *tmp_QtCore$class_creation_2__metaclass = NULL;
    PyObject *tmp_QtCore$class_creation_2__prepared = NULL;
    PyObject *tmp_QtCore$class_creation_3__bases = NULL;
    PyObject *tmp_QtCore$class_creation_3__bases_orig = NULL;
    PyObject *tmp_QtCore$class_creation_3__class_decl_dict = NULL;
    PyObject *tmp_QtCore$class_creation_3__metaclass = NULL;
    PyObject *tmp_QtCore$class_creation_3__prepared = NULL;
    PyObject *tmp_QtGui$QIcon$class_creation_1__bases = NULL;
    PyObject *tmp_QtGui$QIcon$class_creation_1__bases_orig = NULL;
    PyObject *tmp_QtGui$QIcon$class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_QtGui$QIcon$class_creation_1__metaclass = NULL;
    PyObject *tmp_QtGui$QIcon$class_creation_1__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_1__bases = NULL;
    PyObject *tmp_QtGui$class_creation_1__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_1__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_1__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_2__bases = NULL;
    PyObject *tmp_QtGui$class_creation_2__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_2__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_2__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_2__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_3__bases = NULL;
    PyObject *tmp_QtGui$class_creation_3__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_3__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_3__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_3__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_4__bases = NULL;
    PyObject *tmp_QtGui$class_creation_4__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_4__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_4__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_4__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_5__bases = NULL;
    PyObject *tmp_QtGui$class_creation_5__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_5__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_5__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_5__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_6__bases = NULL;
    PyObject *tmp_QtGui$class_creation_6__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_6__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_6__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_6__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_7__bases = NULL;
    PyObject *tmp_QtGui$class_creation_7__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_7__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_7__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_7__prepared = NULL;
    PyObject *tmp_QtGui$class_creation_8__bases = NULL;
    PyObject *tmp_QtGui$class_creation_8__bases_orig = NULL;
    PyObject *tmp_QtGui$class_creation_8__class_decl_dict = NULL;
    PyObject *tmp_QtGui$class_creation_8__metaclass = NULL;
    PyObject *tmp_QtGui$class_creation_8__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_10__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_10__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_10__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_10__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_10__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_11__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_11__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_11__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_11__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_11__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_12__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_12__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_12__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_12__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_12__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_13__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_13__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_13__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_13__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_13__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_14__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_14__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_14__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_14__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_14__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_15__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_15__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_15__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_15__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_15__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_16__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_16__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_16__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_16__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_16__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_17__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_17__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_17__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_17__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_17__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_18__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_18__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_18__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_18__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_18__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_19__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_19__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_19__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_19__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_19__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_1__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_1__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_1__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_1__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_20__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_20__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_20__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_20__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_20__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_21__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_21__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_21__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_21__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_21__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_22__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_22__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_22__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_22__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_22__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_23__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_23__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_23__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_23__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_23__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_24__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_24__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_24__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_24__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_24__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_25__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_25__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_25__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_25__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_25__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_26__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_26__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_26__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_26__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_26__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_27__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_27__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_27__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_27__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_27__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_28__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_28__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_28__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_28__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_28__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_29__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_29__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_29__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_29__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_29__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_2__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_2__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_2__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_2__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_2__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_30__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_30__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_30__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_30__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_30__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_31__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_31__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_31__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_31__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_31__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_32__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_32__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_32__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_32__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_32__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_33__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_33__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_33__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_33__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_33__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_34__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_34__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_34__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_34__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_34__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_35__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_35__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_35__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_35__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_35__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_36__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_36__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_36__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_36__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_36__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_37__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_37__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_37__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_37__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_37__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_38__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_38__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_38__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_38__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_38__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_39__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_39__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_39__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_39__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_39__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_3__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_3__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_3__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_3__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_3__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_40__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_40__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_40__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_40__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_40__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_41__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_41__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_41__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_41__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_41__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_42__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_42__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_42__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_42__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_42__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_43__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_43__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_43__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_43__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_43__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_44__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_44__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_44__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_44__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_44__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_45__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_45__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_45__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_45__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_45__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_46__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_46__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_46__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_46__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_46__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_47__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_47__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_47__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_47__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_47__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_48__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_48__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_48__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_48__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_48__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_49__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_49__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_49__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_49__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_49__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_4__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_4__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_4__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_4__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_4__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_50__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_50__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_50__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_50__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_50__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_51__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_51__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_51__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_51__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_51__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_52__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_52__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_52__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_52__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_52__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_53__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_53__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_53__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_53__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_53__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_54__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_54__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_54__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_54__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_54__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_55__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_55__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_55__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_55__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_55__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_56__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_56__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_56__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_56__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_56__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_57__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_57__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_57__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_57__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_57__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_58__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_58__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_58__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_58__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_58__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_59__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_59__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_59__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_59__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_59__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_5__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_5__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_5__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_5__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_5__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_60__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_60__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_60__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_60__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_60__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_61__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_61__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_61__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_61__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_61__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_62__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_62__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_62__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_62__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_62__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_63__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_63__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_63__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_63__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_63__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_64__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_64__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_64__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_64__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_64__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_65__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_65__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_65__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_65__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_65__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_66__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_66__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_66__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_66__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_66__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_6__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_6__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_6__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_6__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_6__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_7__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_7__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_7__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_7__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_7__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_8__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_8__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_8__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_8__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_8__prepared = NULL;
    PyObject *tmp_QtWidgets$class_creation_9__bases = NULL;
    PyObject *tmp_QtWidgets$class_creation_9__bases_orig = NULL;
    PyObject *tmp_QtWidgets$class_creation_9__class_decl_dict = NULL;
    PyObject *tmp_QtWidgets$class_creation_9__metaclass = NULL;
    PyObject *tmp_QtWidgets$class_creation_9__prepared = NULL;
    PyObject *tmp_QtWidgets$for_loop_1__for_iterator = NULL;
    PyObject *tmp_QtWidgets$for_loop_1__iter_value = NULL;
    PyObject *tmp_class_creation_1__bases = NULL;
    PyObject *tmp_class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_class_creation_1__metaclass = NULL;
    PyObject *tmp_class_creation_1__prepared = NULL;
    PyObject *tmp_class_creation_2__bases = NULL;
    PyObject *tmp_class_creation_2__class_decl_dict = NULL;
    PyObject *tmp_class_creation_2__metaclass = NULL;
    PyObject *tmp_class_creation_2__prepared = NULL;
    PyObject *tmp_class_creation_3__bases = NULL;
    PyObject *tmp_class_creation_3__class_decl_dict = NULL;
    PyObject *tmp_class_creation_3__metaclass = NULL;
    PyObject *tmp_class_creation_3__prepared = NULL;
    PyObject *tmp_class_creation_4__bases = NULL;
    PyObject *tmp_class_creation_4__bases_orig = NULL;
    PyObject *tmp_class_creation_4__class_decl_dict = NULL;
    PyObject *tmp_class_creation_4__metaclass = NULL;
    PyObject *tmp_class_creation_4__prepared = NULL;
    PyObject *tmp_class_creation_5__bases = NULL;
    PyObject *tmp_class_creation_5__bases_orig = NULL;
    PyObject *tmp_class_creation_5__class_decl_dict = NULL;
    PyObject *tmp_class_creation_5__metaclass = NULL;
    PyObject *tmp_class_creation_5__prepared = NULL;
    PyObject *tmp_class_creation_6__bases = NULL;
    PyObject *tmp_class_creation_6__bases_orig = NULL;
    PyObject *tmp_class_creation_6__class_decl_dict = NULL;
    PyObject *tmp_class_creation_6__metaclass = NULL;
    PyObject *tmp_class_creation_6__prepared = NULL;
    PyObject *tmp_class_creation_7__bases = NULL;
    PyObject *tmp_class_creation_7__bases_orig = NULL;
    PyObject *tmp_class_creation_7__class_decl_dict = NULL;
    PyObject *tmp_class_creation_7__metaclass = NULL;
    PyObject *tmp_class_creation_7__prepared = NULL;
    PyObject *tmp_class_creation_8__bases = NULL;
    PyObject *tmp_class_creation_8__bases_orig = NULL;
    PyObject *tmp_class_creation_8__class_decl_dict = NULL;
    PyObject *tmp_class_creation_8__metaclass = NULL;
    PyObject *tmp_class_creation_8__prepared = NULL;
    PyObject *tmp_class_creation_9__bases = NULL;
    PyObject *tmp_class_creation_9__bases_orig = NULL;
    PyObject *tmp_class_creation_9__class_decl_dict = NULL;
    PyObject *tmp_class_creation_9__metaclass = NULL;
    PyObject *tmp_class_creation_9__prepared = NULL;
    PyObject *tmp_import_from_1__module = NULL;
    struct Nuitka_FrameObject *frame_d988ce8ae87f78fb5ef322326ef27f66;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    int tmp_res;
    PyObject *tmp_dictdel_dict;
    PyObject *tmp_dictdel_key;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_81 = NULL;
    PyObject *tmp_dictset_value;
    struct Nuitka_FrameObject *frame_99b368de22d19265612088108949ccef_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    static struct Nuitka_FrameObject *cache_frame_99b368de22d19265612088108949ccef_2 = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_108 = NULL;
    struct Nuitka_FrameObject *frame_fd946e4f778f362b85bee3d204f62634_3;
    NUITKA_MAY_BE_UNUSED char const *type_description_3 = NULL;
    static struct Nuitka_FrameObject *cache_frame_fd946e4f778f362b85bee3d204f62634_3 = NULL;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_161 = NULL;
    struct Nuitka_FrameObject *frame_254425c2a370604fc2bd4045785d9b68_4;
    NUITKA_MAY_BE_UNUSED char const *type_description_4 = NULL;
    static struct Nuitka_FrameObject *cache_frame_254425c2a370604fc2bd4045785d9b68_4 = NULL;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_180 = NULL;
    struct Nuitka_FrameObject *frame_5187a6dce54a4b84b026582d33ef8fb8_5;
    NUITKA_MAY_BE_UNUSED char const *type_description_5 = NULL;
    static struct Nuitka_FrameObject *cache_frame_5187a6dce54a4b84b026582d33ef8fb8_5 = NULL;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;
    PyObject *exception_keeper_type_13;
    PyObject *exception_keeper_value_13;
    PyTracebackObject *exception_keeper_tb_13;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_13;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_212 = NULL;
    struct Nuitka_FrameObject *frame_8af776f3a17238462f66bcf0f452b6c9_6;
    NUITKA_MAY_BE_UNUSED char const *type_description_6 = NULL;
    static struct Nuitka_FrameObject *cache_frame_8af776f3a17238462f66bcf0f452b6c9_6 = NULL;
    PyObject *exception_keeper_type_14;
    PyObject *exception_keeper_value_14;
    PyTracebackObject *exception_keeper_tb_14;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_14;
    PyObject *exception_keeper_type_15;
    PyObject *exception_keeper_value_15;
    PyTracebackObject *exception_keeper_tb_15;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_15;
    PyObject *exception_keeper_type_16;
    PyObject *exception_keeper_value_16;
    PyTracebackObject *exception_keeper_tb_16;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_16;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_228 = NULL;
    PyObject *exception_keeper_type_17;
    PyObject *exception_keeper_value_17;
    PyTracebackObject *exception_keeper_tb_17;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_17;
    PyObject *exception_keeper_type_18;
    PyObject *exception_keeper_value_18;
    PyTracebackObject *exception_keeper_tb_18;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_18;
    PyObject *exception_keeper_type_19;
    PyObject *exception_keeper_value_19;
    PyTracebackObject *exception_keeper_tb_19;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_19;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_245 = NULL;
    struct Nuitka_FrameObject *frame_0ec3e70513a8a2f96719c578db147471_7;
    NUITKA_MAY_BE_UNUSED char const *type_description_7 = NULL;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_246 = NULL;
    PyObject *exception_keeper_type_20;
    PyObject *exception_keeper_value_20;
    PyTracebackObject *exception_keeper_tb_20;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_20;
    PyObject *exception_keeper_type_21;
    PyObject *exception_keeper_value_21;
    PyTracebackObject *exception_keeper_tb_21;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_21;
    PyObject *exception_keeper_type_22;
    PyObject *exception_keeper_value_22;
    PyTracebackObject *exception_keeper_tb_22;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_22;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_252 = NULL;
    struct Nuitka_FrameObject *frame_b45d33ae6b169d8890b4fa59e78d380e_8;
    NUITKA_MAY_BE_UNUSED char const *type_description_8 = NULL;
    static struct Nuitka_FrameObject *cache_frame_b45d33ae6b169d8890b4fa59e78d380e_8 = NULL;
    PyObject *exception_keeper_type_23;
    PyObject *exception_keeper_value_23;
    PyTracebackObject *exception_keeper_tb_23;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_23;
    PyObject *exception_keeper_type_24;
    PyObject *exception_keeper_value_24;
    PyTracebackObject *exception_keeper_tb_24;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_24;
    PyObject *exception_keeper_type_25;
    PyObject *exception_keeper_value_25;
    PyTracebackObject *exception_keeper_tb_25;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_25;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_257 = NULL;
    struct Nuitka_FrameObject *frame_06ad95b98bf6ea4d7da60b866487fc74_9;
    NUITKA_MAY_BE_UNUSED char const *type_description_9 = NULL;
    static struct Nuitka_FrameObject *cache_frame_06ad95b98bf6ea4d7da60b866487fc74_9 = NULL;
    PyObject *exception_keeper_type_26;
    PyObject *exception_keeper_value_26;
    PyTracebackObject *exception_keeper_tb_26;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_26;
    PyObject *exception_keeper_type_27;
    PyObject *exception_keeper_value_27;
    PyTracebackObject *exception_keeper_tb_27;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_27;
    PyObject *exception_keeper_type_28;
    PyObject *exception_keeper_value_28;
    PyTracebackObject *exception_keeper_tb_28;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_28;
    static struct Nuitka_FrameObject *cache_frame_0ec3e70513a8a2f96719c578db147471_7 = NULL;
    PyObject *exception_keeper_type_29;
    PyObject *exception_keeper_value_29;
    PyTracebackObject *exception_keeper_tb_29;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_29;
    PyObject *exception_keeper_type_30;
    PyObject *exception_keeper_value_30;
    PyTracebackObject *exception_keeper_tb_30;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_30;
    PyObject *exception_keeper_type_31;
    PyObject *exception_keeper_value_31;
    PyTracebackObject *exception_keeper_tb_31;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_31;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_270 = NULL;
    struct Nuitka_FrameObject *frame_d77951b0e8e96dc949c573a17a62cabd_10;
    NUITKA_MAY_BE_UNUSED char const *type_description_10 = NULL;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_271 = NULL;
    struct Nuitka_FrameObject *frame_9751a35f21e78be8ee8556a3adf4c17d_11;
    NUITKA_MAY_BE_UNUSED char const *type_description_11 = NULL;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_272 = NULL;
    PyObject *exception_keeper_type_32;
    PyObject *exception_keeper_value_32;
    PyTracebackObject *exception_keeper_tb_32;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_32;
    PyObject *exception_keeper_type_33;
    PyObject *exception_keeper_value_33;
    PyTracebackObject *exception_keeper_tb_33;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_33;
    PyObject *exception_keeper_type_34;
    PyObject *exception_keeper_value_34;
    PyTracebackObject *exception_keeper_tb_34;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_34;
    static struct Nuitka_FrameObject *cache_frame_9751a35f21e78be8ee8556a3adf4c17d_11 = NULL;
    PyObject *exception_keeper_type_35;
    PyObject *exception_keeper_value_35;
    PyTracebackObject *exception_keeper_tb_35;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_35;
    PyObject *exception_keeper_type_36;
    PyObject *exception_keeper_value_36;
    PyTracebackObject *exception_keeper_tb_36;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_36;
    PyObject *exception_keeper_type_37;
    PyObject *exception_keeper_value_37;
    PyTracebackObject *exception_keeper_tb_37;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_37;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_274 = NULL;
    PyObject *exception_keeper_type_38;
    PyObject *exception_keeper_value_38;
    PyTracebackObject *exception_keeper_tb_38;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_38;
    PyObject *exception_keeper_type_39;
    PyObject *exception_keeper_value_39;
    PyTracebackObject *exception_keeper_tb_39;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_39;
    PyObject *exception_keeper_type_40;
    PyObject *exception_keeper_value_40;
    PyTracebackObject *exception_keeper_tb_40;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_40;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_275 = NULL;
    PyObject *exception_keeper_type_41;
    PyObject *exception_keeper_value_41;
    PyTracebackObject *exception_keeper_tb_41;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_41;
    PyObject *exception_keeper_type_42;
    PyObject *exception_keeper_value_42;
    PyTracebackObject *exception_keeper_tb_42;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_42;
    PyObject *exception_keeper_type_43;
    PyObject *exception_keeper_value_43;
    PyTracebackObject *exception_keeper_tb_43;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_43;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_276 = NULL;
    PyObject *exception_keeper_type_44;
    PyObject *exception_keeper_value_44;
    PyTracebackObject *exception_keeper_tb_44;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_44;
    PyObject *exception_keeper_type_45;
    PyObject *exception_keeper_value_45;
    PyTracebackObject *exception_keeper_tb_45;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_45;
    PyObject *exception_keeper_type_46;
    PyObject *exception_keeper_value_46;
    PyTracebackObject *exception_keeper_tb_46;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_46;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_277 = NULL;
    PyObject *exception_keeper_type_47;
    PyObject *exception_keeper_value_47;
    PyTracebackObject *exception_keeper_tb_47;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_47;
    PyObject *exception_keeper_type_48;
    PyObject *exception_keeper_value_48;
    PyTracebackObject *exception_keeper_tb_48;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_48;
    PyObject *exception_keeper_type_49;
    PyObject *exception_keeper_value_49;
    PyTracebackObject *exception_keeper_tb_49;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_49;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_278 = NULL;
    PyObject *exception_keeper_type_50;
    PyObject *exception_keeper_value_50;
    PyTracebackObject *exception_keeper_tb_50;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_50;
    PyObject *exception_keeper_type_51;
    PyObject *exception_keeper_value_51;
    PyTracebackObject *exception_keeper_tb_51;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_51;
    PyObject *exception_keeper_type_52;
    PyObject *exception_keeper_value_52;
    PyTracebackObject *exception_keeper_tb_52;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_52;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_279 = NULL;
    PyObject *exception_keeper_type_53;
    PyObject *exception_keeper_value_53;
    PyTracebackObject *exception_keeper_tb_53;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_53;
    PyObject *exception_keeper_type_54;
    PyObject *exception_keeper_value_54;
    PyTracebackObject *exception_keeper_tb_54;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_54;
    PyObject *exception_keeper_type_55;
    PyObject *exception_keeper_value_55;
    PyTracebackObject *exception_keeper_tb_55;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_55;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_280 = NULL;
    PyObject *exception_keeper_type_56;
    PyObject *exception_keeper_value_56;
    PyTracebackObject *exception_keeper_tb_56;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_56;
    PyObject *exception_keeper_type_57;
    PyObject *exception_keeper_value_57;
    PyTracebackObject *exception_keeper_tb_57;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_57;
    PyObject *exception_keeper_type_58;
    PyObject *exception_keeper_value_58;
    PyTracebackObject *exception_keeper_tb_58;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_58;
    static struct Nuitka_FrameObject *cache_frame_d77951b0e8e96dc949c573a17a62cabd_10 = NULL;
    PyObject *exception_keeper_type_59;
    PyObject *exception_keeper_value_59;
    PyTracebackObject *exception_keeper_tb_59;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_59;
    PyObject *exception_keeper_type_60;
    PyObject *exception_keeper_value_60;
    PyTracebackObject *exception_keeper_tb_60;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_60;
    PyObject *exception_keeper_type_61;
    PyObject *exception_keeper_value_61;
    PyTracebackObject *exception_keeper_tb_61;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_61;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_288 = NULL;
    struct Nuitka_FrameObject *frame_d8c51ce26a6825461415e7bb5df0a78e_12;
    NUITKA_MAY_BE_UNUSED char const *type_description_12 = NULL;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_289 = NULL;
    struct Nuitka_FrameObject *frame_84f7195f6a25d49c9ccba9b3ed0478e5_13;
    NUITKA_MAY_BE_UNUSED char const *type_description_13 = NULL;
    static struct Nuitka_FrameObject *cache_frame_84f7195f6a25d49c9ccba9b3ed0478e5_13 = NULL;
    PyObject *exception_keeper_type_62;
    PyObject *exception_keeper_value_62;
    PyTracebackObject *exception_keeper_tb_62;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_62;
    PyObject *exception_keeper_type_63;
    PyObject *exception_keeper_value_63;
    PyTracebackObject *exception_keeper_tb_63;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_63;
    PyObject *exception_keeper_type_64;
    PyObject *exception_keeper_value_64;
    PyTracebackObject *exception_keeper_tb_64;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_64;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_294 = NULL;
    PyObject *exception_keeper_type_65;
    PyObject *exception_keeper_value_65;
    PyTracebackObject *exception_keeper_tb_65;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_65;
    PyObject *exception_keeper_type_66;
    PyObject *exception_keeper_value_66;
    PyTracebackObject *exception_keeper_tb_66;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_66;
    PyObject *exception_keeper_type_67;
    PyObject *exception_keeper_value_67;
    PyTracebackObject *exception_keeper_tb_67;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_67;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_295 = NULL;
    PyObject *exception_keeper_type_68;
    PyObject *exception_keeper_value_68;
    PyTracebackObject *exception_keeper_tb_68;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_68;
    PyObject *exception_keeper_type_69;
    PyObject *exception_keeper_value_69;
    PyTracebackObject *exception_keeper_tb_69;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_69;
    PyObject *exception_keeper_type_70;
    PyObject *exception_keeper_value_70;
    PyTracebackObject *exception_keeper_tb_70;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_70;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_299 = NULL;
    PyObject *exception_keeper_type_71;
    PyObject *exception_keeper_value_71;
    PyTracebackObject *exception_keeper_tb_71;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_71;
    PyObject *exception_keeper_type_72;
    PyObject *exception_keeper_value_72;
    PyTracebackObject *exception_keeper_tb_72;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_72;
    PyObject *exception_keeper_type_73;
    PyObject *exception_keeper_value_73;
    PyTracebackObject *exception_keeper_tb_73;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_73;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_300 = NULL;
    PyObject *exception_keeper_type_74;
    PyObject *exception_keeper_value_74;
    PyTracebackObject *exception_keeper_tb_74;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_74;
    PyObject *exception_keeper_type_75;
    PyObject *exception_keeper_value_75;
    PyTracebackObject *exception_keeper_tb_75;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_75;
    PyObject *exception_keeper_type_76;
    PyObject *exception_keeper_value_76;
    PyTracebackObject *exception_keeper_tb_76;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_76;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_301 = NULL;
    PyObject *exception_keeper_type_77;
    PyObject *exception_keeper_value_77;
    PyTracebackObject *exception_keeper_tb_77;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_77;
    PyObject *exception_keeper_type_78;
    PyObject *exception_keeper_value_78;
    PyTracebackObject *exception_keeper_tb_78;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_78;
    PyObject *exception_keeper_type_79;
    PyObject *exception_keeper_value_79;
    PyTracebackObject *exception_keeper_tb_79;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_79;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_302 = NULL;
    PyObject *exception_keeper_type_80;
    PyObject *exception_keeper_value_80;
    PyTracebackObject *exception_keeper_tb_80;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_80;
    PyObject *exception_keeper_type_81;
    PyObject *exception_keeper_value_81;
    PyTracebackObject *exception_keeper_tb_81;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_81;
    PyObject *exception_keeper_type_82;
    PyObject *exception_keeper_value_82;
    PyTracebackObject *exception_keeper_tb_82;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_82;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_303 = NULL;
    PyObject *exception_keeper_type_83;
    PyObject *exception_keeper_value_83;
    PyTracebackObject *exception_keeper_tb_83;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_83;
    PyObject *exception_keeper_type_84;
    PyObject *exception_keeper_value_84;
    PyTracebackObject *exception_keeper_tb_84;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_84;
    PyObject *exception_keeper_type_85;
    PyObject *exception_keeper_value_85;
    PyTracebackObject *exception_keeper_tb_85;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_85;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_304 = NULL;
    PyObject *exception_keeper_type_86;
    PyObject *exception_keeper_value_86;
    PyTracebackObject *exception_keeper_tb_86;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_86;
    PyObject *exception_keeper_type_87;
    PyObject *exception_keeper_value_87;
    PyTracebackObject *exception_keeper_tb_87;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_87;
    PyObject *exception_keeper_type_88;
    PyObject *exception_keeper_value_88;
    PyTracebackObject *exception_keeper_tb_88;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_88;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_305 = NULL;
    PyObject *exception_keeper_type_89;
    PyObject *exception_keeper_value_89;
    PyTracebackObject *exception_keeper_tb_89;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_89;
    PyObject *exception_keeper_type_90;
    PyObject *exception_keeper_value_90;
    PyTracebackObject *exception_keeper_tb_90;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_90;
    PyObject *exception_keeper_type_91;
    PyObject *exception_keeper_value_91;
    PyTracebackObject *exception_keeper_tb_91;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_91;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_306 = NULL;
    PyObject *exception_keeper_type_92;
    PyObject *exception_keeper_value_92;
    PyTracebackObject *exception_keeper_tb_92;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_92;
    PyObject *exception_keeper_type_93;
    PyObject *exception_keeper_value_93;
    PyTracebackObject *exception_keeper_tb_93;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_93;
    PyObject *exception_keeper_type_94;
    PyObject *exception_keeper_value_94;
    PyTracebackObject *exception_keeper_tb_94;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_94;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_307 = NULL;
    PyObject *exception_keeper_type_95;
    PyObject *exception_keeper_value_95;
    PyTracebackObject *exception_keeper_tb_95;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_95;
    PyObject *exception_keeper_type_96;
    PyObject *exception_keeper_value_96;
    PyTracebackObject *exception_keeper_tb_96;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_96;
    PyObject *exception_keeper_type_97;
    PyObject *exception_keeper_value_97;
    PyTracebackObject *exception_keeper_tb_97;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_97;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_309 = NULL;
    struct Nuitka_FrameObject *frame_a9231d8273ddef68b5e33e09c5b1cc0d_14;
    NUITKA_MAY_BE_UNUSED char const *type_description_14 = NULL;
    static struct Nuitka_FrameObject *cache_frame_a9231d8273ddef68b5e33e09c5b1cc0d_14 = NULL;
    PyObject *exception_keeper_type_98;
    PyObject *exception_keeper_value_98;
    PyTracebackObject *exception_keeper_tb_98;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_98;
    PyObject *exception_keeper_type_99;
    PyObject *exception_keeper_value_99;
    PyTracebackObject *exception_keeper_tb_99;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_99;
    PyObject *exception_keeper_type_100;
    PyObject *exception_keeper_value_100;
    PyTracebackObject *exception_keeper_tb_100;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_100;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_321 = NULL;
    PyObject *exception_keeper_type_101;
    PyObject *exception_keeper_value_101;
    PyTracebackObject *exception_keeper_tb_101;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_101;
    PyObject *exception_keeper_type_102;
    PyObject *exception_keeper_value_102;
    PyTracebackObject *exception_keeper_tb_102;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_102;
    PyObject *exception_keeper_type_103;
    PyObject *exception_keeper_value_103;
    PyTracebackObject *exception_keeper_tb_103;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_103;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_322 = NULL;
    PyObject *exception_keeper_type_104;
    PyObject *exception_keeper_value_104;
    PyTracebackObject *exception_keeper_tb_104;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_104;
    PyObject *exception_keeper_type_105;
    PyObject *exception_keeper_value_105;
    PyTracebackObject *exception_keeper_tb_105;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_105;
    PyObject *exception_keeper_type_106;
    PyObject *exception_keeper_value_106;
    PyTracebackObject *exception_keeper_tb_106;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_106;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_323 = NULL;
    PyObject *exception_keeper_type_107;
    PyObject *exception_keeper_value_107;
    PyTracebackObject *exception_keeper_tb_107;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_107;
    PyObject *exception_keeper_type_108;
    PyObject *exception_keeper_value_108;
    PyTracebackObject *exception_keeper_tb_108;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_108;
    PyObject *exception_keeper_type_109;
    PyObject *exception_keeper_value_109;
    PyTracebackObject *exception_keeper_tb_109;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_109;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_324 = NULL;
    PyObject *exception_keeper_type_110;
    PyObject *exception_keeper_value_110;
    PyTracebackObject *exception_keeper_tb_110;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_110;
    PyObject *exception_keeper_type_111;
    PyObject *exception_keeper_value_111;
    PyTracebackObject *exception_keeper_tb_111;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_111;
    PyObject *exception_keeper_type_112;
    PyObject *exception_keeper_value_112;
    PyTracebackObject *exception_keeper_tb_112;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_112;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_325 = NULL;
    PyObject *exception_keeper_type_113;
    PyObject *exception_keeper_value_113;
    PyTracebackObject *exception_keeper_tb_113;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_113;
    PyObject *exception_keeper_type_114;
    PyObject *exception_keeper_value_114;
    PyTracebackObject *exception_keeper_tb_114;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_114;
    PyObject *exception_keeper_type_115;
    PyObject *exception_keeper_value_115;
    PyTracebackObject *exception_keeper_tb_115;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_115;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_326 = NULL;
    PyObject *exception_keeper_type_116;
    PyObject *exception_keeper_value_116;
    PyTracebackObject *exception_keeper_tb_116;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_116;
    PyObject *exception_keeper_type_117;
    PyObject *exception_keeper_value_117;
    PyTracebackObject *exception_keeper_tb_117;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_117;
    PyObject *exception_keeper_type_118;
    PyObject *exception_keeper_value_118;
    PyTracebackObject *exception_keeper_tb_118;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_118;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_327 = NULL;
    PyObject *exception_keeper_type_119;
    PyObject *exception_keeper_value_119;
    PyTracebackObject *exception_keeper_tb_119;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_119;
    PyObject *exception_keeper_type_120;
    PyObject *exception_keeper_value_120;
    PyTracebackObject *exception_keeper_tb_120;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_120;
    PyObject *exception_keeper_type_121;
    PyObject *exception_keeper_value_121;
    PyTracebackObject *exception_keeper_tb_121;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_121;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_329 = NULL;
    PyObject *exception_keeper_type_122;
    PyObject *exception_keeper_value_122;
    PyTracebackObject *exception_keeper_tb_122;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_122;
    PyObject *exception_keeper_type_123;
    PyObject *exception_keeper_value_123;
    PyTracebackObject *exception_keeper_tb_123;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_123;
    PyObject *exception_keeper_type_124;
    PyObject *exception_keeper_value_124;
    PyTracebackObject *exception_keeper_tb_124;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_124;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_330 = NULL;
    PyObject *exception_keeper_type_125;
    PyObject *exception_keeper_value_125;
    PyTracebackObject *exception_keeper_tb_125;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_125;
    PyObject *exception_keeper_type_126;
    PyObject *exception_keeper_value_126;
    PyTracebackObject *exception_keeper_tb_126;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_126;
    PyObject *exception_keeper_type_127;
    PyObject *exception_keeper_value_127;
    PyTracebackObject *exception_keeper_tb_127;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_127;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_331 = NULL;
    PyObject *exception_keeper_type_128;
    PyObject *exception_keeper_value_128;
    PyTracebackObject *exception_keeper_tb_128;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_128;
    PyObject *exception_keeper_type_129;
    PyObject *exception_keeper_value_129;
    PyTracebackObject *exception_keeper_tb_129;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_129;
    PyObject *exception_keeper_type_130;
    PyObject *exception_keeper_value_130;
    PyTracebackObject *exception_keeper_tb_130;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_130;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_332 = NULL;
    PyObject *exception_keeper_type_131;
    PyObject *exception_keeper_value_131;
    PyTracebackObject *exception_keeper_tb_131;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_131;
    PyObject *exception_keeper_type_132;
    PyObject *exception_keeper_value_132;
    PyTracebackObject *exception_keeper_tb_132;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_132;
    PyObject *exception_keeper_type_133;
    PyObject *exception_keeper_value_133;
    PyTracebackObject *exception_keeper_tb_133;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_133;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_334 = NULL;
    struct Nuitka_FrameObject *frame_02387612e1579a729119b86a0e26e9e5_15;
    NUITKA_MAY_BE_UNUSED char const *type_description_15 = NULL;
    static struct Nuitka_FrameObject *cache_frame_02387612e1579a729119b86a0e26e9e5_15 = NULL;
    PyObject *exception_keeper_type_134;
    PyObject *exception_keeper_value_134;
    PyTracebackObject *exception_keeper_tb_134;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_134;
    PyObject *exception_keeper_type_135;
    PyObject *exception_keeper_value_135;
    PyTracebackObject *exception_keeper_tb_135;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_135;
    PyObject *exception_keeper_type_136;
    PyObject *exception_keeper_value_136;
    PyTracebackObject *exception_keeper_tb_136;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_136;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_338 = NULL;
    struct Nuitka_FrameObject *frame_ae620f7e43f56488ccde52f5336808c1_16;
    NUITKA_MAY_BE_UNUSED char const *type_description_16 = NULL;
    static struct Nuitka_FrameObject *cache_frame_ae620f7e43f56488ccde52f5336808c1_16 = NULL;
    PyObject *exception_keeper_type_137;
    PyObject *exception_keeper_value_137;
    PyTracebackObject *exception_keeper_tb_137;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_137;
    PyObject *exception_keeper_type_138;
    PyObject *exception_keeper_value_138;
    PyTracebackObject *exception_keeper_tb_138;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_138;
    PyObject *exception_keeper_type_139;
    PyObject *exception_keeper_value_139;
    PyTracebackObject *exception_keeper_tb_139;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_139;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_352 = NULL;
    PyObject *exception_keeper_type_140;
    PyObject *exception_keeper_value_140;
    PyTracebackObject *exception_keeper_tb_140;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_140;
    PyObject *exception_keeper_type_141;
    PyObject *exception_keeper_value_141;
    PyTracebackObject *exception_keeper_tb_141;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_141;
    PyObject *exception_keeper_type_142;
    PyObject *exception_keeper_value_142;
    PyTracebackObject *exception_keeper_tb_142;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_142;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_353 = NULL;
    PyObject *exception_keeper_type_143;
    PyObject *exception_keeper_value_143;
    PyTracebackObject *exception_keeper_tb_143;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_143;
    PyObject *exception_keeper_type_144;
    PyObject *exception_keeper_value_144;
    PyTracebackObject *exception_keeper_tb_144;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_144;
    PyObject *exception_keeper_type_145;
    PyObject *exception_keeper_value_145;
    PyTracebackObject *exception_keeper_tb_145;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_145;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_355 = NULL;
    PyObject *exception_keeper_type_146;
    PyObject *exception_keeper_value_146;
    PyTracebackObject *exception_keeper_tb_146;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_146;
    PyObject *exception_keeper_type_147;
    PyObject *exception_keeper_value_147;
    PyTracebackObject *exception_keeper_tb_147;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_147;
    PyObject *exception_keeper_type_148;
    PyObject *exception_keeper_value_148;
    PyTracebackObject *exception_keeper_tb_148;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_148;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_356 = NULL;
    PyObject *exception_keeper_type_149;
    PyObject *exception_keeper_value_149;
    PyTracebackObject *exception_keeper_tb_149;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_149;
    PyObject *exception_keeper_type_150;
    PyObject *exception_keeper_value_150;
    PyTracebackObject *exception_keeper_tb_150;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_150;
    PyObject *exception_keeper_type_151;
    PyObject *exception_keeper_value_151;
    PyTracebackObject *exception_keeper_tb_151;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_151;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_357 = NULL;
    PyObject *exception_keeper_type_152;
    PyObject *exception_keeper_value_152;
    PyTracebackObject *exception_keeper_tb_152;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_152;
    PyObject *exception_keeper_type_153;
    PyObject *exception_keeper_value_153;
    PyTracebackObject *exception_keeper_tb_153;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_153;
    PyObject *exception_keeper_type_154;
    PyObject *exception_keeper_value_154;
    PyTracebackObject *exception_keeper_tb_154;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_154;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_359 = NULL;
    PyObject *exception_keeper_type_155;
    PyObject *exception_keeper_value_155;
    PyTracebackObject *exception_keeper_tb_155;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_155;
    PyObject *exception_keeper_type_156;
    PyObject *exception_keeper_value_156;
    PyTracebackObject *exception_keeper_tb_156;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_156;
    PyObject *exception_keeper_type_157;
    PyObject *exception_keeper_value_157;
    PyTracebackObject *exception_keeper_tb_157;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_157;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_360 = NULL;
    PyObject *exception_keeper_type_158;
    PyObject *exception_keeper_value_158;
    PyTracebackObject *exception_keeper_tb_158;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_158;
    PyObject *exception_keeper_type_159;
    PyObject *exception_keeper_value_159;
    PyTracebackObject *exception_keeper_tb_159;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_159;
    PyObject *exception_keeper_type_160;
    PyObject *exception_keeper_value_160;
    PyTracebackObject *exception_keeper_tb_160;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_160;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_361 = NULL;
    PyObject *exception_keeper_type_161;
    PyObject *exception_keeper_value_161;
    PyTracebackObject *exception_keeper_tb_161;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_161;
    PyObject *exception_keeper_type_162;
    PyObject *exception_keeper_value_162;
    PyTracebackObject *exception_keeper_tb_162;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_162;
    PyObject *exception_keeper_type_163;
    PyObject *exception_keeper_value_163;
    PyTracebackObject *exception_keeper_tb_163;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_163;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_363 = NULL;
    PyObject *exception_keeper_type_164;
    PyObject *exception_keeper_value_164;
    PyTracebackObject *exception_keeper_tb_164;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_164;
    PyObject *exception_keeper_type_165;
    PyObject *exception_keeper_value_165;
    PyTracebackObject *exception_keeper_tb_165;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_165;
    PyObject *exception_keeper_type_166;
    PyObject *exception_keeper_value_166;
    PyTracebackObject *exception_keeper_tb_166;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_166;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_364 = NULL;
    PyObject *exception_keeper_type_167;
    PyObject *exception_keeper_value_167;
    PyTracebackObject *exception_keeper_tb_167;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_167;
    PyObject *exception_keeper_type_168;
    PyObject *exception_keeper_value_168;
    PyTracebackObject *exception_keeper_tb_168;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_168;
    PyObject *exception_keeper_type_169;
    PyObject *exception_keeper_value_169;
    PyTracebackObject *exception_keeper_tb_169;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_169;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_365 = NULL;
    PyObject *exception_keeper_type_170;
    PyObject *exception_keeper_value_170;
    PyTracebackObject *exception_keeper_tb_170;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_170;
    PyObject *exception_keeper_type_171;
    PyObject *exception_keeper_value_171;
    PyTracebackObject *exception_keeper_tb_171;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_171;
    PyObject *exception_keeper_type_172;
    PyObject *exception_keeper_value_172;
    PyTracebackObject *exception_keeper_tb_172;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_172;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_366 = NULL;
    PyObject *exception_keeper_type_173;
    PyObject *exception_keeper_value_173;
    PyTracebackObject *exception_keeper_tb_173;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_173;
    PyObject *exception_keeper_type_174;
    PyObject *exception_keeper_value_174;
    PyTracebackObject *exception_keeper_tb_174;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_174;
    PyObject *exception_keeper_type_175;
    PyObject *exception_keeper_value_175;
    PyTracebackObject *exception_keeper_tb_175;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_175;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_367 = NULL;
    PyObject *exception_keeper_type_176;
    PyObject *exception_keeper_value_176;
    PyTracebackObject *exception_keeper_tb_176;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_176;
    PyObject *exception_keeper_type_177;
    PyObject *exception_keeper_value_177;
    PyTracebackObject *exception_keeper_tb_177;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_177;
    PyObject *exception_keeper_type_178;
    PyObject *exception_keeper_value_178;
    PyTracebackObject *exception_keeper_tb_178;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_178;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_369 = NULL;
    struct Nuitka_FrameObject *frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17;
    NUITKA_MAY_BE_UNUSED char const *type_description_17 = NULL;
    static struct Nuitka_FrameObject *cache_frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17 = NULL;
    PyObject *exception_keeper_type_179;
    PyObject *exception_keeper_value_179;
    PyTracebackObject *exception_keeper_tb_179;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_179;
    PyObject *exception_keeper_type_180;
    PyObject *exception_keeper_value_180;
    PyTracebackObject *exception_keeper_tb_180;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_180;
    PyObject *exception_keeper_type_181;
    PyObject *exception_keeper_value_181;
    PyTracebackObject *exception_keeper_tb_181;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_181;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_387 = NULL;
    struct Nuitka_FrameObject *frame_a9d6db0955b7ba28bfba73ef240b3f90_18;
    NUITKA_MAY_BE_UNUSED char const *type_description_18 = NULL;
    static struct Nuitka_FrameObject *cache_frame_a9d6db0955b7ba28bfba73ef240b3f90_18 = NULL;
    PyObject *exception_keeper_type_182;
    PyObject *exception_keeper_value_182;
    PyTracebackObject *exception_keeper_tb_182;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_182;
    PyObject *exception_keeper_type_183;
    PyObject *exception_keeper_value_183;
    PyTracebackObject *exception_keeper_tb_183;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_183;
    PyObject *exception_keeper_type_184;
    PyObject *exception_keeper_value_184;
    PyTracebackObject *exception_keeper_tb_184;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_184;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_392 = NULL;
    PyObject *exception_keeper_type_185;
    PyObject *exception_keeper_value_185;
    PyTracebackObject *exception_keeper_tb_185;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_185;
    PyObject *exception_keeper_type_186;
    PyObject *exception_keeper_value_186;
    PyTracebackObject *exception_keeper_tb_186;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_186;
    PyObject *exception_keeper_type_187;
    PyObject *exception_keeper_value_187;
    PyTracebackObject *exception_keeper_tb_187;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_187;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_393 = NULL;
    PyObject *exception_keeper_type_188;
    PyObject *exception_keeper_value_188;
    PyTracebackObject *exception_keeper_tb_188;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_188;
    PyObject *exception_keeper_type_189;
    PyObject *exception_keeper_value_189;
    PyTracebackObject *exception_keeper_tb_189;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_189;
    PyObject *exception_keeper_type_190;
    PyObject *exception_keeper_value_190;
    PyTracebackObject *exception_keeper_tb_190;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_190;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_394 = NULL;
    PyObject *exception_keeper_type_191;
    PyObject *exception_keeper_value_191;
    PyTracebackObject *exception_keeper_tb_191;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_191;
    PyObject *exception_keeper_type_192;
    PyObject *exception_keeper_value_192;
    PyTracebackObject *exception_keeper_tb_192;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_192;
    PyObject *exception_keeper_type_193;
    PyObject *exception_keeper_value_193;
    PyTracebackObject *exception_keeper_tb_193;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_193;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_395 = NULL;
    PyObject *exception_keeper_type_194;
    PyObject *exception_keeper_value_194;
    PyTracebackObject *exception_keeper_tb_194;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_194;
    PyObject *exception_keeper_type_195;
    PyObject *exception_keeper_value_195;
    PyTracebackObject *exception_keeper_tb_195;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_195;
    PyObject *exception_keeper_type_196;
    PyObject *exception_keeper_value_196;
    PyTracebackObject *exception_keeper_tb_196;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_196;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_397 = NULL;
    PyObject *exception_keeper_type_197;
    PyObject *exception_keeper_value_197;
    PyTracebackObject *exception_keeper_tb_197;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_197;
    PyObject *exception_keeper_type_198;
    PyObject *exception_keeper_value_198;
    PyTracebackObject *exception_keeper_tb_198;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_198;
    PyObject *exception_keeper_type_199;
    PyObject *exception_keeper_value_199;
    PyTracebackObject *exception_keeper_tb_199;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_199;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_398 = NULL;
    PyObject *exception_keeper_type_200;
    PyObject *exception_keeper_value_200;
    PyTracebackObject *exception_keeper_tb_200;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_200;
    PyObject *exception_keeper_type_201;
    PyObject *exception_keeper_value_201;
    PyTracebackObject *exception_keeper_tb_201;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_201;
    PyObject *exception_keeper_type_202;
    PyObject *exception_keeper_value_202;
    PyTracebackObject *exception_keeper_tb_202;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_202;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_400 = NULL;
    PyObject *exception_keeper_type_203;
    PyObject *exception_keeper_value_203;
    PyTracebackObject *exception_keeper_tb_203;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_203;
    PyObject *exception_keeper_type_204;
    PyObject *exception_keeper_value_204;
    PyTracebackObject *exception_keeper_tb_204;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_204;
    PyObject *exception_keeper_type_205;
    PyObject *exception_keeper_value_205;
    PyTracebackObject *exception_keeper_tb_205;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_205;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_401 = NULL;
    PyObject *exception_keeper_type_206;
    PyObject *exception_keeper_value_206;
    PyTracebackObject *exception_keeper_tb_206;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_206;
    PyObject *exception_keeper_type_207;
    PyObject *exception_keeper_value_207;
    PyTracebackObject *exception_keeper_tb_207;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_207;
    PyObject *exception_keeper_type_208;
    PyObject *exception_keeper_value_208;
    PyTracebackObject *exception_keeper_tb_208;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_208;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_402 = NULL;
    PyObject *exception_keeper_type_209;
    PyObject *exception_keeper_value_209;
    PyTracebackObject *exception_keeper_tb_209;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_209;
    PyObject *exception_keeper_type_210;
    PyObject *exception_keeper_value_210;
    PyTracebackObject *exception_keeper_tb_210;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_210;
    PyObject *exception_keeper_type_211;
    PyObject *exception_keeper_value_211;
    PyTracebackObject *exception_keeper_tb_211;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_211;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_403 = NULL;
    PyObject *exception_keeper_type_212;
    PyObject *exception_keeper_value_212;
    PyTracebackObject *exception_keeper_tb_212;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_212;
    PyObject *exception_keeper_type_213;
    PyObject *exception_keeper_value_213;
    PyTracebackObject *exception_keeper_tb_213;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_213;
    PyObject *exception_keeper_type_214;
    PyObject *exception_keeper_value_214;
    PyTracebackObject *exception_keeper_tb_214;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_214;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_405 = NULL;
    struct Nuitka_FrameObject *frame_a22e0e1aa09d904eb786d76c3dcebdb5_19;
    NUITKA_MAY_BE_UNUSED char const *type_description_19 = NULL;
    static struct Nuitka_FrameObject *cache_frame_a22e0e1aa09d904eb786d76c3dcebdb5_19 = NULL;
    PyObject *exception_keeper_type_215;
    PyObject *exception_keeper_value_215;
    PyTracebackObject *exception_keeper_tb_215;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_215;
    PyObject *exception_keeper_type_216;
    PyObject *exception_keeper_value_216;
    PyTracebackObject *exception_keeper_tb_216;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_216;
    PyObject *exception_keeper_type_217;
    PyObject *exception_keeper_value_217;
    PyTracebackObject *exception_keeper_tb_217;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_217;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_414 = NULL;
    struct Nuitka_FrameObject *frame_1bca3a6f0a6831653abb6bc56056eae1_20;
    NUITKA_MAY_BE_UNUSED char const *type_description_20 = NULL;
    static struct Nuitka_FrameObject *cache_frame_1bca3a6f0a6831653abb6bc56056eae1_20 = NULL;
    PyObject *exception_keeper_type_218;
    PyObject *exception_keeper_value_218;
    PyTracebackObject *exception_keeper_tb_218;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_218;
    PyObject *exception_keeper_type_219;
    PyObject *exception_keeper_value_219;
    PyTracebackObject *exception_keeper_tb_219;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_219;
    PyObject *exception_keeper_type_220;
    PyObject *exception_keeper_value_220;
    PyTracebackObject *exception_keeper_tb_220;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_220;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_419 = NULL;
    PyObject *exception_keeper_type_221;
    PyObject *exception_keeper_value_221;
    PyTracebackObject *exception_keeper_tb_221;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_221;
    PyObject *exception_keeper_type_222;
    PyObject *exception_keeper_value_222;
    PyTracebackObject *exception_keeper_tb_222;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_222;
    PyObject *exception_keeper_type_223;
    PyObject *exception_keeper_value_223;
    PyTracebackObject *exception_keeper_tb_223;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_223;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_421 = NULL;
    struct Nuitka_FrameObject *frame_677ae2976b24110d4f56789d42886e8b_21;
    NUITKA_MAY_BE_UNUSED char const *type_description_21 = NULL;
    static struct Nuitka_FrameObject *cache_frame_677ae2976b24110d4f56789d42886e8b_21 = NULL;
    PyObject *exception_keeper_type_224;
    PyObject *exception_keeper_value_224;
    PyTracebackObject *exception_keeper_tb_224;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_224;
    PyObject *exception_keeper_type_225;
    PyObject *exception_keeper_value_225;
    PyTracebackObject *exception_keeper_tb_225;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_225;
    PyObject *exception_keeper_type_226;
    PyObject *exception_keeper_value_226;
    PyTracebackObject *exception_keeper_tb_226;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_226;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_426 = NULL;
    PyObject *exception_keeper_type_227;
    PyObject *exception_keeper_value_227;
    PyTracebackObject *exception_keeper_tb_227;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_227;
    PyObject *exception_keeper_type_228;
    PyObject *exception_keeper_value_228;
    PyTracebackObject *exception_keeper_tb_228;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_228;
    PyObject *exception_keeper_type_229;
    PyObject *exception_keeper_value_229;
    PyTracebackObject *exception_keeper_tb_229;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_229;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_428 = NULL;
    struct Nuitka_FrameObject *frame_8e5a210a9997e6027f0b1cf555f7a089_22;
    NUITKA_MAY_BE_UNUSED char const *type_description_22 = NULL;
    static struct Nuitka_FrameObject *cache_frame_8e5a210a9997e6027f0b1cf555f7a089_22 = NULL;
    PyObject *exception_keeper_type_230;
    PyObject *exception_keeper_value_230;
    PyTracebackObject *exception_keeper_tb_230;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_230;
    PyObject *exception_keeper_type_231;
    PyObject *exception_keeper_value_231;
    PyTracebackObject *exception_keeper_tb_231;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_231;
    PyObject *exception_keeper_type_232;
    PyObject *exception_keeper_value_232;
    PyTracebackObject *exception_keeper_tb_232;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_232;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_435 = NULL;
    struct Nuitka_FrameObject *frame_50a860bdb6599023474a313618a2830b_23;
    NUITKA_MAY_BE_UNUSED char const *type_description_23 = NULL;
    static struct Nuitka_FrameObject *cache_frame_50a860bdb6599023474a313618a2830b_23 = NULL;
    PyObject *exception_keeper_type_233;
    PyObject *exception_keeper_value_233;
    PyTracebackObject *exception_keeper_tb_233;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_233;
    PyObject *exception_keeper_type_234;
    PyObject *exception_keeper_value_234;
    PyTracebackObject *exception_keeper_tb_234;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_234;
    PyObject *exception_keeper_type_235;
    PyObject *exception_keeper_value_235;
    PyTracebackObject *exception_keeper_tb_235;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_235;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_440 = NULL;
    struct Nuitka_FrameObject *frame_bacb55f861c453ab9ab67002e7cba0fe_24;
    NUITKA_MAY_BE_UNUSED char const *type_description_24 = NULL;
    static struct Nuitka_FrameObject *cache_frame_bacb55f861c453ab9ab67002e7cba0fe_24 = NULL;
    PyObject *exception_keeper_type_236;
    PyObject *exception_keeper_value_236;
    PyTracebackObject *exception_keeper_tb_236;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_236;
    PyObject *exception_keeper_type_237;
    PyObject *exception_keeper_value_237;
    PyTracebackObject *exception_keeper_tb_237;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_237;
    PyObject *exception_keeper_type_238;
    PyObject *exception_keeper_value_238;
    PyTracebackObject *exception_keeper_tb_238;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_238;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_452 = NULL;
    PyObject *exception_keeper_type_239;
    PyObject *exception_keeper_value_239;
    PyTracebackObject *exception_keeper_tb_239;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_239;
    PyObject *exception_keeper_type_240;
    PyObject *exception_keeper_value_240;
    PyTracebackObject *exception_keeper_tb_240;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_240;
    PyObject *exception_keeper_type_241;
    PyObject *exception_keeper_value_241;
    PyTracebackObject *exception_keeper_tb_241;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_241;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_453 = NULL;
    PyObject *exception_keeper_type_242;
    PyObject *exception_keeper_value_242;
    PyTracebackObject *exception_keeper_tb_242;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_242;
    PyObject *exception_keeper_type_243;
    PyObject *exception_keeper_value_243;
    PyTracebackObject *exception_keeper_tb_243;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_243;
    PyObject *exception_keeper_type_244;
    PyObject *exception_keeper_value_244;
    PyTracebackObject *exception_keeper_tb_244;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_244;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_454 = NULL;
    PyObject *exception_keeper_type_245;
    PyObject *exception_keeper_value_245;
    PyTracebackObject *exception_keeper_tb_245;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_245;
    PyObject *exception_keeper_type_246;
    PyObject *exception_keeper_value_246;
    PyTracebackObject *exception_keeper_tb_246;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_246;
    PyObject *exception_keeper_type_247;
    PyObject *exception_keeper_value_247;
    PyTracebackObject *exception_keeper_tb_247;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_247;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_455 = NULL;
    PyObject *exception_keeper_type_248;
    PyObject *exception_keeper_value_248;
    PyTracebackObject *exception_keeper_tb_248;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_248;
    PyObject *exception_keeper_type_249;
    PyObject *exception_keeper_value_249;
    PyTracebackObject *exception_keeper_tb_249;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_249;
    PyObject *exception_keeper_type_250;
    PyObject *exception_keeper_value_250;
    PyTracebackObject *exception_keeper_tb_250;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_250;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_457 = NULL;
    PyObject *exception_keeper_type_251;
    PyObject *exception_keeper_value_251;
    PyTracebackObject *exception_keeper_tb_251;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_251;
    PyObject *exception_keeper_type_252;
    PyObject *exception_keeper_value_252;
    PyTracebackObject *exception_keeper_tb_252;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_252;
    PyObject *exception_keeper_type_253;
    PyObject *exception_keeper_value_253;
    PyTracebackObject *exception_keeper_tb_253;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_253;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_458 = NULL;
    PyObject *exception_keeper_type_254;
    PyObject *exception_keeper_value_254;
    PyTracebackObject *exception_keeper_tb_254;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_254;
    PyObject *exception_keeper_type_255;
    PyObject *exception_keeper_value_255;
    PyTracebackObject *exception_keeper_tb_255;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_255;
    PyObject *exception_keeper_type_256;
    PyObject *exception_keeper_value_256;
    PyTracebackObject *exception_keeper_tb_256;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_256;
    PyObject *locals_PyQt5$uic$Compiler$qtproxies_459 = NULL;
    PyObject *exception_keeper_type_257;
    PyObject *exception_keeper_value_257;
    PyTracebackObject *exception_keeper_tb_257;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_257;
    PyObject *exception_keeper_type_258;
    PyObject *exception_keeper_value_258;
    PyTracebackObject *exception_keeper_tb_258;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_258;
    PyObject *exception_keeper_type_259;
    PyObject *exception_keeper_value_259;
    PyTracebackObject *exception_keeper_tb_259;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_259;
    PyObject *exception_keeper_type_260;
    PyObject *exception_keeper_value_260;
    PyTracebackObject *exception_keeper_tb_260;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_260;
    static struct Nuitka_FrameObject *cache_frame_d8c51ce26a6825461415e7bb5df0a78e_12 = NULL;
    PyObject *exception_keeper_type_261;
    PyObject *exception_keeper_value_261;
    PyTracebackObject *exception_keeper_tb_261;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_261;
    PyObject *exception_keeper_type_262;
    PyObject *exception_keeper_value_262;
    PyTracebackObject *exception_keeper_tb_262;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_262;
    PyObject *exception_keeper_type_263;
    PyObject *exception_keeper_value_263;
    PyTracebackObject *exception_keeper_tb_263;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_263;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_None;
        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___doc__, tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = module_filename_obj;
        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___file__, tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_d988ce8ae87f78fb5ef322326ef27f66 = MAKE_MODULE_FRAME(codeobj_d988ce8ae87f78fb5ef322326ef27f66, module_PyQt5$uic$Compiler$qtproxies);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_d988ce8ae87f78fb5ef322326ef27f66);
    assert(Py_REFCNT(frame_d988ce8ae87f78fb5ef322326ef27f66) == 2);

    // Framed code:
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        PyObject *tmp_mvar_value_1;
        tmp_assattr_name_1 = module_filename_obj;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___spec__);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain___spec__);
        }

        CHECK_OBJECT(tmp_mvar_value_1);
        tmp_assattr_target_1 = tmp_mvar_value_1;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_origin, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        PyObject *tmp_mvar_value_2;
        tmp_assattr_name_2 = Py_True;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___spec__);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain___spec__);
        }

        CHECK_OBJECT(tmp_mvar_value_2);
        tmp_assattr_target_2 = tmp_mvar_value_2;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_has_location, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = Py_None;
        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain___cached__, tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_name_name_1;
        PyObject *tmp_globals_name_1;
        PyObject *tmp_locals_name_1;
        PyObject *tmp_fromlist_name_1;
        PyObject *tmp_level_name_1;
        tmp_name_name_1 = const_str_plain_sys;
        tmp_globals_name_1 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
        tmp_locals_name_1 = Py_None;
        tmp_fromlist_name_1 = Py_None;
        tmp_level_name_1 = const_int_0;
        frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 41;
        tmp_assign_source_4 = IMPORT_MODULE5(tmp_name_name_1, tmp_globals_name_1, tmp_locals_name_1, tmp_fromlist_name_1, tmp_level_name_1);
        assert(!(tmp_assign_source_4 == NULL));
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_sys, tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_name_name_2;
        PyObject *tmp_globals_name_2;
        PyObject *tmp_locals_name_2;
        PyObject *tmp_fromlist_name_2;
        PyObject *tmp_level_name_2;
        tmp_name_name_2 = const_str_plain_re;
        tmp_globals_name_2 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
        tmp_locals_name_2 = Py_None;
        tmp_fromlist_name_2 = Py_None;
        tmp_level_name_2 = const_int_0;
        frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 42;
        tmp_assign_source_5 = IMPORT_MODULE5(tmp_name_name_2, tmp_globals_name_2, tmp_locals_name_2, tmp_fromlist_name_2, tmp_level_name_2);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_re, tmp_assign_source_5);
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_import_name_from_1;
        PyObject *tmp_name_name_3;
        PyObject *tmp_globals_name_3;
        PyObject *tmp_locals_name_3;
        PyObject *tmp_fromlist_name_3;
        PyObject *tmp_level_name_3;
        tmp_name_name_3 = const_str_plain_indenter;
        tmp_globals_name_3 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
        tmp_locals_name_3 = Py_None;
        tmp_fromlist_name_3 = const_tuple_str_plain_write_code_tuple;
        tmp_level_name_3 = const_int_pos_1;
        frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 44;
        tmp_import_name_from_1 = IMPORT_MODULE5(tmp_name_name_3, tmp_globals_name_3, tmp_locals_name_3, tmp_fromlist_name_3, tmp_level_name_3);
        if (tmp_import_name_from_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 44;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1)) {
           tmp_assign_source_6 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1,
                (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies,
                const_str_plain_write_code,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_6 = IMPORT_NAME(tmp_import_name_from_1, const_str_plain_write_code);
        }

        Py_DECREF(tmp_import_name_from_1);
        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 44;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_write_code, tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_name_name_4;
        PyObject *tmp_globals_name_4;
        PyObject *tmp_locals_name_4;
        PyObject *tmp_fromlist_name_4;
        PyObject *tmp_level_name_4;
        tmp_name_name_4 = const_str_plain_misc;
        tmp_globals_name_4 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
        tmp_locals_name_4 = Py_None;
        tmp_fromlist_name_4 = const_tuple_str_plain_Literal_str_plain_moduleMember_tuple;
        tmp_level_name_4 = const_int_pos_1;
        frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 45;
        tmp_assign_source_7 = IMPORT_MODULE5(tmp_name_name_4, tmp_globals_name_4, tmp_locals_name_4, tmp_fromlist_name_4, tmp_level_name_4);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_1__module == NULL);
        tmp_import_from_1__module = tmp_assign_source_7;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_import_name_from_2;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_2 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_2)) {
           tmp_assign_source_8 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_2,
                (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies,
                const_str_plain_Literal,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_8 = IMPORT_NAME(tmp_import_name_from_2, const_str_plain_Literal);
        }

        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_Literal, tmp_assign_source_8);
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_import_name_from_3;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_3 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_3)) {
           tmp_assign_source_9 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_3,
                (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies,
                const_str_plain_moduleMember,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_9 = IMPORT_NAME(tmp_import_name_from_3, const_str_plain_moduleMember);
        }

        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_moduleMember, tmp_assign_source_9);
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT((PyObject *)tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    CHECK_OBJECT((PyObject *)tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_3;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_sys);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_sys);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 903 ], 25, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 47;

            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_3;
        tmp_compexpr_left_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_hexversion);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_int_pos_50331648;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_assign_source_10;
            PyObject *tmp_import_name_from_4;
            PyObject *tmp_name_name_5;
            PyObject *tmp_globals_name_5;
            PyObject *tmp_locals_name_5;
            PyObject *tmp_fromlist_name_5;
            PyObject *tmp_level_name_5;
            tmp_name_name_5 = const_str_digest_1765bd07a5f456c7d27f71bcb79097ec;
            tmp_globals_name_5 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
            tmp_locals_name_5 = Py_None;
            tmp_fromlist_name_5 = const_tuple_str_plain_ProxyBase_tuple;
            tmp_level_name_5 = const_int_pos_2;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 48;
            tmp_import_name_from_4 = IMPORT_MODULE5(tmp_name_name_5, tmp_globals_name_5, tmp_locals_name_5, tmp_fromlist_name_5, tmp_level_name_5);
            if (tmp_import_name_from_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 48;

                goto frame_exception_exit_1;
            }
            if (PyModule_Check(tmp_import_name_from_4)) {
               tmp_assign_source_10 = IMPORT_NAME_OR_MODULE(
                    tmp_import_name_from_4,
                    (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies,
                    const_str_plain_ProxyBase,
                    const_int_pos_2
                );
            } else {
               tmp_assign_source_10 = IMPORT_NAME(tmp_import_name_from_4, const_str_plain_ProxyBase);
            }

            Py_DECREF(tmp_import_name_from_4);
            if (tmp_assign_source_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 48;

                goto frame_exception_exit_1;
            }
            UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyBase, tmp_assign_source_10);
        }
        {
            PyObject *tmp_assign_source_11;
            PyObject *tmp_import_name_from_5;
            PyObject *tmp_name_name_6;
            PyObject *tmp_globals_name_6;
            PyObject *tmp_locals_name_6;
            PyObject *tmp_fromlist_name_6;
            PyObject *tmp_level_name_6;
            tmp_name_name_6 = const_str_digest_22116dbcc880f5504e969642694bea9a;
            tmp_globals_name_6 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
            tmp_locals_name_6 = Py_None;
            tmp_fromlist_name_6 = const_tuple_str_plain_as_string_tuple;
            tmp_level_name_6 = const_int_pos_2;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 49;
            tmp_import_name_from_5 = IMPORT_MODULE5(tmp_name_name_6, tmp_globals_name_6, tmp_locals_name_6, tmp_fromlist_name_6, tmp_level_name_6);
            if (tmp_import_name_from_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 49;

                goto frame_exception_exit_1;
            }
            if (PyModule_Check(tmp_import_name_from_5)) {
               tmp_assign_source_11 = IMPORT_NAME_OR_MODULE(
                    tmp_import_name_from_5,
                    (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies,
                    const_str_plain_as_string,
                    const_int_pos_2
                );
            } else {
               tmp_assign_source_11 = IMPORT_NAME(tmp_import_name_from_5, const_str_plain_as_string);
            }

            Py_DECREF(tmp_import_name_from_5);
            if (tmp_assign_source_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 49;

                goto frame_exception_exit_1;
            }
            UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string, tmp_assign_source_11);
        }
        goto branch_end_1;
        branch_no_1:;
        {
            PyObject *tmp_assign_source_12;
            PyObject *tmp_import_name_from_6;
            PyObject *tmp_name_name_7;
            PyObject *tmp_globals_name_7;
            PyObject *tmp_locals_name_7;
            PyObject *tmp_fromlist_name_7;
            PyObject *tmp_level_name_7;
            tmp_name_name_7 = const_str_digest_81d39b77439daaee6b385a2bf0805190;
            tmp_globals_name_7 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
            tmp_locals_name_7 = Py_None;
            tmp_fromlist_name_7 = const_tuple_str_plain_ProxyBase_tuple;
            tmp_level_name_7 = const_int_pos_2;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 51;
            tmp_import_name_from_6 = IMPORT_MODULE5(tmp_name_name_7, tmp_globals_name_7, tmp_locals_name_7, tmp_fromlist_name_7, tmp_level_name_7);
            if (tmp_import_name_from_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 51;

                goto frame_exception_exit_1;
            }
            if (PyModule_Check(tmp_import_name_from_6)) {
               tmp_assign_source_12 = IMPORT_NAME_OR_MODULE(
                    tmp_import_name_from_6,
                    (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies,
                    const_str_plain_ProxyBase,
                    const_int_pos_2
                );
            } else {
               tmp_assign_source_12 = IMPORT_NAME(tmp_import_name_from_6, const_str_plain_ProxyBase);
            }

            Py_DECREF(tmp_import_name_from_6);
            if (tmp_assign_source_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 51;

                goto frame_exception_exit_1;
            }
            UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyBase, tmp_assign_source_12);
        }
        {
            PyObject *tmp_assign_source_13;
            PyObject *tmp_import_name_from_7;
            PyObject *tmp_name_name_8;
            PyObject *tmp_globals_name_8;
            PyObject *tmp_locals_name_8;
            PyObject *tmp_fromlist_name_8;
            PyObject *tmp_level_name_8;
            tmp_name_name_8 = const_str_digest_4d848f1798a02d9a0d913955a64e8e94;
            tmp_globals_name_8 = (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies;
            tmp_locals_name_8 = Py_None;
            tmp_fromlist_name_8 = const_tuple_str_plain_as_string_tuple;
            tmp_level_name_8 = const_int_pos_2;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 52;
            tmp_import_name_from_7 = IMPORT_MODULE5(tmp_name_name_8, tmp_globals_name_8, tmp_locals_name_8, tmp_fromlist_name_8, tmp_level_name_8);
            if (tmp_import_name_from_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 52;

                goto frame_exception_exit_1;
            }
            if (PyModule_Check(tmp_import_name_from_7)) {
               tmp_assign_source_13 = IMPORT_NAME_OR_MODULE(
                    tmp_import_name_from_7,
                    (PyObject *)moduledict_PyQt5$uic$Compiler$qtproxies,
                    const_str_plain_as_string,
                    const_int_pos_2
                );
            } else {
               tmp_assign_source_13 = IMPORT_NAME(tmp_import_name_from_7, const_str_plain_as_string);
            }

            Py_DECREF(tmp_import_name_from_7);
            if (tmp_assign_source_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 52;

                goto frame_exception_exit_1;
            }
            UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_as_string, tmp_assign_source_13);
        }
        branch_end_1:;
    }
    {
        PyObject *tmp_assign_source_14;
        tmp_assign_source_14 = PyList_New(0);
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_strings, tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        tmp_assign_source_15 = const_str_empty;
        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_context, tmp_assign_source_15);
    }
    {
        PyObject *tmp_assign_source_16;
        tmp_assign_source_16 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_1_i18n_print();



        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_print, tmp_assign_source_16);
    }
    {
        PyObject *tmp_assign_source_17;
        tmp_assign_source_17 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_2_i18n_void_func();



        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_void_func, tmp_assign_source_17);
    }
    {
        PyObject *tmp_assign_source_18;
        tmp_assign_source_18 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_3_i18n_func();



        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func, tmp_assign_source_18);
    }
    {
        PyObject *tmp_assign_source_19;
        tmp_assign_source_19 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_4_strict_getattr();



        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_strict_getattr, tmp_assign_source_19);
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_dircall_arg1_1;
        tmp_dircall_arg1_1 = const_tuple_type_object_tuple;
        Py_INCREF(tmp_dircall_arg1_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1};
            tmp_assign_source_20 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        assert(tmp_class_creation_1__bases == NULL);
        tmp_class_creation_1__bases = tmp_assign_source_20;
    }
    {
        PyObject *tmp_assign_source_21;
        tmp_assign_source_21 = PyDict_New();
        assert(tmp_class_creation_1__class_decl_dict == NULL);
        tmp_class_creation_1__class_decl_dict = tmp_assign_source_21;
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_metaclass_name_1;
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_key_name_1;
        PyObject *tmp_dict_name_1;
        PyObject *tmp_dict_name_2;
        PyObject *tmp_key_name_2;
        nuitka_bool tmp_condition_result_3;
        int tmp_truth_name_1;
        PyObject *tmp_type_arg_1;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_bases_name_1;
        tmp_key_name_1 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_1 = tmp_class_creation_1__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_1, tmp_key_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        tmp_condition_result_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_1;
        } else {
            goto condexpr_false_1;
        }
        condexpr_true_1:;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_2 = tmp_class_creation_1__class_decl_dict;
        tmp_key_name_2 = const_str_plain_metaclass;
        tmp_metaclass_name_1 = DICT_GET_ITEM(tmp_dict_name_2, tmp_key_name_2);
        if (tmp_metaclass_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        goto condexpr_end_1;
        condexpr_false_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_class_creation_1__bases);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        tmp_condition_result_3 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_2;
        } else {
            goto condexpr_false_2;
        }
        condexpr_true_2:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_subscribed_name_1 = tmp_class_creation_1__bases;
        tmp_subscript_name_1 = const_int_0;
        tmp_type_arg_1 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_1, tmp_subscript_name_1, 0);
        if (tmp_type_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        tmp_metaclass_name_1 = BUILTIN_TYPE1(tmp_type_arg_1);
        Py_DECREF(tmp_type_arg_1);
        if (tmp_metaclass_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        goto condexpr_end_2;
        condexpr_false_2:;
        tmp_metaclass_name_1 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_1);
        condexpr_end_2:;
        condexpr_end_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_bases_name_1 = tmp_class_creation_1__bases;
        tmp_assign_source_22 = SELECT_METACLASS(tmp_metaclass_name_1, tmp_bases_name_1);
        Py_DECREF(tmp_metaclass_name_1);
        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        assert(tmp_class_creation_1__metaclass == NULL);
        tmp_class_creation_1__metaclass = tmp_assign_source_22;
    }
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_key_name_3;
        PyObject *tmp_dict_name_3;
        tmp_key_name_3 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_3 = tmp_class_creation_1__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_3, tmp_key_name_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_1__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_2;
        }
        branch_no_2:;
    }
    {
        nuitka_bool tmp_condition_result_5;
        PyObject *tmp_source_name_2;
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_source_name_2 = tmp_class_creation_1__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_2, const_str_plain___prepare__);
        tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_assign_source_23;
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_3;
            PyObject *tmp_args_name_1;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_kw_name_1;
            CHECK_OBJECT(tmp_class_creation_1__metaclass);
            tmp_source_name_3 = tmp_class_creation_1__metaclass;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain___prepare__);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 81;

                goto try_except_handler_2;
            }
            tmp_tuple_element_1 = const_str_plain_i18n_string;
            tmp_args_name_1 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_1);
            PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_tuple_element_1 = tmp_class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_1);
            PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
            CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
            tmp_kw_name_1 = tmp_class_creation_1__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 81;
            tmp_assign_source_23 = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_name_1);
            if (tmp_assign_source_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 81;

                goto try_except_handler_2;
            }
            assert(tmp_class_creation_1__prepared == NULL);
            tmp_class_creation_1__prepared = tmp_assign_source_23;
        }
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_operand_name_1;
            PyObject *tmp_source_name_4;
            CHECK_OBJECT(tmp_class_creation_1__prepared);
            tmp_source_name_4 = tmp_class_creation_1__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_4, const_str_plain___getitem__);
            tmp_operand_name_1 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 81;

                goto try_except_handler_2;
            }
            tmp_condition_result_6 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            {
                PyObject *tmp_raise_type_1;
                PyObject *tmp_raise_value_1;
                PyObject *tmp_left_name_1;
                PyObject *tmp_right_name_1;
                PyObject *tmp_tuple_element_2;
                PyObject *tmp_getattr_target_1;
                PyObject *tmp_getattr_attr_1;
                PyObject *tmp_getattr_default_1;
                PyObject *tmp_source_name_5;
                PyObject *tmp_type_arg_2;
                tmp_raise_type_1 = PyExc_TypeError;
                tmp_left_name_1 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_1__metaclass);
                tmp_getattr_target_1 = tmp_class_creation_1__metaclass;
                tmp_getattr_attr_1 = const_str_plain___name__;
                tmp_getattr_default_1 = const_str_angle_metaclass;
                tmp_tuple_element_2 = BUILTIN_GETATTR(tmp_getattr_target_1, tmp_getattr_attr_1, tmp_getattr_default_1);
                if (tmp_tuple_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 81;

                    goto try_except_handler_2;
                }
                tmp_right_name_1 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_2);
                CHECK_OBJECT(tmp_class_creation_1__prepared);
                tmp_type_arg_2 = tmp_class_creation_1__prepared;
                tmp_source_name_5 = BUILTIN_TYPE1(tmp_type_arg_2);
                assert(!(tmp_source_name_5 == NULL));
                tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain___name__);
                Py_DECREF(tmp_source_name_5);
                if (tmp_tuple_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_1);

                    exception_lineno = 81;

                    goto try_except_handler_2;
                }
                PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_2);
                tmp_raise_value_1 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
                Py_DECREF(tmp_right_name_1);
                if (tmp_raise_value_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 81;

                    goto try_except_handler_2;
                }
                exception_type = tmp_raise_type_1;
                Py_INCREF(tmp_raise_type_1);
                exception_value = tmp_raise_value_1;
                exception_lineno = 81;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_2;
            }
            branch_no_4:;
        }
        goto branch_end_3;
        branch_no_3:;
        {
            PyObject *tmp_assign_source_24;
            tmp_assign_source_24 = PyDict_New();
            assert(tmp_class_creation_1__prepared == NULL);
            tmp_class_creation_1__prepared = tmp_assign_source_24;
        }
        branch_end_3:;
    }
    {
        PyObject *tmp_assign_source_25;
        {
            PyObject *tmp_set_locals_1;
            CHECK_OBJECT(tmp_class_creation_1__prepared);
            tmp_set_locals_1 = tmp_class_creation_1__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_81 = tmp_set_locals_1;
            Py_INCREF(tmp_set_locals_1);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_81, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_4;
        }
        tmp_dictset_value = const_str_plain_i18n_string;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_81, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto try_except_handler_4;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_99b368de22d19265612088108949ccef_2, codeobj_99b368de22d19265612088108949ccef, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_99b368de22d19265612088108949ccef_2 = cache_frame_99b368de22d19265612088108949ccef_2;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_99b368de22d19265612088108949ccef_2);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_99b368de22d19265612088108949ccef_2) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_5___init__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_81, const_str_plain___init__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_6___str__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_81, const_str_plain___str__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_99b368de22d19265612088108949ccef_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_1;

        frame_exception_exit_2:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_99b368de22d19265612088108949ccef_2);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_99b368de22d19265612088108949ccef_2, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_99b368de22d19265612088108949ccef_2->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_99b368de22d19265612088108949ccef_2, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_99b368de22d19265612088108949ccef_2,
            type_description_2,
            outline_0_var___class__
        );


        // Release cached frame.
        if (frame_99b368de22d19265612088108949ccef_2 == cache_frame_99b368de22d19265612088108949ccef_2) {
            Py_DECREF(frame_99b368de22d19265612088108949ccef_2);
        }
        cache_frame_99b368de22d19265612088108949ccef_2 = NULL;

        assertFrameObject(frame_99b368de22d19265612088108949ccef_2);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_1;

        frame_no_exception_1:;
        goto skip_nested_handling_1;
        nested_frame_exit_1:;

        goto try_except_handler_4;
        skip_nested_handling_1:;
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_compexpr_left_2;
            PyObject *tmp_compexpr_right_2;
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_compexpr_left_2 = tmp_class_creation_1__bases;
            tmp_compexpr_right_2 = const_tuple_type_object_tuple;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 81;

                goto try_except_handler_4;
            }
            tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_5;
            } else {
                goto branch_no_5;
            }
            branch_yes_5:;
            tmp_dictset_value = const_tuple_type_object_tuple;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_81, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 81;

                goto try_except_handler_4;
            }
            branch_no_5:;
        }
        {
            PyObject *tmp_assign_source_26;
            PyObject *tmp_called_name_2;
            PyObject *tmp_args_name_2;
            PyObject *tmp_tuple_element_3;
            PyObject *tmp_kw_name_2;
            CHECK_OBJECT(tmp_class_creation_1__metaclass);
            tmp_called_name_2 = tmp_class_creation_1__metaclass;
            tmp_tuple_element_3 = const_str_plain_i18n_string;
            tmp_args_name_2 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_3);
            PyTuple_SET_ITEM(tmp_args_name_2, 0, tmp_tuple_element_3);
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_tuple_element_3 = tmp_class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_3);
            PyTuple_SET_ITEM(tmp_args_name_2, 1, tmp_tuple_element_3);
            tmp_tuple_element_3 = locals_PyQt5$uic$Compiler$qtproxies_81;
            Py_INCREF(tmp_tuple_element_3);
            PyTuple_SET_ITEM(tmp_args_name_2, 2, tmp_tuple_element_3);
            CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
            tmp_kw_name_2 = tmp_class_creation_1__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 81;
            tmp_assign_source_26 = CALL_FUNCTION(tmp_called_name_2, tmp_args_name_2, tmp_kw_name_2);
            Py_DECREF(tmp_args_name_2);
            if (tmp_assign_source_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 81;

                goto try_except_handler_4;
            }
            assert(outline_0_var___class__ == NULL);
            outline_0_var___class__ = tmp_assign_source_26;
        }
        CHECK_OBJECT(outline_0_var___class__);
        tmp_assign_source_25 = outline_0_var___class__;
        Py_INCREF(tmp_assign_source_25);
        goto try_return_handler_4;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_4:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_81);
        locals_PyQt5$uic$Compiler$qtproxies_81 = NULL;
        goto try_return_handler_3;
        // Exception handler code:
        try_except_handler_4:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_81);
        locals_PyQt5$uic$Compiler$qtproxies_81 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto try_except_handler_3;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_3:;
        CHECK_OBJECT((PyObject *)outline_0_var___class__);
        Py_DECREF(outline_0_var___class__);
        outline_0_var___class__ = NULL;

        goto outline_result_1;
        // Exception handler code:
        try_except_handler_3:;
        exception_keeper_type_3 = exception_type;
        exception_keeper_value_3 = exception_value;
        exception_keeper_tb_3 = exception_tb;
        exception_keeper_lineno_3 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_3;
        exception_value = exception_keeper_value_3;
        exception_tb = exception_keeper_tb_3;
        exception_lineno = exception_keeper_lineno_3;

        goto outline_exception_1;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_1:;
        exception_lineno = 81;
        goto try_except_handler_2;
        outline_result_1:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_string, tmp_assign_source_25);
    }
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;

    Py_XDECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_1__bases);
    Py_DECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_1__class_decl_dict);
    Py_DECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_1__metaclass);
    Py_DECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_1__prepared);
    Py_DECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;

    {
        PyObject *tmp_assign_source_27;
        tmp_assign_source_27 = const_int_pos_2;
        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_AS_ARGUMENT, tmp_assign_source_27);
    }
    {
        PyObject *tmp_assign_source_28;
        tmp_assign_source_28 = const_int_pos_1;
        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_AS_SIGNAL, tmp_assign_source_28);
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_dircall_arg1_2;
        tmp_dircall_arg1_2 = const_tuple_type_object_tuple;
        Py_INCREF(tmp_dircall_arg1_2);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_2};
            tmp_assign_source_29 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        assert(tmp_class_creation_2__bases == NULL);
        tmp_class_creation_2__bases = tmp_assign_source_29;
    }
    {
        PyObject *tmp_assign_source_30;
        tmp_assign_source_30 = PyDict_New();
        assert(tmp_class_creation_2__class_decl_dict == NULL);
        tmp_class_creation_2__class_decl_dict = tmp_assign_source_30;
    }
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_metaclass_name_2;
        nuitka_bool tmp_condition_result_8;
        PyObject *tmp_key_name_4;
        PyObject *tmp_dict_name_4;
        PyObject *tmp_dict_name_5;
        PyObject *tmp_key_name_5;
        nuitka_bool tmp_condition_result_9;
        int tmp_truth_name_2;
        PyObject *tmp_type_arg_3;
        PyObject *tmp_subscribed_name_2;
        PyObject *tmp_subscript_name_2;
        PyObject *tmp_bases_name_2;
        tmp_key_name_4 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_2__class_decl_dict);
        tmp_dict_name_4 = tmp_class_creation_2__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_4, tmp_key_name_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_3;
        } else {
            goto condexpr_false_3;
        }
        condexpr_true_3:;
        CHECK_OBJECT(tmp_class_creation_2__class_decl_dict);
        tmp_dict_name_5 = tmp_class_creation_2__class_decl_dict;
        tmp_key_name_5 = const_str_plain_metaclass;
        tmp_metaclass_name_2 = DICT_GET_ITEM(tmp_dict_name_5, tmp_key_name_5);
        if (tmp_metaclass_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        goto condexpr_end_3;
        condexpr_false_3:;
        CHECK_OBJECT(tmp_class_creation_2__bases);
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_class_creation_2__bases);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        tmp_condition_result_9 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_4;
        } else {
            goto condexpr_false_4;
        }
        condexpr_true_4:;
        CHECK_OBJECT(tmp_class_creation_2__bases);
        tmp_subscribed_name_2 = tmp_class_creation_2__bases;
        tmp_subscript_name_2 = const_int_0;
        tmp_type_arg_3 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_2, tmp_subscript_name_2, 0);
        if (tmp_type_arg_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        tmp_metaclass_name_2 = BUILTIN_TYPE1(tmp_type_arg_3);
        Py_DECREF(tmp_type_arg_3);
        if (tmp_metaclass_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        goto condexpr_end_4;
        condexpr_false_4:;
        tmp_metaclass_name_2 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_2);
        condexpr_end_4:;
        condexpr_end_3:;
        CHECK_OBJECT(tmp_class_creation_2__bases);
        tmp_bases_name_2 = tmp_class_creation_2__bases;
        tmp_assign_source_31 = SELECT_METACLASS(tmp_metaclass_name_2, tmp_bases_name_2);
        Py_DECREF(tmp_metaclass_name_2);
        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        assert(tmp_class_creation_2__metaclass == NULL);
        tmp_class_creation_2__metaclass = tmp_assign_source_31;
    }
    {
        nuitka_bool tmp_condition_result_10;
        PyObject *tmp_key_name_6;
        PyObject *tmp_dict_name_6;
        tmp_key_name_6 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_2__class_decl_dict);
        tmp_dict_name_6 = tmp_class_creation_2__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_6, tmp_key_name_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        branch_yes_6:;
        CHECK_OBJECT(tmp_class_creation_2__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_2__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_5;
        }
        branch_no_6:;
    }
    {
        nuitka_bool tmp_condition_result_11;
        PyObject *tmp_source_name_6;
        CHECK_OBJECT(tmp_class_creation_2__metaclass);
        tmp_source_name_6 = tmp_class_creation_2__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_6, const_str_plain___prepare__);
        tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
        branch_yes_7:;
        {
            PyObject *tmp_assign_source_32;
            PyObject *tmp_called_name_3;
            PyObject *tmp_source_name_7;
            PyObject *tmp_args_name_3;
            PyObject *tmp_tuple_element_4;
            PyObject *tmp_kw_name_3;
            CHECK_OBJECT(tmp_class_creation_2__metaclass);
            tmp_source_name_7 = tmp_class_creation_2__metaclass;
            tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain___prepare__);
            if (tmp_called_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 108;

                goto try_except_handler_5;
            }
            tmp_tuple_element_4 = const_str_plain_ProxyClassMember;
            tmp_args_name_3 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_4);
            PyTuple_SET_ITEM(tmp_args_name_3, 0, tmp_tuple_element_4);
            CHECK_OBJECT(tmp_class_creation_2__bases);
            tmp_tuple_element_4 = tmp_class_creation_2__bases;
            Py_INCREF(tmp_tuple_element_4);
            PyTuple_SET_ITEM(tmp_args_name_3, 1, tmp_tuple_element_4);
            CHECK_OBJECT(tmp_class_creation_2__class_decl_dict);
            tmp_kw_name_3 = tmp_class_creation_2__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 108;
            tmp_assign_source_32 = CALL_FUNCTION(tmp_called_name_3, tmp_args_name_3, tmp_kw_name_3);
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_args_name_3);
            if (tmp_assign_source_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 108;

                goto try_except_handler_5;
            }
            assert(tmp_class_creation_2__prepared == NULL);
            tmp_class_creation_2__prepared = tmp_assign_source_32;
        }
        {
            nuitka_bool tmp_condition_result_12;
            PyObject *tmp_operand_name_2;
            PyObject *tmp_source_name_8;
            CHECK_OBJECT(tmp_class_creation_2__prepared);
            tmp_source_name_8 = tmp_class_creation_2__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_8, const_str_plain___getitem__);
            tmp_operand_name_2 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 108;

                goto try_except_handler_5;
            }
            tmp_condition_result_12 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_raise_type_2;
                PyObject *tmp_raise_value_2;
                PyObject *tmp_left_name_2;
                PyObject *tmp_right_name_2;
                PyObject *tmp_tuple_element_5;
                PyObject *tmp_getattr_target_2;
                PyObject *tmp_getattr_attr_2;
                PyObject *tmp_getattr_default_2;
                PyObject *tmp_source_name_9;
                PyObject *tmp_type_arg_4;
                tmp_raise_type_2 = PyExc_TypeError;
                tmp_left_name_2 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_2__metaclass);
                tmp_getattr_target_2 = tmp_class_creation_2__metaclass;
                tmp_getattr_attr_2 = const_str_plain___name__;
                tmp_getattr_default_2 = const_str_angle_metaclass;
                tmp_tuple_element_5 = BUILTIN_GETATTR(tmp_getattr_target_2, tmp_getattr_attr_2, tmp_getattr_default_2);
                if (tmp_tuple_element_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 108;

                    goto try_except_handler_5;
                }
                tmp_right_name_2 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_2, 0, tmp_tuple_element_5);
                CHECK_OBJECT(tmp_class_creation_2__prepared);
                tmp_type_arg_4 = tmp_class_creation_2__prepared;
                tmp_source_name_9 = BUILTIN_TYPE1(tmp_type_arg_4);
                assert(!(tmp_source_name_9 == NULL));
                tmp_tuple_element_5 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain___name__);
                Py_DECREF(tmp_source_name_9);
                if (tmp_tuple_element_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_2);

                    exception_lineno = 108;

                    goto try_except_handler_5;
                }
                PyTuple_SET_ITEM(tmp_right_name_2, 1, tmp_tuple_element_5);
                tmp_raise_value_2 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_2, tmp_right_name_2);
                Py_DECREF(tmp_right_name_2);
                if (tmp_raise_value_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 108;

                    goto try_except_handler_5;
                }
                exception_type = tmp_raise_type_2;
                Py_INCREF(tmp_raise_type_2);
                exception_value = tmp_raise_value_2;
                exception_lineno = 108;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_5;
            }
            branch_no_8:;
        }
        goto branch_end_7;
        branch_no_7:;
        {
            PyObject *tmp_assign_source_33;
            tmp_assign_source_33 = PyDict_New();
            assert(tmp_class_creation_2__prepared == NULL);
            tmp_class_creation_2__prepared = tmp_assign_source_33;
        }
        branch_end_7:;
    }
    {
        PyObject *tmp_assign_source_34;
        {
            PyObject *tmp_set_locals_2;
            CHECK_OBJECT(tmp_class_creation_2__prepared);
            tmp_set_locals_2 = tmp_class_creation_2__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_108 = tmp_set_locals_2;
            Py_INCREF(tmp_set_locals_2);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_7;
        }
        tmp_dictset_value = const_str_plain_ProxyClassMember;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto try_except_handler_7;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_fd946e4f778f362b85bee3d204f62634_3, codeobj_fd946e4f778f362b85bee3d204f62634, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_fd946e4f778f362b85bee3d204f62634_3 = cache_frame_fd946e4f778f362b85bee3d204f62634_3;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_fd946e4f778f362b85bee3d204f62634_3);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_fd946e4f778f362b85bee3d204f62634_3) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_7___init__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___init__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 109;
            type_description_2 = "o";
            goto frame_exception_exit_3;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_8___str__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___str__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 114;
            type_description_2 = "o";
            goto frame_exception_exit_3;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_9___call__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___call__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 117;
            type_description_2 = "o";
            goto frame_exception_exit_3;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_10___getattribute__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___getattribute__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 139;
            type_description_2 = "o";
            goto frame_exception_exit_3;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_11___getitem__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___getitem__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 152;
            type_description_2 = "o";
            goto frame_exception_exit_3;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_fd946e4f778f362b85bee3d204f62634_3);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_2;

        frame_exception_exit_3:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_fd946e4f778f362b85bee3d204f62634_3);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_fd946e4f778f362b85bee3d204f62634_3, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_fd946e4f778f362b85bee3d204f62634_3->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_fd946e4f778f362b85bee3d204f62634_3, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_fd946e4f778f362b85bee3d204f62634_3,
            type_description_2,
            outline_1_var___class__
        );


        // Release cached frame.
        if (frame_fd946e4f778f362b85bee3d204f62634_3 == cache_frame_fd946e4f778f362b85bee3d204f62634_3) {
            Py_DECREF(frame_fd946e4f778f362b85bee3d204f62634_3);
        }
        cache_frame_fd946e4f778f362b85bee3d204f62634_3 = NULL;

        assertFrameObject(frame_fd946e4f778f362b85bee3d204f62634_3);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_2;

        frame_no_exception_2:;
        goto skip_nested_handling_2;
        nested_frame_exit_2:;

        goto try_except_handler_7;
        skip_nested_handling_2:;
        {
            nuitka_bool tmp_condition_result_13;
            PyObject *tmp_compexpr_left_3;
            PyObject *tmp_compexpr_right_3;
            CHECK_OBJECT(tmp_class_creation_2__bases);
            tmp_compexpr_left_3 = tmp_class_creation_2__bases;
            tmp_compexpr_right_3 = const_tuple_type_object_tuple;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 108;

                goto try_except_handler_7;
            }
            tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                goto branch_yes_9;
            } else {
                goto branch_no_9;
            }
            branch_yes_9:;
            tmp_dictset_value = const_tuple_type_object_tuple;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_108, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 108;

                goto try_except_handler_7;
            }
            branch_no_9:;
        }
        {
            PyObject *tmp_assign_source_35;
            PyObject *tmp_called_name_4;
            PyObject *tmp_args_name_4;
            PyObject *tmp_tuple_element_6;
            PyObject *tmp_kw_name_4;
            CHECK_OBJECT(tmp_class_creation_2__metaclass);
            tmp_called_name_4 = tmp_class_creation_2__metaclass;
            tmp_tuple_element_6 = const_str_plain_ProxyClassMember;
            tmp_args_name_4 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_6);
            PyTuple_SET_ITEM(tmp_args_name_4, 0, tmp_tuple_element_6);
            CHECK_OBJECT(tmp_class_creation_2__bases);
            tmp_tuple_element_6 = tmp_class_creation_2__bases;
            Py_INCREF(tmp_tuple_element_6);
            PyTuple_SET_ITEM(tmp_args_name_4, 1, tmp_tuple_element_6);
            tmp_tuple_element_6 = locals_PyQt5$uic$Compiler$qtproxies_108;
            Py_INCREF(tmp_tuple_element_6);
            PyTuple_SET_ITEM(tmp_args_name_4, 2, tmp_tuple_element_6);
            CHECK_OBJECT(tmp_class_creation_2__class_decl_dict);
            tmp_kw_name_4 = tmp_class_creation_2__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 108;
            tmp_assign_source_35 = CALL_FUNCTION(tmp_called_name_4, tmp_args_name_4, tmp_kw_name_4);
            Py_DECREF(tmp_args_name_4);
            if (tmp_assign_source_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 108;

                goto try_except_handler_7;
            }
            assert(outline_1_var___class__ == NULL);
            outline_1_var___class__ = tmp_assign_source_35;
        }
        CHECK_OBJECT(outline_1_var___class__);
        tmp_assign_source_34 = outline_1_var___class__;
        Py_INCREF(tmp_assign_source_34);
        goto try_return_handler_7;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_7:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_108);
        locals_PyQt5$uic$Compiler$qtproxies_108 = NULL;
        goto try_return_handler_6;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_108);
        locals_PyQt5$uic$Compiler$qtproxies_108 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto try_except_handler_6;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_6:;
        CHECK_OBJECT((PyObject *)outline_1_var___class__);
        Py_DECREF(outline_1_var___class__);
        outline_1_var___class__ = NULL;

        goto outline_result_2;
        // Exception handler code:
        try_except_handler_6:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_6;
        exception_value = exception_keeper_value_6;
        exception_tb = exception_keeper_tb_6;
        exception_lineno = exception_keeper_lineno_6;

        goto outline_exception_2;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_2:;
        exception_lineno = 108;
        goto try_except_handler_5;
        outline_result_2:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClassMember, tmp_assign_source_34);
    }
    goto try_end_3;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_7 = exception_type;
    exception_keeper_value_7 = exception_value;
    exception_keeper_tb_7 = exception_tb;
    exception_keeper_lineno_7 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_2__bases);
    tmp_class_creation_2__bases = NULL;

    Py_XDECREF(tmp_class_creation_2__class_decl_dict);
    tmp_class_creation_2__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_2__metaclass);
    tmp_class_creation_2__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_2__prepared);
    tmp_class_creation_2__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_7;
    exception_value = exception_keeper_value_7;
    exception_tb = exception_keeper_tb_7;
    exception_lineno = exception_keeper_lineno_7;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_2__bases);
    Py_DECREF(tmp_class_creation_2__bases);
    tmp_class_creation_2__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_2__class_decl_dict);
    Py_DECREF(tmp_class_creation_2__class_decl_dict);
    tmp_class_creation_2__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_2__metaclass);
    Py_DECREF(tmp_class_creation_2__metaclass);
    tmp_class_creation_2__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_2__prepared);
    Py_DECREF(tmp_class_creation_2__prepared);
    tmp_class_creation_2__prepared = NULL;

    // Tried code:
    {
        PyObject *tmp_assign_source_36;
        PyObject *tmp_dircall_arg1_3;
        tmp_dircall_arg1_3 = const_tuple_type_object_tuple;
        Py_INCREF(tmp_dircall_arg1_3);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_3};
            tmp_assign_source_36 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        assert(tmp_class_creation_3__bases == NULL);
        tmp_class_creation_3__bases = tmp_assign_source_36;
    }
    {
        PyObject *tmp_assign_source_37;
        tmp_assign_source_37 = PyDict_New();
        assert(tmp_class_creation_3__class_decl_dict == NULL);
        tmp_class_creation_3__class_decl_dict = tmp_assign_source_37;
    }
    {
        PyObject *tmp_assign_source_38;
        PyObject *tmp_metaclass_name_3;
        nuitka_bool tmp_condition_result_14;
        PyObject *tmp_key_name_7;
        PyObject *tmp_dict_name_7;
        PyObject *tmp_dict_name_8;
        PyObject *tmp_key_name_8;
        nuitka_bool tmp_condition_result_15;
        int tmp_truth_name_3;
        PyObject *tmp_type_arg_5;
        PyObject *tmp_subscribed_name_3;
        PyObject *tmp_subscript_name_3;
        PyObject *tmp_bases_name_3;
        tmp_key_name_7 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_3__class_decl_dict);
        tmp_dict_name_7 = tmp_class_creation_3__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_7, tmp_key_name_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        tmp_condition_result_14 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_5;
        } else {
            goto condexpr_false_5;
        }
        condexpr_true_5:;
        CHECK_OBJECT(tmp_class_creation_3__class_decl_dict);
        tmp_dict_name_8 = tmp_class_creation_3__class_decl_dict;
        tmp_key_name_8 = const_str_plain_metaclass;
        tmp_metaclass_name_3 = DICT_GET_ITEM(tmp_dict_name_8, tmp_key_name_8);
        if (tmp_metaclass_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        goto condexpr_end_5;
        condexpr_false_5:;
        CHECK_OBJECT(tmp_class_creation_3__bases);
        tmp_truth_name_3 = CHECK_IF_TRUE(tmp_class_creation_3__bases);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        tmp_condition_result_15 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_6;
        } else {
            goto condexpr_false_6;
        }
        condexpr_true_6:;
        CHECK_OBJECT(tmp_class_creation_3__bases);
        tmp_subscribed_name_3 = tmp_class_creation_3__bases;
        tmp_subscript_name_3 = const_int_0;
        tmp_type_arg_5 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_3, tmp_subscript_name_3, 0);
        if (tmp_type_arg_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        tmp_metaclass_name_3 = BUILTIN_TYPE1(tmp_type_arg_5);
        Py_DECREF(tmp_type_arg_5);
        if (tmp_metaclass_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        goto condexpr_end_6;
        condexpr_false_6:;
        tmp_metaclass_name_3 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_3);
        condexpr_end_6:;
        condexpr_end_5:;
        CHECK_OBJECT(tmp_class_creation_3__bases);
        tmp_bases_name_3 = tmp_class_creation_3__bases;
        tmp_assign_source_38 = SELECT_METACLASS(tmp_metaclass_name_3, tmp_bases_name_3);
        Py_DECREF(tmp_metaclass_name_3);
        if (tmp_assign_source_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        assert(tmp_class_creation_3__metaclass == NULL);
        tmp_class_creation_3__metaclass = tmp_assign_source_38;
    }
    {
        nuitka_bool tmp_condition_result_16;
        PyObject *tmp_key_name_9;
        PyObject *tmp_dict_name_9;
        tmp_key_name_9 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_3__class_decl_dict);
        tmp_dict_name_9 = tmp_class_creation_3__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_9, tmp_key_name_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
            goto branch_yes_10;
        } else {
            goto branch_no_10;
        }
        branch_yes_10:;
        CHECK_OBJECT(tmp_class_creation_3__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_3__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_8;
        }
        branch_no_10:;
    }
    {
        nuitka_bool tmp_condition_result_17;
        PyObject *tmp_source_name_10;
        CHECK_OBJECT(tmp_class_creation_3__metaclass);
        tmp_source_name_10 = tmp_class_creation_3__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_10, const_str_plain___prepare__);
        tmp_condition_result_17 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
        branch_yes_11:;
        {
            PyObject *tmp_assign_source_39;
            PyObject *tmp_called_name_5;
            PyObject *tmp_source_name_11;
            PyObject *tmp_args_name_5;
            PyObject *tmp_tuple_element_7;
            PyObject *tmp_kw_name_5;
            CHECK_OBJECT(tmp_class_creation_3__metaclass);
            tmp_source_name_11 = tmp_class_creation_3__metaclass;
            tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain___prepare__);
            if (tmp_called_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 161;

                goto try_except_handler_8;
            }
            tmp_tuple_element_7 = const_str_plain_ProxySignalWithArguments;
            tmp_args_name_5 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_7);
            PyTuple_SET_ITEM(tmp_args_name_5, 0, tmp_tuple_element_7);
            CHECK_OBJECT(tmp_class_creation_3__bases);
            tmp_tuple_element_7 = tmp_class_creation_3__bases;
            Py_INCREF(tmp_tuple_element_7);
            PyTuple_SET_ITEM(tmp_args_name_5, 1, tmp_tuple_element_7);
            CHECK_OBJECT(tmp_class_creation_3__class_decl_dict);
            tmp_kw_name_5 = tmp_class_creation_3__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 161;
            tmp_assign_source_39 = CALL_FUNCTION(tmp_called_name_5, tmp_args_name_5, tmp_kw_name_5);
            Py_DECREF(tmp_called_name_5);
            Py_DECREF(tmp_args_name_5);
            if (tmp_assign_source_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 161;

                goto try_except_handler_8;
            }
            assert(tmp_class_creation_3__prepared == NULL);
            tmp_class_creation_3__prepared = tmp_assign_source_39;
        }
        {
            nuitka_bool tmp_condition_result_18;
            PyObject *tmp_operand_name_3;
            PyObject *tmp_source_name_12;
            CHECK_OBJECT(tmp_class_creation_3__prepared);
            tmp_source_name_12 = tmp_class_creation_3__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_12, const_str_plain___getitem__);
            tmp_operand_name_3 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 161;

                goto try_except_handler_8;
            }
            tmp_condition_result_18 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                goto branch_yes_12;
            } else {
                goto branch_no_12;
            }
            branch_yes_12:;
            {
                PyObject *tmp_raise_type_3;
                PyObject *tmp_raise_value_3;
                PyObject *tmp_left_name_3;
                PyObject *tmp_right_name_3;
                PyObject *tmp_tuple_element_8;
                PyObject *tmp_getattr_target_3;
                PyObject *tmp_getattr_attr_3;
                PyObject *tmp_getattr_default_3;
                PyObject *tmp_source_name_13;
                PyObject *tmp_type_arg_6;
                tmp_raise_type_3 = PyExc_TypeError;
                tmp_left_name_3 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_3__metaclass);
                tmp_getattr_target_3 = tmp_class_creation_3__metaclass;
                tmp_getattr_attr_3 = const_str_plain___name__;
                tmp_getattr_default_3 = const_str_angle_metaclass;
                tmp_tuple_element_8 = BUILTIN_GETATTR(tmp_getattr_target_3, tmp_getattr_attr_3, tmp_getattr_default_3);
                if (tmp_tuple_element_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 161;

                    goto try_except_handler_8;
                }
                tmp_right_name_3 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_3, 0, tmp_tuple_element_8);
                CHECK_OBJECT(tmp_class_creation_3__prepared);
                tmp_type_arg_6 = tmp_class_creation_3__prepared;
                tmp_source_name_13 = BUILTIN_TYPE1(tmp_type_arg_6);
                assert(!(tmp_source_name_13 == NULL));
                tmp_tuple_element_8 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain___name__);
                Py_DECREF(tmp_source_name_13);
                if (tmp_tuple_element_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_3);

                    exception_lineno = 161;

                    goto try_except_handler_8;
                }
                PyTuple_SET_ITEM(tmp_right_name_3, 1, tmp_tuple_element_8);
                tmp_raise_value_3 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_3, tmp_right_name_3);
                Py_DECREF(tmp_right_name_3);
                if (tmp_raise_value_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 161;

                    goto try_except_handler_8;
                }
                exception_type = tmp_raise_type_3;
                Py_INCREF(tmp_raise_type_3);
                exception_value = tmp_raise_value_3;
                exception_lineno = 161;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_8;
            }
            branch_no_12:;
        }
        goto branch_end_11;
        branch_no_11:;
        {
            PyObject *tmp_assign_source_40;
            tmp_assign_source_40 = PyDict_New();
            assert(tmp_class_creation_3__prepared == NULL);
            tmp_class_creation_3__prepared = tmp_assign_source_40;
        }
        branch_end_11:;
    }
    {
        PyObject *tmp_assign_source_41;
        {
            PyObject *tmp_set_locals_3;
            CHECK_OBJECT(tmp_class_creation_3__prepared);
            tmp_set_locals_3 = tmp_class_creation_3__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_161 = tmp_set_locals_3;
            Py_INCREF(tmp_set_locals_3);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_161, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_10;
        }
        tmp_dictset_value = const_str_digest_7f71f416f71ae56656fd7ff43769d013;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_161, const_str_plain___doc__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_10;
        }
        tmp_dictset_value = const_str_plain_ProxySignalWithArguments;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_161, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto try_except_handler_10;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_254425c2a370604fc2bd4045785d9b68_4, codeobj_254425c2a370604fc2bd4045785d9b68, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_254425c2a370604fc2bd4045785d9b68_4 = cache_frame_254425c2a370604fc2bd4045785d9b68_4;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_254425c2a370604fc2bd4045785d9b68_4);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_254425c2a370604fc2bd4045785d9b68_4) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_12___init__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_161, const_str_plain___init__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 165;
            type_description_2 = "o";
            goto frame_exception_exit_4;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_13_connect();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_161, const_str_plain_connect, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 176;
            type_description_2 = "o";
            goto frame_exception_exit_4;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_254425c2a370604fc2bd4045785d9b68_4);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_3;

        frame_exception_exit_4:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_254425c2a370604fc2bd4045785d9b68_4);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_254425c2a370604fc2bd4045785d9b68_4, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_254425c2a370604fc2bd4045785d9b68_4->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_254425c2a370604fc2bd4045785d9b68_4, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_254425c2a370604fc2bd4045785d9b68_4,
            type_description_2,
            outline_2_var___class__
        );


        // Release cached frame.
        if (frame_254425c2a370604fc2bd4045785d9b68_4 == cache_frame_254425c2a370604fc2bd4045785d9b68_4) {
            Py_DECREF(frame_254425c2a370604fc2bd4045785d9b68_4);
        }
        cache_frame_254425c2a370604fc2bd4045785d9b68_4 = NULL;

        assertFrameObject(frame_254425c2a370604fc2bd4045785d9b68_4);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_3;

        frame_no_exception_3:;
        goto skip_nested_handling_3;
        nested_frame_exit_3:;

        goto try_except_handler_10;
        skip_nested_handling_3:;
        {
            nuitka_bool tmp_condition_result_19;
            PyObject *tmp_compexpr_left_4;
            PyObject *tmp_compexpr_right_4;
            CHECK_OBJECT(tmp_class_creation_3__bases);
            tmp_compexpr_left_4 = tmp_class_creation_3__bases;
            tmp_compexpr_right_4 = const_tuple_type_object_tuple;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 161;

                goto try_except_handler_10;
            }
            tmp_condition_result_19 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                goto branch_yes_13;
            } else {
                goto branch_no_13;
            }
            branch_yes_13:;
            tmp_dictset_value = const_tuple_type_object_tuple;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_161, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 161;

                goto try_except_handler_10;
            }
            branch_no_13:;
        }
        {
            PyObject *tmp_assign_source_42;
            PyObject *tmp_called_name_6;
            PyObject *tmp_args_name_6;
            PyObject *tmp_tuple_element_9;
            PyObject *tmp_kw_name_6;
            CHECK_OBJECT(tmp_class_creation_3__metaclass);
            tmp_called_name_6 = tmp_class_creation_3__metaclass;
            tmp_tuple_element_9 = const_str_plain_ProxySignalWithArguments;
            tmp_args_name_6 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_9);
            PyTuple_SET_ITEM(tmp_args_name_6, 0, tmp_tuple_element_9);
            CHECK_OBJECT(tmp_class_creation_3__bases);
            tmp_tuple_element_9 = tmp_class_creation_3__bases;
            Py_INCREF(tmp_tuple_element_9);
            PyTuple_SET_ITEM(tmp_args_name_6, 1, tmp_tuple_element_9);
            tmp_tuple_element_9 = locals_PyQt5$uic$Compiler$qtproxies_161;
            Py_INCREF(tmp_tuple_element_9);
            PyTuple_SET_ITEM(tmp_args_name_6, 2, tmp_tuple_element_9);
            CHECK_OBJECT(tmp_class_creation_3__class_decl_dict);
            tmp_kw_name_6 = tmp_class_creation_3__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 161;
            tmp_assign_source_42 = CALL_FUNCTION(tmp_called_name_6, tmp_args_name_6, tmp_kw_name_6);
            Py_DECREF(tmp_args_name_6);
            if (tmp_assign_source_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 161;

                goto try_except_handler_10;
            }
            assert(outline_2_var___class__ == NULL);
            outline_2_var___class__ = tmp_assign_source_42;
        }
        CHECK_OBJECT(outline_2_var___class__);
        tmp_assign_source_41 = outline_2_var___class__;
        Py_INCREF(tmp_assign_source_41);
        goto try_return_handler_10;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_10:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_161);
        locals_PyQt5$uic$Compiler$qtproxies_161 = NULL;
        goto try_return_handler_9;
        // Exception handler code:
        try_except_handler_10:;
        exception_keeper_type_8 = exception_type;
        exception_keeper_value_8 = exception_value;
        exception_keeper_tb_8 = exception_tb;
        exception_keeper_lineno_8 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_161);
        locals_PyQt5$uic$Compiler$qtproxies_161 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_8;
        exception_value = exception_keeper_value_8;
        exception_tb = exception_keeper_tb_8;
        exception_lineno = exception_keeper_lineno_8;

        goto try_except_handler_9;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_9:;
        CHECK_OBJECT((PyObject *)outline_2_var___class__);
        Py_DECREF(outline_2_var___class__);
        outline_2_var___class__ = NULL;

        goto outline_result_3;
        // Exception handler code:
        try_except_handler_9:;
        exception_keeper_type_9 = exception_type;
        exception_keeper_value_9 = exception_value;
        exception_keeper_tb_9 = exception_tb;
        exception_keeper_lineno_9 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_9;
        exception_value = exception_keeper_value_9;
        exception_tb = exception_keeper_tb_9;
        exception_lineno = exception_keeper_lineno_9;

        goto outline_exception_3;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_3:;
        exception_lineno = 161;
        goto try_except_handler_8;
        outline_result_3:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxySignalWithArguments, tmp_assign_source_41);
    }
    goto try_end_4;
    // Exception handler code:
    try_except_handler_8:;
    exception_keeper_type_10 = exception_type;
    exception_keeper_value_10 = exception_value;
    exception_keeper_tb_10 = exception_tb;
    exception_keeper_lineno_10 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_3__bases);
    tmp_class_creation_3__bases = NULL;

    Py_XDECREF(tmp_class_creation_3__class_decl_dict);
    tmp_class_creation_3__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_3__metaclass);
    tmp_class_creation_3__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_3__prepared);
    tmp_class_creation_3__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_10;
    exception_value = exception_keeper_value_10;
    exception_tb = exception_keeper_tb_10;
    exception_lineno = exception_keeper_lineno_10;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_3__bases);
    Py_DECREF(tmp_class_creation_3__bases);
    tmp_class_creation_3__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_3__class_decl_dict);
    Py_DECREF(tmp_class_creation_3__class_decl_dict);
    tmp_class_creation_3__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_3__metaclass);
    Py_DECREF(tmp_class_creation_3__metaclass);
    tmp_class_creation_3__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_3__prepared);
    Py_DECREF(tmp_class_creation_3__prepared);
    tmp_class_creation_3__prepared = NULL;

    // Tried code:
    {
        PyObject *tmp_assign_source_43;
        PyObject *tmp_tuple_element_10;
        PyObject *tmp_mvar_value_4;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyBase);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyBase);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1369 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 180;

            goto try_except_handler_11;
        }

        tmp_tuple_element_10 = tmp_mvar_value_4;
        tmp_assign_source_43 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_10);
        PyTuple_SET_ITEM(tmp_assign_source_43, 0, tmp_tuple_element_10);
        assert(tmp_class_creation_4__bases_orig == NULL);
        tmp_class_creation_4__bases_orig = tmp_assign_source_43;
    }
    {
        PyObject *tmp_assign_source_44;
        PyObject *tmp_dircall_arg1_4;
        CHECK_OBJECT(tmp_class_creation_4__bases_orig);
        tmp_dircall_arg1_4 = tmp_class_creation_4__bases_orig;
        Py_INCREF(tmp_dircall_arg1_4);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_4};
            tmp_assign_source_44 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        assert(tmp_class_creation_4__bases == NULL);
        tmp_class_creation_4__bases = tmp_assign_source_44;
    }
    {
        PyObject *tmp_assign_source_45;
        tmp_assign_source_45 = PyDict_New();
        assert(tmp_class_creation_4__class_decl_dict == NULL);
        tmp_class_creation_4__class_decl_dict = tmp_assign_source_45;
    }
    {
        PyObject *tmp_assign_source_46;
        PyObject *tmp_metaclass_name_4;
        nuitka_bool tmp_condition_result_20;
        PyObject *tmp_key_name_10;
        PyObject *tmp_dict_name_10;
        PyObject *tmp_dict_name_11;
        PyObject *tmp_key_name_11;
        nuitka_bool tmp_condition_result_21;
        int tmp_truth_name_4;
        PyObject *tmp_type_arg_7;
        PyObject *tmp_subscribed_name_4;
        PyObject *tmp_subscript_name_4;
        PyObject *tmp_bases_name_4;
        tmp_key_name_10 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_4__class_decl_dict);
        tmp_dict_name_10 = tmp_class_creation_4__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_10, tmp_key_name_10);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        tmp_condition_result_20 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_7;
        } else {
            goto condexpr_false_7;
        }
        condexpr_true_7:;
        CHECK_OBJECT(tmp_class_creation_4__class_decl_dict);
        tmp_dict_name_11 = tmp_class_creation_4__class_decl_dict;
        tmp_key_name_11 = const_str_plain_metaclass;
        tmp_metaclass_name_4 = DICT_GET_ITEM(tmp_dict_name_11, tmp_key_name_11);
        if (tmp_metaclass_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        goto condexpr_end_7;
        condexpr_false_7:;
        CHECK_OBJECT(tmp_class_creation_4__bases);
        tmp_truth_name_4 = CHECK_IF_TRUE(tmp_class_creation_4__bases);
        if (tmp_truth_name_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        tmp_condition_result_21 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_8;
        } else {
            goto condexpr_false_8;
        }
        condexpr_true_8:;
        CHECK_OBJECT(tmp_class_creation_4__bases);
        tmp_subscribed_name_4 = tmp_class_creation_4__bases;
        tmp_subscript_name_4 = const_int_0;
        tmp_type_arg_7 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_4, tmp_subscript_name_4, 0);
        if (tmp_type_arg_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        tmp_metaclass_name_4 = BUILTIN_TYPE1(tmp_type_arg_7);
        Py_DECREF(tmp_type_arg_7);
        if (tmp_metaclass_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        goto condexpr_end_8;
        condexpr_false_8:;
        tmp_metaclass_name_4 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_4);
        condexpr_end_8:;
        condexpr_end_7:;
        CHECK_OBJECT(tmp_class_creation_4__bases);
        tmp_bases_name_4 = tmp_class_creation_4__bases;
        tmp_assign_source_46 = SELECT_METACLASS(tmp_metaclass_name_4, tmp_bases_name_4);
        Py_DECREF(tmp_metaclass_name_4);
        if (tmp_assign_source_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        assert(tmp_class_creation_4__metaclass == NULL);
        tmp_class_creation_4__metaclass = tmp_assign_source_46;
    }
    {
        nuitka_bool tmp_condition_result_22;
        PyObject *tmp_key_name_12;
        PyObject *tmp_dict_name_12;
        tmp_key_name_12 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_4__class_decl_dict);
        tmp_dict_name_12 = tmp_class_creation_4__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_12, tmp_key_name_12);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        tmp_condition_result_22 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
            goto branch_yes_14;
        } else {
            goto branch_no_14;
        }
        branch_yes_14:;
        CHECK_OBJECT(tmp_class_creation_4__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_4__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_11;
        }
        branch_no_14:;
    }
    {
        nuitka_bool tmp_condition_result_23;
        PyObject *tmp_source_name_14;
        CHECK_OBJECT(tmp_class_creation_4__metaclass);
        tmp_source_name_14 = tmp_class_creation_4__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_14, const_str_plain___prepare__);
        tmp_condition_result_23 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
            goto branch_yes_15;
        } else {
            goto branch_no_15;
        }
        branch_yes_15:;
        {
            PyObject *tmp_assign_source_47;
            PyObject *tmp_called_name_7;
            PyObject *tmp_source_name_15;
            PyObject *tmp_args_name_7;
            PyObject *tmp_tuple_element_11;
            PyObject *tmp_kw_name_7;
            CHECK_OBJECT(tmp_class_creation_4__metaclass);
            tmp_source_name_15 = tmp_class_creation_4__metaclass;
            tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain___prepare__);
            if (tmp_called_name_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 180;

                goto try_except_handler_11;
            }
            tmp_tuple_element_11 = const_str_plain_ProxyClass;
            tmp_args_name_7 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_11);
            PyTuple_SET_ITEM(tmp_args_name_7, 0, tmp_tuple_element_11);
            CHECK_OBJECT(tmp_class_creation_4__bases);
            tmp_tuple_element_11 = tmp_class_creation_4__bases;
            Py_INCREF(tmp_tuple_element_11);
            PyTuple_SET_ITEM(tmp_args_name_7, 1, tmp_tuple_element_11);
            CHECK_OBJECT(tmp_class_creation_4__class_decl_dict);
            tmp_kw_name_7 = tmp_class_creation_4__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 180;
            tmp_assign_source_47 = CALL_FUNCTION(tmp_called_name_7, tmp_args_name_7, tmp_kw_name_7);
            Py_DECREF(tmp_called_name_7);
            Py_DECREF(tmp_args_name_7);
            if (tmp_assign_source_47 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 180;

                goto try_except_handler_11;
            }
            assert(tmp_class_creation_4__prepared == NULL);
            tmp_class_creation_4__prepared = tmp_assign_source_47;
        }
        {
            nuitka_bool tmp_condition_result_24;
            PyObject *tmp_operand_name_4;
            PyObject *tmp_source_name_16;
            CHECK_OBJECT(tmp_class_creation_4__prepared);
            tmp_source_name_16 = tmp_class_creation_4__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_16, const_str_plain___getitem__);
            tmp_operand_name_4 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 180;

                goto try_except_handler_11;
            }
            tmp_condition_result_24 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                goto branch_yes_16;
            } else {
                goto branch_no_16;
            }
            branch_yes_16:;
            {
                PyObject *tmp_raise_type_4;
                PyObject *tmp_raise_value_4;
                PyObject *tmp_left_name_4;
                PyObject *tmp_right_name_4;
                PyObject *tmp_tuple_element_12;
                PyObject *tmp_getattr_target_4;
                PyObject *tmp_getattr_attr_4;
                PyObject *tmp_getattr_default_4;
                PyObject *tmp_source_name_17;
                PyObject *tmp_type_arg_8;
                tmp_raise_type_4 = PyExc_TypeError;
                tmp_left_name_4 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_4__metaclass);
                tmp_getattr_target_4 = tmp_class_creation_4__metaclass;
                tmp_getattr_attr_4 = const_str_plain___name__;
                tmp_getattr_default_4 = const_str_angle_metaclass;
                tmp_tuple_element_12 = BUILTIN_GETATTR(tmp_getattr_target_4, tmp_getattr_attr_4, tmp_getattr_default_4);
                if (tmp_tuple_element_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 180;

                    goto try_except_handler_11;
                }
                tmp_right_name_4 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_4, 0, tmp_tuple_element_12);
                CHECK_OBJECT(tmp_class_creation_4__prepared);
                tmp_type_arg_8 = tmp_class_creation_4__prepared;
                tmp_source_name_17 = BUILTIN_TYPE1(tmp_type_arg_8);
                assert(!(tmp_source_name_17 == NULL));
                tmp_tuple_element_12 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain___name__);
                Py_DECREF(tmp_source_name_17);
                if (tmp_tuple_element_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_4);

                    exception_lineno = 180;

                    goto try_except_handler_11;
                }
                PyTuple_SET_ITEM(tmp_right_name_4, 1, tmp_tuple_element_12);
                tmp_raise_value_4 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_4, tmp_right_name_4);
                Py_DECREF(tmp_right_name_4);
                if (tmp_raise_value_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 180;

                    goto try_except_handler_11;
                }
                exception_type = tmp_raise_type_4;
                Py_INCREF(tmp_raise_type_4);
                exception_value = tmp_raise_value_4;
                exception_lineno = 180;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_11;
            }
            branch_no_16:;
        }
        goto branch_end_15;
        branch_no_15:;
        {
            PyObject *tmp_assign_source_48;
            tmp_assign_source_48 = PyDict_New();
            assert(tmp_class_creation_4__prepared == NULL);
            tmp_class_creation_4__prepared = tmp_assign_source_48;
        }
        branch_end_15:;
    }
    {
        PyObject *tmp_assign_source_49;
        {
            PyObject *tmp_set_locals_4;
            CHECK_OBJECT(tmp_class_creation_4__prepared);
            tmp_set_locals_4 = tmp_class_creation_4__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_180 = tmp_set_locals_4;
            Py_INCREF(tmp_set_locals_4);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_180, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_13;
        }
        tmp_dictset_value = const_str_plain_ProxyClass;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_180, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto try_except_handler_13;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_5187a6dce54a4b84b026582d33ef8fb8_5, codeobj_5187a6dce54a4b84b026582d33ef8fb8, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_5187a6dce54a4b84b026582d33ef8fb8_5 = cache_frame_5187a6dce54a4b84b026582d33ef8fb8_5;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_5187a6dce54a4b84b026582d33ef8fb8_5);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_5187a6dce54a4b84b026582d33ef8fb8_5) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = const_int_0;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_180, const_str_plain_flags, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 181;
            type_description_2 = "o";
            goto frame_exception_exit_5;
        }
        {
            PyObject *tmp_defaults_1;
            tmp_defaults_1 = const_tuple_tuple_empty_false_tuple;
            Py_INCREF(tmp_defaults_1);
            tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_14___init__(tmp_defaults_1);



            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_180, const_str_plain___init__, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 183;
                type_description_2 = "o";
                goto frame_exception_exit_5;
            }
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_15___str__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_180, const_str_plain___str__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 202;
            type_description_2 = "o";
            goto frame_exception_exit_5;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_16___getattribute__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_180, const_str_plain___getattribute__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 205;
            type_description_2 = "o";
            goto frame_exception_exit_5;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_5187a6dce54a4b84b026582d33ef8fb8_5);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_4;

        frame_exception_exit_5:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_5187a6dce54a4b84b026582d33ef8fb8_5);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_5187a6dce54a4b84b026582d33ef8fb8_5, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_5187a6dce54a4b84b026582d33ef8fb8_5->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_5187a6dce54a4b84b026582d33ef8fb8_5, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_5187a6dce54a4b84b026582d33ef8fb8_5,
            type_description_2,
            outline_3_var___class__
        );


        // Release cached frame.
        if (frame_5187a6dce54a4b84b026582d33ef8fb8_5 == cache_frame_5187a6dce54a4b84b026582d33ef8fb8_5) {
            Py_DECREF(frame_5187a6dce54a4b84b026582d33ef8fb8_5);
        }
        cache_frame_5187a6dce54a4b84b026582d33ef8fb8_5 = NULL;

        assertFrameObject(frame_5187a6dce54a4b84b026582d33ef8fb8_5);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_4;

        frame_no_exception_4:;
        goto skip_nested_handling_4;
        nested_frame_exit_4:;

        goto try_except_handler_13;
        skip_nested_handling_4:;
        {
            nuitka_bool tmp_condition_result_25;
            PyObject *tmp_compexpr_left_5;
            PyObject *tmp_compexpr_right_5;
            CHECK_OBJECT(tmp_class_creation_4__bases);
            tmp_compexpr_left_5 = tmp_class_creation_4__bases;
            CHECK_OBJECT(tmp_class_creation_4__bases_orig);
            tmp_compexpr_right_5 = tmp_class_creation_4__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 180;

                goto try_except_handler_13;
            }
            tmp_condition_result_25 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                goto branch_yes_17;
            } else {
                goto branch_no_17;
            }
            branch_yes_17:;
            CHECK_OBJECT(tmp_class_creation_4__bases_orig);
            tmp_dictset_value = tmp_class_creation_4__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_180, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 180;

                goto try_except_handler_13;
            }
            branch_no_17:;
        }
        {
            PyObject *tmp_assign_source_50;
            PyObject *tmp_called_name_8;
            PyObject *tmp_args_name_8;
            PyObject *tmp_tuple_element_13;
            PyObject *tmp_kw_name_8;
            CHECK_OBJECT(tmp_class_creation_4__metaclass);
            tmp_called_name_8 = tmp_class_creation_4__metaclass;
            tmp_tuple_element_13 = const_str_plain_ProxyClass;
            tmp_args_name_8 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_13);
            PyTuple_SET_ITEM(tmp_args_name_8, 0, tmp_tuple_element_13);
            CHECK_OBJECT(tmp_class_creation_4__bases);
            tmp_tuple_element_13 = tmp_class_creation_4__bases;
            Py_INCREF(tmp_tuple_element_13);
            PyTuple_SET_ITEM(tmp_args_name_8, 1, tmp_tuple_element_13);
            tmp_tuple_element_13 = locals_PyQt5$uic$Compiler$qtproxies_180;
            Py_INCREF(tmp_tuple_element_13);
            PyTuple_SET_ITEM(tmp_args_name_8, 2, tmp_tuple_element_13);
            CHECK_OBJECT(tmp_class_creation_4__class_decl_dict);
            tmp_kw_name_8 = tmp_class_creation_4__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 180;
            tmp_assign_source_50 = CALL_FUNCTION(tmp_called_name_8, tmp_args_name_8, tmp_kw_name_8);
            Py_DECREF(tmp_args_name_8);
            if (tmp_assign_source_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 180;

                goto try_except_handler_13;
            }
            assert(outline_3_var___class__ == NULL);
            outline_3_var___class__ = tmp_assign_source_50;
        }
        CHECK_OBJECT(outline_3_var___class__);
        tmp_assign_source_49 = outline_3_var___class__;
        Py_INCREF(tmp_assign_source_49);
        goto try_return_handler_13;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_13:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_180);
        locals_PyQt5$uic$Compiler$qtproxies_180 = NULL;
        goto try_return_handler_12;
        // Exception handler code:
        try_except_handler_13:;
        exception_keeper_type_11 = exception_type;
        exception_keeper_value_11 = exception_value;
        exception_keeper_tb_11 = exception_tb;
        exception_keeper_lineno_11 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_180);
        locals_PyQt5$uic$Compiler$qtproxies_180 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_11;
        exception_value = exception_keeper_value_11;
        exception_tb = exception_keeper_tb_11;
        exception_lineno = exception_keeper_lineno_11;

        goto try_except_handler_12;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_12:;
        CHECK_OBJECT((PyObject *)outline_3_var___class__);
        Py_DECREF(outline_3_var___class__);
        outline_3_var___class__ = NULL;

        goto outline_result_4;
        // Exception handler code:
        try_except_handler_12:;
        exception_keeper_type_12 = exception_type;
        exception_keeper_value_12 = exception_value;
        exception_keeper_tb_12 = exception_tb;
        exception_keeper_lineno_12 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_12;
        exception_value = exception_keeper_value_12;
        exception_tb = exception_keeper_tb_12;
        exception_lineno = exception_keeper_lineno_12;

        goto outline_exception_4;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_4:;
        exception_lineno = 180;
        goto try_except_handler_11;
        outline_result_4:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass, tmp_assign_source_49);
    }
    goto try_end_5;
    // Exception handler code:
    try_except_handler_11:;
    exception_keeper_type_13 = exception_type;
    exception_keeper_value_13 = exception_value;
    exception_keeper_tb_13 = exception_tb;
    exception_keeper_lineno_13 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_4__bases_orig);
    tmp_class_creation_4__bases_orig = NULL;

    Py_XDECREF(tmp_class_creation_4__bases);
    tmp_class_creation_4__bases = NULL;

    Py_XDECREF(tmp_class_creation_4__class_decl_dict);
    tmp_class_creation_4__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_4__metaclass);
    tmp_class_creation_4__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_4__prepared);
    tmp_class_creation_4__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_13;
    exception_value = exception_keeper_value_13;
    exception_tb = exception_keeper_tb_13;
    exception_lineno = exception_keeper_lineno_13;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_4__bases_orig);
    Py_DECREF(tmp_class_creation_4__bases_orig);
    tmp_class_creation_4__bases_orig = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_4__bases);
    Py_DECREF(tmp_class_creation_4__bases);
    tmp_class_creation_4__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_4__class_decl_dict);
    Py_DECREF(tmp_class_creation_4__class_decl_dict);
    tmp_class_creation_4__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_4__metaclass);
    Py_DECREF(tmp_class_creation_4__metaclass);
    tmp_class_creation_4__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_4__prepared);
    Py_DECREF(tmp_class_creation_4__prepared);
    tmp_class_creation_4__prepared = NULL;

    // Tried code:
    {
        PyObject *tmp_assign_source_51;
        PyObject *tmp_tuple_element_14;
        PyObject *tmp_mvar_value_5;
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
        }

        if (tmp_mvar_value_5 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 212;

            goto try_except_handler_14;
        }

        tmp_tuple_element_14 = tmp_mvar_value_5;
        tmp_assign_source_51 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_14);
        PyTuple_SET_ITEM(tmp_assign_source_51, 0, tmp_tuple_element_14);
        assert(tmp_class_creation_5__bases_orig == NULL);
        tmp_class_creation_5__bases_orig = tmp_assign_source_51;
    }
    {
        PyObject *tmp_assign_source_52;
        PyObject *tmp_dircall_arg1_5;
        CHECK_OBJECT(tmp_class_creation_5__bases_orig);
        tmp_dircall_arg1_5 = tmp_class_creation_5__bases_orig;
        Py_INCREF(tmp_dircall_arg1_5);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_5};
            tmp_assign_source_52 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        assert(tmp_class_creation_5__bases == NULL);
        tmp_class_creation_5__bases = tmp_assign_source_52;
    }
    {
        PyObject *tmp_assign_source_53;
        tmp_assign_source_53 = PyDict_New();
        assert(tmp_class_creation_5__class_decl_dict == NULL);
        tmp_class_creation_5__class_decl_dict = tmp_assign_source_53;
    }
    {
        PyObject *tmp_assign_source_54;
        PyObject *tmp_metaclass_name_5;
        nuitka_bool tmp_condition_result_26;
        PyObject *tmp_key_name_13;
        PyObject *tmp_dict_name_13;
        PyObject *tmp_dict_name_14;
        PyObject *tmp_key_name_14;
        nuitka_bool tmp_condition_result_27;
        int tmp_truth_name_5;
        PyObject *tmp_type_arg_9;
        PyObject *tmp_subscribed_name_5;
        PyObject *tmp_subscript_name_5;
        PyObject *tmp_bases_name_5;
        tmp_key_name_13 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_5__class_decl_dict);
        tmp_dict_name_13 = tmp_class_creation_5__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_13, tmp_key_name_13);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        tmp_condition_result_26 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_9;
        } else {
            goto condexpr_false_9;
        }
        condexpr_true_9:;
        CHECK_OBJECT(tmp_class_creation_5__class_decl_dict);
        tmp_dict_name_14 = tmp_class_creation_5__class_decl_dict;
        tmp_key_name_14 = const_str_plain_metaclass;
        tmp_metaclass_name_5 = DICT_GET_ITEM(tmp_dict_name_14, tmp_key_name_14);
        if (tmp_metaclass_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        goto condexpr_end_9;
        condexpr_false_9:;
        CHECK_OBJECT(tmp_class_creation_5__bases);
        tmp_truth_name_5 = CHECK_IF_TRUE(tmp_class_creation_5__bases);
        if (tmp_truth_name_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        tmp_condition_result_27 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_10;
        } else {
            goto condexpr_false_10;
        }
        condexpr_true_10:;
        CHECK_OBJECT(tmp_class_creation_5__bases);
        tmp_subscribed_name_5 = tmp_class_creation_5__bases;
        tmp_subscript_name_5 = const_int_0;
        tmp_type_arg_9 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_5, tmp_subscript_name_5, 0);
        if (tmp_type_arg_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        tmp_metaclass_name_5 = BUILTIN_TYPE1(tmp_type_arg_9);
        Py_DECREF(tmp_type_arg_9);
        if (tmp_metaclass_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        goto condexpr_end_10;
        condexpr_false_10:;
        tmp_metaclass_name_5 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_5);
        condexpr_end_10:;
        condexpr_end_9:;
        CHECK_OBJECT(tmp_class_creation_5__bases);
        tmp_bases_name_5 = tmp_class_creation_5__bases;
        tmp_assign_source_54 = SELECT_METACLASS(tmp_metaclass_name_5, tmp_bases_name_5);
        Py_DECREF(tmp_metaclass_name_5);
        if (tmp_assign_source_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        assert(tmp_class_creation_5__metaclass == NULL);
        tmp_class_creation_5__metaclass = tmp_assign_source_54;
    }
    {
        nuitka_bool tmp_condition_result_28;
        PyObject *tmp_key_name_15;
        PyObject *tmp_dict_name_15;
        tmp_key_name_15 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_5__class_decl_dict);
        tmp_dict_name_15 = tmp_class_creation_5__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_15, tmp_key_name_15);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        tmp_condition_result_28 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
            goto branch_yes_18;
        } else {
            goto branch_no_18;
        }
        branch_yes_18:;
        CHECK_OBJECT(tmp_class_creation_5__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_5__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_14;
        }
        branch_no_18:;
    }
    {
        nuitka_bool tmp_condition_result_29;
        PyObject *tmp_source_name_18;
        CHECK_OBJECT(tmp_class_creation_5__metaclass);
        tmp_source_name_18 = tmp_class_creation_5__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_18, const_str_plain___prepare__);
        tmp_condition_result_29 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
            goto branch_yes_19;
        } else {
            goto branch_no_19;
        }
        branch_yes_19:;
        {
            PyObject *tmp_assign_source_55;
            PyObject *tmp_called_name_9;
            PyObject *tmp_source_name_19;
            PyObject *tmp_args_name_9;
            PyObject *tmp_tuple_element_15;
            PyObject *tmp_kw_name_9;
            CHECK_OBJECT(tmp_class_creation_5__metaclass);
            tmp_source_name_19 = tmp_class_creation_5__metaclass;
            tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain___prepare__);
            if (tmp_called_name_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 212;

                goto try_except_handler_14;
            }
            tmp_tuple_element_15 = const_str_plain_LiteralProxyClass;
            tmp_args_name_9 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_15);
            PyTuple_SET_ITEM(tmp_args_name_9, 0, tmp_tuple_element_15);
            CHECK_OBJECT(tmp_class_creation_5__bases);
            tmp_tuple_element_15 = tmp_class_creation_5__bases;
            Py_INCREF(tmp_tuple_element_15);
            PyTuple_SET_ITEM(tmp_args_name_9, 1, tmp_tuple_element_15);
            CHECK_OBJECT(tmp_class_creation_5__class_decl_dict);
            tmp_kw_name_9 = tmp_class_creation_5__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 212;
            tmp_assign_source_55 = CALL_FUNCTION(tmp_called_name_9, tmp_args_name_9, tmp_kw_name_9);
            Py_DECREF(tmp_called_name_9);
            Py_DECREF(tmp_args_name_9);
            if (tmp_assign_source_55 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 212;

                goto try_except_handler_14;
            }
            assert(tmp_class_creation_5__prepared == NULL);
            tmp_class_creation_5__prepared = tmp_assign_source_55;
        }
        {
            nuitka_bool tmp_condition_result_30;
            PyObject *tmp_operand_name_5;
            PyObject *tmp_source_name_20;
            CHECK_OBJECT(tmp_class_creation_5__prepared);
            tmp_source_name_20 = tmp_class_creation_5__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_20, const_str_plain___getitem__);
            tmp_operand_name_5 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 212;

                goto try_except_handler_14;
            }
            tmp_condition_result_30 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                goto branch_yes_20;
            } else {
                goto branch_no_20;
            }
            branch_yes_20:;
            {
                PyObject *tmp_raise_type_5;
                PyObject *tmp_raise_value_5;
                PyObject *tmp_left_name_5;
                PyObject *tmp_right_name_5;
                PyObject *tmp_tuple_element_16;
                PyObject *tmp_getattr_target_5;
                PyObject *tmp_getattr_attr_5;
                PyObject *tmp_getattr_default_5;
                PyObject *tmp_source_name_21;
                PyObject *tmp_type_arg_10;
                tmp_raise_type_5 = PyExc_TypeError;
                tmp_left_name_5 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_5__metaclass);
                tmp_getattr_target_5 = tmp_class_creation_5__metaclass;
                tmp_getattr_attr_5 = const_str_plain___name__;
                tmp_getattr_default_5 = const_str_angle_metaclass;
                tmp_tuple_element_16 = BUILTIN_GETATTR(tmp_getattr_target_5, tmp_getattr_attr_5, tmp_getattr_default_5);
                if (tmp_tuple_element_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 212;

                    goto try_except_handler_14;
                }
                tmp_right_name_5 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_5, 0, tmp_tuple_element_16);
                CHECK_OBJECT(tmp_class_creation_5__prepared);
                tmp_type_arg_10 = tmp_class_creation_5__prepared;
                tmp_source_name_21 = BUILTIN_TYPE1(tmp_type_arg_10);
                assert(!(tmp_source_name_21 == NULL));
                tmp_tuple_element_16 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain___name__);
                Py_DECREF(tmp_source_name_21);
                if (tmp_tuple_element_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_5);

                    exception_lineno = 212;

                    goto try_except_handler_14;
                }
                PyTuple_SET_ITEM(tmp_right_name_5, 1, tmp_tuple_element_16);
                tmp_raise_value_5 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_5, tmp_right_name_5);
                Py_DECREF(tmp_right_name_5);
                if (tmp_raise_value_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 212;

                    goto try_except_handler_14;
                }
                exception_type = tmp_raise_type_5;
                Py_INCREF(tmp_raise_type_5);
                exception_value = tmp_raise_value_5;
                exception_lineno = 212;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_14;
            }
            branch_no_20:;
        }
        goto branch_end_19;
        branch_no_19:;
        {
            PyObject *tmp_assign_source_56;
            tmp_assign_source_56 = PyDict_New();
            assert(tmp_class_creation_5__prepared == NULL);
            tmp_class_creation_5__prepared = tmp_assign_source_56;
        }
        branch_end_19:;
    }
    {
        PyObject *tmp_assign_source_57;
        {
            PyObject *tmp_set_locals_5;
            CHECK_OBJECT(tmp_class_creation_5__prepared);
            tmp_set_locals_5 = tmp_class_creation_5__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_212 = tmp_set_locals_5;
            Py_INCREF(tmp_set_locals_5);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_212, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_16;
        }
        tmp_dictset_value = const_str_digest_a4f2685d0d81ef2fc212a6dfcee469c3;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_212, const_str_plain___doc__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_16;
        }
        tmp_dictset_value = const_str_plain_LiteralProxyClass;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_212, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto try_except_handler_16;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_8af776f3a17238462f66bcf0f452b6c9_6, codeobj_8af776f3a17238462f66bcf0f452b6c9, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_8af776f3a17238462f66bcf0f452b6c9_6 = cache_frame_8af776f3a17238462f66bcf0f452b6c9_6;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_8af776f3a17238462f66bcf0f452b6c9_6);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_8af776f3a17238462f66bcf0f452b6c9_6) == 2); // Frame stack

        // Framed code:
        {
            PyObject *tmp_mvar_value_6;
            tmp_dictset_value = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_212, const_str_plain_AS_ARGUMENT);

            if (tmp_dictset_value == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_AS_ARGUMENT);

                    if (unlikely(tmp_mvar_value_6 == NULL)) {
                        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_AS_ARGUMENT);
                    }

                    if (tmp_mvar_value_6 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1188 ], 33, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 220;
                        type_description_2 = "o";
                        goto frame_exception_exit_6;
                    }

                    tmp_dictset_value = tmp_mvar_value_6;
                    Py_INCREF(tmp_dictset_value);
                }
            }

            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_212, const_str_plain_flags, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 220;
                type_description_2 = "o";
                goto frame_exception_exit_6;
            }
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_17___init__();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_212, const_str_plain___init__, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 222;
            type_description_2 = "o";
            goto frame_exception_exit_6;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_8af776f3a17238462f66bcf0f452b6c9_6);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_5;

        frame_exception_exit_6:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_8af776f3a17238462f66bcf0f452b6c9_6);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_8af776f3a17238462f66bcf0f452b6c9_6, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_8af776f3a17238462f66bcf0f452b6c9_6->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_8af776f3a17238462f66bcf0f452b6c9_6, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_8af776f3a17238462f66bcf0f452b6c9_6,
            type_description_2,
            outline_4_var___class__
        );


        // Release cached frame.
        if (frame_8af776f3a17238462f66bcf0f452b6c9_6 == cache_frame_8af776f3a17238462f66bcf0f452b6c9_6) {
            Py_DECREF(frame_8af776f3a17238462f66bcf0f452b6c9_6);
        }
        cache_frame_8af776f3a17238462f66bcf0f452b6c9_6 = NULL;

        assertFrameObject(frame_8af776f3a17238462f66bcf0f452b6c9_6);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_5;

        frame_no_exception_5:;
        goto skip_nested_handling_5;
        nested_frame_exit_5:;

        goto try_except_handler_16;
        skip_nested_handling_5:;
        {
            nuitka_bool tmp_condition_result_31;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            CHECK_OBJECT(tmp_class_creation_5__bases);
            tmp_compexpr_left_6 = tmp_class_creation_5__bases;
            CHECK_OBJECT(tmp_class_creation_5__bases_orig);
            tmp_compexpr_right_6 = tmp_class_creation_5__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 212;

                goto try_except_handler_16;
            }
            tmp_condition_result_31 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                goto branch_yes_21;
            } else {
                goto branch_no_21;
            }
            branch_yes_21:;
            CHECK_OBJECT(tmp_class_creation_5__bases_orig);
            tmp_dictset_value = tmp_class_creation_5__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_212, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 212;

                goto try_except_handler_16;
            }
            branch_no_21:;
        }
        {
            PyObject *tmp_assign_source_58;
            PyObject *tmp_called_name_10;
            PyObject *tmp_args_name_10;
            PyObject *tmp_tuple_element_17;
            PyObject *tmp_kw_name_10;
            CHECK_OBJECT(tmp_class_creation_5__metaclass);
            tmp_called_name_10 = tmp_class_creation_5__metaclass;
            tmp_tuple_element_17 = const_str_plain_LiteralProxyClass;
            tmp_args_name_10 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_17);
            PyTuple_SET_ITEM(tmp_args_name_10, 0, tmp_tuple_element_17);
            CHECK_OBJECT(tmp_class_creation_5__bases);
            tmp_tuple_element_17 = tmp_class_creation_5__bases;
            Py_INCREF(tmp_tuple_element_17);
            PyTuple_SET_ITEM(tmp_args_name_10, 1, tmp_tuple_element_17);
            tmp_tuple_element_17 = locals_PyQt5$uic$Compiler$qtproxies_212;
            Py_INCREF(tmp_tuple_element_17);
            PyTuple_SET_ITEM(tmp_args_name_10, 2, tmp_tuple_element_17);
            CHECK_OBJECT(tmp_class_creation_5__class_decl_dict);
            tmp_kw_name_10 = tmp_class_creation_5__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 212;
            tmp_assign_source_58 = CALL_FUNCTION(tmp_called_name_10, tmp_args_name_10, tmp_kw_name_10);
            Py_DECREF(tmp_args_name_10);
            if (tmp_assign_source_58 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 212;

                goto try_except_handler_16;
            }
            assert(outline_4_var___class__ == NULL);
            outline_4_var___class__ = tmp_assign_source_58;
        }
        CHECK_OBJECT(outline_4_var___class__);
        tmp_assign_source_57 = outline_4_var___class__;
        Py_INCREF(tmp_assign_source_57);
        goto try_return_handler_16;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_16:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_212);
        locals_PyQt5$uic$Compiler$qtproxies_212 = NULL;
        goto try_return_handler_15;
        // Exception handler code:
        try_except_handler_16:;
        exception_keeper_type_14 = exception_type;
        exception_keeper_value_14 = exception_value;
        exception_keeper_tb_14 = exception_tb;
        exception_keeper_lineno_14 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_212);
        locals_PyQt5$uic$Compiler$qtproxies_212 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_14;
        exception_value = exception_keeper_value_14;
        exception_tb = exception_keeper_tb_14;
        exception_lineno = exception_keeper_lineno_14;

        goto try_except_handler_15;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_15:;
        CHECK_OBJECT((PyObject *)outline_4_var___class__);
        Py_DECREF(outline_4_var___class__);
        outline_4_var___class__ = NULL;

        goto outline_result_5;
        // Exception handler code:
        try_except_handler_15:;
        exception_keeper_type_15 = exception_type;
        exception_keeper_value_15 = exception_value;
        exception_keeper_tb_15 = exception_tb;
        exception_keeper_lineno_15 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_15;
        exception_value = exception_keeper_value_15;
        exception_tb = exception_keeper_tb_15;
        exception_lineno = exception_keeper_lineno_15;

        goto outline_exception_5;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_5:;
        exception_lineno = 212;
        goto try_except_handler_14;
        outline_result_5:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_LiteralProxyClass, tmp_assign_source_57);
    }
    goto try_end_6;
    // Exception handler code:
    try_except_handler_14:;
    exception_keeper_type_16 = exception_type;
    exception_keeper_value_16 = exception_value;
    exception_keeper_tb_16 = exception_tb;
    exception_keeper_lineno_16 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_5__bases_orig);
    tmp_class_creation_5__bases_orig = NULL;

    Py_XDECREF(tmp_class_creation_5__bases);
    tmp_class_creation_5__bases = NULL;

    Py_XDECREF(tmp_class_creation_5__class_decl_dict);
    tmp_class_creation_5__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_5__metaclass);
    tmp_class_creation_5__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_5__prepared);
    tmp_class_creation_5__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_16;
    exception_value = exception_keeper_value_16;
    exception_tb = exception_keeper_tb_16;
    exception_lineno = exception_keeper_lineno_16;

    goto frame_exception_exit_1;
    // End of try:
    try_end_6:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_5__bases_orig);
    Py_DECREF(tmp_class_creation_5__bases_orig);
    tmp_class_creation_5__bases_orig = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_5__bases);
    Py_DECREF(tmp_class_creation_5__bases);
    tmp_class_creation_5__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_5__class_decl_dict);
    Py_DECREF(tmp_class_creation_5__class_decl_dict);
    tmp_class_creation_5__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_5__metaclass);
    Py_DECREF(tmp_class_creation_5__metaclass);
    tmp_class_creation_5__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_5__prepared);
    Py_DECREF(tmp_class_creation_5__prepared);
    tmp_class_creation_5__prepared = NULL;

    // Tried code:
    {
        PyObject *tmp_assign_source_59;
        PyObject *tmp_tuple_element_18;
        PyObject *tmp_mvar_value_7;
        tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyBase);

        if (unlikely(tmp_mvar_value_7 == NULL)) {
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyBase);
        }

        if (tmp_mvar_value_7 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1369 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 228;

            goto try_except_handler_17;
        }

        tmp_tuple_element_18 = tmp_mvar_value_7;
        tmp_assign_source_59 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_18);
        PyTuple_SET_ITEM(tmp_assign_source_59, 0, tmp_tuple_element_18);
        assert(tmp_class_creation_6__bases_orig == NULL);
        tmp_class_creation_6__bases_orig = tmp_assign_source_59;
    }
    {
        PyObject *tmp_assign_source_60;
        PyObject *tmp_dircall_arg1_6;
        CHECK_OBJECT(tmp_class_creation_6__bases_orig);
        tmp_dircall_arg1_6 = tmp_class_creation_6__bases_orig;
        Py_INCREF(tmp_dircall_arg1_6);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_6};
            tmp_assign_source_60 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        assert(tmp_class_creation_6__bases == NULL);
        tmp_class_creation_6__bases = tmp_assign_source_60;
    }
    {
        PyObject *tmp_assign_source_61;
        tmp_assign_source_61 = PyDict_New();
        assert(tmp_class_creation_6__class_decl_dict == NULL);
        tmp_class_creation_6__class_decl_dict = tmp_assign_source_61;
    }
    {
        PyObject *tmp_assign_source_62;
        PyObject *tmp_metaclass_name_6;
        nuitka_bool tmp_condition_result_32;
        PyObject *tmp_key_name_16;
        PyObject *tmp_dict_name_16;
        PyObject *tmp_dict_name_17;
        PyObject *tmp_key_name_17;
        nuitka_bool tmp_condition_result_33;
        int tmp_truth_name_6;
        PyObject *tmp_type_arg_11;
        PyObject *tmp_subscribed_name_6;
        PyObject *tmp_subscript_name_6;
        PyObject *tmp_bases_name_6;
        tmp_key_name_16 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_6__class_decl_dict);
        tmp_dict_name_16 = tmp_class_creation_6__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_16, tmp_key_name_16);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        tmp_condition_result_32 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_11;
        } else {
            goto condexpr_false_11;
        }
        condexpr_true_11:;
        CHECK_OBJECT(tmp_class_creation_6__class_decl_dict);
        tmp_dict_name_17 = tmp_class_creation_6__class_decl_dict;
        tmp_key_name_17 = const_str_plain_metaclass;
        tmp_metaclass_name_6 = DICT_GET_ITEM(tmp_dict_name_17, tmp_key_name_17);
        if (tmp_metaclass_name_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        goto condexpr_end_11;
        condexpr_false_11:;
        CHECK_OBJECT(tmp_class_creation_6__bases);
        tmp_truth_name_6 = CHECK_IF_TRUE(tmp_class_creation_6__bases);
        if (tmp_truth_name_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        tmp_condition_result_33 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_12;
        } else {
            goto condexpr_false_12;
        }
        condexpr_true_12:;
        CHECK_OBJECT(tmp_class_creation_6__bases);
        tmp_subscribed_name_6 = tmp_class_creation_6__bases;
        tmp_subscript_name_6 = const_int_0;
        tmp_type_arg_11 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_6, tmp_subscript_name_6, 0);
        if (tmp_type_arg_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        tmp_metaclass_name_6 = BUILTIN_TYPE1(tmp_type_arg_11);
        Py_DECREF(tmp_type_arg_11);
        if (tmp_metaclass_name_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        goto condexpr_end_12;
        condexpr_false_12:;
        tmp_metaclass_name_6 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_6);
        condexpr_end_12:;
        condexpr_end_11:;
        CHECK_OBJECT(tmp_class_creation_6__bases);
        tmp_bases_name_6 = tmp_class_creation_6__bases;
        tmp_assign_source_62 = SELECT_METACLASS(tmp_metaclass_name_6, tmp_bases_name_6);
        Py_DECREF(tmp_metaclass_name_6);
        if (tmp_assign_source_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        assert(tmp_class_creation_6__metaclass == NULL);
        tmp_class_creation_6__metaclass = tmp_assign_source_62;
    }
    {
        nuitka_bool tmp_condition_result_34;
        PyObject *tmp_key_name_18;
        PyObject *tmp_dict_name_18;
        tmp_key_name_18 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_6__class_decl_dict);
        tmp_dict_name_18 = tmp_class_creation_6__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_18, tmp_key_name_18);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        tmp_condition_result_34 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
            goto branch_yes_22;
        } else {
            goto branch_no_22;
        }
        branch_yes_22:;
        CHECK_OBJECT(tmp_class_creation_6__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_6__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_17;
        }
        branch_no_22:;
    }
    {
        nuitka_bool tmp_condition_result_35;
        PyObject *tmp_source_name_22;
        CHECK_OBJECT(tmp_class_creation_6__metaclass);
        tmp_source_name_22 = tmp_class_creation_6__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_22, const_str_plain___prepare__);
        tmp_condition_result_35 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
            goto branch_yes_23;
        } else {
            goto branch_no_23;
        }
        branch_yes_23:;
        {
            PyObject *tmp_assign_source_63;
            PyObject *tmp_called_name_11;
            PyObject *tmp_source_name_23;
            PyObject *tmp_args_name_11;
            PyObject *tmp_tuple_element_19;
            PyObject *tmp_kw_name_11;
            CHECK_OBJECT(tmp_class_creation_6__metaclass);
            tmp_source_name_23 = tmp_class_creation_6__metaclass;
            tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain___prepare__);
            if (tmp_called_name_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 228;

                goto try_except_handler_17;
            }
            tmp_tuple_element_19 = const_str_plain_ProxyNamespace;
            tmp_args_name_11 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_19);
            PyTuple_SET_ITEM(tmp_args_name_11, 0, tmp_tuple_element_19);
            CHECK_OBJECT(tmp_class_creation_6__bases);
            tmp_tuple_element_19 = tmp_class_creation_6__bases;
            Py_INCREF(tmp_tuple_element_19);
            PyTuple_SET_ITEM(tmp_args_name_11, 1, tmp_tuple_element_19);
            CHECK_OBJECT(tmp_class_creation_6__class_decl_dict);
            tmp_kw_name_11 = tmp_class_creation_6__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 228;
            tmp_assign_source_63 = CALL_FUNCTION(tmp_called_name_11, tmp_args_name_11, tmp_kw_name_11);
            Py_DECREF(tmp_called_name_11);
            Py_DECREF(tmp_args_name_11);
            if (tmp_assign_source_63 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 228;

                goto try_except_handler_17;
            }
            assert(tmp_class_creation_6__prepared == NULL);
            tmp_class_creation_6__prepared = tmp_assign_source_63;
        }
        {
            nuitka_bool tmp_condition_result_36;
            PyObject *tmp_operand_name_6;
            PyObject *tmp_source_name_24;
            CHECK_OBJECT(tmp_class_creation_6__prepared);
            tmp_source_name_24 = tmp_class_creation_6__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_24, const_str_plain___getitem__);
            tmp_operand_name_6 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 228;

                goto try_except_handler_17;
            }
            tmp_condition_result_36 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
                goto branch_yes_24;
            } else {
                goto branch_no_24;
            }
            branch_yes_24:;
            {
                PyObject *tmp_raise_type_6;
                PyObject *tmp_raise_value_6;
                PyObject *tmp_left_name_6;
                PyObject *tmp_right_name_6;
                PyObject *tmp_tuple_element_20;
                PyObject *tmp_getattr_target_6;
                PyObject *tmp_getattr_attr_6;
                PyObject *tmp_getattr_default_6;
                PyObject *tmp_source_name_25;
                PyObject *tmp_type_arg_12;
                tmp_raise_type_6 = PyExc_TypeError;
                tmp_left_name_6 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_6__metaclass);
                tmp_getattr_target_6 = tmp_class_creation_6__metaclass;
                tmp_getattr_attr_6 = const_str_plain___name__;
                tmp_getattr_default_6 = const_str_angle_metaclass;
                tmp_tuple_element_20 = BUILTIN_GETATTR(tmp_getattr_target_6, tmp_getattr_attr_6, tmp_getattr_default_6);
                if (tmp_tuple_element_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 228;

                    goto try_except_handler_17;
                }
                tmp_right_name_6 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_6, 0, tmp_tuple_element_20);
                CHECK_OBJECT(tmp_class_creation_6__prepared);
                tmp_type_arg_12 = tmp_class_creation_6__prepared;
                tmp_source_name_25 = BUILTIN_TYPE1(tmp_type_arg_12);
                assert(!(tmp_source_name_25 == NULL));
                tmp_tuple_element_20 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain___name__);
                Py_DECREF(tmp_source_name_25);
                if (tmp_tuple_element_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_6);

                    exception_lineno = 228;

                    goto try_except_handler_17;
                }
                PyTuple_SET_ITEM(tmp_right_name_6, 1, tmp_tuple_element_20);
                tmp_raise_value_6 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_6, tmp_right_name_6);
                Py_DECREF(tmp_right_name_6);
                if (tmp_raise_value_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 228;

                    goto try_except_handler_17;
                }
                exception_type = tmp_raise_type_6;
                Py_INCREF(tmp_raise_type_6);
                exception_value = tmp_raise_value_6;
                exception_lineno = 228;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_17;
            }
            branch_no_24:;
        }
        goto branch_end_23;
        branch_no_23:;
        {
            PyObject *tmp_assign_source_64;
            tmp_assign_source_64 = PyDict_New();
            assert(tmp_class_creation_6__prepared == NULL);
            tmp_class_creation_6__prepared = tmp_assign_source_64;
        }
        branch_end_23:;
    }
    {
        PyObject *tmp_assign_source_65;
        {
            PyObject *tmp_set_locals_6;
            CHECK_OBJECT(tmp_class_creation_6__prepared);
            tmp_set_locals_6 = tmp_class_creation_6__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_228 = tmp_set_locals_6;
            Py_INCREF(tmp_set_locals_6);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_228, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_19;
        }
        tmp_dictset_value = const_str_plain_ProxyNamespace;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_228, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_19;
        }
        {
            nuitka_bool tmp_condition_result_37;
            PyObject *tmp_compexpr_left_7;
            PyObject *tmp_compexpr_right_7;
            CHECK_OBJECT(tmp_class_creation_6__bases);
            tmp_compexpr_left_7 = tmp_class_creation_6__bases;
            CHECK_OBJECT(tmp_class_creation_6__bases_orig);
            tmp_compexpr_right_7 = tmp_class_creation_6__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_7, tmp_compexpr_right_7);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 228;

                goto try_except_handler_19;
            }
            tmp_condition_result_37 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
                goto branch_yes_25;
            } else {
                goto branch_no_25;
            }
            branch_yes_25:;
            CHECK_OBJECT(tmp_class_creation_6__bases_orig);
            tmp_dictset_value = tmp_class_creation_6__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_228, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 228;

                goto try_except_handler_19;
            }
            branch_no_25:;
        }
        {
            PyObject *tmp_assign_source_66;
            PyObject *tmp_called_name_12;
            PyObject *tmp_args_name_12;
            PyObject *tmp_tuple_element_21;
            PyObject *tmp_kw_name_12;
            CHECK_OBJECT(tmp_class_creation_6__metaclass);
            tmp_called_name_12 = tmp_class_creation_6__metaclass;
            tmp_tuple_element_21 = const_str_plain_ProxyNamespace;
            tmp_args_name_12 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_21);
            PyTuple_SET_ITEM(tmp_args_name_12, 0, tmp_tuple_element_21);
            CHECK_OBJECT(tmp_class_creation_6__bases);
            tmp_tuple_element_21 = tmp_class_creation_6__bases;
            Py_INCREF(tmp_tuple_element_21);
            PyTuple_SET_ITEM(tmp_args_name_12, 1, tmp_tuple_element_21);
            tmp_tuple_element_21 = locals_PyQt5$uic$Compiler$qtproxies_228;
            Py_INCREF(tmp_tuple_element_21);
            PyTuple_SET_ITEM(tmp_args_name_12, 2, tmp_tuple_element_21);
            CHECK_OBJECT(tmp_class_creation_6__class_decl_dict);
            tmp_kw_name_12 = tmp_class_creation_6__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 228;
            tmp_assign_source_66 = CALL_FUNCTION(tmp_called_name_12, tmp_args_name_12, tmp_kw_name_12);
            Py_DECREF(tmp_args_name_12);
            if (tmp_assign_source_66 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 228;

                goto try_except_handler_19;
            }
            assert(outline_5_var___class__ == NULL);
            outline_5_var___class__ = tmp_assign_source_66;
        }
        CHECK_OBJECT(outline_5_var___class__);
        tmp_assign_source_65 = outline_5_var___class__;
        Py_INCREF(tmp_assign_source_65);
        goto try_return_handler_19;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_19:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_228);
        locals_PyQt5$uic$Compiler$qtproxies_228 = NULL;
        goto try_return_handler_18;
        // Exception handler code:
        try_except_handler_19:;
        exception_keeper_type_17 = exception_type;
        exception_keeper_value_17 = exception_value;
        exception_keeper_tb_17 = exception_tb;
        exception_keeper_lineno_17 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_228);
        locals_PyQt5$uic$Compiler$qtproxies_228 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_17;
        exception_value = exception_keeper_value_17;
        exception_tb = exception_keeper_tb_17;
        exception_lineno = exception_keeper_lineno_17;

        goto try_except_handler_18;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_18:;
        CHECK_OBJECT((PyObject *)outline_5_var___class__);
        Py_DECREF(outline_5_var___class__);
        outline_5_var___class__ = NULL;

        goto outline_result_6;
        // Exception handler code:
        try_except_handler_18:;
        exception_keeper_type_18 = exception_type;
        exception_keeper_value_18 = exception_value;
        exception_keeper_tb_18 = exception_tb;
        exception_keeper_lineno_18 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_18;
        exception_value = exception_keeper_value_18;
        exception_tb = exception_keeper_tb_18;
        exception_lineno = exception_keeper_lineno_18;

        goto outline_exception_6;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_6:;
        exception_lineno = 228;
        goto try_except_handler_17;
        outline_result_6:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyNamespace, tmp_assign_source_65);
    }
    goto try_end_7;
    // Exception handler code:
    try_except_handler_17:;
    exception_keeper_type_19 = exception_type;
    exception_keeper_value_19 = exception_value;
    exception_keeper_tb_19 = exception_tb;
    exception_keeper_lineno_19 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_6__bases_orig);
    tmp_class_creation_6__bases_orig = NULL;

    Py_XDECREF(tmp_class_creation_6__bases);
    tmp_class_creation_6__bases = NULL;

    Py_XDECREF(tmp_class_creation_6__class_decl_dict);
    tmp_class_creation_6__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_6__metaclass);
    tmp_class_creation_6__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_6__prepared);
    tmp_class_creation_6__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_19;
    exception_value = exception_keeper_value_19;
    exception_tb = exception_keeper_tb_19;
    exception_lineno = exception_keeper_lineno_19;

    goto frame_exception_exit_1;
    // End of try:
    try_end_7:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_6__bases_orig);
    Py_DECREF(tmp_class_creation_6__bases_orig);
    tmp_class_creation_6__bases_orig = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_6__bases);
    Py_DECREF(tmp_class_creation_6__bases);
    tmp_class_creation_6__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_6__class_decl_dict);
    Py_DECREF(tmp_class_creation_6__class_decl_dict);
    tmp_class_creation_6__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_6__metaclass);
    Py_DECREF(tmp_class_creation_6__metaclass);
    tmp_class_creation_6__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_6__prepared);
    Py_DECREF(tmp_class_creation_6__prepared);
    tmp_class_creation_6__prepared = NULL;

    // Tried code:
    {
        PyObject *tmp_assign_source_67;
        PyObject *tmp_tuple_element_22;
        PyObject *tmp_mvar_value_8;
        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);

        if (unlikely(tmp_mvar_value_8 == NULL)) {
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);
        }

        if (tmp_mvar_value_8 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1432 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 245;

            goto try_except_handler_20;
        }

        tmp_tuple_element_22 = tmp_mvar_value_8;
        tmp_assign_source_67 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_22);
        PyTuple_SET_ITEM(tmp_assign_source_67, 0, tmp_tuple_element_22);
        assert(tmp_class_creation_7__bases_orig == NULL);
        tmp_class_creation_7__bases_orig = tmp_assign_source_67;
    }
    {
        PyObject *tmp_assign_source_68;
        PyObject *tmp_dircall_arg1_7;
        CHECK_OBJECT(tmp_class_creation_7__bases_orig);
        tmp_dircall_arg1_7 = tmp_class_creation_7__bases_orig;
        Py_INCREF(tmp_dircall_arg1_7);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_7};
            tmp_assign_source_68 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        assert(tmp_class_creation_7__bases == NULL);
        tmp_class_creation_7__bases = tmp_assign_source_68;
    }
    {
        PyObject *tmp_assign_source_69;
        tmp_assign_source_69 = PyDict_New();
        assert(tmp_class_creation_7__class_decl_dict == NULL);
        tmp_class_creation_7__class_decl_dict = tmp_assign_source_69;
    }
    {
        PyObject *tmp_assign_source_70;
        PyObject *tmp_metaclass_name_7;
        nuitka_bool tmp_condition_result_38;
        PyObject *tmp_key_name_19;
        PyObject *tmp_dict_name_19;
        PyObject *tmp_dict_name_20;
        PyObject *tmp_key_name_20;
        nuitka_bool tmp_condition_result_39;
        int tmp_truth_name_7;
        PyObject *tmp_type_arg_13;
        PyObject *tmp_subscribed_name_7;
        PyObject *tmp_subscript_name_7;
        PyObject *tmp_bases_name_7;
        tmp_key_name_19 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_7__class_decl_dict);
        tmp_dict_name_19 = tmp_class_creation_7__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_19, tmp_key_name_19);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        tmp_condition_result_38 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_13;
        } else {
            goto condexpr_false_13;
        }
        condexpr_true_13:;
        CHECK_OBJECT(tmp_class_creation_7__class_decl_dict);
        tmp_dict_name_20 = tmp_class_creation_7__class_decl_dict;
        tmp_key_name_20 = const_str_plain_metaclass;
        tmp_metaclass_name_7 = DICT_GET_ITEM(tmp_dict_name_20, tmp_key_name_20);
        if (tmp_metaclass_name_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        goto condexpr_end_13;
        condexpr_false_13:;
        CHECK_OBJECT(tmp_class_creation_7__bases);
        tmp_truth_name_7 = CHECK_IF_TRUE(tmp_class_creation_7__bases);
        if (tmp_truth_name_7 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        tmp_condition_result_39 = tmp_truth_name_7 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_14;
        } else {
            goto condexpr_false_14;
        }
        condexpr_true_14:;
        CHECK_OBJECT(tmp_class_creation_7__bases);
        tmp_subscribed_name_7 = tmp_class_creation_7__bases;
        tmp_subscript_name_7 = const_int_0;
        tmp_type_arg_13 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_7, tmp_subscript_name_7, 0);
        if (tmp_type_arg_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        tmp_metaclass_name_7 = BUILTIN_TYPE1(tmp_type_arg_13);
        Py_DECREF(tmp_type_arg_13);
        if (tmp_metaclass_name_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        goto condexpr_end_14;
        condexpr_false_14:;
        tmp_metaclass_name_7 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_7);
        condexpr_end_14:;
        condexpr_end_13:;
        CHECK_OBJECT(tmp_class_creation_7__bases);
        tmp_bases_name_7 = tmp_class_creation_7__bases;
        tmp_assign_source_70 = SELECT_METACLASS(tmp_metaclass_name_7, tmp_bases_name_7);
        Py_DECREF(tmp_metaclass_name_7);
        if (tmp_assign_source_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        assert(tmp_class_creation_7__metaclass == NULL);
        tmp_class_creation_7__metaclass = tmp_assign_source_70;
    }
    {
        nuitka_bool tmp_condition_result_40;
        PyObject *tmp_key_name_21;
        PyObject *tmp_dict_name_21;
        tmp_key_name_21 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_7__class_decl_dict);
        tmp_dict_name_21 = tmp_class_creation_7__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_21, tmp_key_name_21);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        tmp_condition_result_40 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
            goto branch_yes_26;
        } else {
            goto branch_no_26;
        }
        branch_yes_26:;
        CHECK_OBJECT(tmp_class_creation_7__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_7__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_20;
        }
        branch_no_26:;
    }
    {
        nuitka_bool tmp_condition_result_41;
        PyObject *tmp_source_name_26;
        CHECK_OBJECT(tmp_class_creation_7__metaclass);
        tmp_source_name_26 = tmp_class_creation_7__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_26, const_str_plain___prepare__);
        tmp_condition_result_41 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
            goto branch_yes_27;
        } else {
            goto branch_no_27;
        }
        branch_yes_27:;
        {
            PyObject *tmp_assign_source_71;
            PyObject *tmp_called_name_13;
            PyObject *tmp_source_name_27;
            PyObject *tmp_args_name_13;
            PyObject *tmp_tuple_element_23;
            PyObject *tmp_kw_name_13;
            CHECK_OBJECT(tmp_class_creation_7__metaclass);
            tmp_source_name_27 = tmp_class_creation_7__metaclass;
            tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain___prepare__);
            if (tmp_called_name_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 245;

                goto try_except_handler_20;
            }
            tmp_tuple_element_23 = const_str_plain_QtCore;
            tmp_args_name_13 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_23);
            PyTuple_SET_ITEM(tmp_args_name_13, 0, tmp_tuple_element_23);
            CHECK_OBJECT(tmp_class_creation_7__bases);
            tmp_tuple_element_23 = tmp_class_creation_7__bases;
            Py_INCREF(tmp_tuple_element_23);
            PyTuple_SET_ITEM(tmp_args_name_13, 1, tmp_tuple_element_23);
            CHECK_OBJECT(tmp_class_creation_7__class_decl_dict);
            tmp_kw_name_13 = tmp_class_creation_7__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 245;
            tmp_assign_source_71 = CALL_FUNCTION(tmp_called_name_13, tmp_args_name_13, tmp_kw_name_13);
            Py_DECREF(tmp_called_name_13);
            Py_DECREF(tmp_args_name_13);
            if (tmp_assign_source_71 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 245;

                goto try_except_handler_20;
            }
            assert(tmp_class_creation_7__prepared == NULL);
            tmp_class_creation_7__prepared = tmp_assign_source_71;
        }
        {
            nuitka_bool tmp_condition_result_42;
            PyObject *tmp_operand_name_7;
            PyObject *tmp_source_name_28;
            CHECK_OBJECT(tmp_class_creation_7__prepared);
            tmp_source_name_28 = tmp_class_creation_7__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_28, const_str_plain___getitem__);
            tmp_operand_name_7 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 245;

                goto try_except_handler_20;
            }
            tmp_condition_result_42 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_42 == NUITKA_BOOL_TRUE) {
                goto branch_yes_28;
            } else {
                goto branch_no_28;
            }
            branch_yes_28:;
            {
                PyObject *tmp_raise_type_7;
                PyObject *tmp_raise_value_7;
                PyObject *tmp_left_name_7;
                PyObject *tmp_right_name_7;
                PyObject *tmp_tuple_element_24;
                PyObject *tmp_getattr_target_7;
                PyObject *tmp_getattr_attr_7;
                PyObject *tmp_getattr_default_7;
                PyObject *tmp_source_name_29;
                PyObject *tmp_type_arg_14;
                tmp_raise_type_7 = PyExc_TypeError;
                tmp_left_name_7 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_7__metaclass);
                tmp_getattr_target_7 = tmp_class_creation_7__metaclass;
                tmp_getattr_attr_7 = const_str_plain___name__;
                tmp_getattr_default_7 = const_str_angle_metaclass;
                tmp_tuple_element_24 = BUILTIN_GETATTR(tmp_getattr_target_7, tmp_getattr_attr_7, tmp_getattr_default_7);
                if (tmp_tuple_element_24 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 245;

                    goto try_except_handler_20;
                }
                tmp_right_name_7 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_7, 0, tmp_tuple_element_24);
                CHECK_OBJECT(tmp_class_creation_7__prepared);
                tmp_type_arg_14 = tmp_class_creation_7__prepared;
                tmp_source_name_29 = BUILTIN_TYPE1(tmp_type_arg_14);
                assert(!(tmp_source_name_29 == NULL));
                tmp_tuple_element_24 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain___name__);
                Py_DECREF(tmp_source_name_29);
                if (tmp_tuple_element_24 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_7);

                    exception_lineno = 245;

                    goto try_except_handler_20;
                }
                PyTuple_SET_ITEM(tmp_right_name_7, 1, tmp_tuple_element_24);
                tmp_raise_value_7 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_7, tmp_right_name_7);
                Py_DECREF(tmp_right_name_7);
                if (tmp_raise_value_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 245;

                    goto try_except_handler_20;
                }
                exception_type = tmp_raise_type_7;
                Py_INCREF(tmp_raise_type_7);
                exception_value = tmp_raise_value_7;
                exception_lineno = 245;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_20;
            }
            branch_no_28:;
        }
        goto branch_end_27;
        branch_no_27:;
        {
            PyObject *tmp_assign_source_72;
            tmp_assign_source_72 = PyDict_New();
            assert(tmp_class_creation_7__prepared == NULL);
            tmp_class_creation_7__prepared = tmp_assign_source_72;
        }
        branch_end_27:;
    }
    {
        PyObject *tmp_assign_source_73;
        {
            PyObject *tmp_set_locals_7;
            CHECK_OBJECT(tmp_class_creation_7__prepared);
            tmp_set_locals_7 = tmp_class_creation_7__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_245 = tmp_set_locals_7;
            Py_INCREF(tmp_set_locals_7);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_22;
        }
        tmp_dictset_value = const_str_plain_QtCore;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto try_except_handler_22;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_0ec3e70513a8a2f96719c578db147471_7, codeobj_0ec3e70513a8a2f96719c578db147471, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_0ec3e70513a8a2f96719c578db147471_7 = cache_frame_0ec3e70513a8a2f96719c578db147471_7;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_0ec3e70513a8a2f96719c578db147471_7);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_0ec3e70513a8a2f96719c578db147471_7) == 2); // Frame stack

        // Framed code:
        // Tried code:
        {
            PyObject *tmp_assign_source_74;
            PyObject *tmp_tuple_element_25;
            PyObject *tmp_mvar_value_9;
            tmp_tuple_element_25 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain_ProxyNamespace);

            if (tmp_tuple_element_25 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);

                    if (unlikely(tmp_mvar_value_9 == NULL)) {
                        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);
                    }

                    if (tmp_mvar_value_9 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1432 ], 36, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 246;
                        type_description_2 = "o";
                        goto try_except_handler_23;
                    }

                    tmp_tuple_element_25 = tmp_mvar_value_9;
                    Py_INCREF(tmp_tuple_element_25);
                }
            }

            tmp_assign_source_74 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_74, 0, tmp_tuple_element_25);
            assert(tmp_QtCore$class_creation_1__bases_orig == NULL);
            tmp_QtCore$class_creation_1__bases_orig = tmp_assign_source_74;
        }
        {
            PyObject *tmp_assign_source_75;
            PyObject *tmp_dircall_arg1_8;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases_orig);
            tmp_dircall_arg1_8 = tmp_QtCore$class_creation_1__bases_orig;
            Py_INCREF(tmp_dircall_arg1_8);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_8};
                tmp_assign_source_75 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_75 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            assert(tmp_QtCore$class_creation_1__bases == NULL);
            tmp_QtCore$class_creation_1__bases = tmp_assign_source_75;
        }
        {
            PyObject *tmp_assign_source_76;
            tmp_assign_source_76 = PyDict_New();
            assert(tmp_QtCore$class_creation_1__class_decl_dict == NULL);
            tmp_QtCore$class_creation_1__class_decl_dict = tmp_assign_source_76;
        }
        {
            PyObject *tmp_assign_source_77;
            PyObject *tmp_metaclass_name_8;
            nuitka_bool tmp_condition_result_43;
            PyObject *tmp_key_name_22;
            PyObject *tmp_dict_name_22;
            PyObject *tmp_dict_name_23;
            PyObject *tmp_key_name_23;
            nuitka_bool tmp_condition_result_44;
            int tmp_truth_name_8;
            PyObject *tmp_type_arg_15;
            PyObject *tmp_subscribed_name_8;
            PyObject *tmp_subscript_name_8;
            PyObject *tmp_bases_name_8;
            tmp_key_name_22 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__class_decl_dict);
            tmp_dict_name_22 = tmp_QtCore$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_22, tmp_key_name_22);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            tmp_condition_result_43 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_43 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_15;
            } else {
                goto condexpr_false_15;
            }
            condexpr_true_15:;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__class_decl_dict);
            tmp_dict_name_23 = tmp_QtCore$class_creation_1__class_decl_dict;
            tmp_key_name_23 = const_str_plain_metaclass;
            tmp_metaclass_name_8 = DICT_GET_ITEM(tmp_dict_name_23, tmp_key_name_23);
            if (tmp_metaclass_name_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            goto condexpr_end_15;
            condexpr_false_15:;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases);
            tmp_truth_name_8 = CHECK_IF_TRUE(tmp_QtCore$class_creation_1__bases);
            if (tmp_truth_name_8 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            tmp_condition_result_44 = tmp_truth_name_8 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_44 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_16;
            } else {
                goto condexpr_false_16;
            }
            condexpr_true_16:;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases);
            tmp_subscribed_name_8 = tmp_QtCore$class_creation_1__bases;
            tmp_subscript_name_8 = const_int_0;
            tmp_type_arg_15 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_8, tmp_subscript_name_8, 0);
            if (tmp_type_arg_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            tmp_metaclass_name_8 = BUILTIN_TYPE1(tmp_type_arg_15);
            Py_DECREF(tmp_type_arg_15);
            if (tmp_metaclass_name_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            goto condexpr_end_16;
            condexpr_false_16:;
            tmp_metaclass_name_8 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_8);
            condexpr_end_16:;
            condexpr_end_15:;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases);
            tmp_bases_name_8 = tmp_QtCore$class_creation_1__bases;
            tmp_assign_source_77 = SELECT_METACLASS(tmp_metaclass_name_8, tmp_bases_name_8);
            Py_DECREF(tmp_metaclass_name_8);
            if (tmp_assign_source_77 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            assert(tmp_QtCore$class_creation_1__metaclass == NULL);
            tmp_QtCore$class_creation_1__metaclass = tmp_assign_source_77;
        }
        {
            nuitka_bool tmp_condition_result_45;
            PyObject *tmp_key_name_24;
            PyObject *tmp_dict_name_24;
            tmp_key_name_24 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__class_decl_dict);
            tmp_dict_name_24 = tmp_QtCore$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_24, tmp_key_name_24);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            tmp_condition_result_45 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_45 == NUITKA_BOOL_TRUE) {
                goto branch_yes_29;
            } else {
                goto branch_no_29;
            }
            branch_yes_29:;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__class_decl_dict);
            tmp_dictdel_dict = tmp_QtCore$class_creation_1__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_23;
            }
            branch_no_29:;
        }
        {
            nuitka_bool tmp_condition_result_46;
            PyObject *tmp_source_name_30;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__metaclass);
            tmp_source_name_30 = tmp_QtCore$class_creation_1__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_30, const_str_plain___prepare__);
            tmp_condition_result_46 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_46 == NUITKA_BOOL_TRUE) {
                goto branch_yes_30;
            } else {
                goto branch_no_30;
            }
            branch_yes_30:;
            {
                PyObject *tmp_assign_source_78;
                PyObject *tmp_called_name_14;
                PyObject *tmp_source_name_31;
                PyObject *tmp_args_name_14;
                PyObject *tmp_tuple_element_26;
                PyObject *tmp_kw_name_14;
                CHECK_OBJECT(tmp_QtCore$class_creation_1__metaclass);
                tmp_source_name_31 = tmp_QtCore$class_creation_1__metaclass;
                tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain___prepare__);
                if (tmp_called_name_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 246;
                    type_description_2 = "o";
                    goto try_except_handler_23;
                }
                tmp_tuple_element_26 = const_str_plain_Qt;
                tmp_args_name_14 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_26);
                PyTuple_SET_ITEM(tmp_args_name_14, 0, tmp_tuple_element_26);
                CHECK_OBJECT(tmp_QtCore$class_creation_1__bases);
                tmp_tuple_element_26 = tmp_QtCore$class_creation_1__bases;
                Py_INCREF(tmp_tuple_element_26);
                PyTuple_SET_ITEM(tmp_args_name_14, 1, tmp_tuple_element_26);
                CHECK_OBJECT(tmp_QtCore$class_creation_1__class_decl_dict);
                tmp_kw_name_14 = tmp_QtCore$class_creation_1__class_decl_dict;
                frame_0ec3e70513a8a2f96719c578db147471_7->m_frame.f_lineno = 246;
                tmp_assign_source_78 = CALL_FUNCTION(tmp_called_name_14, tmp_args_name_14, tmp_kw_name_14);
                Py_DECREF(tmp_called_name_14);
                Py_DECREF(tmp_args_name_14);
                if (tmp_assign_source_78 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 246;
                    type_description_2 = "o";
                    goto try_except_handler_23;
                }
                assert(tmp_QtCore$class_creation_1__prepared == NULL);
                tmp_QtCore$class_creation_1__prepared = tmp_assign_source_78;
            }
            {
                nuitka_bool tmp_condition_result_47;
                PyObject *tmp_operand_name_8;
                PyObject *tmp_source_name_32;
                CHECK_OBJECT(tmp_QtCore$class_creation_1__prepared);
                tmp_source_name_32 = tmp_QtCore$class_creation_1__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_32, const_str_plain___getitem__);
                tmp_operand_name_8 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 246;
                    type_description_2 = "o";
                    goto try_except_handler_23;
                }
                tmp_condition_result_47 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_47 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_31;
                } else {
                    goto branch_no_31;
                }
                branch_yes_31:;
                {
                    PyObject *tmp_raise_type_8;
                    PyObject *tmp_raise_value_8;
                    PyObject *tmp_left_name_8;
                    PyObject *tmp_right_name_8;
                    PyObject *tmp_tuple_element_27;
                    PyObject *tmp_getattr_target_8;
                    PyObject *tmp_getattr_attr_8;
                    PyObject *tmp_getattr_default_8;
                    PyObject *tmp_source_name_33;
                    PyObject *tmp_type_arg_16;
                    tmp_raise_type_8 = PyExc_TypeError;
                    tmp_left_name_8 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtCore$class_creation_1__metaclass);
                    tmp_getattr_target_8 = tmp_QtCore$class_creation_1__metaclass;
                    tmp_getattr_attr_8 = const_str_plain___name__;
                    tmp_getattr_default_8 = const_str_angle_metaclass;
                    tmp_tuple_element_27 = BUILTIN_GETATTR(tmp_getattr_target_8, tmp_getattr_attr_8, tmp_getattr_default_8);
                    if (tmp_tuple_element_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 246;
                        type_description_2 = "o";
                        goto try_except_handler_23;
                    }
                    tmp_right_name_8 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_8, 0, tmp_tuple_element_27);
                    CHECK_OBJECT(tmp_QtCore$class_creation_1__prepared);
                    tmp_type_arg_16 = tmp_QtCore$class_creation_1__prepared;
                    tmp_source_name_33 = BUILTIN_TYPE1(tmp_type_arg_16);
                    assert(!(tmp_source_name_33 == NULL));
                    tmp_tuple_element_27 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_33);
                    if (tmp_tuple_element_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_8);

                        exception_lineno = 246;
                        type_description_2 = "o";
                        goto try_except_handler_23;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_8, 1, tmp_tuple_element_27);
                    tmp_raise_value_8 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_8, tmp_right_name_8);
                    Py_DECREF(tmp_right_name_8);
                    if (tmp_raise_value_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 246;
                        type_description_2 = "o";
                        goto try_except_handler_23;
                    }
                    exception_type = tmp_raise_type_8;
                    Py_INCREF(tmp_raise_type_8);
                    exception_value = tmp_raise_value_8;
                    exception_lineno = 246;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_23;
                }
                branch_no_31:;
            }
            goto branch_end_30;
            branch_no_30:;
            {
                PyObject *tmp_assign_source_79;
                tmp_assign_source_79 = PyDict_New();
                assert(tmp_QtCore$class_creation_1__prepared == NULL);
                tmp_QtCore$class_creation_1__prepared = tmp_assign_source_79;
            }
            branch_end_30:;
        }
        {
            PyObject *tmp_set_locals_8;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__prepared);
            tmp_set_locals_8 = tmp_QtCore$class_creation_1__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_246 = tmp_set_locals_8;
            Py_INCREF(tmp_set_locals_8);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_246, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 246;
            type_description_2 = "o";
            goto try_except_handler_25;
        }
        tmp_dictset_value = const_str_digest_74634fb4f6e734c02a3fb63ddca5c3e0;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_246, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 246;
            type_description_2 = "o";
            goto try_except_handler_25;
        }
        {
            nuitka_bool tmp_condition_result_48;
            PyObject *tmp_compexpr_left_8;
            PyObject *tmp_compexpr_right_8;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases);
            tmp_compexpr_left_8 = tmp_QtCore$class_creation_1__bases;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases_orig);
            tmp_compexpr_right_8 = tmp_QtCore$class_creation_1__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_25;
            }
            tmp_condition_result_48 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_48 == NUITKA_BOOL_TRUE) {
                goto branch_yes_32;
            } else {
                goto branch_no_32;
            }
            branch_yes_32:;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases_orig);
            tmp_dictset_value = tmp_QtCore$class_creation_1__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_246, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_25;
            }
            branch_no_32:;
        }
        {
            PyObject *tmp_assign_source_80;
            PyObject *tmp_called_name_15;
            PyObject *tmp_args_name_15;
            PyObject *tmp_tuple_element_28;
            PyObject *tmp_kw_name_15;
            CHECK_OBJECT(tmp_QtCore$class_creation_1__metaclass);
            tmp_called_name_15 = tmp_QtCore$class_creation_1__metaclass;
            tmp_tuple_element_28 = const_str_plain_Qt;
            tmp_args_name_15 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_28);
            PyTuple_SET_ITEM(tmp_args_name_15, 0, tmp_tuple_element_28);
            CHECK_OBJECT(tmp_QtCore$class_creation_1__bases);
            tmp_tuple_element_28 = tmp_QtCore$class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_28);
            PyTuple_SET_ITEM(tmp_args_name_15, 1, tmp_tuple_element_28);
            tmp_tuple_element_28 = locals_PyQt5$uic$Compiler$qtproxies_246;
            Py_INCREF(tmp_tuple_element_28);
            PyTuple_SET_ITEM(tmp_args_name_15, 2, tmp_tuple_element_28);
            CHECK_OBJECT(tmp_QtCore$class_creation_1__class_decl_dict);
            tmp_kw_name_15 = tmp_QtCore$class_creation_1__class_decl_dict;
            frame_0ec3e70513a8a2f96719c578db147471_7->m_frame.f_lineno = 246;
            tmp_assign_source_80 = CALL_FUNCTION(tmp_called_name_15, tmp_args_name_15, tmp_kw_name_15);
            Py_DECREF(tmp_args_name_15);
            if (tmp_assign_source_80 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 246;
                type_description_2 = "o";
                goto try_except_handler_25;
            }
            assert(outline_7_var___class__ == NULL);
            outline_7_var___class__ = tmp_assign_source_80;
        }
        CHECK_OBJECT(outline_7_var___class__);
        tmp_dictset_value = outline_7_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_25;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_25:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_246);
        locals_PyQt5$uic$Compiler$qtproxies_246 = NULL;
        goto try_return_handler_24;
        // Exception handler code:
        try_except_handler_25:;
        exception_keeper_type_20 = exception_type;
        exception_keeper_value_20 = exception_value;
        exception_keeper_tb_20 = exception_tb;
        exception_keeper_lineno_20 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_246);
        locals_PyQt5$uic$Compiler$qtproxies_246 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_20;
        exception_value = exception_keeper_value_20;
        exception_tb = exception_keeper_tb_20;
        exception_lineno = exception_keeper_lineno_20;

        goto try_except_handler_24;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_24:;
        CHECK_OBJECT((PyObject *)outline_7_var___class__);
        Py_DECREF(outline_7_var___class__);
        outline_7_var___class__ = NULL;

        goto outline_result_8;
        // Exception handler code:
        try_except_handler_24:;
        exception_keeper_type_21 = exception_type;
        exception_keeper_value_21 = exception_value;
        exception_keeper_tb_21 = exception_tb;
        exception_keeper_lineno_21 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_21;
        exception_value = exception_keeper_value_21;
        exception_tb = exception_keeper_tb_21;
        exception_lineno = exception_keeper_lineno_21;

        goto outline_exception_8;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_8:;
        exception_lineno = 246;
        goto try_except_handler_23;
        outline_result_8:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain_Qt, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 246;
            type_description_2 = "o";
            goto try_except_handler_23;
        }
        goto try_end_8;
        // Exception handler code:
        try_except_handler_23:;
        exception_keeper_type_22 = exception_type;
        exception_keeper_value_22 = exception_value;
        exception_keeper_tb_22 = exception_tb;
        exception_keeper_lineno_22 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtCore$class_creation_1__bases_orig);
        tmp_QtCore$class_creation_1__bases_orig = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_1__bases);
        tmp_QtCore$class_creation_1__bases = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_1__class_decl_dict);
        tmp_QtCore$class_creation_1__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_1__metaclass);
        tmp_QtCore$class_creation_1__metaclass = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_1__prepared);
        tmp_QtCore$class_creation_1__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_22;
        exception_value = exception_keeper_value_22;
        exception_tb = exception_keeper_tb_22;
        exception_lineno = exception_keeper_lineno_22;

        goto frame_exception_exit_7;
        // End of try:
        try_end_8:;
        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_1__bases_orig);
        Py_DECREF(tmp_QtCore$class_creation_1__bases_orig);
        tmp_QtCore$class_creation_1__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_1__bases);
        Py_DECREF(tmp_QtCore$class_creation_1__bases);
        tmp_QtCore$class_creation_1__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_1__class_decl_dict);
        Py_DECREF(tmp_QtCore$class_creation_1__class_decl_dict);
        tmp_QtCore$class_creation_1__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_1__metaclass);
        Py_DECREF(tmp_QtCore$class_creation_1__metaclass);
        tmp_QtCore$class_creation_1__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_1__prepared);
        Py_DECREF(tmp_QtCore$class_creation_1__prepared);
        tmp_QtCore$class_creation_1__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_81;
            PyObject *tmp_tuple_element_29;
            PyObject *tmp_mvar_value_10;
            tmp_tuple_element_29 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain_ProxyClass);

            if (tmp_tuple_element_29 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_10 == NULL)) {
                        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_10 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 252;
                        type_description_2 = "o";
                        goto try_except_handler_26;
                    }

                    tmp_tuple_element_29 = tmp_mvar_value_10;
                    Py_INCREF(tmp_tuple_element_29);
                }
            }

            tmp_assign_source_81 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_81, 0, tmp_tuple_element_29);
            assert(tmp_QtCore$class_creation_2__bases_orig == NULL);
            tmp_QtCore$class_creation_2__bases_orig = tmp_assign_source_81;
        }
        {
            PyObject *tmp_assign_source_82;
            PyObject *tmp_dircall_arg1_9;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases_orig);
            tmp_dircall_arg1_9 = tmp_QtCore$class_creation_2__bases_orig;
            Py_INCREF(tmp_dircall_arg1_9);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_9};
                tmp_assign_source_82 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_82 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            assert(tmp_QtCore$class_creation_2__bases == NULL);
            tmp_QtCore$class_creation_2__bases = tmp_assign_source_82;
        }
        {
            PyObject *tmp_assign_source_83;
            tmp_assign_source_83 = PyDict_New();
            assert(tmp_QtCore$class_creation_2__class_decl_dict == NULL);
            tmp_QtCore$class_creation_2__class_decl_dict = tmp_assign_source_83;
        }
        {
            PyObject *tmp_assign_source_84;
            PyObject *tmp_metaclass_name_9;
            nuitka_bool tmp_condition_result_49;
            PyObject *tmp_key_name_25;
            PyObject *tmp_dict_name_25;
            PyObject *tmp_dict_name_26;
            PyObject *tmp_key_name_26;
            nuitka_bool tmp_condition_result_50;
            int tmp_truth_name_9;
            PyObject *tmp_type_arg_17;
            PyObject *tmp_subscribed_name_9;
            PyObject *tmp_subscript_name_9;
            PyObject *tmp_bases_name_9;
            tmp_key_name_25 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__class_decl_dict);
            tmp_dict_name_25 = tmp_QtCore$class_creation_2__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_25, tmp_key_name_25);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            tmp_condition_result_49 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_49 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_17;
            } else {
                goto condexpr_false_17;
            }
            condexpr_true_17:;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__class_decl_dict);
            tmp_dict_name_26 = tmp_QtCore$class_creation_2__class_decl_dict;
            tmp_key_name_26 = const_str_plain_metaclass;
            tmp_metaclass_name_9 = DICT_GET_ITEM(tmp_dict_name_26, tmp_key_name_26);
            if (tmp_metaclass_name_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            goto condexpr_end_17;
            condexpr_false_17:;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases);
            tmp_truth_name_9 = CHECK_IF_TRUE(tmp_QtCore$class_creation_2__bases);
            if (tmp_truth_name_9 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            tmp_condition_result_50 = tmp_truth_name_9 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_50 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_18;
            } else {
                goto condexpr_false_18;
            }
            condexpr_true_18:;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases);
            tmp_subscribed_name_9 = tmp_QtCore$class_creation_2__bases;
            tmp_subscript_name_9 = const_int_0;
            tmp_type_arg_17 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_9, tmp_subscript_name_9, 0);
            if (tmp_type_arg_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            tmp_metaclass_name_9 = BUILTIN_TYPE1(tmp_type_arg_17);
            Py_DECREF(tmp_type_arg_17);
            if (tmp_metaclass_name_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            goto condexpr_end_18;
            condexpr_false_18:;
            tmp_metaclass_name_9 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_9);
            condexpr_end_18:;
            condexpr_end_17:;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases);
            tmp_bases_name_9 = tmp_QtCore$class_creation_2__bases;
            tmp_assign_source_84 = SELECT_METACLASS(tmp_metaclass_name_9, tmp_bases_name_9);
            Py_DECREF(tmp_metaclass_name_9);
            if (tmp_assign_source_84 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            assert(tmp_QtCore$class_creation_2__metaclass == NULL);
            tmp_QtCore$class_creation_2__metaclass = tmp_assign_source_84;
        }
        {
            nuitka_bool tmp_condition_result_51;
            PyObject *tmp_key_name_27;
            PyObject *tmp_dict_name_27;
            tmp_key_name_27 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__class_decl_dict);
            tmp_dict_name_27 = tmp_QtCore$class_creation_2__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_27, tmp_key_name_27);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            tmp_condition_result_51 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_51 == NUITKA_BOOL_TRUE) {
                goto branch_yes_33;
            } else {
                goto branch_no_33;
            }
            branch_yes_33:;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__class_decl_dict);
            tmp_dictdel_dict = tmp_QtCore$class_creation_2__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_26;
            }
            branch_no_33:;
        }
        {
            nuitka_bool tmp_condition_result_52;
            PyObject *tmp_source_name_34;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__metaclass);
            tmp_source_name_34 = tmp_QtCore$class_creation_2__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_34, const_str_plain___prepare__);
            tmp_condition_result_52 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_52 == NUITKA_BOOL_TRUE) {
                goto branch_yes_34;
            } else {
                goto branch_no_34;
            }
            branch_yes_34:;
            {
                PyObject *tmp_assign_source_85;
                PyObject *tmp_called_name_16;
                PyObject *tmp_source_name_35;
                PyObject *tmp_args_name_16;
                PyObject *tmp_tuple_element_30;
                PyObject *tmp_kw_name_16;
                CHECK_OBJECT(tmp_QtCore$class_creation_2__metaclass);
                tmp_source_name_35 = tmp_QtCore$class_creation_2__metaclass;
                tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain___prepare__);
                if (tmp_called_name_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 252;
                    type_description_2 = "o";
                    goto try_except_handler_26;
                }
                tmp_tuple_element_30 = const_str_plain_QMetaObject;
                tmp_args_name_16 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_30);
                PyTuple_SET_ITEM(tmp_args_name_16, 0, tmp_tuple_element_30);
                CHECK_OBJECT(tmp_QtCore$class_creation_2__bases);
                tmp_tuple_element_30 = tmp_QtCore$class_creation_2__bases;
                Py_INCREF(tmp_tuple_element_30);
                PyTuple_SET_ITEM(tmp_args_name_16, 1, tmp_tuple_element_30);
                CHECK_OBJECT(tmp_QtCore$class_creation_2__class_decl_dict);
                tmp_kw_name_16 = tmp_QtCore$class_creation_2__class_decl_dict;
                frame_0ec3e70513a8a2f96719c578db147471_7->m_frame.f_lineno = 252;
                tmp_assign_source_85 = CALL_FUNCTION(tmp_called_name_16, tmp_args_name_16, tmp_kw_name_16);
                Py_DECREF(tmp_called_name_16);
                Py_DECREF(tmp_args_name_16);
                if (tmp_assign_source_85 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 252;
                    type_description_2 = "o";
                    goto try_except_handler_26;
                }
                assert(tmp_QtCore$class_creation_2__prepared == NULL);
                tmp_QtCore$class_creation_2__prepared = tmp_assign_source_85;
            }
            {
                nuitka_bool tmp_condition_result_53;
                PyObject *tmp_operand_name_9;
                PyObject *tmp_source_name_36;
                CHECK_OBJECT(tmp_QtCore$class_creation_2__prepared);
                tmp_source_name_36 = tmp_QtCore$class_creation_2__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_36, const_str_plain___getitem__);
                tmp_operand_name_9 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_9);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 252;
                    type_description_2 = "o";
                    goto try_except_handler_26;
                }
                tmp_condition_result_53 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_53 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_35;
                } else {
                    goto branch_no_35;
                }
                branch_yes_35:;
                {
                    PyObject *tmp_raise_type_9;
                    PyObject *tmp_raise_value_9;
                    PyObject *tmp_left_name_9;
                    PyObject *tmp_right_name_9;
                    PyObject *tmp_tuple_element_31;
                    PyObject *tmp_getattr_target_9;
                    PyObject *tmp_getattr_attr_9;
                    PyObject *tmp_getattr_default_9;
                    PyObject *tmp_source_name_37;
                    PyObject *tmp_type_arg_18;
                    tmp_raise_type_9 = PyExc_TypeError;
                    tmp_left_name_9 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtCore$class_creation_2__metaclass);
                    tmp_getattr_target_9 = tmp_QtCore$class_creation_2__metaclass;
                    tmp_getattr_attr_9 = const_str_plain___name__;
                    tmp_getattr_default_9 = const_str_angle_metaclass;
                    tmp_tuple_element_31 = BUILTIN_GETATTR(tmp_getattr_target_9, tmp_getattr_attr_9, tmp_getattr_default_9);
                    if (tmp_tuple_element_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 252;
                        type_description_2 = "o";
                        goto try_except_handler_26;
                    }
                    tmp_right_name_9 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_9, 0, tmp_tuple_element_31);
                    CHECK_OBJECT(tmp_QtCore$class_creation_2__prepared);
                    tmp_type_arg_18 = tmp_QtCore$class_creation_2__prepared;
                    tmp_source_name_37 = BUILTIN_TYPE1(tmp_type_arg_18);
                    assert(!(tmp_source_name_37 == NULL));
                    tmp_tuple_element_31 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_37);
                    if (tmp_tuple_element_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_9);

                        exception_lineno = 252;
                        type_description_2 = "o";
                        goto try_except_handler_26;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_9, 1, tmp_tuple_element_31);
                    tmp_raise_value_9 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_9, tmp_right_name_9);
                    Py_DECREF(tmp_right_name_9);
                    if (tmp_raise_value_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 252;
                        type_description_2 = "o";
                        goto try_except_handler_26;
                    }
                    exception_type = tmp_raise_type_9;
                    Py_INCREF(tmp_raise_type_9);
                    exception_value = tmp_raise_value_9;
                    exception_lineno = 252;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_26;
                }
                branch_no_35:;
            }
            goto branch_end_34;
            branch_no_34:;
            {
                PyObject *tmp_assign_source_86;
                tmp_assign_source_86 = PyDict_New();
                assert(tmp_QtCore$class_creation_2__prepared == NULL);
                tmp_QtCore$class_creation_2__prepared = tmp_assign_source_86;
            }
            branch_end_34:;
        }
        {
            PyObject *tmp_set_locals_9;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__prepared);
            tmp_set_locals_9 = tmp_QtCore$class_creation_2__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_252 = tmp_set_locals_9;
            Py_INCREF(tmp_set_locals_9);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_252, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 252;
            type_description_2 = "o";
            goto try_except_handler_28;
        }
        tmp_dictset_value = const_str_digest_f6e21371c1f4b15e5d01ebc764f03c28;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_252, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 252;
            type_description_2 = "o";
            goto try_except_handler_28;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_b45d33ae6b169d8890b4fa59e78d380e_8, codeobj_b45d33ae6b169d8890b4fa59e78d380e, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_b45d33ae6b169d8890b4fa59e78d380e_8 = cache_frame_b45d33ae6b169d8890b4fa59e78d380e_8;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_b45d33ae6b169d8890b4fa59e78d380e_8);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_b45d33ae6b169d8890b4fa59e78d380e_8) == 2); // Frame stack

        // Framed code:
        {
            nuitka_bool tmp_condition_result_54;
            PyObject *tmp_called_name_17;
            PyObject *tmp_args_element_name_1;
            PyObject *tmp_classmethod_arg_1;
            tmp_res = MAPPING_HAS_ITEM(locals_PyQt5$uic$Compiler$qtproxies_252, const_str_plain_classmethod);

            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 253;
                type_description_3 = "o";
                goto frame_exception_exit_8;
            }
            tmp_condition_result_54 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_54 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_19;
            } else {
                goto condexpr_false_19;
            }
            condexpr_true_19:;
            tmp_called_name_17 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_252, const_str_plain_classmethod);

            if (tmp_called_name_17 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 957 ], 33, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 253;
                type_description_3 = "o";
                goto frame_exception_exit_8;
            }

            if (tmp_called_name_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 253;
                type_description_3 = "o";
                goto frame_exception_exit_8;
            }
            tmp_args_element_name_1 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName();



            frame_b45d33ae6b169d8890b4fa59e78d380e_8->m_frame.f_lineno = 253;
            tmp_dictset_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_17, tmp_args_element_name_1);
            Py_DECREF(tmp_called_name_17);
            Py_DECREF(tmp_args_element_name_1);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 253;
                type_description_3 = "o";
                goto frame_exception_exit_8;
            }
            goto condexpr_end_19;
            condexpr_false_19:;
            tmp_classmethod_arg_1 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_18_connectSlotsByName();



            tmp_dictset_value = BUILTIN_CLASSMETHOD(tmp_classmethod_arg_1);
            Py_DECREF(tmp_classmethod_arg_1);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 253;
                type_description_3 = "o";
                goto frame_exception_exit_8;
            }
            condexpr_end_19:;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_252, const_str_plain_connectSlotsByName, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 254;
                type_description_3 = "o";
                goto frame_exception_exit_8;
            }
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_b45d33ae6b169d8890b4fa59e78d380e_8);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_6;

        frame_exception_exit_8:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_b45d33ae6b169d8890b4fa59e78d380e_8);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_b45d33ae6b169d8890b4fa59e78d380e_8, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_b45d33ae6b169d8890b4fa59e78d380e_8->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_b45d33ae6b169d8890b4fa59e78d380e_8, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_b45d33ae6b169d8890b4fa59e78d380e_8,
            type_description_3,
            outline_8_var___class__
        );


        // Release cached frame.
        if (frame_b45d33ae6b169d8890b4fa59e78d380e_8 == cache_frame_b45d33ae6b169d8890b4fa59e78d380e_8) {
            Py_DECREF(frame_b45d33ae6b169d8890b4fa59e78d380e_8);
        }
        cache_frame_b45d33ae6b169d8890b4fa59e78d380e_8 = NULL;

        assertFrameObject(frame_b45d33ae6b169d8890b4fa59e78d380e_8);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_7;

        frame_no_exception_6:;
        goto skip_nested_handling_6;
        nested_frame_exit_7:;
        type_description_2 = "o";
        goto try_except_handler_28;
        skip_nested_handling_6:;
        {
            nuitka_bool tmp_condition_result_55;
            PyObject *tmp_compexpr_left_9;
            PyObject *tmp_compexpr_right_9;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases);
            tmp_compexpr_left_9 = tmp_QtCore$class_creation_2__bases;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases_orig);
            tmp_compexpr_right_9 = tmp_QtCore$class_creation_2__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_9, tmp_compexpr_right_9);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_28;
            }
            tmp_condition_result_55 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_55 == NUITKA_BOOL_TRUE) {
                goto branch_yes_36;
            } else {
                goto branch_no_36;
            }
            branch_yes_36:;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases_orig);
            tmp_dictset_value = tmp_QtCore$class_creation_2__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_252, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_28;
            }
            branch_no_36:;
        }
        {
            PyObject *tmp_assign_source_87;
            PyObject *tmp_called_name_18;
            PyObject *tmp_args_name_17;
            PyObject *tmp_tuple_element_32;
            PyObject *tmp_kw_name_17;
            CHECK_OBJECT(tmp_QtCore$class_creation_2__metaclass);
            tmp_called_name_18 = tmp_QtCore$class_creation_2__metaclass;
            tmp_tuple_element_32 = const_str_plain_QMetaObject;
            tmp_args_name_17 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_32);
            PyTuple_SET_ITEM(tmp_args_name_17, 0, tmp_tuple_element_32);
            CHECK_OBJECT(tmp_QtCore$class_creation_2__bases);
            tmp_tuple_element_32 = tmp_QtCore$class_creation_2__bases;
            Py_INCREF(tmp_tuple_element_32);
            PyTuple_SET_ITEM(tmp_args_name_17, 1, tmp_tuple_element_32);
            tmp_tuple_element_32 = locals_PyQt5$uic$Compiler$qtproxies_252;
            Py_INCREF(tmp_tuple_element_32);
            PyTuple_SET_ITEM(tmp_args_name_17, 2, tmp_tuple_element_32);
            CHECK_OBJECT(tmp_QtCore$class_creation_2__class_decl_dict);
            tmp_kw_name_17 = tmp_QtCore$class_creation_2__class_decl_dict;
            frame_0ec3e70513a8a2f96719c578db147471_7->m_frame.f_lineno = 252;
            tmp_assign_source_87 = CALL_FUNCTION(tmp_called_name_18, tmp_args_name_17, tmp_kw_name_17);
            Py_DECREF(tmp_args_name_17);
            if (tmp_assign_source_87 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 252;
                type_description_2 = "o";
                goto try_except_handler_28;
            }
            assert(outline_8_var___class__ == NULL);
            outline_8_var___class__ = tmp_assign_source_87;
        }
        CHECK_OBJECT(outline_8_var___class__);
        tmp_dictset_value = outline_8_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_28;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_28:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_252);
        locals_PyQt5$uic$Compiler$qtproxies_252 = NULL;
        goto try_return_handler_27;
        // Exception handler code:
        try_except_handler_28:;
        exception_keeper_type_23 = exception_type;
        exception_keeper_value_23 = exception_value;
        exception_keeper_tb_23 = exception_tb;
        exception_keeper_lineno_23 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_252);
        locals_PyQt5$uic$Compiler$qtproxies_252 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_23;
        exception_value = exception_keeper_value_23;
        exception_tb = exception_keeper_tb_23;
        exception_lineno = exception_keeper_lineno_23;

        goto try_except_handler_27;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_27:;
        CHECK_OBJECT((PyObject *)outline_8_var___class__);
        Py_DECREF(outline_8_var___class__);
        outline_8_var___class__ = NULL;

        goto outline_result_9;
        // Exception handler code:
        try_except_handler_27:;
        exception_keeper_type_24 = exception_type;
        exception_keeper_value_24 = exception_value;
        exception_keeper_tb_24 = exception_tb;
        exception_keeper_lineno_24 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_24;
        exception_value = exception_keeper_value_24;
        exception_tb = exception_keeper_tb_24;
        exception_lineno = exception_keeper_lineno_24;

        goto outline_exception_9;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_9:;
        exception_lineno = 252;
        goto try_except_handler_26;
        outline_result_9:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain_QMetaObject, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 252;
            type_description_2 = "o";
            goto try_except_handler_26;
        }
        goto try_end_9;
        // Exception handler code:
        try_except_handler_26:;
        exception_keeper_type_25 = exception_type;
        exception_keeper_value_25 = exception_value;
        exception_keeper_tb_25 = exception_tb;
        exception_keeper_lineno_25 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtCore$class_creation_2__bases_orig);
        tmp_QtCore$class_creation_2__bases_orig = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_2__bases);
        tmp_QtCore$class_creation_2__bases = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_2__class_decl_dict);
        tmp_QtCore$class_creation_2__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_2__metaclass);
        tmp_QtCore$class_creation_2__metaclass = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_2__prepared);
        tmp_QtCore$class_creation_2__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_25;
        exception_value = exception_keeper_value_25;
        exception_tb = exception_keeper_tb_25;
        exception_lineno = exception_keeper_lineno_25;

        goto frame_exception_exit_7;
        // End of try:
        try_end_9:;
        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_2__bases_orig);
        Py_DECREF(tmp_QtCore$class_creation_2__bases_orig);
        tmp_QtCore$class_creation_2__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_2__bases);
        Py_DECREF(tmp_QtCore$class_creation_2__bases);
        tmp_QtCore$class_creation_2__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_2__class_decl_dict);
        Py_DECREF(tmp_QtCore$class_creation_2__class_decl_dict);
        tmp_QtCore$class_creation_2__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_2__metaclass);
        Py_DECREF(tmp_QtCore$class_creation_2__metaclass);
        tmp_QtCore$class_creation_2__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_2__prepared);
        Py_DECREF(tmp_QtCore$class_creation_2__prepared);
        tmp_QtCore$class_creation_2__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_88;
            PyObject *tmp_tuple_element_33;
            PyObject *tmp_mvar_value_11;
            tmp_tuple_element_33 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain_ProxyClass);

            if (tmp_tuple_element_33 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_11 == NULL)) {
                        tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_11 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 257;
                        type_description_2 = "o";
                        goto try_except_handler_29;
                    }

                    tmp_tuple_element_33 = tmp_mvar_value_11;
                    Py_INCREF(tmp_tuple_element_33);
                }
            }

            tmp_assign_source_88 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_88, 0, tmp_tuple_element_33);
            assert(tmp_QtCore$class_creation_3__bases_orig == NULL);
            tmp_QtCore$class_creation_3__bases_orig = tmp_assign_source_88;
        }
        {
            PyObject *tmp_assign_source_89;
            PyObject *tmp_dircall_arg1_10;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases_orig);
            tmp_dircall_arg1_10 = tmp_QtCore$class_creation_3__bases_orig;
            Py_INCREF(tmp_dircall_arg1_10);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_10};
                tmp_assign_source_89 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_89 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            assert(tmp_QtCore$class_creation_3__bases == NULL);
            tmp_QtCore$class_creation_3__bases = tmp_assign_source_89;
        }
        {
            PyObject *tmp_assign_source_90;
            tmp_assign_source_90 = PyDict_New();
            assert(tmp_QtCore$class_creation_3__class_decl_dict == NULL);
            tmp_QtCore$class_creation_3__class_decl_dict = tmp_assign_source_90;
        }
        {
            PyObject *tmp_assign_source_91;
            PyObject *tmp_metaclass_name_10;
            nuitka_bool tmp_condition_result_56;
            PyObject *tmp_key_name_28;
            PyObject *tmp_dict_name_28;
            PyObject *tmp_dict_name_29;
            PyObject *tmp_key_name_29;
            nuitka_bool tmp_condition_result_57;
            int tmp_truth_name_10;
            PyObject *tmp_type_arg_19;
            PyObject *tmp_subscribed_name_10;
            PyObject *tmp_subscript_name_10;
            PyObject *tmp_bases_name_10;
            tmp_key_name_28 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__class_decl_dict);
            tmp_dict_name_28 = tmp_QtCore$class_creation_3__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_28, tmp_key_name_28);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            tmp_condition_result_56 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_56 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_20;
            } else {
                goto condexpr_false_20;
            }
            condexpr_true_20:;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__class_decl_dict);
            tmp_dict_name_29 = tmp_QtCore$class_creation_3__class_decl_dict;
            tmp_key_name_29 = const_str_plain_metaclass;
            tmp_metaclass_name_10 = DICT_GET_ITEM(tmp_dict_name_29, tmp_key_name_29);
            if (tmp_metaclass_name_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            goto condexpr_end_20;
            condexpr_false_20:;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases);
            tmp_truth_name_10 = CHECK_IF_TRUE(tmp_QtCore$class_creation_3__bases);
            if (tmp_truth_name_10 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            tmp_condition_result_57 = tmp_truth_name_10 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_57 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_21;
            } else {
                goto condexpr_false_21;
            }
            condexpr_true_21:;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases);
            tmp_subscribed_name_10 = tmp_QtCore$class_creation_3__bases;
            tmp_subscript_name_10 = const_int_0;
            tmp_type_arg_19 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_10, tmp_subscript_name_10, 0);
            if (tmp_type_arg_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            tmp_metaclass_name_10 = BUILTIN_TYPE1(tmp_type_arg_19);
            Py_DECREF(tmp_type_arg_19);
            if (tmp_metaclass_name_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            goto condexpr_end_21;
            condexpr_false_21:;
            tmp_metaclass_name_10 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_10);
            condexpr_end_21:;
            condexpr_end_20:;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases);
            tmp_bases_name_10 = tmp_QtCore$class_creation_3__bases;
            tmp_assign_source_91 = SELECT_METACLASS(tmp_metaclass_name_10, tmp_bases_name_10);
            Py_DECREF(tmp_metaclass_name_10);
            if (tmp_assign_source_91 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            assert(tmp_QtCore$class_creation_3__metaclass == NULL);
            tmp_QtCore$class_creation_3__metaclass = tmp_assign_source_91;
        }
        {
            nuitka_bool tmp_condition_result_58;
            PyObject *tmp_key_name_30;
            PyObject *tmp_dict_name_30;
            tmp_key_name_30 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__class_decl_dict);
            tmp_dict_name_30 = tmp_QtCore$class_creation_3__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_30, tmp_key_name_30);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            tmp_condition_result_58 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_58 == NUITKA_BOOL_TRUE) {
                goto branch_yes_37;
            } else {
                goto branch_no_37;
            }
            branch_yes_37:;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__class_decl_dict);
            tmp_dictdel_dict = tmp_QtCore$class_creation_3__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_29;
            }
            branch_no_37:;
        }
        {
            nuitka_bool tmp_condition_result_59;
            PyObject *tmp_source_name_38;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__metaclass);
            tmp_source_name_38 = tmp_QtCore$class_creation_3__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_38, const_str_plain___prepare__);
            tmp_condition_result_59 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_59 == NUITKA_BOOL_TRUE) {
                goto branch_yes_38;
            } else {
                goto branch_no_38;
            }
            branch_yes_38:;
            {
                PyObject *tmp_assign_source_92;
                PyObject *tmp_called_name_19;
                PyObject *tmp_source_name_39;
                PyObject *tmp_args_name_18;
                PyObject *tmp_tuple_element_34;
                PyObject *tmp_kw_name_18;
                CHECK_OBJECT(tmp_QtCore$class_creation_3__metaclass);
                tmp_source_name_39 = tmp_QtCore$class_creation_3__metaclass;
                tmp_called_name_19 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain___prepare__);
                if (tmp_called_name_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 257;
                    type_description_2 = "o";
                    goto try_except_handler_29;
                }
                tmp_tuple_element_34 = const_str_plain_QObject;
                tmp_args_name_18 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_34);
                PyTuple_SET_ITEM(tmp_args_name_18, 0, tmp_tuple_element_34);
                CHECK_OBJECT(tmp_QtCore$class_creation_3__bases);
                tmp_tuple_element_34 = tmp_QtCore$class_creation_3__bases;
                Py_INCREF(tmp_tuple_element_34);
                PyTuple_SET_ITEM(tmp_args_name_18, 1, tmp_tuple_element_34);
                CHECK_OBJECT(tmp_QtCore$class_creation_3__class_decl_dict);
                tmp_kw_name_18 = tmp_QtCore$class_creation_3__class_decl_dict;
                frame_0ec3e70513a8a2f96719c578db147471_7->m_frame.f_lineno = 257;
                tmp_assign_source_92 = CALL_FUNCTION(tmp_called_name_19, tmp_args_name_18, tmp_kw_name_18);
                Py_DECREF(tmp_called_name_19);
                Py_DECREF(tmp_args_name_18);
                if (tmp_assign_source_92 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 257;
                    type_description_2 = "o";
                    goto try_except_handler_29;
                }
                assert(tmp_QtCore$class_creation_3__prepared == NULL);
                tmp_QtCore$class_creation_3__prepared = tmp_assign_source_92;
            }
            {
                nuitka_bool tmp_condition_result_60;
                PyObject *tmp_operand_name_10;
                PyObject *tmp_source_name_40;
                CHECK_OBJECT(tmp_QtCore$class_creation_3__prepared);
                tmp_source_name_40 = tmp_QtCore$class_creation_3__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_40, const_str_plain___getitem__);
                tmp_operand_name_10 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_10);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 257;
                    type_description_2 = "o";
                    goto try_except_handler_29;
                }
                tmp_condition_result_60 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_60 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_39;
                } else {
                    goto branch_no_39;
                }
                branch_yes_39:;
                {
                    PyObject *tmp_raise_type_10;
                    PyObject *tmp_raise_value_10;
                    PyObject *tmp_left_name_10;
                    PyObject *tmp_right_name_10;
                    PyObject *tmp_tuple_element_35;
                    PyObject *tmp_getattr_target_10;
                    PyObject *tmp_getattr_attr_10;
                    PyObject *tmp_getattr_default_10;
                    PyObject *tmp_source_name_41;
                    PyObject *tmp_type_arg_20;
                    tmp_raise_type_10 = PyExc_TypeError;
                    tmp_left_name_10 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtCore$class_creation_3__metaclass);
                    tmp_getattr_target_10 = tmp_QtCore$class_creation_3__metaclass;
                    tmp_getattr_attr_10 = const_str_plain___name__;
                    tmp_getattr_default_10 = const_str_angle_metaclass;
                    tmp_tuple_element_35 = BUILTIN_GETATTR(tmp_getattr_target_10, tmp_getattr_attr_10, tmp_getattr_default_10);
                    if (tmp_tuple_element_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 257;
                        type_description_2 = "o";
                        goto try_except_handler_29;
                    }
                    tmp_right_name_10 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_10, 0, tmp_tuple_element_35);
                    CHECK_OBJECT(tmp_QtCore$class_creation_3__prepared);
                    tmp_type_arg_20 = tmp_QtCore$class_creation_3__prepared;
                    tmp_source_name_41 = BUILTIN_TYPE1(tmp_type_arg_20);
                    assert(!(tmp_source_name_41 == NULL));
                    tmp_tuple_element_35 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_41);
                    if (tmp_tuple_element_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_10);

                        exception_lineno = 257;
                        type_description_2 = "o";
                        goto try_except_handler_29;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_10, 1, tmp_tuple_element_35);
                    tmp_raise_value_10 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_10, tmp_right_name_10);
                    Py_DECREF(tmp_right_name_10);
                    if (tmp_raise_value_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 257;
                        type_description_2 = "o";
                        goto try_except_handler_29;
                    }
                    exception_type = tmp_raise_type_10;
                    Py_INCREF(tmp_raise_type_10);
                    exception_value = tmp_raise_value_10;
                    exception_lineno = 257;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_29;
                }
                branch_no_39:;
            }
            goto branch_end_38;
            branch_no_38:;
            {
                PyObject *tmp_assign_source_93;
                tmp_assign_source_93 = PyDict_New();
                assert(tmp_QtCore$class_creation_3__prepared == NULL);
                tmp_QtCore$class_creation_3__prepared = tmp_assign_source_93;
            }
            branch_end_38:;
        }
        {
            PyObject *tmp_set_locals_10;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__prepared);
            tmp_set_locals_10 = tmp_QtCore$class_creation_3__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_257 = tmp_set_locals_10;
            Py_INCREF(tmp_set_locals_10);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_257, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;
            type_description_2 = "o";
            goto try_except_handler_31;
        }
        tmp_dictset_value = const_str_digest_d73a93f9b3cfb83c5b0e923f6070d0d0;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_257, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;
            type_description_2 = "o";
            goto try_except_handler_31;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_06ad95b98bf6ea4d7da60b866487fc74_9, codeobj_06ad95b98bf6ea4d7da60b866487fc74, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_06ad95b98bf6ea4d7da60b866487fc74_9 = cache_frame_06ad95b98bf6ea4d7da60b866487fc74_9;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_06ad95b98bf6ea4d7da60b866487fc74_9);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_06ad95b98bf6ea4d7da60b866487fc74_9) == 2); // Frame stack

        // Framed code:
        {
            PyObject *tmp_mvar_value_12;
            tmp_dictset_value = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_257, const_str_plain_AS_SIGNAL);

            if (tmp_dictset_value == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_AS_SIGNAL);

                    if (unlikely(tmp_mvar_value_12 == NULL)) {
                        tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_AS_SIGNAL);
                    }

                    if (tmp_mvar_value_12 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1254 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 258;
                        type_description_3 = "o";
                        goto frame_exception_exit_9;
                    }

                    tmp_dictset_value = tmp_mvar_value_12;
                    Py_INCREF(tmp_dictset_value);
                }
            }

            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_257, const_str_plain_flags, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 258;
                type_description_3 = "o";
                goto frame_exception_exit_9;
            }
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_19_metaObject();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_257, const_str_plain_metaObject, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 260;
            type_description_3 = "o";
            goto frame_exception_exit_9;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_20_objectName();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_257, const_str_plain_objectName, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 266;
            type_description_3 = "o";
            goto frame_exception_exit_9;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_06ad95b98bf6ea4d7da60b866487fc74_9);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_7;

        frame_exception_exit_9:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_06ad95b98bf6ea4d7da60b866487fc74_9);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_06ad95b98bf6ea4d7da60b866487fc74_9, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_06ad95b98bf6ea4d7da60b866487fc74_9->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_06ad95b98bf6ea4d7da60b866487fc74_9, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_06ad95b98bf6ea4d7da60b866487fc74_9,
            type_description_3,
            outline_9_var___class__
        );


        // Release cached frame.
        if (frame_06ad95b98bf6ea4d7da60b866487fc74_9 == cache_frame_06ad95b98bf6ea4d7da60b866487fc74_9) {
            Py_DECREF(frame_06ad95b98bf6ea4d7da60b866487fc74_9);
        }
        cache_frame_06ad95b98bf6ea4d7da60b866487fc74_9 = NULL;

        assertFrameObject(frame_06ad95b98bf6ea4d7da60b866487fc74_9);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_8;

        frame_no_exception_7:;
        goto skip_nested_handling_7;
        nested_frame_exit_8:;
        type_description_2 = "o";
        goto try_except_handler_31;
        skip_nested_handling_7:;
        {
            nuitka_bool tmp_condition_result_61;
            PyObject *tmp_compexpr_left_10;
            PyObject *tmp_compexpr_right_10;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases);
            tmp_compexpr_left_10 = tmp_QtCore$class_creation_3__bases;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases_orig);
            tmp_compexpr_right_10 = tmp_QtCore$class_creation_3__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_10, tmp_compexpr_right_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_31;
            }
            tmp_condition_result_61 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_61 == NUITKA_BOOL_TRUE) {
                goto branch_yes_40;
            } else {
                goto branch_no_40;
            }
            branch_yes_40:;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases_orig);
            tmp_dictset_value = tmp_QtCore$class_creation_3__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_257, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_31;
            }
            branch_no_40:;
        }
        {
            PyObject *tmp_assign_source_94;
            PyObject *tmp_called_name_20;
            PyObject *tmp_args_name_19;
            PyObject *tmp_tuple_element_36;
            PyObject *tmp_kw_name_19;
            CHECK_OBJECT(tmp_QtCore$class_creation_3__metaclass);
            tmp_called_name_20 = tmp_QtCore$class_creation_3__metaclass;
            tmp_tuple_element_36 = const_str_plain_QObject;
            tmp_args_name_19 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_36);
            PyTuple_SET_ITEM(tmp_args_name_19, 0, tmp_tuple_element_36);
            CHECK_OBJECT(tmp_QtCore$class_creation_3__bases);
            tmp_tuple_element_36 = tmp_QtCore$class_creation_3__bases;
            Py_INCREF(tmp_tuple_element_36);
            PyTuple_SET_ITEM(tmp_args_name_19, 1, tmp_tuple_element_36);
            tmp_tuple_element_36 = locals_PyQt5$uic$Compiler$qtproxies_257;
            Py_INCREF(tmp_tuple_element_36);
            PyTuple_SET_ITEM(tmp_args_name_19, 2, tmp_tuple_element_36);
            CHECK_OBJECT(tmp_QtCore$class_creation_3__class_decl_dict);
            tmp_kw_name_19 = tmp_QtCore$class_creation_3__class_decl_dict;
            frame_0ec3e70513a8a2f96719c578db147471_7->m_frame.f_lineno = 257;
            tmp_assign_source_94 = CALL_FUNCTION(tmp_called_name_20, tmp_args_name_19, tmp_kw_name_19);
            Py_DECREF(tmp_args_name_19);
            if (tmp_assign_source_94 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_2 = "o";
                goto try_except_handler_31;
            }
            assert(outline_9_var___class__ == NULL);
            outline_9_var___class__ = tmp_assign_source_94;
        }
        CHECK_OBJECT(outline_9_var___class__);
        tmp_dictset_value = outline_9_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_31;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_31:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_257);
        locals_PyQt5$uic$Compiler$qtproxies_257 = NULL;
        goto try_return_handler_30;
        // Exception handler code:
        try_except_handler_31:;
        exception_keeper_type_26 = exception_type;
        exception_keeper_value_26 = exception_value;
        exception_keeper_tb_26 = exception_tb;
        exception_keeper_lineno_26 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_257);
        locals_PyQt5$uic$Compiler$qtproxies_257 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_26;
        exception_value = exception_keeper_value_26;
        exception_tb = exception_keeper_tb_26;
        exception_lineno = exception_keeper_lineno_26;

        goto try_except_handler_30;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_30:;
        CHECK_OBJECT((PyObject *)outline_9_var___class__);
        Py_DECREF(outline_9_var___class__);
        outline_9_var___class__ = NULL;

        goto outline_result_10;
        // Exception handler code:
        try_except_handler_30:;
        exception_keeper_type_27 = exception_type;
        exception_keeper_value_27 = exception_value;
        exception_keeper_tb_27 = exception_tb;
        exception_keeper_lineno_27 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_27;
        exception_value = exception_keeper_value_27;
        exception_tb = exception_keeper_tb_27;
        exception_lineno = exception_keeper_lineno_27;

        goto outline_exception_10;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_10:;
        exception_lineno = 257;
        goto try_except_handler_29;
        outline_result_10:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain_QObject, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;
            type_description_2 = "o";
            goto try_except_handler_29;
        }
        goto try_end_10;
        // Exception handler code:
        try_except_handler_29:;
        exception_keeper_type_28 = exception_type;
        exception_keeper_value_28 = exception_value;
        exception_keeper_tb_28 = exception_tb;
        exception_keeper_lineno_28 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtCore$class_creation_3__bases_orig);
        tmp_QtCore$class_creation_3__bases_orig = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_3__bases);
        tmp_QtCore$class_creation_3__bases = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_3__class_decl_dict);
        tmp_QtCore$class_creation_3__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_3__metaclass);
        tmp_QtCore$class_creation_3__metaclass = NULL;

        Py_XDECREF(tmp_QtCore$class_creation_3__prepared);
        tmp_QtCore$class_creation_3__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_28;
        exception_value = exception_keeper_value_28;
        exception_tb = exception_keeper_tb_28;
        exception_lineno = exception_keeper_lineno_28;

        goto frame_exception_exit_7;
        // End of try:
        try_end_10:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_0ec3e70513a8a2f96719c578db147471_7);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_8;

        frame_exception_exit_7:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_0ec3e70513a8a2f96719c578db147471_7);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_0ec3e70513a8a2f96719c578db147471_7, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_0ec3e70513a8a2f96719c578db147471_7->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_0ec3e70513a8a2f96719c578db147471_7, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_0ec3e70513a8a2f96719c578db147471_7,
            type_description_2,
            outline_6_var___class__
        );


        // Release cached frame.
        if (frame_0ec3e70513a8a2f96719c578db147471_7 == cache_frame_0ec3e70513a8a2f96719c578db147471_7) {
            Py_DECREF(frame_0ec3e70513a8a2f96719c578db147471_7);
        }
        cache_frame_0ec3e70513a8a2f96719c578db147471_7 = NULL;

        assertFrameObject(frame_0ec3e70513a8a2f96719c578db147471_7);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_6;

        frame_no_exception_8:;
        goto skip_nested_handling_8;
        nested_frame_exit_6:;

        goto try_except_handler_22;
        skip_nested_handling_8:;
        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_3__bases_orig);
        Py_DECREF(tmp_QtCore$class_creation_3__bases_orig);
        tmp_QtCore$class_creation_3__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_3__bases);
        Py_DECREF(tmp_QtCore$class_creation_3__bases);
        tmp_QtCore$class_creation_3__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_3__class_decl_dict);
        Py_DECREF(tmp_QtCore$class_creation_3__class_decl_dict);
        tmp_QtCore$class_creation_3__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_3__metaclass);
        Py_DECREF(tmp_QtCore$class_creation_3__metaclass);
        tmp_QtCore$class_creation_3__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtCore$class_creation_3__prepared);
        Py_DECREF(tmp_QtCore$class_creation_3__prepared);
        tmp_QtCore$class_creation_3__prepared = NULL;

        {
            nuitka_bool tmp_condition_result_62;
            PyObject *tmp_compexpr_left_11;
            PyObject *tmp_compexpr_right_11;
            CHECK_OBJECT(tmp_class_creation_7__bases);
            tmp_compexpr_left_11 = tmp_class_creation_7__bases;
            CHECK_OBJECT(tmp_class_creation_7__bases_orig);
            tmp_compexpr_right_11 = tmp_class_creation_7__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_11, tmp_compexpr_right_11);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 245;

                goto try_except_handler_22;
            }
            tmp_condition_result_62 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_62 == NUITKA_BOOL_TRUE) {
                goto branch_yes_41;
            } else {
                goto branch_no_41;
            }
            branch_yes_41:;
            CHECK_OBJECT(tmp_class_creation_7__bases_orig);
            tmp_dictset_value = tmp_class_creation_7__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_245, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 245;

                goto try_except_handler_22;
            }
            branch_no_41:;
        }
        {
            PyObject *tmp_assign_source_95;
            PyObject *tmp_called_name_21;
            PyObject *tmp_args_name_20;
            PyObject *tmp_tuple_element_37;
            PyObject *tmp_kw_name_20;
            CHECK_OBJECT(tmp_class_creation_7__metaclass);
            tmp_called_name_21 = tmp_class_creation_7__metaclass;
            tmp_tuple_element_37 = const_str_plain_QtCore;
            tmp_args_name_20 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_37);
            PyTuple_SET_ITEM(tmp_args_name_20, 0, tmp_tuple_element_37);
            CHECK_OBJECT(tmp_class_creation_7__bases);
            tmp_tuple_element_37 = tmp_class_creation_7__bases;
            Py_INCREF(tmp_tuple_element_37);
            PyTuple_SET_ITEM(tmp_args_name_20, 1, tmp_tuple_element_37);
            tmp_tuple_element_37 = locals_PyQt5$uic$Compiler$qtproxies_245;
            Py_INCREF(tmp_tuple_element_37);
            PyTuple_SET_ITEM(tmp_args_name_20, 2, tmp_tuple_element_37);
            CHECK_OBJECT(tmp_class_creation_7__class_decl_dict);
            tmp_kw_name_20 = tmp_class_creation_7__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 245;
            tmp_assign_source_95 = CALL_FUNCTION(tmp_called_name_21, tmp_args_name_20, tmp_kw_name_20);
            Py_DECREF(tmp_args_name_20);
            if (tmp_assign_source_95 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 245;

                goto try_except_handler_22;
            }
            assert(outline_6_var___class__ == NULL);
            outline_6_var___class__ = tmp_assign_source_95;
        }
        CHECK_OBJECT(outline_6_var___class__);
        tmp_assign_source_73 = outline_6_var___class__;
        Py_INCREF(tmp_assign_source_73);
        goto try_return_handler_22;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_22:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_245);
        locals_PyQt5$uic$Compiler$qtproxies_245 = NULL;
        goto try_return_handler_21;
        // Exception handler code:
        try_except_handler_22:;
        exception_keeper_type_29 = exception_type;
        exception_keeper_value_29 = exception_value;
        exception_keeper_tb_29 = exception_tb;
        exception_keeper_lineno_29 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_245);
        locals_PyQt5$uic$Compiler$qtproxies_245 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_29;
        exception_value = exception_keeper_value_29;
        exception_tb = exception_keeper_tb_29;
        exception_lineno = exception_keeper_lineno_29;

        goto try_except_handler_21;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_21:;
        CHECK_OBJECT((PyObject *)outline_6_var___class__);
        Py_DECREF(outline_6_var___class__);
        outline_6_var___class__ = NULL;

        goto outline_result_7;
        // Exception handler code:
        try_except_handler_21:;
        exception_keeper_type_30 = exception_type;
        exception_keeper_value_30 = exception_value;
        exception_keeper_tb_30 = exception_tb;
        exception_keeper_lineno_30 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_30;
        exception_value = exception_keeper_value_30;
        exception_tb = exception_keeper_tb_30;
        exception_lineno = exception_keeper_lineno_30;

        goto outline_exception_7;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_7:;
        exception_lineno = 245;
        goto try_except_handler_20;
        outline_result_7:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtCore, tmp_assign_source_73);
    }
    goto try_end_11;
    // Exception handler code:
    try_except_handler_20:;
    exception_keeper_type_31 = exception_type;
    exception_keeper_value_31 = exception_value;
    exception_keeper_tb_31 = exception_tb;
    exception_keeper_lineno_31 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_7__bases_orig);
    tmp_class_creation_7__bases_orig = NULL;

    Py_XDECREF(tmp_class_creation_7__bases);
    tmp_class_creation_7__bases = NULL;

    Py_XDECREF(tmp_class_creation_7__class_decl_dict);
    tmp_class_creation_7__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_7__metaclass);
    tmp_class_creation_7__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_7__prepared);
    tmp_class_creation_7__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_31;
    exception_value = exception_keeper_value_31;
    exception_tb = exception_keeper_tb_31;
    exception_lineno = exception_keeper_lineno_31;

    goto frame_exception_exit_1;
    // End of try:
    try_end_11:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_7__bases_orig);
    Py_DECREF(tmp_class_creation_7__bases_orig);
    tmp_class_creation_7__bases_orig = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_7__bases);
    Py_DECREF(tmp_class_creation_7__bases);
    tmp_class_creation_7__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_7__class_decl_dict);
    Py_DECREF(tmp_class_creation_7__class_decl_dict);
    tmp_class_creation_7__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_7__metaclass);
    Py_DECREF(tmp_class_creation_7__metaclass);
    tmp_class_creation_7__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_7__prepared);
    Py_DECREF(tmp_class_creation_7__prepared);
    tmp_class_creation_7__prepared = NULL;

    // Tried code:
    {
        PyObject *tmp_assign_source_96;
        PyObject *tmp_tuple_element_38;
        PyObject *tmp_mvar_value_13;
        tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);

        if (unlikely(tmp_mvar_value_13 == NULL)) {
            tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);
        }

        if (tmp_mvar_value_13 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1432 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 270;

            goto try_except_handler_32;
        }

        tmp_tuple_element_38 = tmp_mvar_value_13;
        tmp_assign_source_96 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_38);
        PyTuple_SET_ITEM(tmp_assign_source_96, 0, tmp_tuple_element_38);
        assert(tmp_class_creation_8__bases_orig == NULL);
        tmp_class_creation_8__bases_orig = tmp_assign_source_96;
    }
    {
        PyObject *tmp_assign_source_97;
        PyObject *tmp_dircall_arg1_11;
        CHECK_OBJECT(tmp_class_creation_8__bases_orig);
        tmp_dircall_arg1_11 = tmp_class_creation_8__bases_orig;
        Py_INCREF(tmp_dircall_arg1_11);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_11};
            tmp_assign_source_97 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        assert(tmp_class_creation_8__bases == NULL);
        tmp_class_creation_8__bases = tmp_assign_source_97;
    }
    {
        PyObject *tmp_assign_source_98;
        tmp_assign_source_98 = PyDict_New();
        assert(tmp_class_creation_8__class_decl_dict == NULL);
        tmp_class_creation_8__class_decl_dict = tmp_assign_source_98;
    }
    {
        PyObject *tmp_assign_source_99;
        PyObject *tmp_metaclass_name_11;
        nuitka_bool tmp_condition_result_63;
        PyObject *tmp_key_name_31;
        PyObject *tmp_dict_name_31;
        PyObject *tmp_dict_name_32;
        PyObject *tmp_key_name_32;
        nuitka_bool tmp_condition_result_64;
        int tmp_truth_name_11;
        PyObject *tmp_type_arg_21;
        PyObject *tmp_subscribed_name_11;
        PyObject *tmp_subscript_name_11;
        PyObject *tmp_bases_name_11;
        tmp_key_name_31 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_8__class_decl_dict);
        tmp_dict_name_31 = tmp_class_creation_8__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_31, tmp_key_name_31);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        tmp_condition_result_63 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_63 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_22;
        } else {
            goto condexpr_false_22;
        }
        condexpr_true_22:;
        CHECK_OBJECT(tmp_class_creation_8__class_decl_dict);
        tmp_dict_name_32 = tmp_class_creation_8__class_decl_dict;
        tmp_key_name_32 = const_str_plain_metaclass;
        tmp_metaclass_name_11 = DICT_GET_ITEM(tmp_dict_name_32, tmp_key_name_32);
        if (tmp_metaclass_name_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        goto condexpr_end_22;
        condexpr_false_22:;
        CHECK_OBJECT(tmp_class_creation_8__bases);
        tmp_truth_name_11 = CHECK_IF_TRUE(tmp_class_creation_8__bases);
        if (tmp_truth_name_11 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        tmp_condition_result_64 = tmp_truth_name_11 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_64 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_23;
        } else {
            goto condexpr_false_23;
        }
        condexpr_true_23:;
        CHECK_OBJECT(tmp_class_creation_8__bases);
        tmp_subscribed_name_11 = tmp_class_creation_8__bases;
        tmp_subscript_name_11 = const_int_0;
        tmp_type_arg_21 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_11, tmp_subscript_name_11, 0);
        if (tmp_type_arg_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        tmp_metaclass_name_11 = BUILTIN_TYPE1(tmp_type_arg_21);
        Py_DECREF(tmp_type_arg_21);
        if (tmp_metaclass_name_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        goto condexpr_end_23;
        condexpr_false_23:;
        tmp_metaclass_name_11 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_11);
        condexpr_end_23:;
        condexpr_end_22:;
        CHECK_OBJECT(tmp_class_creation_8__bases);
        tmp_bases_name_11 = tmp_class_creation_8__bases;
        tmp_assign_source_99 = SELECT_METACLASS(tmp_metaclass_name_11, tmp_bases_name_11);
        Py_DECREF(tmp_metaclass_name_11);
        if (tmp_assign_source_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        assert(tmp_class_creation_8__metaclass == NULL);
        tmp_class_creation_8__metaclass = tmp_assign_source_99;
    }
    {
        nuitka_bool tmp_condition_result_65;
        PyObject *tmp_key_name_33;
        PyObject *tmp_dict_name_33;
        tmp_key_name_33 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_8__class_decl_dict);
        tmp_dict_name_33 = tmp_class_creation_8__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_33, tmp_key_name_33);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        tmp_condition_result_65 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_65 == NUITKA_BOOL_TRUE) {
            goto branch_yes_42;
        } else {
            goto branch_no_42;
        }
        branch_yes_42:;
        CHECK_OBJECT(tmp_class_creation_8__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_8__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_32;
        }
        branch_no_42:;
    }
    {
        nuitka_bool tmp_condition_result_66;
        PyObject *tmp_source_name_42;
        CHECK_OBJECT(tmp_class_creation_8__metaclass);
        tmp_source_name_42 = tmp_class_creation_8__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_42, const_str_plain___prepare__);
        tmp_condition_result_66 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_66 == NUITKA_BOOL_TRUE) {
            goto branch_yes_43;
        } else {
            goto branch_no_43;
        }
        branch_yes_43:;
        {
            PyObject *tmp_assign_source_100;
            PyObject *tmp_called_name_22;
            PyObject *tmp_source_name_43;
            PyObject *tmp_args_name_21;
            PyObject *tmp_tuple_element_39;
            PyObject *tmp_kw_name_21;
            CHECK_OBJECT(tmp_class_creation_8__metaclass);
            tmp_source_name_43 = tmp_class_creation_8__metaclass;
            tmp_called_name_22 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain___prepare__);
            if (tmp_called_name_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;

                goto try_except_handler_32;
            }
            tmp_tuple_element_39 = const_str_plain_QtGui;
            tmp_args_name_21 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_39);
            PyTuple_SET_ITEM(tmp_args_name_21, 0, tmp_tuple_element_39);
            CHECK_OBJECT(tmp_class_creation_8__bases);
            tmp_tuple_element_39 = tmp_class_creation_8__bases;
            Py_INCREF(tmp_tuple_element_39);
            PyTuple_SET_ITEM(tmp_args_name_21, 1, tmp_tuple_element_39);
            CHECK_OBJECT(tmp_class_creation_8__class_decl_dict);
            tmp_kw_name_21 = tmp_class_creation_8__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 270;
            tmp_assign_source_100 = CALL_FUNCTION(tmp_called_name_22, tmp_args_name_21, tmp_kw_name_21);
            Py_DECREF(tmp_called_name_22);
            Py_DECREF(tmp_args_name_21);
            if (tmp_assign_source_100 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;

                goto try_except_handler_32;
            }
            assert(tmp_class_creation_8__prepared == NULL);
            tmp_class_creation_8__prepared = tmp_assign_source_100;
        }
        {
            nuitka_bool tmp_condition_result_67;
            PyObject *tmp_operand_name_11;
            PyObject *tmp_source_name_44;
            CHECK_OBJECT(tmp_class_creation_8__prepared);
            tmp_source_name_44 = tmp_class_creation_8__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_44, const_str_plain___getitem__);
            tmp_operand_name_11 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_11);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;

                goto try_except_handler_32;
            }
            tmp_condition_result_67 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_67 == NUITKA_BOOL_TRUE) {
                goto branch_yes_44;
            } else {
                goto branch_no_44;
            }
            branch_yes_44:;
            {
                PyObject *tmp_raise_type_11;
                PyObject *tmp_raise_value_11;
                PyObject *tmp_left_name_11;
                PyObject *tmp_right_name_11;
                PyObject *tmp_tuple_element_40;
                PyObject *tmp_getattr_target_11;
                PyObject *tmp_getattr_attr_11;
                PyObject *tmp_getattr_default_11;
                PyObject *tmp_source_name_45;
                PyObject *tmp_type_arg_22;
                tmp_raise_type_11 = PyExc_TypeError;
                tmp_left_name_11 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_8__metaclass);
                tmp_getattr_target_11 = tmp_class_creation_8__metaclass;
                tmp_getattr_attr_11 = const_str_plain___name__;
                tmp_getattr_default_11 = const_str_angle_metaclass;
                tmp_tuple_element_40 = BUILTIN_GETATTR(tmp_getattr_target_11, tmp_getattr_attr_11, tmp_getattr_default_11);
                if (tmp_tuple_element_40 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 270;

                    goto try_except_handler_32;
                }
                tmp_right_name_11 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_11, 0, tmp_tuple_element_40);
                CHECK_OBJECT(tmp_class_creation_8__prepared);
                tmp_type_arg_22 = tmp_class_creation_8__prepared;
                tmp_source_name_45 = BUILTIN_TYPE1(tmp_type_arg_22);
                assert(!(tmp_source_name_45 == NULL));
                tmp_tuple_element_40 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain___name__);
                Py_DECREF(tmp_source_name_45);
                if (tmp_tuple_element_40 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_11);

                    exception_lineno = 270;

                    goto try_except_handler_32;
                }
                PyTuple_SET_ITEM(tmp_right_name_11, 1, tmp_tuple_element_40);
                tmp_raise_value_11 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_11, tmp_right_name_11);
                Py_DECREF(tmp_right_name_11);
                if (tmp_raise_value_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 270;

                    goto try_except_handler_32;
                }
                exception_type = tmp_raise_type_11;
                Py_INCREF(tmp_raise_type_11);
                exception_value = tmp_raise_value_11;
                exception_lineno = 270;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_32;
            }
            branch_no_44:;
        }
        goto branch_end_43;
        branch_no_43:;
        {
            PyObject *tmp_assign_source_101;
            tmp_assign_source_101 = PyDict_New();
            assert(tmp_class_creation_8__prepared == NULL);
            tmp_class_creation_8__prepared = tmp_assign_source_101;
        }
        branch_end_43:;
    }
    {
        PyObject *tmp_assign_source_102;
        {
            PyObject *tmp_set_locals_11;
            CHECK_OBJECT(tmp_class_creation_8__prepared);
            tmp_set_locals_11 = tmp_class_creation_8__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_270 = tmp_set_locals_11;
            Py_INCREF(tmp_set_locals_11);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_34;
        }
        tmp_dictset_value = const_str_plain_QtGui;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto try_except_handler_34;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_d77951b0e8e96dc949c573a17a62cabd_10, codeobj_d77951b0e8e96dc949c573a17a62cabd, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_d77951b0e8e96dc949c573a17a62cabd_10 = cache_frame_d77951b0e8e96dc949c573a17a62cabd_10;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_d77951b0e8e96dc949c573a17a62cabd_10);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_d77951b0e8e96dc949c573a17a62cabd_10) == 2); // Frame stack

        // Framed code:
        // Tried code:
        {
            PyObject *tmp_assign_source_103;
            PyObject *tmp_tuple_element_41;
            PyObject *tmp_mvar_value_14;
            tmp_tuple_element_41 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_41 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_14 == NULL)) {
                        tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_14 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 271;
                        type_description_2 = "o";
                        goto try_except_handler_35;
                    }

                    tmp_tuple_element_41 = tmp_mvar_value_14;
                    Py_INCREF(tmp_tuple_element_41);
                }
            }

            tmp_assign_source_103 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_103, 0, tmp_tuple_element_41);
            assert(tmp_QtGui$class_creation_1__bases_orig == NULL);
            tmp_QtGui$class_creation_1__bases_orig = tmp_assign_source_103;
        }
        {
            PyObject *tmp_assign_source_104;
            PyObject *tmp_dircall_arg1_12;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases_orig);
            tmp_dircall_arg1_12 = tmp_QtGui$class_creation_1__bases_orig;
            Py_INCREF(tmp_dircall_arg1_12);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_12};
                tmp_assign_source_104 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_104 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            assert(tmp_QtGui$class_creation_1__bases == NULL);
            tmp_QtGui$class_creation_1__bases = tmp_assign_source_104;
        }
        {
            PyObject *tmp_assign_source_105;
            tmp_assign_source_105 = PyDict_New();
            assert(tmp_QtGui$class_creation_1__class_decl_dict == NULL);
            tmp_QtGui$class_creation_1__class_decl_dict = tmp_assign_source_105;
        }
        {
            PyObject *tmp_assign_source_106;
            PyObject *tmp_metaclass_name_12;
            nuitka_bool tmp_condition_result_68;
            PyObject *tmp_key_name_34;
            PyObject *tmp_dict_name_34;
            PyObject *tmp_dict_name_35;
            PyObject *tmp_key_name_35;
            nuitka_bool tmp_condition_result_69;
            int tmp_truth_name_12;
            PyObject *tmp_type_arg_23;
            PyObject *tmp_subscribed_name_12;
            PyObject *tmp_subscript_name_12;
            PyObject *tmp_bases_name_12;
            tmp_key_name_34 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__class_decl_dict);
            tmp_dict_name_34 = tmp_QtGui$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_34, tmp_key_name_34);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            tmp_condition_result_68 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_68 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_24;
            } else {
                goto condexpr_false_24;
            }
            condexpr_true_24:;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__class_decl_dict);
            tmp_dict_name_35 = tmp_QtGui$class_creation_1__class_decl_dict;
            tmp_key_name_35 = const_str_plain_metaclass;
            tmp_metaclass_name_12 = DICT_GET_ITEM(tmp_dict_name_35, tmp_key_name_35);
            if (tmp_metaclass_name_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            goto condexpr_end_24;
            condexpr_false_24:;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases);
            tmp_truth_name_12 = CHECK_IF_TRUE(tmp_QtGui$class_creation_1__bases);
            if (tmp_truth_name_12 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            tmp_condition_result_69 = tmp_truth_name_12 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_69 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_25;
            } else {
                goto condexpr_false_25;
            }
            condexpr_true_25:;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases);
            tmp_subscribed_name_12 = tmp_QtGui$class_creation_1__bases;
            tmp_subscript_name_12 = const_int_0;
            tmp_type_arg_23 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_12, tmp_subscript_name_12, 0);
            if (tmp_type_arg_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            tmp_metaclass_name_12 = BUILTIN_TYPE1(tmp_type_arg_23);
            Py_DECREF(tmp_type_arg_23);
            if (tmp_metaclass_name_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            goto condexpr_end_25;
            condexpr_false_25:;
            tmp_metaclass_name_12 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_12);
            condexpr_end_25:;
            condexpr_end_24:;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases);
            tmp_bases_name_12 = tmp_QtGui$class_creation_1__bases;
            tmp_assign_source_106 = SELECT_METACLASS(tmp_metaclass_name_12, tmp_bases_name_12);
            Py_DECREF(tmp_metaclass_name_12);
            if (tmp_assign_source_106 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            assert(tmp_QtGui$class_creation_1__metaclass == NULL);
            tmp_QtGui$class_creation_1__metaclass = tmp_assign_source_106;
        }
        {
            nuitka_bool tmp_condition_result_70;
            PyObject *tmp_key_name_36;
            PyObject *tmp_dict_name_36;
            tmp_key_name_36 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__class_decl_dict);
            tmp_dict_name_36 = tmp_QtGui$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_36, tmp_key_name_36);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            tmp_condition_result_70 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_70 == NUITKA_BOOL_TRUE) {
                goto branch_yes_45;
            } else {
                goto branch_no_45;
            }
            branch_yes_45:;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_1__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_35;
            }
            branch_no_45:;
        }
        {
            nuitka_bool tmp_condition_result_71;
            PyObject *tmp_source_name_46;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__metaclass);
            tmp_source_name_46 = tmp_QtGui$class_creation_1__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_46, const_str_plain___prepare__);
            tmp_condition_result_71 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_71 == NUITKA_BOOL_TRUE) {
                goto branch_yes_46;
            } else {
                goto branch_no_46;
            }
            branch_yes_46:;
            {
                PyObject *tmp_assign_source_107;
                PyObject *tmp_called_name_23;
                PyObject *tmp_source_name_47;
                PyObject *tmp_args_name_22;
                PyObject *tmp_tuple_element_42;
                PyObject *tmp_kw_name_22;
                CHECK_OBJECT(tmp_QtGui$class_creation_1__metaclass);
                tmp_source_name_47 = tmp_QtGui$class_creation_1__metaclass;
                tmp_called_name_23 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain___prepare__);
                if (tmp_called_name_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 271;
                    type_description_2 = "o";
                    goto try_except_handler_35;
                }
                tmp_tuple_element_42 = const_str_plain_QIcon;
                tmp_args_name_22 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_42);
                PyTuple_SET_ITEM(tmp_args_name_22, 0, tmp_tuple_element_42);
                CHECK_OBJECT(tmp_QtGui$class_creation_1__bases);
                tmp_tuple_element_42 = tmp_QtGui$class_creation_1__bases;
                Py_INCREF(tmp_tuple_element_42);
                PyTuple_SET_ITEM(tmp_args_name_22, 1, tmp_tuple_element_42);
                CHECK_OBJECT(tmp_QtGui$class_creation_1__class_decl_dict);
                tmp_kw_name_22 = tmp_QtGui$class_creation_1__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 271;
                tmp_assign_source_107 = CALL_FUNCTION(tmp_called_name_23, tmp_args_name_22, tmp_kw_name_22);
                Py_DECREF(tmp_called_name_23);
                Py_DECREF(tmp_args_name_22);
                if (tmp_assign_source_107 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 271;
                    type_description_2 = "o";
                    goto try_except_handler_35;
                }
                assert(tmp_QtGui$class_creation_1__prepared == NULL);
                tmp_QtGui$class_creation_1__prepared = tmp_assign_source_107;
            }
            {
                nuitka_bool tmp_condition_result_72;
                PyObject *tmp_operand_name_12;
                PyObject *tmp_source_name_48;
                CHECK_OBJECT(tmp_QtGui$class_creation_1__prepared);
                tmp_source_name_48 = tmp_QtGui$class_creation_1__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_48, const_str_plain___getitem__);
                tmp_operand_name_12 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_12);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 271;
                    type_description_2 = "o";
                    goto try_except_handler_35;
                }
                tmp_condition_result_72 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_72 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_47;
                } else {
                    goto branch_no_47;
                }
                branch_yes_47:;
                {
                    PyObject *tmp_raise_type_12;
                    PyObject *tmp_raise_value_12;
                    PyObject *tmp_left_name_12;
                    PyObject *tmp_right_name_12;
                    PyObject *tmp_tuple_element_43;
                    PyObject *tmp_getattr_target_12;
                    PyObject *tmp_getattr_attr_12;
                    PyObject *tmp_getattr_default_12;
                    PyObject *tmp_source_name_49;
                    PyObject *tmp_type_arg_24;
                    tmp_raise_type_12 = PyExc_TypeError;
                    tmp_left_name_12 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_1__metaclass);
                    tmp_getattr_target_12 = tmp_QtGui$class_creation_1__metaclass;
                    tmp_getattr_attr_12 = const_str_plain___name__;
                    tmp_getattr_default_12 = const_str_angle_metaclass;
                    tmp_tuple_element_43 = BUILTIN_GETATTR(tmp_getattr_target_12, tmp_getattr_attr_12, tmp_getattr_default_12);
                    if (tmp_tuple_element_43 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 271;
                        type_description_2 = "o";
                        goto try_except_handler_35;
                    }
                    tmp_right_name_12 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_12, 0, tmp_tuple_element_43);
                    CHECK_OBJECT(tmp_QtGui$class_creation_1__prepared);
                    tmp_type_arg_24 = tmp_QtGui$class_creation_1__prepared;
                    tmp_source_name_49 = BUILTIN_TYPE1(tmp_type_arg_24);
                    assert(!(tmp_source_name_49 == NULL));
                    tmp_tuple_element_43 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_49);
                    if (tmp_tuple_element_43 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_12);

                        exception_lineno = 271;
                        type_description_2 = "o";
                        goto try_except_handler_35;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_12, 1, tmp_tuple_element_43);
                    tmp_raise_value_12 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_12, tmp_right_name_12);
                    Py_DECREF(tmp_right_name_12);
                    if (tmp_raise_value_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 271;
                        type_description_2 = "o";
                        goto try_except_handler_35;
                    }
                    exception_type = tmp_raise_type_12;
                    Py_INCREF(tmp_raise_type_12);
                    exception_value = tmp_raise_value_12;
                    exception_lineno = 271;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_35;
                }
                branch_no_47:;
            }
            goto branch_end_46;
            branch_no_46:;
            {
                PyObject *tmp_assign_source_108;
                tmp_assign_source_108 = PyDict_New();
                assert(tmp_QtGui$class_creation_1__prepared == NULL);
                tmp_QtGui$class_creation_1__prepared = tmp_assign_source_108;
            }
            branch_end_46:;
        }
        {
            PyObject *tmp_set_locals_12;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__prepared);
            tmp_set_locals_12 = tmp_QtGui$class_creation_1__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_271 = tmp_set_locals_12;
            Py_INCREF(tmp_set_locals_12);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_271, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 271;
            type_description_2 = "o";
            goto try_except_handler_37;
        }
        tmp_dictset_value = const_str_digest_efd56ceff77b4993ab7bfa46696a762e;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_271, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 271;
            type_description_2 = "o";
            goto try_except_handler_37;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_9751a35f21e78be8ee8556a3adf4c17d_11, codeobj_9751a35f21e78be8ee8556a3adf4c17d, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_9751a35f21e78be8ee8556a3adf4c17d_11 = cache_frame_9751a35f21e78be8ee8556a3adf4c17d_11;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_9751a35f21e78be8ee8556a3adf4c17d_11);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_9751a35f21e78be8ee8556a3adf4c17d_11) == 2); // Frame stack

        // Framed code:
        // Tried code:
        {
            PyObject *tmp_assign_source_109;
            PyObject *tmp_tuple_element_44;
            PyObject *tmp_mvar_value_15;
            tmp_tuple_element_44 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_271, const_str_plain_ProxyClass);

            if (tmp_tuple_element_44 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_15 == NULL)) {
                        tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_15 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 272;
                        type_description_3 = "o";
                        goto try_except_handler_38;
                    }

                    tmp_tuple_element_44 = tmp_mvar_value_15;
                    Py_INCREF(tmp_tuple_element_44);
                }
            }

            tmp_assign_source_109 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_109, 0, tmp_tuple_element_44);
            assert(tmp_QtGui$QIcon$class_creation_1__bases_orig == NULL);
            tmp_QtGui$QIcon$class_creation_1__bases_orig = tmp_assign_source_109;
        }
        {
            PyObject *tmp_assign_source_110;
            PyObject *tmp_dircall_arg1_13;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases_orig);
            tmp_dircall_arg1_13 = tmp_QtGui$QIcon$class_creation_1__bases_orig;
            Py_INCREF(tmp_dircall_arg1_13);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_13};
                tmp_assign_source_110 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_110 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            assert(tmp_QtGui$QIcon$class_creation_1__bases == NULL);
            tmp_QtGui$QIcon$class_creation_1__bases = tmp_assign_source_110;
        }
        {
            PyObject *tmp_assign_source_111;
            tmp_assign_source_111 = PyDict_New();
            assert(tmp_QtGui$QIcon$class_creation_1__class_decl_dict == NULL);
            tmp_QtGui$QIcon$class_creation_1__class_decl_dict = tmp_assign_source_111;
        }
        {
            PyObject *tmp_assign_source_112;
            PyObject *tmp_metaclass_name_13;
            nuitka_bool tmp_condition_result_73;
            PyObject *tmp_key_name_37;
            PyObject *tmp_dict_name_37;
            PyObject *tmp_dict_name_38;
            PyObject *tmp_key_name_38;
            nuitka_bool tmp_condition_result_74;
            int tmp_truth_name_13;
            PyObject *tmp_type_arg_25;
            PyObject *tmp_subscribed_name_13;
            PyObject *tmp_subscript_name_13;
            PyObject *tmp_bases_name_13;
            tmp_key_name_37 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
            tmp_dict_name_37 = tmp_QtGui$QIcon$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_37, tmp_key_name_37);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            tmp_condition_result_73 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_73 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_26;
            } else {
                goto condexpr_false_26;
            }
            condexpr_true_26:;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
            tmp_dict_name_38 = tmp_QtGui$QIcon$class_creation_1__class_decl_dict;
            tmp_key_name_38 = const_str_plain_metaclass;
            tmp_metaclass_name_13 = DICT_GET_ITEM(tmp_dict_name_38, tmp_key_name_38);
            if (tmp_metaclass_name_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            goto condexpr_end_26;
            condexpr_false_26:;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases);
            tmp_truth_name_13 = CHECK_IF_TRUE(tmp_QtGui$QIcon$class_creation_1__bases);
            if (tmp_truth_name_13 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            tmp_condition_result_74 = tmp_truth_name_13 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_74 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_27;
            } else {
                goto condexpr_false_27;
            }
            condexpr_true_27:;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases);
            tmp_subscribed_name_13 = tmp_QtGui$QIcon$class_creation_1__bases;
            tmp_subscript_name_13 = const_int_0;
            tmp_type_arg_25 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_13, tmp_subscript_name_13, 0);
            if (tmp_type_arg_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            tmp_metaclass_name_13 = BUILTIN_TYPE1(tmp_type_arg_25);
            Py_DECREF(tmp_type_arg_25);
            if (tmp_metaclass_name_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            goto condexpr_end_27;
            condexpr_false_27:;
            tmp_metaclass_name_13 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_13);
            condexpr_end_27:;
            condexpr_end_26:;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases);
            tmp_bases_name_13 = tmp_QtGui$QIcon$class_creation_1__bases;
            tmp_assign_source_112 = SELECT_METACLASS(tmp_metaclass_name_13, tmp_bases_name_13);
            Py_DECREF(tmp_metaclass_name_13);
            if (tmp_assign_source_112 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            assert(tmp_QtGui$QIcon$class_creation_1__metaclass == NULL);
            tmp_QtGui$QIcon$class_creation_1__metaclass = tmp_assign_source_112;
        }
        {
            nuitka_bool tmp_condition_result_75;
            PyObject *tmp_key_name_39;
            PyObject *tmp_dict_name_39;
            tmp_key_name_39 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
            tmp_dict_name_39 = tmp_QtGui$QIcon$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_39, tmp_key_name_39);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            tmp_condition_result_75 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_75 == NUITKA_BOOL_TRUE) {
                goto branch_yes_48;
            } else {
                goto branch_no_48;
            }
            branch_yes_48:;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$QIcon$class_creation_1__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_38;
            }
            branch_no_48:;
        }
        {
            nuitka_bool tmp_condition_result_76;
            PyObject *tmp_source_name_50;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__metaclass);
            tmp_source_name_50 = tmp_QtGui$QIcon$class_creation_1__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_50, const_str_plain___prepare__);
            tmp_condition_result_76 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_76 == NUITKA_BOOL_TRUE) {
                goto branch_yes_49;
            } else {
                goto branch_no_49;
            }
            branch_yes_49:;
            {
                PyObject *tmp_assign_source_113;
                PyObject *tmp_called_name_24;
                PyObject *tmp_source_name_51;
                PyObject *tmp_args_name_23;
                PyObject *tmp_tuple_element_45;
                PyObject *tmp_kw_name_23;
                CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__metaclass);
                tmp_source_name_51 = tmp_QtGui$QIcon$class_creation_1__metaclass;
                tmp_called_name_24 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain___prepare__);
                if (tmp_called_name_24 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 272;
                    type_description_3 = "o";
                    goto try_except_handler_38;
                }
                tmp_tuple_element_45 = const_str_plain_fromTheme;
                tmp_args_name_23 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_45);
                PyTuple_SET_ITEM(tmp_args_name_23, 0, tmp_tuple_element_45);
                CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases);
                tmp_tuple_element_45 = tmp_QtGui$QIcon$class_creation_1__bases;
                Py_INCREF(tmp_tuple_element_45);
                PyTuple_SET_ITEM(tmp_args_name_23, 1, tmp_tuple_element_45);
                CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
                tmp_kw_name_23 = tmp_QtGui$QIcon$class_creation_1__class_decl_dict;
                frame_9751a35f21e78be8ee8556a3adf4c17d_11->m_frame.f_lineno = 272;
                tmp_assign_source_113 = CALL_FUNCTION(tmp_called_name_24, tmp_args_name_23, tmp_kw_name_23);
                Py_DECREF(tmp_called_name_24);
                Py_DECREF(tmp_args_name_23);
                if (tmp_assign_source_113 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 272;
                    type_description_3 = "o";
                    goto try_except_handler_38;
                }
                assert(tmp_QtGui$QIcon$class_creation_1__prepared == NULL);
                tmp_QtGui$QIcon$class_creation_1__prepared = tmp_assign_source_113;
            }
            {
                nuitka_bool tmp_condition_result_77;
                PyObject *tmp_operand_name_13;
                PyObject *tmp_source_name_52;
                CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__prepared);
                tmp_source_name_52 = tmp_QtGui$QIcon$class_creation_1__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_52, const_str_plain___getitem__);
                tmp_operand_name_13 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_13);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 272;
                    type_description_3 = "o";
                    goto try_except_handler_38;
                }
                tmp_condition_result_77 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_77 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_50;
                } else {
                    goto branch_no_50;
                }
                branch_yes_50:;
                {
                    PyObject *tmp_raise_type_13;
                    PyObject *tmp_raise_value_13;
                    PyObject *tmp_left_name_13;
                    PyObject *tmp_right_name_13;
                    PyObject *tmp_tuple_element_46;
                    PyObject *tmp_getattr_target_13;
                    PyObject *tmp_getattr_attr_13;
                    PyObject *tmp_getattr_default_13;
                    PyObject *tmp_source_name_53;
                    PyObject *tmp_type_arg_26;
                    tmp_raise_type_13 = PyExc_TypeError;
                    tmp_left_name_13 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__metaclass);
                    tmp_getattr_target_13 = tmp_QtGui$QIcon$class_creation_1__metaclass;
                    tmp_getattr_attr_13 = const_str_plain___name__;
                    tmp_getattr_default_13 = const_str_angle_metaclass;
                    tmp_tuple_element_46 = BUILTIN_GETATTR(tmp_getattr_target_13, tmp_getattr_attr_13, tmp_getattr_default_13);
                    if (tmp_tuple_element_46 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 272;
                        type_description_3 = "o";
                        goto try_except_handler_38;
                    }
                    tmp_right_name_13 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_13, 0, tmp_tuple_element_46);
                    CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__prepared);
                    tmp_type_arg_26 = tmp_QtGui$QIcon$class_creation_1__prepared;
                    tmp_source_name_53 = BUILTIN_TYPE1(tmp_type_arg_26);
                    assert(!(tmp_source_name_53 == NULL));
                    tmp_tuple_element_46 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_53);
                    if (tmp_tuple_element_46 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_13);

                        exception_lineno = 272;
                        type_description_3 = "o";
                        goto try_except_handler_38;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_13, 1, tmp_tuple_element_46);
                    tmp_raise_value_13 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_13, tmp_right_name_13);
                    Py_DECREF(tmp_right_name_13);
                    if (tmp_raise_value_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 272;
                        type_description_3 = "o";
                        goto try_except_handler_38;
                    }
                    exception_type = tmp_raise_type_13;
                    Py_INCREF(tmp_raise_type_13);
                    exception_value = tmp_raise_value_13;
                    exception_lineno = 272;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_3 = "o";
                    goto try_except_handler_38;
                }
                branch_no_50:;
            }
            goto branch_end_49;
            branch_no_49:;
            {
                PyObject *tmp_assign_source_114;
                tmp_assign_source_114 = PyDict_New();
                assert(tmp_QtGui$QIcon$class_creation_1__prepared == NULL);
                tmp_QtGui$QIcon$class_creation_1__prepared = tmp_assign_source_114;
            }
            branch_end_49:;
        }
        {
            PyObject *tmp_set_locals_13;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__prepared);
            tmp_set_locals_13 = tmp_QtGui$QIcon$class_creation_1__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_272 = tmp_set_locals_13;
            Py_INCREF(tmp_set_locals_13);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_272, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 272;
            type_description_3 = "o";
            goto try_except_handler_40;
        }
        tmp_dictset_value = const_str_digest_015c970859e71b90bf79702430ebbeb4;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_272, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 272;
            type_description_3 = "o";
            goto try_except_handler_40;
        }
        {
            nuitka_bool tmp_condition_result_78;
            PyObject *tmp_compexpr_left_12;
            PyObject *tmp_compexpr_right_12;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases);
            tmp_compexpr_left_12 = tmp_QtGui$QIcon$class_creation_1__bases;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases_orig);
            tmp_compexpr_right_12 = tmp_QtGui$QIcon$class_creation_1__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_12, tmp_compexpr_right_12);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_40;
            }
            tmp_condition_result_78 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_78 == NUITKA_BOOL_TRUE) {
                goto branch_yes_51;
            } else {
                goto branch_no_51;
            }
            branch_yes_51:;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases_orig);
            tmp_dictset_value = tmp_QtGui$QIcon$class_creation_1__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_272, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_40;
            }
            branch_no_51:;
        }
        {
            PyObject *tmp_assign_source_115;
            PyObject *tmp_called_name_25;
            PyObject *tmp_args_name_24;
            PyObject *tmp_tuple_element_47;
            PyObject *tmp_kw_name_24;
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__metaclass);
            tmp_called_name_25 = tmp_QtGui$QIcon$class_creation_1__metaclass;
            tmp_tuple_element_47 = const_str_plain_fromTheme;
            tmp_args_name_24 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_47);
            PyTuple_SET_ITEM(tmp_args_name_24, 0, tmp_tuple_element_47);
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__bases);
            tmp_tuple_element_47 = tmp_QtGui$QIcon$class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_47);
            PyTuple_SET_ITEM(tmp_args_name_24, 1, tmp_tuple_element_47);
            tmp_tuple_element_47 = locals_PyQt5$uic$Compiler$qtproxies_272;
            Py_INCREF(tmp_tuple_element_47);
            PyTuple_SET_ITEM(tmp_args_name_24, 2, tmp_tuple_element_47);
            CHECK_OBJECT(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
            tmp_kw_name_24 = tmp_QtGui$QIcon$class_creation_1__class_decl_dict;
            frame_9751a35f21e78be8ee8556a3adf4c17d_11->m_frame.f_lineno = 272;
            tmp_assign_source_115 = CALL_FUNCTION(tmp_called_name_25, tmp_args_name_24, tmp_kw_name_24);
            Py_DECREF(tmp_args_name_24);
            if (tmp_assign_source_115 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_3 = "o";
                goto try_except_handler_40;
            }
            assert(outline_12_var___class__ == NULL);
            outline_12_var___class__ = tmp_assign_source_115;
        }
        CHECK_OBJECT(outline_12_var___class__);
        tmp_dictset_value = outline_12_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_40;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_40:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_272);
        locals_PyQt5$uic$Compiler$qtproxies_272 = NULL;
        goto try_return_handler_39;
        // Exception handler code:
        try_except_handler_40:;
        exception_keeper_type_32 = exception_type;
        exception_keeper_value_32 = exception_value;
        exception_keeper_tb_32 = exception_tb;
        exception_keeper_lineno_32 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_272);
        locals_PyQt5$uic$Compiler$qtproxies_272 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_32;
        exception_value = exception_keeper_value_32;
        exception_tb = exception_keeper_tb_32;
        exception_lineno = exception_keeper_lineno_32;

        goto try_except_handler_39;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_39:;
        CHECK_OBJECT((PyObject *)outline_12_var___class__);
        Py_DECREF(outline_12_var___class__);
        outline_12_var___class__ = NULL;

        goto outline_result_13;
        // Exception handler code:
        try_except_handler_39:;
        exception_keeper_type_33 = exception_type;
        exception_keeper_value_33 = exception_value;
        exception_keeper_tb_33 = exception_tb;
        exception_keeper_lineno_33 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_33;
        exception_value = exception_keeper_value_33;
        exception_tb = exception_keeper_tb_33;
        exception_lineno = exception_keeper_lineno_33;

        goto outline_exception_13;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_13:;
        exception_lineno = 272;
        goto try_except_handler_38;
        outline_result_13:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_271, const_str_plain_fromTheme, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 272;
            type_description_3 = "o";
            goto try_except_handler_38;
        }
        goto try_end_12;
        // Exception handler code:
        try_except_handler_38:;
        exception_keeper_type_34 = exception_type;
        exception_keeper_value_34 = exception_value;
        exception_keeper_tb_34 = exception_tb;
        exception_keeper_lineno_34 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$QIcon$class_creation_1__bases_orig);
        tmp_QtGui$QIcon$class_creation_1__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$QIcon$class_creation_1__bases);
        tmp_QtGui$QIcon$class_creation_1__bases = NULL;

        Py_XDECREF(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
        tmp_QtGui$QIcon$class_creation_1__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$QIcon$class_creation_1__metaclass);
        tmp_QtGui$QIcon$class_creation_1__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$QIcon$class_creation_1__prepared);
        tmp_QtGui$QIcon$class_creation_1__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_34;
        exception_value = exception_keeper_value_34;
        exception_tb = exception_keeper_tb_34;
        exception_lineno = exception_keeper_lineno_34;

        goto frame_exception_exit_11;
        // End of try:
        try_end_12:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_9751a35f21e78be8ee8556a3adf4c17d_11);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_9;

        frame_exception_exit_11:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_9751a35f21e78be8ee8556a3adf4c17d_11);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_9751a35f21e78be8ee8556a3adf4c17d_11, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_9751a35f21e78be8ee8556a3adf4c17d_11->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_9751a35f21e78be8ee8556a3adf4c17d_11, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_9751a35f21e78be8ee8556a3adf4c17d_11,
            type_description_3,
            outline_11_var___class__
        );


        // Release cached frame.
        if (frame_9751a35f21e78be8ee8556a3adf4c17d_11 == cache_frame_9751a35f21e78be8ee8556a3adf4c17d_11) {
            Py_DECREF(frame_9751a35f21e78be8ee8556a3adf4c17d_11);
        }
        cache_frame_9751a35f21e78be8ee8556a3adf4c17d_11 = NULL;

        assertFrameObject(frame_9751a35f21e78be8ee8556a3adf4c17d_11);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_10;

        frame_no_exception_9:;
        goto skip_nested_handling_9;
        nested_frame_exit_10:;
        type_description_2 = "o";
        goto try_except_handler_37;
        skip_nested_handling_9:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$QIcon$class_creation_1__bases_orig);
        Py_DECREF(tmp_QtGui$QIcon$class_creation_1__bases_orig);
        tmp_QtGui$QIcon$class_creation_1__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$QIcon$class_creation_1__bases);
        Py_DECREF(tmp_QtGui$QIcon$class_creation_1__bases);
        tmp_QtGui$QIcon$class_creation_1__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
        Py_DECREF(tmp_QtGui$QIcon$class_creation_1__class_decl_dict);
        tmp_QtGui$QIcon$class_creation_1__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$QIcon$class_creation_1__metaclass);
        Py_DECREF(tmp_QtGui$QIcon$class_creation_1__metaclass);
        tmp_QtGui$QIcon$class_creation_1__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$QIcon$class_creation_1__prepared);
        Py_DECREF(tmp_QtGui$QIcon$class_creation_1__prepared);
        tmp_QtGui$QIcon$class_creation_1__prepared = NULL;

        {
            nuitka_bool tmp_condition_result_79;
            PyObject *tmp_compexpr_left_13;
            PyObject *tmp_compexpr_right_13;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases);
            tmp_compexpr_left_13 = tmp_QtGui$class_creation_1__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases_orig);
            tmp_compexpr_right_13 = tmp_QtGui$class_creation_1__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_13, tmp_compexpr_right_13);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_37;
            }
            tmp_condition_result_79 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_79 == NUITKA_BOOL_TRUE) {
                goto branch_yes_52;
            } else {
                goto branch_no_52;
            }
            branch_yes_52:;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_1__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_271, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_37;
            }
            branch_no_52:;
        }
        {
            PyObject *tmp_assign_source_116;
            PyObject *tmp_called_name_26;
            PyObject *tmp_args_name_25;
            PyObject *tmp_tuple_element_48;
            PyObject *tmp_kw_name_25;
            CHECK_OBJECT(tmp_QtGui$class_creation_1__metaclass);
            tmp_called_name_26 = tmp_QtGui$class_creation_1__metaclass;
            tmp_tuple_element_48 = const_str_plain_QIcon;
            tmp_args_name_25 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_48);
            PyTuple_SET_ITEM(tmp_args_name_25, 0, tmp_tuple_element_48);
            CHECK_OBJECT(tmp_QtGui$class_creation_1__bases);
            tmp_tuple_element_48 = tmp_QtGui$class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_48);
            PyTuple_SET_ITEM(tmp_args_name_25, 1, tmp_tuple_element_48);
            tmp_tuple_element_48 = locals_PyQt5$uic$Compiler$qtproxies_271;
            Py_INCREF(tmp_tuple_element_48);
            PyTuple_SET_ITEM(tmp_args_name_25, 2, tmp_tuple_element_48);
            CHECK_OBJECT(tmp_QtGui$class_creation_1__class_decl_dict);
            tmp_kw_name_25 = tmp_QtGui$class_creation_1__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 271;
            tmp_assign_source_116 = CALL_FUNCTION(tmp_called_name_26, tmp_args_name_25, tmp_kw_name_25);
            Py_DECREF(tmp_args_name_25);
            if (tmp_assign_source_116 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_2 = "o";
                goto try_except_handler_37;
            }
            assert(outline_11_var___class__ == NULL);
            outline_11_var___class__ = tmp_assign_source_116;
        }
        CHECK_OBJECT(outline_11_var___class__);
        tmp_dictset_value = outline_11_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_37;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_37:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_271);
        locals_PyQt5$uic$Compiler$qtproxies_271 = NULL;
        goto try_return_handler_36;
        // Exception handler code:
        try_except_handler_37:;
        exception_keeper_type_35 = exception_type;
        exception_keeper_value_35 = exception_value;
        exception_keeper_tb_35 = exception_tb;
        exception_keeper_lineno_35 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_271);
        locals_PyQt5$uic$Compiler$qtproxies_271 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_35;
        exception_value = exception_keeper_value_35;
        exception_tb = exception_keeper_tb_35;
        exception_lineno = exception_keeper_lineno_35;

        goto try_except_handler_36;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_36:;
        CHECK_OBJECT((PyObject *)outline_11_var___class__);
        Py_DECREF(outline_11_var___class__);
        outline_11_var___class__ = NULL;

        goto outline_result_12;
        // Exception handler code:
        try_except_handler_36:;
        exception_keeper_type_36 = exception_type;
        exception_keeper_value_36 = exception_value;
        exception_keeper_tb_36 = exception_tb;
        exception_keeper_lineno_36 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_36;
        exception_value = exception_keeper_value_36;
        exception_tb = exception_keeper_tb_36;
        exception_lineno = exception_keeper_lineno_36;

        goto outline_exception_12;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_12:;
        exception_lineno = 271;
        goto try_except_handler_35;
        outline_result_12:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QIcon, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 271;
            type_description_2 = "o";
            goto try_except_handler_35;
        }
        goto try_end_13;
        // Exception handler code:
        try_except_handler_35:;
        exception_keeper_type_37 = exception_type;
        exception_keeper_value_37 = exception_value;
        exception_keeper_tb_37 = exception_tb;
        exception_keeper_lineno_37 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_1__bases_orig);
        tmp_QtGui$class_creation_1__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_1__bases);
        tmp_QtGui$class_creation_1__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_1__class_decl_dict);
        tmp_QtGui$class_creation_1__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_1__metaclass);
        tmp_QtGui$class_creation_1__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_1__prepared);
        tmp_QtGui$class_creation_1__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_37;
        exception_value = exception_keeper_value_37;
        exception_tb = exception_keeper_tb_37;
        exception_lineno = exception_keeper_lineno_37;

        goto frame_exception_exit_10;
        // End of try:
        try_end_13:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_1__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_1__bases_orig);
        tmp_QtGui$class_creation_1__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_1__bases);
        Py_DECREF(tmp_QtGui$class_creation_1__bases);
        tmp_QtGui$class_creation_1__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_1__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_1__class_decl_dict);
        tmp_QtGui$class_creation_1__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_1__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_1__metaclass);
        tmp_QtGui$class_creation_1__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_1__prepared);
        Py_DECREF(tmp_QtGui$class_creation_1__prepared);
        tmp_QtGui$class_creation_1__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_117;
            PyObject *tmp_tuple_element_49;
            PyObject *tmp_mvar_value_16;
            tmp_tuple_element_49 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_49 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_16 == NULL)) {
                        tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_16 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 274;
                        type_description_2 = "o";
                        goto try_except_handler_41;
                    }

                    tmp_tuple_element_49 = tmp_mvar_value_16;
                    Py_INCREF(tmp_tuple_element_49);
                }
            }

            tmp_assign_source_117 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_117, 0, tmp_tuple_element_49);
            assert(tmp_QtGui$class_creation_2__bases_orig == NULL);
            tmp_QtGui$class_creation_2__bases_orig = tmp_assign_source_117;
        }
        {
            PyObject *tmp_assign_source_118;
            PyObject *tmp_dircall_arg1_14;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases_orig);
            tmp_dircall_arg1_14 = tmp_QtGui$class_creation_2__bases_orig;
            Py_INCREF(tmp_dircall_arg1_14);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_14};
                tmp_assign_source_118 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_118 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            assert(tmp_QtGui$class_creation_2__bases == NULL);
            tmp_QtGui$class_creation_2__bases = tmp_assign_source_118;
        }
        {
            PyObject *tmp_assign_source_119;
            tmp_assign_source_119 = PyDict_New();
            assert(tmp_QtGui$class_creation_2__class_decl_dict == NULL);
            tmp_QtGui$class_creation_2__class_decl_dict = tmp_assign_source_119;
        }
        {
            PyObject *tmp_assign_source_120;
            PyObject *tmp_metaclass_name_14;
            nuitka_bool tmp_condition_result_80;
            PyObject *tmp_key_name_40;
            PyObject *tmp_dict_name_40;
            PyObject *tmp_dict_name_41;
            PyObject *tmp_key_name_41;
            nuitka_bool tmp_condition_result_81;
            int tmp_truth_name_14;
            PyObject *tmp_type_arg_27;
            PyObject *tmp_subscribed_name_14;
            PyObject *tmp_subscript_name_14;
            PyObject *tmp_bases_name_14;
            tmp_key_name_40 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__class_decl_dict);
            tmp_dict_name_40 = tmp_QtGui$class_creation_2__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_40, tmp_key_name_40);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            tmp_condition_result_80 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_80 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_28;
            } else {
                goto condexpr_false_28;
            }
            condexpr_true_28:;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__class_decl_dict);
            tmp_dict_name_41 = tmp_QtGui$class_creation_2__class_decl_dict;
            tmp_key_name_41 = const_str_plain_metaclass;
            tmp_metaclass_name_14 = DICT_GET_ITEM(tmp_dict_name_41, tmp_key_name_41);
            if (tmp_metaclass_name_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            goto condexpr_end_28;
            condexpr_false_28:;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases);
            tmp_truth_name_14 = CHECK_IF_TRUE(tmp_QtGui$class_creation_2__bases);
            if (tmp_truth_name_14 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            tmp_condition_result_81 = tmp_truth_name_14 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_81 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_29;
            } else {
                goto condexpr_false_29;
            }
            condexpr_true_29:;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases);
            tmp_subscribed_name_14 = tmp_QtGui$class_creation_2__bases;
            tmp_subscript_name_14 = const_int_0;
            tmp_type_arg_27 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_14, tmp_subscript_name_14, 0);
            if (tmp_type_arg_27 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            tmp_metaclass_name_14 = BUILTIN_TYPE1(tmp_type_arg_27);
            Py_DECREF(tmp_type_arg_27);
            if (tmp_metaclass_name_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            goto condexpr_end_29;
            condexpr_false_29:;
            tmp_metaclass_name_14 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_14);
            condexpr_end_29:;
            condexpr_end_28:;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases);
            tmp_bases_name_14 = tmp_QtGui$class_creation_2__bases;
            tmp_assign_source_120 = SELECT_METACLASS(tmp_metaclass_name_14, tmp_bases_name_14);
            Py_DECREF(tmp_metaclass_name_14);
            if (tmp_assign_source_120 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            assert(tmp_QtGui$class_creation_2__metaclass == NULL);
            tmp_QtGui$class_creation_2__metaclass = tmp_assign_source_120;
        }
        {
            nuitka_bool tmp_condition_result_82;
            PyObject *tmp_key_name_42;
            PyObject *tmp_dict_name_42;
            tmp_key_name_42 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__class_decl_dict);
            tmp_dict_name_42 = tmp_QtGui$class_creation_2__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_42, tmp_key_name_42);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            tmp_condition_result_82 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_82 == NUITKA_BOOL_TRUE) {
                goto branch_yes_53;
            } else {
                goto branch_no_53;
            }
            branch_yes_53:;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_2__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_41;
            }
            branch_no_53:;
        }
        {
            nuitka_bool tmp_condition_result_83;
            PyObject *tmp_source_name_54;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__metaclass);
            tmp_source_name_54 = tmp_QtGui$class_creation_2__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_54, const_str_plain___prepare__);
            tmp_condition_result_83 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_83 == NUITKA_BOOL_TRUE) {
                goto branch_yes_54;
            } else {
                goto branch_no_54;
            }
            branch_yes_54:;
            {
                PyObject *tmp_assign_source_121;
                PyObject *tmp_called_name_27;
                PyObject *tmp_source_name_55;
                PyObject *tmp_args_name_26;
                PyObject *tmp_tuple_element_50;
                PyObject *tmp_kw_name_26;
                CHECK_OBJECT(tmp_QtGui$class_creation_2__metaclass);
                tmp_source_name_55 = tmp_QtGui$class_creation_2__metaclass;
                tmp_called_name_27 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain___prepare__);
                if (tmp_called_name_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 274;
                    type_description_2 = "o";
                    goto try_except_handler_41;
                }
                tmp_tuple_element_50 = const_str_plain_QConicalGradient;
                tmp_args_name_26 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_50);
                PyTuple_SET_ITEM(tmp_args_name_26, 0, tmp_tuple_element_50);
                CHECK_OBJECT(tmp_QtGui$class_creation_2__bases);
                tmp_tuple_element_50 = tmp_QtGui$class_creation_2__bases;
                Py_INCREF(tmp_tuple_element_50);
                PyTuple_SET_ITEM(tmp_args_name_26, 1, tmp_tuple_element_50);
                CHECK_OBJECT(tmp_QtGui$class_creation_2__class_decl_dict);
                tmp_kw_name_26 = tmp_QtGui$class_creation_2__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 274;
                tmp_assign_source_121 = CALL_FUNCTION(tmp_called_name_27, tmp_args_name_26, tmp_kw_name_26);
                Py_DECREF(tmp_called_name_27);
                Py_DECREF(tmp_args_name_26);
                if (tmp_assign_source_121 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 274;
                    type_description_2 = "o";
                    goto try_except_handler_41;
                }
                assert(tmp_QtGui$class_creation_2__prepared == NULL);
                tmp_QtGui$class_creation_2__prepared = tmp_assign_source_121;
            }
            {
                nuitka_bool tmp_condition_result_84;
                PyObject *tmp_operand_name_14;
                PyObject *tmp_source_name_56;
                CHECK_OBJECT(tmp_QtGui$class_creation_2__prepared);
                tmp_source_name_56 = tmp_QtGui$class_creation_2__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_56, const_str_plain___getitem__);
                tmp_operand_name_14 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_14);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 274;
                    type_description_2 = "o";
                    goto try_except_handler_41;
                }
                tmp_condition_result_84 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_84 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_55;
                } else {
                    goto branch_no_55;
                }
                branch_yes_55:;
                {
                    PyObject *tmp_raise_type_14;
                    PyObject *tmp_raise_value_14;
                    PyObject *tmp_left_name_14;
                    PyObject *tmp_right_name_14;
                    PyObject *tmp_tuple_element_51;
                    PyObject *tmp_getattr_target_14;
                    PyObject *tmp_getattr_attr_14;
                    PyObject *tmp_getattr_default_14;
                    PyObject *tmp_source_name_57;
                    PyObject *tmp_type_arg_28;
                    tmp_raise_type_14 = PyExc_TypeError;
                    tmp_left_name_14 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_2__metaclass);
                    tmp_getattr_target_14 = tmp_QtGui$class_creation_2__metaclass;
                    tmp_getattr_attr_14 = const_str_plain___name__;
                    tmp_getattr_default_14 = const_str_angle_metaclass;
                    tmp_tuple_element_51 = BUILTIN_GETATTR(tmp_getattr_target_14, tmp_getattr_attr_14, tmp_getattr_default_14);
                    if (tmp_tuple_element_51 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 274;
                        type_description_2 = "o";
                        goto try_except_handler_41;
                    }
                    tmp_right_name_14 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_14, 0, tmp_tuple_element_51);
                    CHECK_OBJECT(tmp_QtGui$class_creation_2__prepared);
                    tmp_type_arg_28 = tmp_QtGui$class_creation_2__prepared;
                    tmp_source_name_57 = BUILTIN_TYPE1(tmp_type_arg_28);
                    assert(!(tmp_source_name_57 == NULL));
                    tmp_tuple_element_51 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_57);
                    if (tmp_tuple_element_51 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_14);

                        exception_lineno = 274;
                        type_description_2 = "o";
                        goto try_except_handler_41;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_14, 1, tmp_tuple_element_51);
                    tmp_raise_value_14 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_14, tmp_right_name_14);
                    Py_DECREF(tmp_right_name_14);
                    if (tmp_raise_value_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 274;
                        type_description_2 = "o";
                        goto try_except_handler_41;
                    }
                    exception_type = tmp_raise_type_14;
                    Py_INCREF(tmp_raise_type_14);
                    exception_value = tmp_raise_value_14;
                    exception_lineno = 274;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_41;
                }
                branch_no_55:;
            }
            goto branch_end_54;
            branch_no_54:;
            {
                PyObject *tmp_assign_source_122;
                tmp_assign_source_122 = PyDict_New();
                assert(tmp_QtGui$class_creation_2__prepared == NULL);
                tmp_QtGui$class_creation_2__prepared = tmp_assign_source_122;
            }
            branch_end_54:;
        }
        {
            PyObject *tmp_set_locals_14;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__prepared);
            tmp_set_locals_14 = tmp_QtGui$class_creation_2__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_274 = tmp_set_locals_14;
            Py_INCREF(tmp_set_locals_14);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_274, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 274;
            type_description_2 = "o";
            goto try_except_handler_43;
        }
        tmp_dictset_value = const_str_digest_f99eab529fb8bc79979274901309f5a2;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_274, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 274;
            type_description_2 = "o";
            goto try_except_handler_43;
        }
        {
            nuitka_bool tmp_condition_result_85;
            PyObject *tmp_compexpr_left_14;
            PyObject *tmp_compexpr_right_14;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases);
            tmp_compexpr_left_14 = tmp_QtGui$class_creation_2__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases_orig);
            tmp_compexpr_right_14 = tmp_QtGui$class_creation_2__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_14, tmp_compexpr_right_14);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_43;
            }
            tmp_condition_result_85 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_85 == NUITKA_BOOL_TRUE) {
                goto branch_yes_56;
            } else {
                goto branch_no_56;
            }
            branch_yes_56:;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_2__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_274, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_43;
            }
            branch_no_56:;
        }
        {
            PyObject *tmp_assign_source_123;
            PyObject *tmp_called_name_28;
            PyObject *tmp_args_name_27;
            PyObject *tmp_tuple_element_52;
            PyObject *tmp_kw_name_27;
            CHECK_OBJECT(tmp_QtGui$class_creation_2__metaclass);
            tmp_called_name_28 = tmp_QtGui$class_creation_2__metaclass;
            tmp_tuple_element_52 = const_str_plain_QConicalGradient;
            tmp_args_name_27 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_52);
            PyTuple_SET_ITEM(tmp_args_name_27, 0, tmp_tuple_element_52);
            CHECK_OBJECT(tmp_QtGui$class_creation_2__bases);
            tmp_tuple_element_52 = tmp_QtGui$class_creation_2__bases;
            Py_INCREF(tmp_tuple_element_52);
            PyTuple_SET_ITEM(tmp_args_name_27, 1, tmp_tuple_element_52);
            tmp_tuple_element_52 = locals_PyQt5$uic$Compiler$qtproxies_274;
            Py_INCREF(tmp_tuple_element_52);
            PyTuple_SET_ITEM(tmp_args_name_27, 2, tmp_tuple_element_52);
            CHECK_OBJECT(tmp_QtGui$class_creation_2__class_decl_dict);
            tmp_kw_name_27 = tmp_QtGui$class_creation_2__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 274;
            tmp_assign_source_123 = CALL_FUNCTION(tmp_called_name_28, tmp_args_name_27, tmp_kw_name_27);
            Py_DECREF(tmp_args_name_27);
            if (tmp_assign_source_123 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_2 = "o";
                goto try_except_handler_43;
            }
            assert(outline_13_var___class__ == NULL);
            outline_13_var___class__ = tmp_assign_source_123;
        }
        CHECK_OBJECT(outline_13_var___class__);
        tmp_dictset_value = outline_13_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_43;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_43:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_274);
        locals_PyQt5$uic$Compiler$qtproxies_274 = NULL;
        goto try_return_handler_42;
        // Exception handler code:
        try_except_handler_43:;
        exception_keeper_type_38 = exception_type;
        exception_keeper_value_38 = exception_value;
        exception_keeper_tb_38 = exception_tb;
        exception_keeper_lineno_38 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_274);
        locals_PyQt5$uic$Compiler$qtproxies_274 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_38;
        exception_value = exception_keeper_value_38;
        exception_tb = exception_keeper_tb_38;
        exception_lineno = exception_keeper_lineno_38;

        goto try_except_handler_42;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_42:;
        CHECK_OBJECT((PyObject *)outline_13_var___class__);
        Py_DECREF(outline_13_var___class__);
        outline_13_var___class__ = NULL;

        goto outline_result_14;
        // Exception handler code:
        try_except_handler_42:;
        exception_keeper_type_39 = exception_type;
        exception_keeper_value_39 = exception_value;
        exception_keeper_tb_39 = exception_tb;
        exception_keeper_lineno_39 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_39;
        exception_value = exception_keeper_value_39;
        exception_tb = exception_keeper_tb_39;
        exception_lineno = exception_keeper_lineno_39;

        goto outline_exception_14;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_14:;
        exception_lineno = 274;
        goto try_except_handler_41;
        outline_result_14:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QConicalGradient, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 274;
            type_description_2 = "o";
            goto try_except_handler_41;
        }
        goto try_end_14;
        // Exception handler code:
        try_except_handler_41:;
        exception_keeper_type_40 = exception_type;
        exception_keeper_value_40 = exception_value;
        exception_keeper_tb_40 = exception_tb;
        exception_keeper_lineno_40 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_2__bases_orig);
        tmp_QtGui$class_creation_2__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_2__bases);
        tmp_QtGui$class_creation_2__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_2__class_decl_dict);
        tmp_QtGui$class_creation_2__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_2__metaclass);
        tmp_QtGui$class_creation_2__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_2__prepared);
        tmp_QtGui$class_creation_2__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_40;
        exception_value = exception_keeper_value_40;
        exception_tb = exception_keeper_tb_40;
        exception_lineno = exception_keeper_lineno_40;

        goto frame_exception_exit_10;
        // End of try:
        try_end_14:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_2__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_2__bases_orig);
        tmp_QtGui$class_creation_2__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_2__bases);
        Py_DECREF(tmp_QtGui$class_creation_2__bases);
        tmp_QtGui$class_creation_2__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_2__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_2__class_decl_dict);
        tmp_QtGui$class_creation_2__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_2__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_2__metaclass);
        tmp_QtGui$class_creation_2__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_2__prepared);
        Py_DECREF(tmp_QtGui$class_creation_2__prepared);
        tmp_QtGui$class_creation_2__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_124;
            PyObject *tmp_tuple_element_53;
            PyObject *tmp_mvar_value_17;
            tmp_tuple_element_53 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_53 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_17 == NULL)) {
                        tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_17 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 275;
                        type_description_2 = "o";
                        goto try_except_handler_44;
                    }

                    tmp_tuple_element_53 = tmp_mvar_value_17;
                    Py_INCREF(tmp_tuple_element_53);
                }
            }

            tmp_assign_source_124 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_124, 0, tmp_tuple_element_53);
            assert(tmp_QtGui$class_creation_3__bases_orig == NULL);
            tmp_QtGui$class_creation_3__bases_orig = tmp_assign_source_124;
        }
        {
            PyObject *tmp_assign_source_125;
            PyObject *tmp_dircall_arg1_15;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases_orig);
            tmp_dircall_arg1_15 = tmp_QtGui$class_creation_3__bases_orig;
            Py_INCREF(tmp_dircall_arg1_15);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_15};
                tmp_assign_source_125 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_125 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            assert(tmp_QtGui$class_creation_3__bases == NULL);
            tmp_QtGui$class_creation_3__bases = tmp_assign_source_125;
        }
        {
            PyObject *tmp_assign_source_126;
            tmp_assign_source_126 = PyDict_New();
            assert(tmp_QtGui$class_creation_3__class_decl_dict == NULL);
            tmp_QtGui$class_creation_3__class_decl_dict = tmp_assign_source_126;
        }
        {
            PyObject *tmp_assign_source_127;
            PyObject *tmp_metaclass_name_15;
            nuitka_bool tmp_condition_result_86;
            PyObject *tmp_key_name_43;
            PyObject *tmp_dict_name_43;
            PyObject *tmp_dict_name_44;
            PyObject *tmp_key_name_44;
            nuitka_bool tmp_condition_result_87;
            int tmp_truth_name_15;
            PyObject *tmp_type_arg_29;
            PyObject *tmp_subscribed_name_15;
            PyObject *tmp_subscript_name_15;
            PyObject *tmp_bases_name_15;
            tmp_key_name_43 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__class_decl_dict);
            tmp_dict_name_43 = tmp_QtGui$class_creation_3__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_43, tmp_key_name_43);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            tmp_condition_result_86 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_86 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_30;
            } else {
                goto condexpr_false_30;
            }
            condexpr_true_30:;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__class_decl_dict);
            tmp_dict_name_44 = tmp_QtGui$class_creation_3__class_decl_dict;
            tmp_key_name_44 = const_str_plain_metaclass;
            tmp_metaclass_name_15 = DICT_GET_ITEM(tmp_dict_name_44, tmp_key_name_44);
            if (tmp_metaclass_name_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            goto condexpr_end_30;
            condexpr_false_30:;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases);
            tmp_truth_name_15 = CHECK_IF_TRUE(tmp_QtGui$class_creation_3__bases);
            if (tmp_truth_name_15 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            tmp_condition_result_87 = tmp_truth_name_15 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_87 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_31;
            } else {
                goto condexpr_false_31;
            }
            condexpr_true_31:;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases);
            tmp_subscribed_name_15 = tmp_QtGui$class_creation_3__bases;
            tmp_subscript_name_15 = const_int_0;
            tmp_type_arg_29 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_15, tmp_subscript_name_15, 0);
            if (tmp_type_arg_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            tmp_metaclass_name_15 = BUILTIN_TYPE1(tmp_type_arg_29);
            Py_DECREF(tmp_type_arg_29);
            if (tmp_metaclass_name_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            goto condexpr_end_31;
            condexpr_false_31:;
            tmp_metaclass_name_15 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_15);
            condexpr_end_31:;
            condexpr_end_30:;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases);
            tmp_bases_name_15 = tmp_QtGui$class_creation_3__bases;
            tmp_assign_source_127 = SELECT_METACLASS(tmp_metaclass_name_15, tmp_bases_name_15);
            Py_DECREF(tmp_metaclass_name_15);
            if (tmp_assign_source_127 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            assert(tmp_QtGui$class_creation_3__metaclass == NULL);
            tmp_QtGui$class_creation_3__metaclass = tmp_assign_source_127;
        }
        {
            nuitka_bool tmp_condition_result_88;
            PyObject *tmp_key_name_45;
            PyObject *tmp_dict_name_45;
            tmp_key_name_45 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__class_decl_dict);
            tmp_dict_name_45 = tmp_QtGui$class_creation_3__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_45, tmp_key_name_45);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            tmp_condition_result_88 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_88 == NUITKA_BOOL_TRUE) {
                goto branch_yes_57;
            } else {
                goto branch_no_57;
            }
            branch_yes_57:;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_3__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_44;
            }
            branch_no_57:;
        }
        {
            nuitka_bool tmp_condition_result_89;
            PyObject *tmp_source_name_58;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__metaclass);
            tmp_source_name_58 = tmp_QtGui$class_creation_3__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_58, const_str_plain___prepare__);
            tmp_condition_result_89 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_89 == NUITKA_BOOL_TRUE) {
                goto branch_yes_58;
            } else {
                goto branch_no_58;
            }
            branch_yes_58:;
            {
                PyObject *tmp_assign_source_128;
                PyObject *tmp_called_name_29;
                PyObject *tmp_source_name_59;
                PyObject *tmp_args_name_28;
                PyObject *tmp_tuple_element_54;
                PyObject *tmp_kw_name_28;
                CHECK_OBJECT(tmp_QtGui$class_creation_3__metaclass);
                tmp_source_name_59 = tmp_QtGui$class_creation_3__metaclass;
                tmp_called_name_29 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain___prepare__);
                if (tmp_called_name_29 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 275;
                    type_description_2 = "o";
                    goto try_except_handler_44;
                }
                tmp_tuple_element_54 = const_str_plain_QLinearGradient;
                tmp_args_name_28 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_54);
                PyTuple_SET_ITEM(tmp_args_name_28, 0, tmp_tuple_element_54);
                CHECK_OBJECT(tmp_QtGui$class_creation_3__bases);
                tmp_tuple_element_54 = tmp_QtGui$class_creation_3__bases;
                Py_INCREF(tmp_tuple_element_54);
                PyTuple_SET_ITEM(tmp_args_name_28, 1, tmp_tuple_element_54);
                CHECK_OBJECT(tmp_QtGui$class_creation_3__class_decl_dict);
                tmp_kw_name_28 = tmp_QtGui$class_creation_3__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 275;
                tmp_assign_source_128 = CALL_FUNCTION(tmp_called_name_29, tmp_args_name_28, tmp_kw_name_28);
                Py_DECREF(tmp_called_name_29);
                Py_DECREF(tmp_args_name_28);
                if (tmp_assign_source_128 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 275;
                    type_description_2 = "o";
                    goto try_except_handler_44;
                }
                assert(tmp_QtGui$class_creation_3__prepared == NULL);
                tmp_QtGui$class_creation_3__prepared = tmp_assign_source_128;
            }
            {
                nuitka_bool tmp_condition_result_90;
                PyObject *tmp_operand_name_15;
                PyObject *tmp_source_name_60;
                CHECK_OBJECT(tmp_QtGui$class_creation_3__prepared);
                tmp_source_name_60 = tmp_QtGui$class_creation_3__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_60, const_str_plain___getitem__);
                tmp_operand_name_15 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_15);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 275;
                    type_description_2 = "o";
                    goto try_except_handler_44;
                }
                tmp_condition_result_90 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_90 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_59;
                } else {
                    goto branch_no_59;
                }
                branch_yes_59:;
                {
                    PyObject *tmp_raise_type_15;
                    PyObject *tmp_raise_value_15;
                    PyObject *tmp_left_name_15;
                    PyObject *tmp_right_name_15;
                    PyObject *tmp_tuple_element_55;
                    PyObject *tmp_getattr_target_15;
                    PyObject *tmp_getattr_attr_15;
                    PyObject *tmp_getattr_default_15;
                    PyObject *tmp_source_name_61;
                    PyObject *tmp_type_arg_30;
                    tmp_raise_type_15 = PyExc_TypeError;
                    tmp_left_name_15 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_3__metaclass);
                    tmp_getattr_target_15 = tmp_QtGui$class_creation_3__metaclass;
                    tmp_getattr_attr_15 = const_str_plain___name__;
                    tmp_getattr_default_15 = const_str_angle_metaclass;
                    tmp_tuple_element_55 = BUILTIN_GETATTR(tmp_getattr_target_15, tmp_getattr_attr_15, tmp_getattr_default_15);
                    if (tmp_tuple_element_55 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 275;
                        type_description_2 = "o";
                        goto try_except_handler_44;
                    }
                    tmp_right_name_15 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_15, 0, tmp_tuple_element_55);
                    CHECK_OBJECT(tmp_QtGui$class_creation_3__prepared);
                    tmp_type_arg_30 = tmp_QtGui$class_creation_3__prepared;
                    tmp_source_name_61 = BUILTIN_TYPE1(tmp_type_arg_30);
                    assert(!(tmp_source_name_61 == NULL));
                    tmp_tuple_element_55 = LOOKUP_ATTRIBUTE(tmp_source_name_61, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_61);
                    if (tmp_tuple_element_55 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_15);

                        exception_lineno = 275;
                        type_description_2 = "o";
                        goto try_except_handler_44;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_15, 1, tmp_tuple_element_55);
                    tmp_raise_value_15 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_15, tmp_right_name_15);
                    Py_DECREF(tmp_right_name_15);
                    if (tmp_raise_value_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 275;
                        type_description_2 = "o";
                        goto try_except_handler_44;
                    }
                    exception_type = tmp_raise_type_15;
                    Py_INCREF(tmp_raise_type_15);
                    exception_value = tmp_raise_value_15;
                    exception_lineno = 275;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_44;
                }
                branch_no_59:;
            }
            goto branch_end_58;
            branch_no_58:;
            {
                PyObject *tmp_assign_source_129;
                tmp_assign_source_129 = PyDict_New();
                assert(tmp_QtGui$class_creation_3__prepared == NULL);
                tmp_QtGui$class_creation_3__prepared = tmp_assign_source_129;
            }
            branch_end_58:;
        }
        {
            PyObject *tmp_set_locals_15;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__prepared);
            tmp_set_locals_15 = tmp_QtGui$class_creation_3__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_275 = tmp_set_locals_15;
            Py_INCREF(tmp_set_locals_15);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_275, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 275;
            type_description_2 = "o";
            goto try_except_handler_46;
        }
        tmp_dictset_value = const_str_digest_41ac2d1fc11ba3132da11aaf2fab2cfe;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_275, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 275;
            type_description_2 = "o";
            goto try_except_handler_46;
        }
        {
            nuitka_bool tmp_condition_result_91;
            PyObject *tmp_compexpr_left_15;
            PyObject *tmp_compexpr_right_15;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases);
            tmp_compexpr_left_15 = tmp_QtGui$class_creation_3__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases_orig);
            tmp_compexpr_right_15 = tmp_QtGui$class_creation_3__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_15, tmp_compexpr_right_15);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_46;
            }
            tmp_condition_result_91 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_91 == NUITKA_BOOL_TRUE) {
                goto branch_yes_60;
            } else {
                goto branch_no_60;
            }
            branch_yes_60:;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_3__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_275, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_46;
            }
            branch_no_60:;
        }
        {
            PyObject *tmp_assign_source_130;
            PyObject *tmp_called_name_30;
            PyObject *tmp_args_name_29;
            PyObject *tmp_tuple_element_56;
            PyObject *tmp_kw_name_29;
            CHECK_OBJECT(tmp_QtGui$class_creation_3__metaclass);
            tmp_called_name_30 = tmp_QtGui$class_creation_3__metaclass;
            tmp_tuple_element_56 = const_str_plain_QLinearGradient;
            tmp_args_name_29 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_56);
            PyTuple_SET_ITEM(tmp_args_name_29, 0, tmp_tuple_element_56);
            CHECK_OBJECT(tmp_QtGui$class_creation_3__bases);
            tmp_tuple_element_56 = tmp_QtGui$class_creation_3__bases;
            Py_INCREF(tmp_tuple_element_56);
            PyTuple_SET_ITEM(tmp_args_name_29, 1, tmp_tuple_element_56);
            tmp_tuple_element_56 = locals_PyQt5$uic$Compiler$qtproxies_275;
            Py_INCREF(tmp_tuple_element_56);
            PyTuple_SET_ITEM(tmp_args_name_29, 2, tmp_tuple_element_56);
            CHECK_OBJECT(tmp_QtGui$class_creation_3__class_decl_dict);
            tmp_kw_name_29 = tmp_QtGui$class_creation_3__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 275;
            tmp_assign_source_130 = CALL_FUNCTION(tmp_called_name_30, tmp_args_name_29, tmp_kw_name_29);
            Py_DECREF(tmp_args_name_29);
            if (tmp_assign_source_130 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_2 = "o";
                goto try_except_handler_46;
            }
            assert(outline_14_var___class__ == NULL);
            outline_14_var___class__ = tmp_assign_source_130;
        }
        CHECK_OBJECT(outline_14_var___class__);
        tmp_dictset_value = outline_14_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_46;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_46:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_275);
        locals_PyQt5$uic$Compiler$qtproxies_275 = NULL;
        goto try_return_handler_45;
        // Exception handler code:
        try_except_handler_46:;
        exception_keeper_type_41 = exception_type;
        exception_keeper_value_41 = exception_value;
        exception_keeper_tb_41 = exception_tb;
        exception_keeper_lineno_41 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_275);
        locals_PyQt5$uic$Compiler$qtproxies_275 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_41;
        exception_value = exception_keeper_value_41;
        exception_tb = exception_keeper_tb_41;
        exception_lineno = exception_keeper_lineno_41;

        goto try_except_handler_45;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_45:;
        CHECK_OBJECT((PyObject *)outline_14_var___class__);
        Py_DECREF(outline_14_var___class__);
        outline_14_var___class__ = NULL;

        goto outline_result_15;
        // Exception handler code:
        try_except_handler_45:;
        exception_keeper_type_42 = exception_type;
        exception_keeper_value_42 = exception_value;
        exception_keeper_tb_42 = exception_tb;
        exception_keeper_lineno_42 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_42;
        exception_value = exception_keeper_value_42;
        exception_tb = exception_keeper_tb_42;
        exception_lineno = exception_keeper_lineno_42;

        goto outline_exception_15;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_15:;
        exception_lineno = 275;
        goto try_except_handler_44;
        outline_result_15:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QLinearGradient, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 275;
            type_description_2 = "o";
            goto try_except_handler_44;
        }
        goto try_end_15;
        // Exception handler code:
        try_except_handler_44:;
        exception_keeper_type_43 = exception_type;
        exception_keeper_value_43 = exception_value;
        exception_keeper_tb_43 = exception_tb;
        exception_keeper_lineno_43 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_3__bases_orig);
        tmp_QtGui$class_creation_3__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_3__bases);
        tmp_QtGui$class_creation_3__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_3__class_decl_dict);
        tmp_QtGui$class_creation_3__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_3__metaclass);
        tmp_QtGui$class_creation_3__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_3__prepared);
        tmp_QtGui$class_creation_3__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_43;
        exception_value = exception_keeper_value_43;
        exception_tb = exception_keeper_tb_43;
        exception_lineno = exception_keeper_lineno_43;

        goto frame_exception_exit_10;
        // End of try:
        try_end_15:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_3__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_3__bases_orig);
        tmp_QtGui$class_creation_3__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_3__bases);
        Py_DECREF(tmp_QtGui$class_creation_3__bases);
        tmp_QtGui$class_creation_3__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_3__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_3__class_decl_dict);
        tmp_QtGui$class_creation_3__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_3__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_3__metaclass);
        tmp_QtGui$class_creation_3__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_3__prepared);
        Py_DECREF(tmp_QtGui$class_creation_3__prepared);
        tmp_QtGui$class_creation_3__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_131;
            PyObject *tmp_tuple_element_57;
            PyObject *tmp_mvar_value_18;
            tmp_tuple_element_57 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_57 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_18 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_18 == NULL)) {
                        tmp_mvar_value_18 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_18 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 276;
                        type_description_2 = "o";
                        goto try_except_handler_47;
                    }

                    tmp_tuple_element_57 = tmp_mvar_value_18;
                    Py_INCREF(tmp_tuple_element_57);
                }
            }

            tmp_assign_source_131 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_131, 0, tmp_tuple_element_57);
            assert(tmp_QtGui$class_creation_4__bases_orig == NULL);
            tmp_QtGui$class_creation_4__bases_orig = tmp_assign_source_131;
        }
        {
            PyObject *tmp_assign_source_132;
            PyObject *tmp_dircall_arg1_16;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases_orig);
            tmp_dircall_arg1_16 = tmp_QtGui$class_creation_4__bases_orig;
            Py_INCREF(tmp_dircall_arg1_16);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_16};
                tmp_assign_source_132 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_132 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            assert(tmp_QtGui$class_creation_4__bases == NULL);
            tmp_QtGui$class_creation_4__bases = tmp_assign_source_132;
        }
        {
            PyObject *tmp_assign_source_133;
            tmp_assign_source_133 = PyDict_New();
            assert(tmp_QtGui$class_creation_4__class_decl_dict == NULL);
            tmp_QtGui$class_creation_4__class_decl_dict = tmp_assign_source_133;
        }
        {
            PyObject *tmp_assign_source_134;
            PyObject *tmp_metaclass_name_16;
            nuitka_bool tmp_condition_result_92;
            PyObject *tmp_key_name_46;
            PyObject *tmp_dict_name_46;
            PyObject *tmp_dict_name_47;
            PyObject *tmp_key_name_47;
            nuitka_bool tmp_condition_result_93;
            int tmp_truth_name_16;
            PyObject *tmp_type_arg_31;
            PyObject *tmp_subscribed_name_16;
            PyObject *tmp_subscript_name_16;
            PyObject *tmp_bases_name_16;
            tmp_key_name_46 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__class_decl_dict);
            tmp_dict_name_46 = tmp_QtGui$class_creation_4__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_46, tmp_key_name_46);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            tmp_condition_result_92 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_92 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_32;
            } else {
                goto condexpr_false_32;
            }
            condexpr_true_32:;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__class_decl_dict);
            tmp_dict_name_47 = tmp_QtGui$class_creation_4__class_decl_dict;
            tmp_key_name_47 = const_str_plain_metaclass;
            tmp_metaclass_name_16 = DICT_GET_ITEM(tmp_dict_name_47, tmp_key_name_47);
            if (tmp_metaclass_name_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            goto condexpr_end_32;
            condexpr_false_32:;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases);
            tmp_truth_name_16 = CHECK_IF_TRUE(tmp_QtGui$class_creation_4__bases);
            if (tmp_truth_name_16 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            tmp_condition_result_93 = tmp_truth_name_16 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_93 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_33;
            } else {
                goto condexpr_false_33;
            }
            condexpr_true_33:;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases);
            tmp_subscribed_name_16 = tmp_QtGui$class_creation_4__bases;
            tmp_subscript_name_16 = const_int_0;
            tmp_type_arg_31 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_16, tmp_subscript_name_16, 0);
            if (tmp_type_arg_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            tmp_metaclass_name_16 = BUILTIN_TYPE1(tmp_type_arg_31);
            Py_DECREF(tmp_type_arg_31);
            if (tmp_metaclass_name_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            goto condexpr_end_33;
            condexpr_false_33:;
            tmp_metaclass_name_16 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_16);
            condexpr_end_33:;
            condexpr_end_32:;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases);
            tmp_bases_name_16 = tmp_QtGui$class_creation_4__bases;
            tmp_assign_source_134 = SELECT_METACLASS(tmp_metaclass_name_16, tmp_bases_name_16);
            Py_DECREF(tmp_metaclass_name_16);
            if (tmp_assign_source_134 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            assert(tmp_QtGui$class_creation_4__metaclass == NULL);
            tmp_QtGui$class_creation_4__metaclass = tmp_assign_source_134;
        }
        {
            nuitka_bool tmp_condition_result_94;
            PyObject *tmp_key_name_48;
            PyObject *tmp_dict_name_48;
            tmp_key_name_48 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__class_decl_dict);
            tmp_dict_name_48 = tmp_QtGui$class_creation_4__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_48, tmp_key_name_48);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            tmp_condition_result_94 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_94 == NUITKA_BOOL_TRUE) {
                goto branch_yes_61;
            } else {
                goto branch_no_61;
            }
            branch_yes_61:;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_4__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_47;
            }
            branch_no_61:;
        }
        {
            nuitka_bool tmp_condition_result_95;
            PyObject *tmp_source_name_62;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__metaclass);
            tmp_source_name_62 = tmp_QtGui$class_creation_4__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_62, const_str_plain___prepare__);
            tmp_condition_result_95 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_95 == NUITKA_BOOL_TRUE) {
                goto branch_yes_62;
            } else {
                goto branch_no_62;
            }
            branch_yes_62:;
            {
                PyObject *tmp_assign_source_135;
                PyObject *tmp_called_name_31;
                PyObject *tmp_source_name_63;
                PyObject *tmp_args_name_30;
                PyObject *tmp_tuple_element_58;
                PyObject *tmp_kw_name_30;
                CHECK_OBJECT(tmp_QtGui$class_creation_4__metaclass);
                tmp_source_name_63 = tmp_QtGui$class_creation_4__metaclass;
                tmp_called_name_31 = LOOKUP_ATTRIBUTE(tmp_source_name_63, const_str_plain___prepare__);
                if (tmp_called_name_31 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 276;
                    type_description_2 = "o";
                    goto try_except_handler_47;
                }
                tmp_tuple_element_58 = const_str_plain_QRadialGradient;
                tmp_args_name_30 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_58);
                PyTuple_SET_ITEM(tmp_args_name_30, 0, tmp_tuple_element_58);
                CHECK_OBJECT(tmp_QtGui$class_creation_4__bases);
                tmp_tuple_element_58 = tmp_QtGui$class_creation_4__bases;
                Py_INCREF(tmp_tuple_element_58);
                PyTuple_SET_ITEM(tmp_args_name_30, 1, tmp_tuple_element_58);
                CHECK_OBJECT(tmp_QtGui$class_creation_4__class_decl_dict);
                tmp_kw_name_30 = tmp_QtGui$class_creation_4__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 276;
                tmp_assign_source_135 = CALL_FUNCTION(tmp_called_name_31, tmp_args_name_30, tmp_kw_name_30);
                Py_DECREF(tmp_called_name_31);
                Py_DECREF(tmp_args_name_30);
                if (tmp_assign_source_135 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 276;
                    type_description_2 = "o";
                    goto try_except_handler_47;
                }
                assert(tmp_QtGui$class_creation_4__prepared == NULL);
                tmp_QtGui$class_creation_4__prepared = tmp_assign_source_135;
            }
            {
                nuitka_bool tmp_condition_result_96;
                PyObject *tmp_operand_name_16;
                PyObject *tmp_source_name_64;
                CHECK_OBJECT(tmp_QtGui$class_creation_4__prepared);
                tmp_source_name_64 = tmp_QtGui$class_creation_4__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_64, const_str_plain___getitem__);
                tmp_operand_name_16 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_16);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 276;
                    type_description_2 = "o";
                    goto try_except_handler_47;
                }
                tmp_condition_result_96 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_96 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_63;
                } else {
                    goto branch_no_63;
                }
                branch_yes_63:;
                {
                    PyObject *tmp_raise_type_16;
                    PyObject *tmp_raise_value_16;
                    PyObject *tmp_left_name_16;
                    PyObject *tmp_right_name_16;
                    PyObject *tmp_tuple_element_59;
                    PyObject *tmp_getattr_target_16;
                    PyObject *tmp_getattr_attr_16;
                    PyObject *tmp_getattr_default_16;
                    PyObject *tmp_source_name_65;
                    PyObject *tmp_type_arg_32;
                    tmp_raise_type_16 = PyExc_TypeError;
                    tmp_left_name_16 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_4__metaclass);
                    tmp_getattr_target_16 = tmp_QtGui$class_creation_4__metaclass;
                    tmp_getattr_attr_16 = const_str_plain___name__;
                    tmp_getattr_default_16 = const_str_angle_metaclass;
                    tmp_tuple_element_59 = BUILTIN_GETATTR(tmp_getattr_target_16, tmp_getattr_attr_16, tmp_getattr_default_16);
                    if (tmp_tuple_element_59 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 276;
                        type_description_2 = "o";
                        goto try_except_handler_47;
                    }
                    tmp_right_name_16 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_16, 0, tmp_tuple_element_59);
                    CHECK_OBJECT(tmp_QtGui$class_creation_4__prepared);
                    tmp_type_arg_32 = tmp_QtGui$class_creation_4__prepared;
                    tmp_source_name_65 = BUILTIN_TYPE1(tmp_type_arg_32);
                    assert(!(tmp_source_name_65 == NULL));
                    tmp_tuple_element_59 = LOOKUP_ATTRIBUTE(tmp_source_name_65, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_65);
                    if (tmp_tuple_element_59 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_16);

                        exception_lineno = 276;
                        type_description_2 = "o";
                        goto try_except_handler_47;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_16, 1, tmp_tuple_element_59);
                    tmp_raise_value_16 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_16, tmp_right_name_16);
                    Py_DECREF(tmp_right_name_16);
                    if (tmp_raise_value_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 276;
                        type_description_2 = "o";
                        goto try_except_handler_47;
                    }
                    exception_type = tmp_raise_type_16;
                    Py_INCREF(tmp_raise_type_16);
                    exception_value = tmp_raise_value_16;
                    exception_lineno = 276;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_47;
                }
                branch_no_63:;
            }
            goto branch_end_62;
            branch_no_62:;
            {
                PyObject *tmp_assign_source_136;
                tmp_assign_source_136 = PyDict_New();
                assert(tmp_QtGui$class_creation_4__prepared == NULL);
                tmp_QtGui$class_creation_4__prepared = tmp_assign_source_136;
            }
            branch_end_62:;
        }
        {
            PyObject *tmp_set_locals_16;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__prepared);
            tmp_set_locals_16 = tmp_QtGui$class_creation_4__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_276 = tmp_set_locals_16;
            Py_INCREF(tmp_set_locals_16);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_276, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 276;
            type_description_2 = "o";
            goto try_except_handler_49;
        }
        tmp_dictset_value = const_str_digest_f7c1b42296fb13108a554d9570dda7a9;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_276, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 276;
            type_description_2 = "o";
            goto try_except_handler_49;
        }
        {
            nuitka_bool tmp_condition_result_97;
            PyObject *tmp_compexpr_left_16;
            PyObject *tmp_compexpr_right_16;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases);
            tmp_compexpr_left_16 = tmp_QtGui$class_creation_4__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases_orig);
            tmp_compexpr_right_16 = tmp_QtGui$class_creation_4__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_49;
            }
            tmp_condition_result_97 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_97 == NUITKA_BOOL_TRUE) {
                goto branch_yes_64;
            } else {
                goto branch_no_64;
            }
            branch_yes_64:;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_4__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_276, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_49;
            }
            branch_no_64:;
        }
        {
            PyObject *tmp_assign_source_137;
            PyObject *tmp_called_name_32;
            PyObject *tmp_args_name_31;
            PyObject *tmp_tuple_element_60;
            PyObject *tmp_kw_name_31;
            CHECK_OBJECT(tmp_QtGui$class_creation_4__metaclass);
            tmp_called_name_32 = tmp_QtGui$class_creation_4__metaclass;
            tmp_tuple_element_60 = const_str_plain_QRadialGradient;
            tmp_args_name_31 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_60);
            PyTuple_SET_ITEM(tmp_args_name_31, 0, tmp_tuple_element_60);
            CHECK_OBJECT(tmp_QtGui$class_creation_4__bases);
            tmp_tuple_element_60 = tmp_QtGui$class_creation_4__bases;
            Py_INCREF(tmp_tuple_element_60);
            PyTuple_SET_ITEM(tmp_args_name_31, 1, tmp_tuple_element_60);
            tmp_tuple_element_60 = locals_PyQt5$uic$Compiler$qtproxies_276;
            Py_INCREF(tmp_tuple_element_60);
            PyTuple_SET_ITEM(tmp_args_name_31, 2, tmp_tuple_element_60);
            CHECK_OBJECT(tmp_QtGui$class_creation_4__class_decl_dict);
            tmp_kw_name_31 = tmp_QtGui$class_creation_4__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 276;
            tmp_assign_source_137 = CALL_FUNCTION(tmp_called_name_32, tmp_args_name_31, tmp_kw_name_31);
            Py_DECREF(tmp_args_name_31);
            if (tmp_assign_source_137 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_2 = "o";
                goto try_except_handler_49;
            }
            assert(outline_15_var___class__ == NULL);
            outline_15_var___class__ = tmp_assign_source_137;
        }
        CHECK_OBJECT(outline_15_var___class__);
        tmp_dictset_value = outline_15_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_49;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_49:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_276);
        locals_PyQt5$uic$Compiler$qtproxies_276 = NULL;
        goto try_return_handler_48;
        // Exception handler code:
        try_except_handler_49:;
        exception_keeper_type_44 = exception_type;
        exception_keeper_value_44 = exception_value;
        exception_keeper_tb_44 = exception_tb;
        exception_keeper_lineno_44 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_276);
        locals_PyQt5$uic$Compiler$qtproxies_276 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_44;
        exception_value = exception_keeper_value_44;
        exception_tb = exception_keeper_tb_44;
        exception_lineno = exception_keeper_lineno_44;

        goto try_except_handler_48;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_48:;
        CHECK_OBJECT((PyObject *)outline_15_var___class__);
        Py_DECREF(outline_15_var___class__);
        outline_15_var___class__ = NULL;

        goto outline_result_16;
        // Exception handler code:
        try_except_handler_48:;
        exception_keeper_type_45 = exception_type;
        exception_keeper_value_45 = exception_value;
        exception_keeper_tb_45 = exception_tb;
        exception_keeper_lineno_45 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_45;
        exception_value = exception_keeper_value_45;
        exception_tb = exception_keeper_tb_45;
        exception_lineno = exception_keeper_lineno_45;

        goto outline_exception_16;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_16:;
        exception_lineno = 276;
        goto try_except_handler_47;
        outline_result_16:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QRadialGradient, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 276;
            type_description_2 = "o";
            goto try_except_handler_47;
        }
        goto try_end_16;
        // Exception handler code:
        try_except_handler_47:;
        exception_keeper_type_46 = exception_type;
        exception_keeper_value_46 = exception_value;
        exception_keeper_tb_46 = exception_tb;
        exception_keeper_lineno_46 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_4__bases_orig);
        tmp_QtGui$class_creation_4__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_4__bases);
        tmp_QtGui$class_creation_4__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_4__class_decl_dict);
        tmp_QtGui$class_creation_4__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_4__metaclass);
        tmp_QtGui$class_creation_4__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_4__prepared);
        tmp_QtGui$class_creation_4__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_46;
        exception_value = exception_keeper_value_46;
        exception_tb = exception_keeper_tb_46;
        exception_lineno = exception_keeper_lineno_46;

        goto frame_exception_exit_10;
        // End of try:
        try_end_16:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_4__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_4__bases_orig);
        tmp_QtGui$class_creation_4__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_4__bases);
        Py_DECREF(tmp_QtGui$class_creation_4__bases);
        tmp_QtGui$class_creation_4__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_4__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_4__class_decl_dict);
        tmp_QtGui$class_creation_4__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_4__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_4__metaclass);
        tmp_QtGui$class_creation_4__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_4__prepared);
        Py_DECREF(tmp_QtGui$class_creation_4__prepared);
        tmp_QtGui$class_creation_4__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_138;
            PyObject *tmp_tuple_element_61;
            PyObject *tmp_mvar_value_19;
            tmp_tuple_element_61 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_61 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_19 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_19 == NULL)) {
                        tmp_mvar_value_19 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_19 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 277;
                        type_description_2 = "o";
                        goto try_except_handler_50;
                    }

                    tmp_tuple_element_61 = tmp_mvar_value_19;
                    Py_INCREF(tmp_tuple_element_61);
                }
            }

            tmp_assign_source_138 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_138, 0, tmp_tuple_element_61);
            assert(tmp_QtGui$class_creation_5__bases_orig == NULL);
            tmp_QtGui$class_creation_5__bases_orig = tmp_assign_source_138;
        }
        {
            PyObject *tmp_assign_source_139;
            PyObject *tmp_dircall_arg1_17;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases_orig);
            tmp_dircall_arg1_17 = tmp_QtGui$class_creation_5__bases_orig;
            Py_INCREF(tmp_dircall_arg1_17);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_17};
                tmp_assign_source_139 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_139 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            assert(tmp_QtGui$class_creation_5__bases == NULL);
            tmp_QtGui$class_creation_5__bases = tmp_assign_source_139;
        }
        {
            PyObject *tmp_assign_source_140;
            tmp_assign_source_140 = PyDict_New();
            assert(tmp_QtGui$class_creation_5__class_decl_dict == NULL);
            tmp_QtGui$class_creation_5__class_decl_dict = tmp_assign_source_140;
        }
        {
            PyObject *tmp_assign_source_141;
            PyObject *tmp_metaclass_name_17;
            nuitka_bool tmp_condition_result_98;
            PyObject *tmp_key_name_49;
            PyObject *tmp_dict_name_49;
            PyObject *tmp_dict_name_50;
            PyObject *tmp_key_name_50;
            nuitka_bool tmp_condition_result_99;
            int tmp_truth_name_17;
            PyObject *tmp_type_arg_33;
            PyObject *tmp_subscribed_name_17;
            PyObject *tmp_subscript_name_17;
            PyObject *tmp_bases_name_17;
            tmp_key_name_49 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__class_decl_dict);
            tmp_dict_name_49 = tmp_QtGui$class_creation_5__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_49, tmp_key_name_49);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            tmp_condition_result_98 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_98 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_34;
            } else {
                goto condexpr_false_34;
            }
            condexpr_true_34:;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__class_decl_dict);
            tmp_dict_name_50 = tmp_QtGui$class_creation_5__class_decl_dict;
            tmp_key_name_50 = const_str_plain_metaclass;
            tmp_metaclass_name_17 = DICT_GET_ITEM(tmp_dict_name_50, tmp_key_name_50);
            if (tmp_metaclass_name_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            goto condexpr_end_34;
            condexpr_false_34:;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases);
            tmp_truth_name_17 = CHECK_IF_TRUE(tmp_QtGui$class_creation_5__bases);
            if (tmp_truth_name_17 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            tmp_condition_result_99 = tmp_truth_name_17 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_99 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_35;
            } else {
                goto condexpr_false_35;
            }
            condexpr_true_35:;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases);
            tmp_subscribed_name_17 = tmp_QtGui$class_creation_5__bases;
            tmp_subscript_name_17 = const_int_0;
            tmp_type_arg_33 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_17, tmp_subscript_name_17, 0);
            if (tmp_type_arg_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            tmp_metaclass_name_17 = BUILTIN_TYPE1(tmp_type_arg_33);
            Py_DECREF(tmp_type_arg_33);
            if (tmp_metaclass_name_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            goto condexpr_end_35;
            condexpr_false_35:;
            tmp_metaclass_name_17 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_17);
            condexpr_end_35:;
            condexpr_end_34:;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases);
            tmp_bases_name_17 = tmp_QtGui$class_creation_5__bases;
            tmp_assign_source_141 = SELECT_METACLASS(tmp_metaclass_name_17, tmp_bases_name_17);
            Py_DECREF(tmp_metaclass_name_17);
            if (tmp_assign_source_141 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            assert(tmp_QtGui$class_creation_5__metaclass == NULL);
            tmp_QtGui$class_creation_5__metaclass = tmp_assign_source_141;
        }
        {
            nuitka_bool tmp_condition_result_100;
            PyObject *tmp_key_name_51;
            PyObject *tmp_dict_name_51;
            tmp_key_name_51 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__class_decl_dict);
            tmp_dict_name_51 = tmp_QtGui$class_creation_5__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_51, tmp_key_name_51);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            tmp_condition_result_100 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_100 == NUITKA_BOOL_TRUE) {
                goto branch_yes_65;
            } else {
                goto branch_no_65;
            }
            branch_yes_65:;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_5__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_50;
            }
            branch_no_65:;
        }
        {
            nuitka_bool tmp_condition_result_101;
            PyObject *tmp_source_name_66;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__metaclass);
            tmp_source_name_66 = tmp_QtGui$class_creation_5__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_66, const_str_plain___prepare__);
            tmp_condition_result_101 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_101 == NUITKA_BOOL_TRUE) {
                goto branch_yes_66;
            } else {
                goto branch_no_66;
            }
            branch_yes_66:;
            {
                PyObject *tmp_assign_source_142;
                PyObject *tmp_called_name_33;
                PyObject *tmp_source_name_67;
                PyObject *tmp_args_name_32;
                PyObject *tmp_tuple_element_62;
                PyObject *tmp_kw_name_32;
                CHECK_OBJECT(tmp_QtGui$class_creation_5__metaclass);
                tmp_source_name_67 = tmp_QtGui$class_creation_5__metaclass;
                tmp_called_name_33 = LOOKUP_ATTRIBUTE(tmp_source_name_67, const_str_plain___prepare__);
                if (tmp_called_name_33 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 277;
                    type_description_2 = "o";
                    goto try_except_handler_50;
                }
                tmp_tuple_element_62 = const_str_plain_QBrush;
                tmp_args_name_32 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_62);
                PyTuple_SET_ITEM(tmp_args_name_32, 0, tmp_tuple_element_62);
                CHECK_OBJECT(tmp_QtGui$class_creation_5__bases);
                tmp_tuple_element_62 = tmp_QtGui$class_creation_5__bases;
                Py_INCREF(tmp_tuple_element_62);
                PyTuple_SET_ITEM(tmp_args_name_32, 1, tmp_tuple_element_62);
                CHECK_OBJECT(tmp_QtGui$class_creation_5__class_decl_dict);
                tmp_kw_name_32 = tmp_QtGui$class_creation_5__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 277;
                tmp_assign_source_142 = CALL_FUNCTION(tmp_called_name_33, tmp_args_name_32, tmp_kw_name_32);
                Py_DECREF(tmp_called_name_33);
                Py_DECREF(tmp_args_name_32);
                if (tmp_assign_source_142 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 277;
                    type_description_2 = "o";
                    goto try_except_handler_50;
                }
                assert(tmp_QtGui$class_creation_5__prepared == NULL);
                tmp_QtGui$class_creation_5__prepared = tmp_assign_source_142;
            }
            {
                nuitka_bool tmp_condition_result_102;
                PyObject *tmp_operand_name_17;
                PyObject *tmp_source_name_68;
                CHECK_OBJECT(tmp_QtGui$class_creation_5__prepared);
                tmp_source_name_68 = tmp_QtGui$class_creation_5__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_68, const_str_plain___getitem__);
                tmp_operand_name_17 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_17);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 277;
                    type_description_2 = "o";
                    goto try_except_handler_50;
                }
                tmp_condition_result_102 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_102 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_67;
                } else {
                    goto branch_no_67;
                }
                branch_yes_67:;
                {
                    PyObject *tmp_raise_type_17;
                    PyObject *tmp_raise_value_17;
                    PyObject *tmp_left_name_17;
                    PyObject *tmp_right_name_17;
                    PyObject *tmp_tuple_element_63;
                    PyObject *tmp_getattr_target_17;
                    PyObject *tmp_getattr_attr_17;
                    PyObject *tmp_getattr_default_17;
                    PyObject *tmp_source_name_69;
                    PyObject *tmp_type_arg_34;
                    tmp_raise_type_17 = PyExc_TypeError;
                    tmp_left_name_17 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_5__metaclass);
                    tmp_getattr_target_17 = tmp_QtGui$class_creation_5__metaclass;
                    tmp_getattr_attr_17 = const_str_plain___name__;
                    tmp_getattr_default_17 = const_str_angle_metaclass;
                    tmp_tuple_element_63 = BUILTIN_GETATTR(tmp_getattr_target_17, tmp_getattr_attr_17, tmp_getattr_default_17);
                    if (tmp_tuple_element_63 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 277;
                        type_description_2 = "o";
                        goto try_except_handler_50;
                    }
                    tmp_right_name_17 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_17, 0, tmp_tuple_element_63);
                    CHECK_OBJECT(tmp_QtGui$class_creation_5__prepared);
                    tmp_type_arg_34 = tmp_QtGui$class_creation_5__prepared;
                    tmp_source_name_69 = BUILTIN_TYPE1(tmp_type_arg_34);
                    assert(!(tmp_source_name_69 == NULL));
                    tmp_tuple_element_63 = LOOKUP_ATTRIBUTE(tmp_source_name_69, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_69);
                    if (tmp_tuple_element_63 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_17);

                        exception_lineno = 277;
                        type_description_2 = "o";
                        goto try_except_handler_50;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_17, 1, tmp_tuple_element_63);
                    tmp_raise_value_17 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_17, tmp_right_name_17);
                    Py_DECREF(tmp_right_name_17);
                    if (tmp_raise_value_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 277;
                        type_description_2 = "o";
                        goto try_except_handler_50;
                    }
                    exception_type = tmp_raise_type_17;
                    Py_INCREF(tmp_raise_type_17);
                    exception_value = tmp_raise_value_17;
                    exception_lineno = 277;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_50;
                }
                branch_no_67:;
            }
            goto branch_end_66;
            branch_no_66:;
            {
                PyObject *tmp_assign_source_143;
                tmp_assign_source_143 = PyDict_New();
                assert(tmp_QtGui$class_creation_5__prepared == NULL);
                tmp_QtGui$class_creation_5__prepared = tmp_assign_source_143;
            }
            branch_end_66:;
        }
        {
            PyObject *tmp_set_locals_17;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__prepared);
            tmp_set_locals_17 = tmp_QtGui$class_creation_5__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_277 = tmp_set_locals_17;
            Py_INCREF(tmp_set_locals_17);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_277, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 277;
            type_description_2 = "o";
            goto try_except_handler_52;
        }
        tmp_dictset_value = const_str_digest_abc91460cb147354c1d6f23cff0f2781;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_277, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 277;
            type_description_2 = "o";
            goto try_except_handler_52;
        }
        {
            nuitka_bool tmp_condition_result_103;
            PyObject *tmp_compexpr_left_17;
            PyObject *tmp_compexpr_right_17;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases);
            tmp_compexpr_left_17 = tmp_QtGui$class_creation_5__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases_orig);
            tmp_compexpr_right_17 = tmp_QtGui$class_creation_5__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_17, tmp_compexpr_right_17);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_52;
            }
            tmp_condition_result_103 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_103 == NUITKA_BOOL_TRUE) {
                goto branch_yes_68;
            } else {
                goto branch_no_68;
            }
            branch_yes_68:;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_5__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_277, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_52;
            }
            branch_no_68:;
        }
        {
            PyObject *tmp_assign_source_144;
            PyObject *tmp_called_name_34;
            PyObject *tmp_args_name_33;
            PyObject *tmp_tuple_element_64;
            PyObject *tmp_kw_name_33;
            CHECK_OBJECT(tmp_QtGui$class_creation_5__metaclass);
            tmp_called_name_34 = tmp_QtGui$class_creation_5__metaclass;
            tmp_tuple_element_64 = const_str_plain_QBrush;
            tmp_args_name_33 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_64);
            PyTuple_SET_ITEM(tmp_args_name_33, 0, tmp_tuple_element_64);
            CHECK_OBJECT(tmp_QtGui$class_creation_5__bases);
            tmp_tuple_element_64 = tmp_QtGui$class_creation_5__bases;
            Py_INCREF(tmp_tuple_element_64);
            PyTuple_SET_ITEM(tmp_args_name_33, 1, tmp_tuple_element_64);
            tmp_tuple_element_64 = locals_PyQt5$uic$Compiler$qtproxies_277;
            Py_INCREF(tmp_tuple_element_64);
            PyTuple_SET_ITEM(tmp_args_name_33, 2, tmp_tuple_element_64);
            CHECK_OBJECT(tmp_QtGui$class_creation_5__class_decl_dict);
            tmp_kw_name_33 = tmp_QtGui$class_creation_5__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 277;
            tmp_assign_source_144 = CALL_FUNCTION(tmp_called_name_34, tmp_args_name_33, tmp_kw_name_33);
            Py_DECREF(tmp_args_name_33);
            if (tmp_assign_source_144 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_2 = "o";
                goto try_except_handler_52;
            }
            assert(outline_16_var___class__ == NULL);
            outline_16_var___class__ = tmp_assign_source_144;
        }
        CHECK_OBJECT(outline_16_var___class__);
        tmp_dictset_value = outline_16_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_52;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_52:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_277);
        locals_PyQt5$uic$Compiler$qtproxies_277 = NULL;
        goto try_return_handler_51;
        // Exception handler code:
        try_except_handler_52:;
        exception_keeper_type_47 = exception_type;
        exception_keeper_value_47 = exception_value;
        exception_keeper_tb_47 = exception_tb;
        exception_keeper_lineno_47 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_277);
        locals_PyQt5$uic$Compiler$qtproxies_277 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_47;
        exception_value = exception_keeper_value_47;
        exception_tb = exception_keeper_tb_47;
        exception_lineno = exception_keeper_lineno_47;

        goto try_except_handler_51;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_51:;
        CHECK_OBJECT((PyObject *)outline_16_var___class__);
        Py_DECREF(outline_16_var___class__);
        outline_16_var___class__ = NULL;

        goto outline_result_17;
        // Exception handler code:
        try_except_handler_51:;
        exception_keeper_type_48 = exception_type;
        exception_keeper_value_48 = exception_value;
        exception_keeper_tb_48 = exception_tb;
        exception_keeper_lineno_48 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_48;
        exception_value = exception_keeper_value_48;
        exception_tb = exception_keeper_tb_48;
        exception_lineno = exception_keeper_lineno_48;

        goto outline_exception_17;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_17:;
        exception_lineno = 277;
        goto try_except_handler_50;
        outline_result_17:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QBrush, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 277;
            type_description_2 = "o";
            goto try_except_handler_50;
        }
        goto try_end_17;
        // Exception handler code:
        try_except_handler_50:;
        exception_keeper_type_49 = exception_type;
        exception_keeper_value_49 = exception_value;
        exception_keeper_tb_49 = exception_tb;
        exception_keeper_lineno_49 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_5__bases_orig);
        tmp_QtGui$class_creation_5__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_5__bases);
        tmp_QtGui$class_creation_5__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_5__class_decl_dict);
        tmp_QtGui$class_creation_5__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_5__metaclass);
        tmp_QtGui$class_creation_5__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_5__prepared);
        tmp_QtGui$class_creation_5__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_49;
        exception_value = exception_keeper_value_49;
        exception_tb = exception_keeper_tb_49;
        exception_lineno = exception_keeper_lineno_49;

        goto frame_exception_exit_10;
        // End of try:
        try_end_17:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_5__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_5__bases_orig);
        tmp_QtGui$class_creation_5__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_5__bases);
        Py_DECREF(tmp_QtGui$class_creation_5__bases);
        tmp_QtGui$class_creation_5__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_5__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_5__class_decl_dict);
        tmp_QtGui$class_creation_5__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_5__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_5__metaclass);
        tmp_QtGui$class_creation_5__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_5__prepared);
        Py_DECREF(tmp_QtGui$class_creation_5__prepared);
        tmp_QtGui$class_creation_5__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_145;
            PyObject *tmp_tuple_element_65;
            PyObject *tmp_mvar_value_20;
            tmp_tuple_element_65 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_65 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_20 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_20 == NULL)) {
                        tmp_mvar_value_20 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_20 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 278;
                        type_description_2 = "o";
                        goto try_except_handler_53;
                    }

                    tmp_tuple_element_65 = tmp_mvar_value_20;
                    Py_INCREF(tmp_tuple_element_65);
                }
            }

            tmp_assign_source_145 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_145, 0, tmp_tuple_element_65);
            assert(tmp_QtGui$class_creation_6__bases_orig == NULL);
            tmp_QtGui$class_creation_6__bases_orig = tmp_assign_source_145;
        }
        {
            PyObject *tmp_assign_source_146;
            PyObject *tmp_dircall_arg1_18;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases_orig);
            tmp_dircall_arg1_18 = tmp_QtGui$class_creation_6__bases_orig;
            Py_INCREF(tmp_dircall_arg1_18);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_18};
                tmp_assign_source_146 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_146 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            assert(tmp_QtGui$class_creation_6__bases == NULL);
            tmp_QtGui$class_creation_6__bases = tmp_assign_source_146;
        }
        {
            PyObject *tmp_assign_source_147;
            tmp_assign_source_147 = PyDict_New();
            assert(tmp_QtGui$class_creation_6__class_decl_dict == NULL);
            tmp_QtGui$class_creation_6__class_decl_dict = tmp_assign_source_147;
        }
        {
            PyObject *tmp_assign_source_148;
            PyObject *tmp_metaclass_name_18;
            nuitka_bool tmp_condition_result_104;
            PyObject *tmp_key_name_52;
            PyObject *tmp_dict_name_52;
            PyObject *tmp_dict_name_53;
            PyObject *tmp_key_name_53;
            nuitka_bool tmp_condition_result_105;
            int tmp_truth_name_18;
            PyObject *tmp_type_arg_35;
            PyObject *tmp_subscribed_name_18;
            PyObject *tmp_subscript_name_18;
            PyObject *tmp_bases_name_18;
            tmp_key_name_52 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__class_decl_dict);
            tmp_dict_name_52 = tmp_QtGui$class_creation_6__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_52, tmp_key_name_52);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            tmp_condition_result_104 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_104 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_36;
            } else {
                goto condexpr_false_36;
            }
            condexpr_true_36:;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__class_decl_dict);
            tmp_dict_name_53 = tmp_QtGui$class_creation_6__class_decl_dict;
            tmp_key_name_53 = const_str_plain_metaclass;
            tmp_metaclass_name_18 = DICT_GET_ITEM(tmp_dict_name_53, tmp_key_name_53);
            if (tmp_metaclass_name_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            goto condexpr_end_36;
            condexpr_false_36:;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases);
            tmp_truth_name_18 = CHECK_IF_TRUE(tmp_QtGui$class_creation_6__bases);
            if (tmp_truth_name_18 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            tmp_condition_result_105 = tmp_truth_name_18 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_105 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_37;
            } else {
                goto condexpr_false_37;
            }
            condexpr_true_37:;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases);
            tmp_subscribed_name_18 = tmp_QtGui$class_creation_6__bases;
            tmp_subscript_name_18 = const_int_0;
            tmp_type_arg_35 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_18, tmp_subscript_name_18, 0);
            if (tmp_type_arg_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            tmp_metaclass_name_18 = BUILTIN_TYPE1(tmp_type_arg_35);
            Py_DECREF(tmp_type_arg_35);
            if (tmp_metaclass_name_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            goto condexpr_end_37;
            condexpr_false_37:;
            tmp_metaclass_name_18 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_18);
            condexpr_end_37:;
            condexpr_end_36:;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases);
            tmp_bases_name_18 = tmp_QtGui$class_creation_6__bases;
            tmp_assign_source_148 = SELECT_METACLASS(tmp_metaclass_name_18, tmp_bases_name_18);
            Py_DECREF(tmp_metaclass_name_18);
            if (tmp_assign_source_148 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            assert(tmp_QtGui$class_creation_6__metaclass == NULL);
            tmp_QtGui$class_creation_6__metaclass = tmp_assign_source_148;
        }
        {
            nuitka_bool tmp_condition_result_106;
            PyObject *tmp_key_name_54;
            PyObject *tmp_dict_name_54;
            tmp_key_name_54 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__class_decl_dict);
            tmp_dict_name_54 = tmp_QtGui$class_creation_6__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_54, tmp_key_name_54);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            tmp_condition_result_106 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_106 == NUITKA_BOOL_TRUE) {
                goto branch_yes_69;
            } else {
                goto branch_no_69;
            }
            branch_yes_69:;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_6__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_53;
            }
            branch_no_69:;
        }
        {
            nuitka_bool tmp_condition_result_107;
            PyObject *tmp_source_name_70;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__metaclass);
            tmp_source_name_70 = tmp_QtGui$class_creation_6__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_70, const_str_plain___prepare__);
            tmp_condition_result_107 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_107 == NUITKA_BOOL_TRUE) {
                goto branch_yes_70;
            } else {
                goto branch_no_70;
            }
            branch_yes_70:;
            {
                PyObject *tmp_assign_source_149;
                PyObject *tmp_called_name_35;
                PyObject *tmp_source_name_71;
                PyObject *tmp_args_name_34;
                PyObject *tmp_tuple_element_66;
                PyObject *tmp_kw_name_34;
                CHECK_OBJECT(tmp_QtGui$class_creation_6__metaclass);
                tmp_source_name_71 = tmp_QtGui$class_creation_6__metaclass;
                tmp_called_name_35 = LOOKUP_ATTRIBUTE(tmp_source_name_71, const_str_plain___prepare__);
                if (tmp_called_name_35 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 278;
                    type_description_2 = "o";
                    goto try_except_handler_53;
                }
                tmp_tuple_element_66 = const_str_plain_QPainter;
                tmp_args_name_34 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_66);
                PyTuple_SET_ITEM(tmp_args_name_34, 0, tmp_tuple_element_66);
                CHECK_OBJECT(tmp_QtGui$class_creation_6__bases);
                tmp_tuple_element_66 = tmp_QtGui$class_creation_6__bases;
                Py_INCREF(tmp_tuple_element_66);
                PyTuple_SET_ITEM(tmp_args_name_34, 1, tmp_tuple_element_66);
                CHECK_OBJECT(tmp_QtGui$class_creation_6__class_decl_dict);
                tmp_kw_name_34 = tmp_QtGui$class_creation_6__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 278;
                tmp_assign_source_149 = CALL_FUNCTION(tmp_called_name_35, tmp_args_name_34, tmp_kw_name_34);
                Py_DECREF(tmp_called_name_35);
                Py_DECREF(tmp_args_name_34);
                if (tmp_assign_source_149 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 278;
                    type_description_2 = "o";
                    goto try_except_handler_53;
                }
                assert(tmp_QtGui$class_creation_6__prepared == NULL);
                tmp_QtGui$class_creation_6__prepared = tmp_assign_source_149;
            }
            {
                nuitka_bool tmp_condition_result_108;
                PyObject *tmp_operand_name_18;
                PyObject *tmp_source_name_72;
                CHECK_OBJECT(tmp_QtGui$class_creation_6__prepared);
                tmp_source_name_72 = tmp_QtGui$class_creation_6__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_72, const_str_plain___getitem__);
                tmp_operand_name_18 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_18);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 278;
                    type_description_2 = "o";
                    goto try_except_handler_53;
                }
                tmp_condition_result_108 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_108 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_71;
                } else {
                    goto branch_no_71;
                }
                branch_yes_71:;
                {
                    PyObject *tmp_raise_type_18;
                    PyObject *tmp_raise_value_18;
                    PyObject *tmp_left_name_18;
                    PyObject *tmp_right_name_18;
                    PyObject *tmp_tuple_element_67;
                    PyObject *tmp_getattr_target_18;
                    PyObject *tmp_getattr_attr_18;
                    PyObject *tmp_getattr_default_18;
                    PyObject *tmp_source_name_73;
                    PyObject *tmp_type_arg_36;
                    tmp_raise_type_18 = PyExc_TypeError;
                    tmp_left_name_18 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_6__metaclass);
                    tmp_getattr_target_18 = tmp_QtGui$class_creation_6__metaclass;
                    tmp_getattr_attr_18 = const_str_plain___name__;
                    tmp_getattr_default_18 = const_str_angle_metaclass;
                    tmp_tuple_element_67 = BUILTIN_GETATTR(tmp_getattr_target_18, tmp_getattr_attr_18, tmp_getattr_default_18);
                    if (tmp_tuple_element_67 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 278;
                        type_description_2 = "o";
                        goto try_except_handler_53;
                    }
                    tmp_right_name_18 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_18, 0, tmp_tuple_element_67);
                    CHECK_OBJECT(tmp_QtGui$class_creation_6__prepared);
                    tmp_type_arg_36 = tmp_QtGui$class_creation_6__prepared;
                    tmp_source_name_73 = BUILTIN_TYPE1(tmp_type_arg_36);
                    assert(!(tmp_source_name_73 == NULL));
                    tmp_tuple_element_67 = LOOKUP_ATTRIBUTE(tmp_source_name_73, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_73);
                    if (tmp_tuple_element_67 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_18);

                        exception_lineno = 278;
                        type_description_2 = "o";
                        goto try_except_handler_53;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_18, 1, tmp_tuple_element_67);
                    tmp_raise_value_18 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_18, tmp_right_name_18);
                    Py_DECREF(tmp_right_name_18);
                    if (tmp_raise_value_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 278;
                        type_description_2 = "o";
                        goto try_except_handler_53;
                    }
                    exception_type = tmp_raise_type_18;
                    Py_INCREF(tmp_raise_type_18);
                    exception_value = tmp_raise_value_18;
                    exception_lineno = 278;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_53;
                }
                branch_no_71:;
            }
            goto branch_end_70;
            branch_no_70:;
            {
                PyObject *tmp_assign_source_150;
                tmp_assign_source_150 = PyDict_New();
                assert(tmp_QtGui$class_creation_6__prepared == NULL);
                tmp_QtGui$class_creation_6__prepared = tmp_assign_source_150;
            }
            branch_end_70:;
        }
        {
            PyObject *tmp_set_locals_18;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__prepared);
            tmp_set_locals_18 = tmp_QtGui$class_creation_6__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_278 = tmp_set_locals_18;
            Py_INCREF(tmp_set_locals_18);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_278, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 278;
            type_description_2 = "o";
            goto try_except_handler_55;
        }
        tmp_dictset_value = const_str_digest_e4eb3d0ee268186f51ad5b16de16b65c;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_278, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 278;
            type_description_2 = "o";
            goto try_except_handler_55;
        }
        {
            nuitka_bool tmp_condition_result_109;
            PyObject *tmp_compexpr_left_18;
            PyObject *tmp_compexpr_right_18;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases);
            tmp_compexpr_left_18 = tmp_QtGui$class_creation_6__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases_orig);
            tmp_compexpr_right_18 = tmp_QtGui$class_creation_6__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_55;
            }
            tmp_condition_result_109 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_109 == NUITKA_BOOL_TRUE) {
                goto branch_yes_72;
            } else {
                goto branch_no_72;
            }
            branch_yes_72:;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_6__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_278, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_55;
            }
            branch_no_72:;
        }
        {
            PyObject *tmp_assign_source_151;
            PyObject *tmp_called_name_36;
            PyObject *tmp_args_name_35;
            PyObject *tmp_tuple_element_68;
            PyObject *tmp_kw_name_35;
            CHECK_OBJECT(tmp_QtGui$class_creation_6__metaclass);
            tmp_called_name_36 = tmp_QtGui$class_creation_6__metaclass;
            tmp_tuple_element_68 = const_str_plain_QPainter;
            tmp_args_name_35 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_68);
            PyTuple_SET_ITEM(tmp_args_name_35, 0, tmp_tuple_element_68);
            CHECK_OBJECT(tmp_QtGui$class_creation_6__bases);
            tmp_tuple_element_68 = tmp_QtGui$class_creation_6__bases;
            Py_INCREF(tmp_tuple_element_68);
            PyTuple_SET_ITEM(tmp_args_name_35, 1, tmp_tuple_element_68);
            tmp_tuple_element_68 = locals_PyQt5$uic$Compiler$qtproxies_278;
            Py_INCREF(tmp_tuple_element_68);
            PyTuple_SET_ITEM(tmp_args_name_35, 2, tmp_tuple_element_68);
            CHECK_OBJECT(tmp_QtGui$class_creation_6__class_decl_dict);
            tmp_kw_name_35 = tmp_QtGui$class_creation_6__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 278;
            tmp_assign_source_151 = CALL_FUNCTION(tmp_called_name_36, tmp_args_name_35, tmp_kw_name_35);
            Py_DECREF(tmp_args_name_35);
            if (tmp_assign_source_151 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_2 = "o";
                goto try_except_handler_55;
            }
            assert(outline_17_var___class__ == NULL);
            outline_17_var___class__ = tmp_assign_source_151;
        }
        CHECK_OBJECT(outline_17_var___class__);
        tmp_dictset_value = outline_17_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_55;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_55:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_278);
        locals_PyQt5$uic$Compiler$qtproxies_278 = NULL;
        goto try_return_handler_54;
        // Exception handler code:
        try_except_handler_55:;
        exception_keeper_type_50 = exception_type;
        exception_keeper_value_50 = exception_value;
        exception_keeper_tb_50 = exception_tb;
        exception_keeper_lineno_50 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_278);
        locals_PyQt5$uic$Compiler$qtproxies_278 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_50;
        exception_value = exception_keeper_value_50;
        exception_tb = exception_keeper_tb_50;
        exception_lineno = exception_keeper_lineno_50;

        goto try_except_handler_54;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_54:;
        CHECK_OBJECT((PyObject *)outline_17_var___class__);
        Py_DECREF(outline_17_var___class__);
        outline_17_var___class__ = NULL;

        goto outline_result_18;
        // Exception handler code:
        try_except_handler_54:;
        exception_keeper_type_51 = exception_type;
        exception_keeper_value_51 = exception_value;
        exception_keeper_tb_51 = exception_tb;
        exception_keeper_lineno_51 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_51;
        exception_value = exception_keeper_value_51;
        exception_tb = exception_keeper_tb_51;
        exception_lineno = exception_keeper_lineno_51;

        goto outline_exception_18;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_18:;
        exception_lineno = 278;
        goto try_except_handler_53;
        outline_result_18:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QPainter, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 278;
            type_description_2 = "o";
            goto try_except_handler_53;
        }
        goto try_end_18;
        // Exception handler code:
        try_except_handler_53:;
        exception_keeper_type_52 = exception_type;
        exception_keeper_value_52 = exception_value;
        exception_keeper_tb_52 = exception_tb;
        exception_keeper_lineno_52 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_6__bases_orig);
        tmp_QtGui$class_creation_6__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_6__bases);
        tmp_QtGui$class_creation_6__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_6__class_decl_dict);
        tmp_QtGui$class_creation_6__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_6__metaclass);
        tmp_QtGui$class_creation_6__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_6__prepared);
        tmp_QtGui$class_creation_6__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_52;
        exception_value = exception_keeper_value_52;
        exception_tb = exception_keeper_tb_52;
        exception_lineno = exception_keeper_lineno_52;

        goto frame_exception_exit_10;
        // End of try:
        try_end_18:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_6__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_6__bases_orig);
        tmp_QtGui$class_creation_6__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_6__bases);
        Py_DECREF(tmp_QtGui$class_creation_6__bases);
        tmp_QtGui$class_creation_6__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_6__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_6__class_decl_dict);
        tmp_QtGui$class_creation_6__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_6__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_6__metaclass);
        tmp_QtGui$class_creation_6__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_6__prepared);
        Py_DECREF(tmp_QtGui$class_creation_6__prepared);
        tmp_QtGui$class_creation_6__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_152;
            PyObject *tmp_tuple_element_69;
            PyObject *tmp_mvar_value_21;
            tmp_tuple_element_69 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_69 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_21 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_21 == NULL)) {
                        tmp_mvar_value_21 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_21 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 279;
                        type_description_2 = "o";
                        goto try_except_handler_56;
                    }

                    tmp_tuple_element_69 = tmp_mvar_value_21;
                    Py_INCREF(tmp_tuple_element_69);
                }
            }

            tmp_assign_source_152 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_152, 0, tmp_tuple_element_69);
            assert(tmp_QtGui$class_creation_7__bases_orig == NULL);
            tmp_QtGui$class_creation_7__bases_orig = tmp_assign_source_152;
        }
        {
            PyObject *tmp_assign_source_153;
            PyObject *tmp_dircall_arg1_19;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases_orig);
            tmp_dircall_arg1_19 = tmp_QtGui$class_creation_7__bases_orig;
            Py_INCREF(tmp_dircall_arg1_19);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_19};
                tmp_assign_source_153 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_153 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            assert(tmp_QtGui$class_creation_7__bases == NULL);
            tmp_QtGui$class_creation_7__bases = tmp_assign_source_153;
        }
        {
            PyObject *tmp_assign_source_154;
            tmp_assign_source_154 = PyDict_New();
            assert(tmp_QtGui$class_creation_7__class_decl_dict == NULL);
            tmp_QtGui$class_creation_7__class_decl_dict = tmp_assign_source_154;
        }
        {
            PyObject *tmp_assign_source_155;
            PyObject *tmp_metaclass_name_19;
            nuitka_bool tmp_condition_result_110;
            PyObject *tmp_key_name_55;
            PyObject *tmp_dict_name_55;
            PyObject *tmp_dict_name_56;
            PyObject *tmp_key_name_56;
            nuitka_bool tmp_condition_result_111;
            int tmp_truth_name_19;
            PyObject *tmp_type_arg_37;
            PyObject *tmp_subscribed_name_19;
            PyObject *tmp_subscript_name_19;
            PyObject *tmp_bases_name_19;
            tmp_key_name_55 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__class_decl_dict);
            tmp_dict_name_55 = tmp_QtGui$class_creation_7__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_55, tmp_key_name_55);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            tmp_condition_result_110 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_110 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_38;
            } else {
                goto condexpr_false_38;
            }
            condexpr_true_38:;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__class_decl_dict);
            tmp_dict_name_56 = tmp_QtGui$class_creation_7__class_decl_dict;
            tmp_key_name_56 = const_str_plain_metaclass;
            tmp_metaclass_name_19 = DICT_GET_ITEM(tmp_dict_name_56, tmp_key_name_56);
            if (tmp_metaclass_name_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            goto condexpr_end_38;
            condexpr_false_38:;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases);
            tmp_truth_name_19 = CHECK_IF_TRUE(tmp_QtGui$class_creation_7__bases);
            if (tmp_truth_name_19 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            tmp_condition_result_111 = tmp_truth_name_19 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_111 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_39;
            } else {
                goto condexpr_false_39;
            }
            condexpr_true_39:;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases);
            tmp_subscribed_name_19 = tmp_QtGui$class_creation_7__bases;
            tmp_subscript_name_19 = const_int_0;
            tmp_type_arg_37 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_19, tmp_subscript_name_19, 0);
            if (tmp_type_arg_37 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            tmp_metaclass_name_19 = BUILTIN_TYPE1(tmp_type_arg_37);
            Py_DECREF(tmp_type_arg_37);
            if (tmp_metaclass_name_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            goto condexpr_end_39;
            condexpr_false_39:;
            tmp_metaclass_name_19 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_19);
            condexpr_end_39:;
            condexpr_end_38:;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases);
            tmp_bases_name_19 = tmp_QtGui$class_creation_7__bases;
            tmp_assign_source_155 = SELECT_METACLASS(tmp_metaclass_name_19, tmp_bases_name_19);
            Py_DECREF(tmp_metaclass_name_19);
            if (tmp_assign_source_155 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            assert(tmp_QtGui$class_creation_7__metaclass == NULL);
            tmp_QtGui$class_creation_7__metaclass = tmp_assign_source_155;
        }
        {
            nuitka_bool tmp_condition_result_112;
            PyObject *tmp_key_name_57;
            PyObject *tmp_dict_name_57;
            tmp_key_name_57 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__class_decl_dict);
            tmp_dict_name_57 = tmp_QtGui$class_creation_7__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_57, tmp_key_name_57);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            tmp_condition_result_112 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_112 == NUITKA_BOOL_TRUE) {
                goto branch_yes_73;
            } else {
                goto branch_no_73;
            }
            branch_yes_73:;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_7__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_56;
            }
            branch_no_73:;
        }
        {
            nuitka_bool tmp_condition_result_113;
            PyObject *tmp_source_name_74;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__metaclass);
            tmp_source_name_74 = tmp_QtGui$class_creation_7__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_74, const_str_plain___prepare__);
            tmp_condition_result_113 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_113 == NUITKA_BOOL_TRUE) {
                goto branch_yes_74;
            } else {
                goto branch_no_74;
            }
            branch_yes_74:;
            {
                PyObject *tmp_assign_source_156;
                PyObject *tmp_called_name_37;
                PyObject *tmp_source_name_75;
                PyObject *tmp_args_name_36;
                PyObject *tmp_tuple_element_70;
                PyObject *tmp_kw_name_36;
                CHECK_OBJECT(tmp_QtGui$class_creation_7__metaclass);
                tmp_source_name_75 = tmp_QtGui$class_creation_7__metaclass;
                tmp_called_name_37 = LOOKUP_ATTRIBUTE(tmp_source_name_75, const_str_plain___prepare__);
                if (tmp_called_name_37 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 279;
                    type_description_2 = "o";
                    goto try_except_handler_56;
                }
                tmp_tuple_element_70 = const_str_plain_QPalette;
                tmp_args_name_36 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_70);
                PyTuple_SET_ITEM(tmp_args_name_36, 0, tmp_tuple_element_70);
                CHECK_OBJECT(tmp_QtGui$class_creation_7__bases);
                tmp_tuple_element_70 = tmp_QtGui$class_creation_7__bases;
                Py_INCREF(tmp_tuple_element_70);
                PyTuple_SET_ITEM(tmp_args_name_36, 1, tmp_tuple_element_70);
                CHECK_OBJECT(tmp_QtGui$class_creation_7__class_decl_dict);
                tmp_kw_name_36 = tmp_QtGui$class_creation_7__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 279;
                tmp_assign_source_156 = CALL_FUNCTION(tmp_called_name_37, tmp_args_name_36, tmp_kw_name_36);
                Py_DECREF(tmp_called_name_37);
                Py_DECREF(tmp_args_name_36);
                if (tmp_assign_source_156 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 279;
                    type_description_2 = "o";
                    goto try_except_handler_56;
                }
                assert(tmp_QtGui$class_creation_7__prepared == NULL);
                tmp_QtGui$class_creation_7__prepared = tmp_assign_source_156;
            }
            {
                nuitka_bool tmp_condition_result_114;
                PyObject *tmp_operand_name_19;
                PyObject *tmp_source_name_76;
                CHECK_OBJECT(tmp_QtGui$class_creation_7__prepared);
                tmp_source_name_76 = tmp_QtGui$class_creation_7__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_76, const_str_plain___getitem__);
                tmp_operand_name_19 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_19);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 279;
                    type_description_2 = "o";
                    goto try_except_handler_56;
                }
                tmp_condition_result_114 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_114 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_75;
                } else {
                    goto branch_no_75;
                }
                branch_yes_75:;
                {
                    PyObject *tmp_raise_type_19;
                    PyObject *tmp_raise_value_19;
                    PyObject *tmp_left_name_19;
                    PyObject *tmp_right_name_19;
                    PyObject *tmp_tuple_element_71;
                    PyObject *tmp_getattr_target_19;
                    PyObject *tmp_getattr_attr_19;
                    PyObject *tmp_getattr_default_19;
                    PyObject *tmp_source_name_77;
                    PyObject *tmp_type_arg_38;
                    tmp_raise_type_19 = PyExc_TypeError;
                    tmp_left_name_19 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_7__metaclass);
                    tmp_getattr_target_19 = tmp_QtGui$class_creation_7__metaclass;
                    tmp_getattr_attr_19 = const_str_plain___name__;
                    tmp_getattr_default_19 = const_str_angle_metaclass;
                    tmp_tuple_element_71 = BUILTIN_GETATTR(tmp_getattr_target_19, tmp_getattr_attr_19, tmp_getattr_default_19);
                    if (tmp_tuple_element_71 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 279;
                        type_description_2 = "o";
                        goto try_except_handler_56;
                    }
                    tmp_right_name_19 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_19, 0, tmp_tuple_element_71);
                    CHECK_OBJECT(tmp_QtGui$class_creation_7__prepared);
                    tmp_type_arg_38 = tmp_QtGui$class_creation_7__prepared;
                    tmp_source_name_77 = BUILTIN_TYPE1(tmp_type_arg_38);
                    assert(!(tmp_source_name_77 == NULL));
                    tmp_tuple_element_71 = LOOKUP_ATTRIBUTE(tmp_source_name_77, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_77);
                    if (tmp_tuple_element_71 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_19);

                        exception_lineno = 279;
                        type_description_2 = "o";
                        goto try_except_handler_56;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_19, 1, tmp_tuple_element_71);
                    tmp_raise_value_19 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_19, tmp_right_name_19);
                    Py_DECREF(tmp_right_name_19);
                    if (tmp_raise_value_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 279;
                        type_description_2 = "o";
                        goto try_except_handler_56;
                    }
                    exception_type = tmp_raise_type_19;
                    Py_INCREF(tmp_raise_type_19);
                    exception_value = tmp_raise_value_19;
                    exception_lineno = 279;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_56;
                }
                branch_no_75:;
            }
            goto branch_end_74;
            branch_no_74:;
            {
                PyObject *tmp_assign_source_157;
                tmp_assign_source_157 = PyDict_New();
                assert(tmp_QtGui$class_creation_7__prepared == NULL);
                tmp_QtGui$class_creation_7__prepared = tmp_assign_source_157;
            }
            branch_end_74:;
        }
        {
            PyObject *tmp_set_locals_19;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__prepared);
            tmp_set_locals_19 = tmp_QtGui$class_creation_7__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_279 = tmp_set_locals_19;
            Py_INCREF(tmp_set_locals_19);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_279, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;
            type_description_2 = "o";
            goto try_except_handler_58;
        }
        tmp_dictset_value = const_str_digest_036450d673d90e4e404ec32ea5710f15;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_279, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;
            type_description_2 = "o";
            goto try_except_handler_58;
        }
        {
            nuitka_bool tmp_condition_result_115;
            PyObject *tmp_compexpr_left_19;
            PyObject *tmp_compexpr_right_19;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases);
            tmp_compexpr_left_19 = tmp_QtGui$class_creation_7__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases_orig);
            tmp_compexpr_right_19 = tmp_QtGui$class_creation_7__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_19, tmp_compexpr_right_19);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_58;
            }
            tmp_condition_result_115 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_115 == NUITKA_BOOL_TRUE) {
                goto branch_yes_76;
            } else {
                goto branch_no_76;
            }
            branch_yes_76:;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_7__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_279, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_58;
            }
            branch_no_76:;
        }
        {
            PyObject *tmp_assign_source_158;
            PyObject *tmp_called_name_38;
            PyObject *tmp_args_name_37;
            PyObject *tmp_tuple_element_72;
            PyObject *tmp_kw_name_37;
            CHECK_OBJECT(tmp_QtGui$class_creation_7__metaclass);
            tmp_called_name_38 = tmp_QtGui$class_creation_7__metaclass;
            tmp_tuple_element_72 = const_str_plain_QPalette;
            tmp_args_name_37 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_72);
            PyTuple_SET_ITEM(tmp_args_name_37, 0, tmp_tuple_element_72);
            CHECK_OBJECT(tmp_QtGui$class_creation_7__bases);
            tmp_tuple_element_72 = tmp_QtGui$class_creation_7__bases;
            Py_INCREF(tmp_tuple_element_72);
            PyTuple_SET_ITEM(tmp_args_name_37, 1, tmp_tuple_element_72);
            tmp_tuple_element_72 = locals_PyQt5$uic$Compiler$qtproxies_279;
            Py_INCREF(tmp_tuple_element_72);
            PyTuple_SET_ITEM(tmp_args_name_37, 2, tmp_tuple_element_72);
            CHECK_OBJECT(tmp_QtGui$class_creation_7__class_decl_dict);
            tmp_kw_name_37 = tmp_QtGui$class_creation_7__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 279;
            tmp_assign_source_158 = CALL_FUNCTION(tmp_called_name_38, tmp_args_name_37, tmp_kw_name_37);
            Py_DECREF(tmp_args_name_37);
            if (tmp_assign_source_158 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_2 = "o";
                goto try_except_handler_58;
            }
            assert(outline_18_var___class__ == NULL);
            outline_18_var___class__ = tmp_assign_source_158;
        }
        CHECK_OBJECT(outline_18_var___class__);
        tmp_dictset_value = outline_18_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_58;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_58:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_279);
        locals_PyQt5$uic$Compiler$qtproxies_279 = NULL;
        goto try_return_handler_57;
        // Exception handler code:
        try_except_handler_58:;
        exception_keeper_type_53 = exception_type;
        exception_keeper_value_53 = exception_value;
        exception_keeper_tb_53 = exception_tb;
        exception_keeper_lineno_53 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_279);
        locals_PyQt5$uic$Compiler$qtproxies_279 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_53;
        exception_value = exception_keeper_value_53;
        exception_tb = exception_keeper_tb_53;
        exception_lineno = exception_keeper_lineno_53;

        goto try_except_handler_57;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_57:;
        CHECK_OBJECT((PyObject *)outline_18_var___class__);
        Py_DECREF(outline_18_var___class__);
        outline_18_var___class__ = NULL;

        goto outline_result_19;
        // Exception handler code:
        try_except_handler_57:;
        exception_keeper_type_54 = exception_type;
        exception_keeper_value_54 = exception_value;
        exception_keeper_tb_54 = exception_tb;
        exception_keeper_lineno_54 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_54;
        exception_value = exception_keeper_value_54;
        exception_tb = exception_keeper_tb_54;
        exception_lineno = exception_keeper_lineno_54;

        goto outline_exception_19;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_19:;
        exception_lineno = 279;
        goto try_except_handler_56;
        outline_result_19:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QPalette, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;
            type_description_2 = "o";
            goto try_except_handler_56;
        }
        goto try_end_19;
        // Exception handler code:
        try_except_handler_56:;
        exception_keeper_type_55 = exception_type;
        exception_keeper_value_55 = exception_value;
        exception_keeper_tb_55 = exception_tb;
        exception_keeper_lineno_55 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_7__bases_orig);
        tmp_QtGui$class_creation_7__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_7__bases);
        tmp_QtGui$class_creation_7__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_7__class_decl_dict);
        tmp_QtGui$class_creation_7__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_7__metaclass);
        tmp_QtGui$class_creation_7__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_7__prepared);
        tmp_QtGui$class_creation_7__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_55;
        exception_value = exception_keeper_value_55;
        exception_tb = exception_keeper_tb_55;
        exception_lineno = exception_keeper_lineno_55;

        goto frame_exception_exit_10;
        // End of try:
        try_end_19:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_7__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_7__bases_orig);
        tmp_QtGui$class_creation_7__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_7__bases);
        Py_DECREF(tmp_QtGui$class_creation_7__bases);
        tmp_QtGui$class_creation_7__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_7__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_7__class_decl_dict);
        tmp_QtGui$class_creation_7__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_7__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_7__metaclass);
        tmp_QtGui$class_creation_7__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_7__prepared);
        Py_DECREF(tmp_QtGui$class_creation_7__prepared);
        tmp_QtGui$class_creation_7__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_159;
            PyObject *tmp_tuple_element_73;
            PyObject *tmp_mvar_value_22;
            tmp_tuple_element_73 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_ProxyClass);

            if (tmp_tuple_element_73 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_22 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_22 == NULL)) {
                        tmp_mvar_value_22 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_22 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 280;
                        type_description_2 = "o";
                        goto try_except_handler_59;
                    }

                    tmp_tuple_element_73 = tmp_mvar_value_22;
                    Py_INCREF(tmp_tuple_element_73);
                }
            }

            tmp_assign_source_159 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_159, 0, tmp_tuple_element_73);
            assert(tmp_QtGui$class_creation_8__bases_orig == NULL);
            tmp_QtGui$class_creation_8__bases_orig = tmp_assign_source_159;
        }
        {
            PyObject *tmp_assign_source_160;
            PyObject *tmp_dircall_arg1_20;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases_orig);
            tmp_dircall_arg1_20 = tmp_QtGui$class_creation_8__bases_orig;
            Py_INCREF(tmp_dircall_arg1_20);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_20};
                tmp_assign_source_160 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_160 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            assert(tmp_QtGui$class_creation_8__bases == NULL);
            tmp_QtGui$class_creation_8__bases = tmp_assign_source_160;
        }
        {
            PyObject *tmp_assign_source_161;
            tmp_assign_source_161 = PyDict_New();
            assert(tmp_QtGui$class_creation_8__class_decl_dict == NULL);
            tmp_QtGui$class_creation_8__class_decl_dict = tmp_assign_source_161;
        }
        {
            PyObject *tmp_assign_source_162;
            PyObject *tmp_metaclass_name_20;
            nuitka_bool tmp_condition_result_116;
            PyObject *tmp_key_name_58;
            PyObject *tmp_dict_name_58;
            PyObject *tmp_dict_name_59;
            PyObject *tmp_key_name_59;
            nuitka_bool tmp_condition_result_117;
            int tmp_truth_name_20;
            PyObject *tmp_type_arg_39;
            PyObject *tmp_subscribed_name_20;
            PyObject *tmp_subscript_name_20;
            PyObject *tmp_bases_name_20;
            tmp_key_name_58 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__class_decl_dict);
            tmp_dict_name_58 = tmp_QtGui$class_creation_8__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_58, tmp_key_name_58);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            tmp_condition_result_116 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_116 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_40;
            } else {
                goto condexpr_false_40;
            }
            condexpr_true_40:;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__class_decl_dict);
            tmp_dict_name_59 = tmp_QtGui$class_creation_8__class_decl_dict;
            tmp_key_name_59 = const_str_plain_metaclass;
            tmp_metaclass_name_20 = DICT_GET_ITEM(tmp_dict_name_59, tmp_key_name_59);
            if (tmp_metaclass_name_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            goto condexpr_end_40;
            condexpr_false_40:;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases);
            tmp_truth_name_20 = CHECK_IF_TRUE(tmp_QtGui$class_creation_8__bases);
            if (tmp_truth_name_20 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            tmp_condition_result_117 = tmp_truth_name_20 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_117 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_41;
            } else {
                goto condexpr_false_41;
            }
            condexpr_true_41:;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases);
            tmp_subscribed_name_20 = tmp_QtGui$class_creation_8__bases;
            tmp_subscript_name_20 = const_int_0;
            tmp_type_arg_39 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_20, tmp_subscript_name_20, 0);
            if (tmp_type_arg_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            tmp_metaclass_name_20 = BUILTIN_TYPE1(tmp_type_arg_39);
            Py_DECREF(tmp_type_arg_39);
            if (tmp_metaclass_name_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            goto condexpr_end_41;
            condexpr_false_41:;
            tmp_metaclass_name_20 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_20);
            condexpr_end_41:;
            condexpr_end_40:;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases);
            tmp_bases_name_20 = tmp_QtGui$class_creation_8__bases;
            tmp_assign_source_162 = SELECT_METACLASS(tmp_metaclass_name_20, tmp_bases_name_20);
            Py_DECREF(tmp_metaclass_name_20);
            if (tmp_assign_source_162 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            assert(tmp_QtGui$class_creation_8__metaclass == NULL);
            tmp_QtGui$class_creation_8__metaclass = tmp_assign_source_162;
        }
        {
            nuitka_bool tmp_condition_result_118;
            PyObject *tmp_key_name_60;
            PyObject *tmp_dict_name_60;
            tmp_key_name_60 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__class_decl_dict);
            tmp_dict_name_60 = tmp_QtGui$class_creation_8__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_60, tmp_key_name_60);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            tmp_condition_result_118 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_118 == NUITKA_BOOL_TRUE) {
                goto branch_yes_77;
            } else {
                goto branch_no_77;
            }
            branch_yes_77:;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__class_decl_dict);
            tmp_dictdel_dict = tmp_QtGui$class_creation_8__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_59;
            }
            branch_no_77:;
        }
        {
            nuitka_bool tmp_condition_result_119;
            PyObject *tmp_source_name_78;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__metaclass);
            tmp_source_name_78 = tmp_QtGui$class_creation_8__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_78, const_str_plain___prepare__);
            tmp_condition_result_119 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_119 == NUITKA_BOOL_TRUE) {
                goto branch_yes_78;
            } else {
                goto branch_no_78;
            }
            branch_yes_78:;
            {
                PyObject *tmp_assign_source_163;
                PyObject *tmp_called_name_39;
                PyObject *tmp_source_name_79;
                PyObject *tmp_args_name_38;
                PyObject *tmp_tuple_element_74;
                PyObject *tmp_kw_name_38;
                CHECK_OBJECT(tmp_QtGui$class_creation_8__metaclass);
                tmp_source_name_79 = tmp_QtGui$class_creation_8__metaclass;
                tmp_called_name_39 = LOOKUP_ATTRIBUTE(tmp_source_name_79, const_str_plain___prepare__);
                if (tmp_called_name_39 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 280;
                    type_description_2 = "o";
                    goto try_except_handler_59;
                }
                tmp_tuple_element_74 = const_str_plain_QFont;
                tmp_args_name_38 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_74);
                PyTuple_SET_ITEM(tmp_args_name_38, 0, tmp_tuple_element_74);
                CHECK_OBJECT(tmp_QtGui$class_creation_8__bases);
                tmp_tuple_element_74 = tmp_QtGui$class_creation_8__bases;
                Py_INCREF(tmp_tuple_element_74);
                PyTuple_SET_ITEM(tmp_args_name_38, 1, tmp_tuple_element_74);
                CHECK_OBJECT(tmp_QtGui$class_creation_8__class_decl_dict);
                tmp_kw_name_38 = tmp_QtGui$class_creation_8__class_decl_dict;
                frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 280;
                tmp_assign_source_163 = CALL_FUNCTION(tmp_called_name_39, tmp_args_name_38, tmp_kw_name_38);
                Py_DECREF(tmp_called_name_39);
                Py_DECREF(tmp_args_name_38);
                if (tmp_assign_source_163 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 280;
                    type_description_2 = "o";
                    goto try_except_handler_59;
                }
                assert(tmp_QtGui$class_creation_8__prepared == NULL);
                tmp_QtGui$class_creation_8__prepared = tmp_assign_source_163;
            }
            {
                nuitka_bool tmp_condition_result_120;
                PyObject *tmp_operand_name_20;
                PyObject *tmp_source_name_80;
                CHECK_OBJECT(tmp_QtGui$class_creation_8__prepared);
                tmp_source_name_80 = tmp_QtGui$class_creation_8__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_80, const_str_plain___getitem__);
                tmp_operand_name_20 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_20);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 280;
                    type_description_2 = "o";
                    goto try_except_handler_59;
                }
                tmp_condition_result_120 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_120 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_79;
                } else {
                    goto branch_no_79;
                }
                branch_yes_79:;
                {
                    PyObject *tmp_raise_type_20;
                    PyObject *tmp_raise_value_20;
                    PyObject *tmp_left_name_20;
                    PyObject *tmp_right_name_20;
                    PyObject *tmp_tuple_element_75;
                    PyObject *tmp_getattr_target_20;
                    PyObject *tmp_getattr_attr_20;
                    PyObject *tmp_getattr_default_20;
                    PyObject *tmp_source_name_81;
                    PyObject *tmp_type_arg_40;
                    tmp_raise_type_20 = PyExc_TypeError;
                    tmp_left_name_20 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtGui$class_creation_8__metaclass);
                    tmp_getattr_target_20 = tmp_QtGui$class_creation_8__metaclass;
                    tmp_getattr_attr_20 = const_str_plain___name__;
                    tmp_getattr_default_20 = const_str_angle_metaclass;
                    tmp_tuple_element_75 = BUILTIN_GETATTR(tmp_getattr_target_20, tmp_getattr_attr_20, tmp_getattr_default_20);
                    if (tmp_tuple_element_75 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 280;
                        type_description_2 = "o";
                        goto try_except_handler_59;
                    }
                    tmp_right_name_20 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_20, 0, tmp_tuple_element_75);
                    CHECK_OBJECT(tmp_QtGui$class_creation_8__prepared);
                    tmp_type_arg_40 = tmp_QtGui$class_creation_8__prepared;
                    tmp_source_name_81 = BUILTIN_TYPE1(tmp_type_arg_40);
                    assert(!(tmp_source_name_81 == NULL));
                    tmp_tuple_element_75 = LOOKUP_ATTRIBUTE(tmp_source_name_81, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_81);
                    if (tmp_tuple_element_75 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_20);

                        exception_lineno = 280;
                        type_description_2 = "o";
                        goto try_except_handler_59;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_20, 1, tmp_tuple_element_75);
                    tmp_raise_value_20 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_20, tmp_right_name_20);
                    Py_DECREF(tmp_right_name_20);
                    if (tmp_raise_value_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 280;
                        type_description_2 = "o";
                        goto try_except_handler_59;
                    }
                    exception_type = tmp_raise_type_20;
                    Py_INCREF(tmp_raise_type_20);
                    exception_value = tmp_raise_value_20;
                    exception_lineno = 280;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_59;
                }
                branch_no_79:;
            }
            goto branch_end_78;
            branch_no_78:;
            {
                PyObject *tmp_assign_source_164;
                tmp_assign_source_164 = PyDict_New();
                assert(tmp_QtGui$class_creation_8__prepared == NULL);
                tmp_QtGui$class_creation_8__prepared = tmp_assign_source_164;
            }
            branch_end_78:;
        }
        {
            PyObject *tmp_set_locals_20;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__prepared);
            tmp_set_locals_20 = tmp_QtGui$class_creation_8__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_280 = tmp_set_locals_20;
            Py_INCREF(tmp_set_locals_20);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_280, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 280;
            type_description_2 = "o";
            goto try_except_handler_61;
        }
        tmp_dictset_value = const_str_digest_0b9be081086c46fe98cca54cb8354bb9;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_280, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 280;
            type_description_2 = "o";
            goto try_except_handler_61;
        }
        {
            nuitka_bool tmp_condition_result_121;
            PyObject *tmp_compexpr_left_20;
            PyObject *tmp_compexpr_right_20;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases);
            tmp_compexpr_left_20 = tmp_QtGui$class_creation_8__bases;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases_orig);
            tmp_compexpr_right_20 = tmp_QtGui$class_creation_8__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_20, tmp_compexpr_right_20);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_61;
            }
            tmp_condition_result_121 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_121 == NUITKA_BOOL_TRUE) {
                goto branch_yes_80;
            } else {
                goto branch_no_80;
            }
            branch_yes_80:;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases_orig);
            tmp_dictset_value = tmp_QtGui$class_creation_8__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_280, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_61;
            }
            branch_no_80:;
        }
        {
            PyObject *tmp_assign_source_165;
            PyObject *tmp_called_name_40;
            PyObject *tmp_args_name_39;
            PyObject *tmp_tuple_element_76;
            PyObject *tmp_kw_name_39;
            CHECK_OBJECT(tmp_QtGui$class_creation_8__metaclass);
            tmp_called_name_40 = tmp_QtGui$class_creation_8__metaclass;
            tmp_tuple_element_76 = const_str_plain_QFont;
            tmp_args_name_39 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_76);
            PyTuple_SET_ITEM(tmp_args_name_39, 0, tmp_tuple_element_76);
            CHECK_OBJECT(tmp_QtGui$class_creation_8__bases);
            tmp_tuple_element_76 = tmp_QtGui$class_creation_8__bases;
            Py_INCREF(tmp_tuple_element_76);
            PyTuple_SET_ITEM(tmp_args_name_39, 1, tmp_tuple_element_76);
            tmp_tuple_element_76 = locals_PyQt5$uic$Compiler$qtproxies_280;
            Py_INCREF(tmp_tuple_element_76);
            PyTuple_SET_ITEM(tmp_args_name_39, 2, tmp_tuple_element_76);
            CHECK_OBJECT(tmp_QtGui$class_creation_8__class_decl_dict);
            tmp_kw_name_39 = tmp_QtGui$class_creation_8__class_decl_dict;
            frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame.f_lineno = 280;
            tmp_assign_source_165 = CALL_FUNCTION(tmp_called_name_40, tmp_args_name_39, tmp_kw_name_39);
            Py_DECREF(tmp_args_name_39);
            if (tmp_assign_source_165 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_2 = "o";
                goto try_except_handler_61;
            }
            assert(outline_19_var___class__ == NULL);
            outline_19_var___class__ = tmp_assign_source_165;
        }
        CHECK_OBJECT(outline_19_var___class__);
        tmp_dictset_value = outline_19_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_61;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_61:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_280);
        locals_PyQt5$uic$Compiler$qtproxies_280 = NULL;
        goto try_return_handler_60;
        // Exception handler code:
        try_except_handler_61:;
        exception_keeper_type_56 = exception_type;
        exception_keeper_value_56 = exception_value;
        exception_keeper_tb_56 = exception_tb;
        exception_keeper_lineno_56 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_280);
        locals_PyQt5$uic$Compiler$qtproxies_280 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_56;
        exception_value = exception_keeper_value_56;
        exception_tb = exception_keeper_tb_56;
        exception_lineno = exception_keeper_lineno_56;

        goto try_except_handler_60;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_60:;
        CHECK_OBJECT((PyObject *)outline_19_var___class__);
        Py_DECREF(outline_19_var___class__);
        outline_19_var___class__ = NULL;

        goto outline_result_20;
        // Exception handler code:
        try_except_handler_60:;
        exception_keeper_type_57 = exception_type;
        exception_keeper_value_57 = exception_value;
        exception_keeper_tb_57 = exception_tb;
        exception_keeper_lineno_57 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_57;
        exception_value = exception_keeper_value_57;
        exception_tb = exception_keeper_tb_57;
        exception_lineno = exception_keeper_lineno_57;

        goto outline_exception_20;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_20:;
        exception_lineno = 280;
        goto try_except_handler_59;
        outline_result_20:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain_QFont, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 280;
            type_description_2 = "o";
            goto try_except_handler_59;
        }
        goto try_end_20;
        // Exception handler code:
        try_except_handler_59:;
        exception_keeper_type_58 = exception_type;
        exception_keeper_value_58 = exception_value;
        exception_keeper_tb_58 = exception_tb;
        exception_keeper_lineno_58 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtGui$class_creation_8__bases_orig);
        tmp_QtGui$class_creation_8__bases_orig = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_8__bases);
        tmp_QtGui$class_creation_8__bases = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_8__class_decl_dict);
        tmp_QtGui$class_creation_8__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_8__metaclass);
        tmp_QtGui$class_creation_8__metaclass = NULL;

        Py_XDECREF(tmp_QtGui$class_creation_8__prepared);
        tmp_QtGui$class_creation_8__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_58;
        exception_value = exception_keeper_value_58;
        exception_tb = exception_keeper_tb_58;
        exception_lineno = exception_keeper_lineno_58;

        goto frame_exception_exit_10;
        // End of try:
        try_end_20:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d77951b0e8e96dc949c573a17a62cabd_10);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_10;

        frame_exception_exit_10:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d77951b0e8e96dc949c573a17a62cabd_10);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_d77951b0e8e96dc949c573a17a62cabd_10, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_d77951b0e8e96dc949c573a17a62cabd_10->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_d77951b0e8e96dc949c573a17a62cabd_10, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_d77951b0e8e96dc949c573a17a62cabd_10,
            type_description_2,
            outline_10_var___class__
        );


        // Release cached frame.
        if (frame_d77951b0e8e96dc949c573a17a62cabd_10 == cache_frame_d77951b0e8e96dc949c573a17a62cabd_10) {
            Py_DECREF(frame_d77951b0e8e96dc949c573a17a62cabd_10);
        }
        cache_frame_d77951b0e8e96dc949c573a17a62cabd_10 = NULL;

        assertFrameObject(frame_d77951b0e8e96dc949c573a17a62cabd_10);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_9;

        frame_no_exception_10:;
        goto skip_nested_handling_10;
        nested_frame_exit_9:;

        goto try_except_handler_34;
        skip_nested_handling_10:;
        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_8__bases_orig);
        Py_DECREF(tmp_QtGui$class_creation_8__bases_orig);
        tmp_QtGui$class_creation_8__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_8__bases);
        Py_DECREF(tmp_QtGui$class_creation_8__bases);
        tmp_QtGui$class_creation_8__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_8__class_decl_dict);
        Py_DECREF(tmp_QtGui$class_creation_8__class_decl_dict);
        tmp_QtGui$class_creation_8__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_8__metaclass);
        Py_DECREF(tmp_QtGui$class_creation_8__metaclass);
        tmp_QtGui$class_creation_8__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtGui$class_creation_8__prepared);
        Py_DECREF(tmp_QtGui$class_creation_8__prepared);
        tmp_QtGui$class_creation_8__prepared = NULL;

        {
            nuitka_bool tmp_condition_result_122;
            PyObject *tmp_compexpr_left_21;
            PyObject *tmp_compexpr_right_21;
            CHECK_OBJECT(tmp_class_creation_8__bases);
            tmp_compexpr_left_21 = tmp_class_creation_8__bases;
            CHECK_OBJECT(tmp_class_creation_8__bases_orig);
            tmp_compexpr_right_21 = tmp_class_creation_8__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_21, tmp_compexpr_right_21);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;

                goto try_except_handler_34;
            }
            tmp_condition_result_122 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_122 == NUITKA_BOOL_TRUE) {
                goto branch_yes_81;
            } else {
                goto branch_no_81;
            }
            branch_yes_81:;
            CHECK_OBJECT(tmp_class_creation_8__bases_orig);
            tmp_dictset_value = tmp_class_creation_8__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_270, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;

                goto try_except_handler_34;
            }
            branch_no_81:;
        }
        {
            PyObject *tmp_assign_source_166;
            PyObject *tmp_called_name_41;
            PyObject *tmp_args_name_40;
            PyObject *tmp_tuple_element_77;
            PyObject *tmp_kw_name_40;
            CHECK_OBJECT(tmp_class_creation_8__metaclass);
            tmp_called_name_41 = tmp_class_creation_8__metaclass;
            tmp_tuple_element_77 = const_str_plain_QtGui;
            tmp_args_name_40 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_77);
            PyTuple_SET_ITEM(tmp_args_name_40, 0, tmp_tuple_element_77);
            CHECK_OBJECT(tmp_class_creation_8__bases);
            tmp_tuple_element_77 = tmp_class_creation_8__bases;
            Py_INCREF(tmp_tuple_element_77);
            PyTuple_SET_ITEM(tmp_args_name_40, 1, tmp_tuple_element_77);
            tmp_tuple_element_77 = locals_PyQt5$uic$Compiler$qtproxies_270;
            Py_INCREF(tmp_tuple_element_77);
            PyTuple_SET_ITEM(tmp_args_name_40, 2, tmp_tuple_element_77);
            CHECK_OBJECT(tmp_class_creation_8__class_decl_dict);
            tmp_kw_name_40 = tmp_class_creation_8__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 270;
            tmp_assign_source_166 = CALL_FUNCTION(tmp_called_name_41, tmp_args_name_40, tmp_kw_name_40);
            Py_DECREF(tmp_args_name_40);
            if (tmp_assign_source_166 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;

                goto try_except_handler_34;
            }
            assert(outline_10_var___class__ == NULL);
            outline_10_var___class__ = tmp_assign_source_166;
        }
        CHECK_OBJECT(outline_10_var___class__);
        tmp_assign_source_102 = outline_10_var___class__;
        Py_INCREF(tmp_assign_source_102);
        goto try_return_handler_34;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_34:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_270);
        locals_PyQt5$uic$Compiler$qtproxies_270 = NULL;
        goto try_return_handler_33;
        // Exception handler code:
        try_except_handler_34:;
        exception_keeper_type_59 = exception_type;
        exception_keeper_value_59 = exception_value;
        exception_keeper_tb_59 = exception_tb;
        exception_keeper_lineno_59 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_270);
        locals_PyQt5$uic$Compiler$qtproxies_270 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_59;
        exception_value = exception_keeper_value_59;
        exception_tb = exception_keeper_tb_59;
        exception_lineno = exception_keeper_lineno_59;

        goto try_except_handler_33;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_33:;
        CHECK_OBJECT((PyObject *)outline_10_var___class__);
        Py_DECREF(outline_10_var___class__);
        outline_10_var___class__ = NULL;

        goto outline_result_11;
        // Exception handler code:
        try_except_handler_33:;
        exception_keeper_type_60 = exception_type;
        exception_keeper_value_60 = exception_value;
        exception_keeper_tb_60 = exception_tb;
        exception_keeper_lineno_60 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_60;
        exception_value = exception_keeper_value_60;
        exception_tb = exception_keeper_tb_60;
        exception_lineno = exception_keeper_lineno_60;

        goto outline_exception_11;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_11:;
        exception_lineno = 270;
        goto try_except_handler_32;
        outline_result_11:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtGui, tmp_assign_source_102);
    }
    goto try_end_21;
    // Exception handler code:
    try_except_handler_32:;
    exception_keeper_type_61 = exception_type;
    exception_keeper_value_61 = exception_value;
    exception_keeper_tb_61 = exception_tb;
    exception_keeper_lineno_61 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_8__bases_orig);
    tmp_class_creation_8__bases_orig = NULL;

    Py_XDECREF(tmp_class_creation_8__bases);
    tmp_class_creation_8__bases = NULL;

    Py_XDECREF(tmp_class_creation_8__class_decl_dict);
    tmp_class_creation_8__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_8__metaclass);
    tmp_class_creation_8__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_8__prepared);
    tmp_class_creation_8__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_61;
    exception_value = exception_keeper_value_61;
    exception_tb = exception_keeper_tb_61;
    exception_lineno = exception_keeper_lineno_61;

    goto frame_exception_exit_1;
    // End of try:
    try_end_21:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_8__bases_orig);
    Py_DECREF(tmp_class_creation_8__bases_orig);
    tmp_class_creation_8__bases_orig = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_8__bases);
    Py_DECREF(tmp_class_creation_8__bases);
    tmp_class_creation_8__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_8__class_decl_dict);
    Py_DECREF(tmp_class_creation_8__class_decl_dict);
    tmp_class_creation_8__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_8__metaclass);
    Py_DECREF(tmp_class_creation_8__metaclass);
    tmp_class_creation_8__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_8__prepared);
    Py_DECREF(tmp_class_creation_8__prepared);
    tmp_class_creation_8__prepared = NULL;

    {
        PyObject *tmp_assign_source_167;
        tmp_assign_source_167 = const_tuple_94adea4bc61b9c247b3e79eab2223f75_tuple;
        UPDATE_STRING_DICT0(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain__qwidgets, tmp_assign_source_167);
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_168;
        PyObject *tmp_tuple_element_78;
        PyObject *tmp_mvar_value_23;
        tmp_mvar_value_23 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);

        if (unlikely(tmp_mvar_value_23 == NULL)) {
            tmp_mvar_value_23 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyNamespace);
        }

        if (tmp_mvar_value_23 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1432 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 288;

            goto try_except_handler_62;
        }

        tmp_tuple_element_78 = tmp_mvar_value_23;
        tmp_assign_source_168 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_78);
        PyTuple_SET_ITEM(tmp_assign_source_168, 0, tmp_tuple_element_78);
        assert(tmp_class_creation_9__bases_orig == NULL);
        tmp_class_creation_9__bases_orig = tmp_assign_source_168;
    }
    {
        PyObject *tmp_assign_source_169;
        PyObject *tmp_dircall_arg1_21;
        CHECK_OBJECT(tmp_class_creation_9__bases_orig);
        tmp_dircall_arg1_21 = tmp_class_creation_9__bases_orig;
        Py_INCREF(tmp_dircall_arg1_21);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_21};
            tmp_assign_source_169 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        assert(tmp_class_creation_9__bases == NULL);
        tmp_class_creation_9__bases = tmp_assign_source_169;
    }
    {
        PyObject *tmp_assign_source_170;
        tmp_assign_source_170 = PyDict_New();
        assert(tmp_class_creation_9__class_decl_dict == NULL);
        tmp_class_creation_9__class_decl_dict = tmp_assign_source_170;
    }
    {
        PyObject *tmp_assign_source_171;
        PyObject *tmp_metaclass_name_21;
        nuitka_bool tmp_condition_result_123;
        PyObject *tmp_key_name_61;
        PyObject *tmp_dict_name_61;
        PyObject *tmp_dict_name_62;
        PyObject *tmp_key_name_62;
        nuitka_bool tmp_condition_result_124;
        int tmp_truth_name_21;
        PyObject *tmp_type_arg_41;
        PyObject *tmp_subscribed_name_21;
        PyObject *tmp_subscript_name_21;
        PyObject *tmp_bases_name_21;
        tmp_key_name_61 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_9__class_decl_dict);
        tmp_dict_name_61 = tmp_class_creation_9__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_61, tmp_key_name_61);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        tmp_condition_result_123 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_123 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_42;
        } else {
            goto condexpr_false_42;
        }
        condexpr_true_42:;
        CHECK_OBJECT(tmp_class_creation_9__class_decl_dict);
        tmp_dict_name_62 = tmp_class_creation_9__class_decl_dict;
        tmp_key_name_62 = const_str_plain_metaclass;
        tmp_metaclass_name_21 = DICT_GET_ITEM(tmp_dict_name_62, tmp_key_name_62);
        if (tmp_metaclass_name_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        goto condexpr_end_42;
        condexpr_false_42:;
        CHECK_OBJECT(tmp_class_creation_9__bases);
        tmp_truth_name_21 = CHECK_IF_TRUE(tmp_class_creation_9__bases);
        if (tmp_truth_name_21 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        tmp_condition_result_124 = tmp_truth_name_21 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_124 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_43;
        } else {
            goto condexpr_false_43;
        }
        condexpr_true_43:;
        CHECK_OBJECT(tmp_class_creation_9__bases);
        tmp_subscribed_name_21 = tmp_class_creation_9__bases;
        tmp_subscript_name_21 = const_int_0;
        tmp_type_arg_41 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_21, tmp_subscript_name_21, 0);
        if (tmp_type_arg_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        tmp_metaclass_name_21 = BUILTIN_TYPE1(tmp_type_arg_41);
        Py_DECREF(tmp_type_arg_41);
        if (tmp_metaclass_name_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        goto condexpr_end_43;
        condexpr_false_43:;
        tmp_metaclass_name_21 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_21);
        condexpr_end_43:;
        condexpr_end_42:;
        CHECK_OBJECT(tmp_class_creation_9__bases);
        tmp_bases_name_21 = tmp_class_creation_9__bases;
        tmp_assign_source_171 = SELECT_METACLASS(tmp_metaclass_name_21, tmp_bases_name_21);
        Py_DECREF(tmp_metaclass_name_21);
        if (tmp_assign_source_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        assert(tmp_class_creation_9__metaclass == NULL);
        tmp_class_creation_9__metaclass = tmp_assign_source_171;
    }
    {
        nuitka_bool tmp_condition_result_125;
        PyObject *tmp_key_name_63;
        PyObject *tmp_dict_name_63;
        tmp_key_name_63 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_9__class_decl_dict);
        tmp_dict_name_63 = tmp_class_creation_9__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_63, tmp_key_name_63);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        tmp_condition_result_125 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_125 == NUITKA_BOOL_TRUE) {
            goto branch_yes_82;
        } else {
            goto branch_no_82;
        }
        branch_yes_82:;
        CHECK_OBJECT(tmp_class_creation_9__class_decl_dict);
        tmp_dictdel_dict = tmp_class_creation_9__class_decl_dict;
        tmp_dictdel_key = const_str_plain_metaclass;
        tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_62;
        }
        branch_no_82:;
    }
    {
        nuitka_bool tmp_condition_result_126;
        PyObject *tmp_source_name_82;
        CHECK_OBJECT(tmp_class_creation_9__metaclass);
        tmp_source_name_82 = tmp_class_creation_9__metaclass;
        tmp_res = PyObject_HasAttr(tmp_source_name_82, const_str_plain___prepare__);
        tmp_condition_result_126 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_126 == NUITKA_BOOL_TRUE) {
            goto branch_yes_83;
        } else {
            goto branch_no_83;
        }
        branch_yes_83:;
        {
            PyObject *tmp_assign_source_172;
            PyObject *tmp_called_name_42;
            PyObject *tmp_source_name_83;
            PyObject *tmp_args_name_41;
            PyObject *tmp_tuple_element_79;
            PyObject *tmp_kw_name_41;
            CHECK_OBJECT(tmp_class_creation_9__metaclass);
            tmp_source_name_83 = tmp_class_creation_9__metaclass;
            tmp_called_name_42 = LOOKUP_ATTRIBUTE(tmp_source_name_83, const_str_plain___prepare__);
            if (tmp_called_name_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;

                goto try_except_handler_62;
            }
            tmp_tuple_element_79 = const_str_plain_QtWidgets;
            tmp_args_name_41 = PyTuple_New(2);
            Py_INCREF(tmp_tuple_element_79);
            PyTuple_SET_ITEM(tmp_args_name_41, 0, tmp_tuple_element_79);
            CHECK_OBJECT(tmp_class_creation_9__bases);
            tmp_tuple_element_79 = tmp_class_creation_9__bases;
            Py_INCREF(tmp_tuple_element_79);
            PyTuple_SET_ITEM(tmp_args_name_41, 1, tmp_tuple_element_79);
            CHECK_OBJECT(tmp_class_creation_9__class_decl_dict);
            tmp_kw_name_41 = tmp_class_creation_9__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 288;
            tmp_assign_source_172 = CALL_FUNCTION(tmp_called_name_42, tmp_args_name_41, tmp_kw_name_41);
            Py_DECREF(tmp_called_name_42);
            Py_DECREF(tmp_args_name_41);
            if (tmp_assign_source_172 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;

                goto try_except_handler_62;
            }
            assert(tmp_class_creation_9__prepared == NULL);
            tmp_class_creation_9__prepared = tmp_assign_source_172;
        }
        {
            nuitka_bool tmp_condition_result_127;
            PyObject *tmp_operand_name_21;
            PyObject *tmp_source_name_84;
            CHECK_OBJECT(tmp_class_creation_9__prepared);
            tmp_source_name_84 = tmp_class_creation_9__prepared;
            tmp_res = PyObject_HasAttr(tmp_source_name_84, const_str_plain___getitem__);
            tmp_operand_name_21 = (tmp_res != 0) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_21);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;

                goto try_except_handler_62;
            }
            tmp_condition_result_127 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_127 == NUITKA_BOOL_TRUE) {
                goto branch_yes_84;
            } else {
                goto branch_no_84;
            }
            branch_yes_84:;
            {
                PyObject *tmp_raise_type_21;
                PyObject *tmp_raise_value_21;
                PyObject *tmp_left_name_21;
                PyObject *tmp_right_name_21;
                PyObject *tmp_tuple_element_80;
                PyObject *tmp_getattr_target_21;
                PyObject *tmp_getattr_attr_21;
                PyObject *tmp_getattr_default_21;
                PyObject *tmp_source_name_85;
                PyObject *tmp_type_arg_42;
                tmp_raise_type_21 = PyExc_TypeError;
                tmp_left_name_21 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                CHECK_OBJECT(tmp_class_creation_9__metaclass);
                tmp_getattr_target_21 = tmp_class_creation_9__metaclass;
                tmp_getattr_attr_21 = const_str_plain___name__;
                tmp_getattr_default_21 = const_str_angle_metaclass;
                tmp_tuple_element_80 = BUILTIN_GETATTR(tmp_getattr_target_21, tmp_getattr_attr_21, tmp_getattr_default_21);
                if (tmp_tuple_element_80 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 288;

                    goto try_except_handler_62;
                }
                tmp_right_name_21 = PyTuple_New(2);
                PyTuple_SET_ITEM(tmp_right_name_21, 0, tmp_tuple_element_80);
                CHECK_OBJECT(tmp_class_creation_9__prepared);
                tmp_type_arg_42 = tmp_class_creation_9__prepared;
                tmp_source_name_85 = BUILTIN_TYPE1(tmp_type_arg_42);
                assert(!(tmp_source_name_85 == NULL));
                tmp_tuple_element_80 = LOOKUP_ATTRIBUTE(tmp_source_name_85, const_str_plain___name__);
                Py_DECREF(tmp_source_name_85);
                if (tmp_tuple_element_80 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_right_name_21);

                    exception_lineno = 288;

                    goto try_except_handler_62;
                }
                PyTuple_SET_ITEM(tmp_right_name_21, 1, tmp_tuple_element_80);
                tmp_raise_value_21 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_21, tmp_right_name_21);
                Py_DECREF(tmp_right_name_21);
                if (tmp_raise_value_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 288;

                    goto try_except_handler_62;
                }
                exception_type = tmp_raise_type_21;
                Py_INCREF(tmp_raise_type_21);
                exception_value = tmp_raise_value_21;
                exception_lineno = 288;
                RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

                goto try_except_handler_62;
            }
            branch_no_84:;
        }
        goto branch_end_83;
        branch_no_83:;
        {
            PyObject *tmp_assign_source_173;
            tmp_assign_source_173 = PyDict_New();
            assert(tmp_class_creation_9__prepared == NULL);
            tmp_class_creation_9__prepared = tmp_assign_source_173;
        }
        branch_end_83:;
    }
    {
        PyObject *tmp_assign_source_174;
        {
            PyObject *tmp_set_locals_21;
            CHECK_OBJECT(tmp_class_creation_9__prepared);
            tmp_set_locals_21 = tmp_class_creation_9__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_288 = tmp_set_locals_21;
            Py_INCREF(tmp_set_locals_21);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_64;
        }
        tmp_dictset_value = const_str_plain_QtWidgets;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_64;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_d8c51ce26a6825461415e7bb5df0a78e_12, codeobj_d8c51ce26a6825461415e7bb5df0a78e, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_d8c51ce26a6825461415e7bb5df0a78e_12 = cache_frame_d8c51ce26a6825461415e7bb5df0a78e_12;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_d8c51ce26a6825461415e7bb5df0a78e_12);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_d8c51ce26a6825461415e7bb5df0a78e_12) == 2); // Frame stack

        // Framed code:
        // Tried code:
        {
            PyObject *tmp_assign_source_175;
            PyObject *tmp_tuple_element_81;
            PyObject *tmp_source_name_86;
            PyObject *tmp_mvar_value_24;
            tmp_source_name_86 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QtCore);

            if (tmp_source_name_86 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_24 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtCore);

                    if (unlikely(tmp_mvar_value_24 == NULL)) {
                        tmp_mvar_value_24 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtCore);
                    }

                    if (tmp_mvar_value_24 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1468 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 289;
                        type_description_2 = "o";
                        goto try_except_handler_65;
                    }

                    tmp_source_name_86 = tmp_mvar_value_24;
                    Py_INCREF(tmp_source_name_86);
                }
            }

            tmp_tuple_element_81 = LOOKUP_ATTRIBUTE(tmp_source_name_86, const_str_plain_QObject);
            Py_DECREF(tmp_source_name_86);
            if (tmp_tuple_element_81 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            tmp_assign_source_175 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_175, 0, tmp_tuple_element_81);
            assert(tmp_QtWidgets$class_creation_1__bases_orig == NULL);
            tmp_QtWidgets$class_creation_1__bases_orig = tmp_assign_source_175;
        }
        {
            PyObject *tmp_assign_source_176;
            PyObject *tmp_dircall_arg1_22;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases_orig);
            tmp_dircall_arg1_22 = tmp_QtWidgets$class_creation_1__bases_orig;
            Py_INCREF(tmp_dircall_arg1_22);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_22};
                tmp_assign_source_176 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_176 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            assert(tmp_QtWidgets$class_creation_1__bases == NULL);
            tmp_QtWidgets$class_creation_1__bases = tmp_assign_source_176;
        }
        {
            PyObject *tmp_assign_source_177;
            tmp_assign_source_177 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_1__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_1__class_decl_dict = tmp_assign_source_177;
        }
        {
            PyObject *tmp_assign_source_178;
            PyObject *tmp_metaclass_name_22;
            nuitka_bool tmp_condition_result_128;
            PyObject *tmp_key_name_64;
            PyObject *tmp_dict_name_64;
            PyObject *tmp_dict_name_65;
            PyObject *tmp_key_name_65;
            nuitka_bool tmp_condition_result_129;
            int tmp_truth_name_22;
            PyObject *tmp_type_arg_43;
            PyObject *tmp_subscribed_name_22;
            PyObject *tmp_subscript_name_22;
            PyObject *tmp_bases_name_22;
            tmp_key_name_64 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__class_decl_dict);
            tmp_dict_name_64 = tmp_QtWidgets$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_64, tmp_key_name_64);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            tmp_condition_result_128 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_128 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_44;
            } else {
                goto condexpr_false_44;
            }
            condexpr_true_44:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__class_decl_dict);
            tmp_dict_name_65 = tmp_QtWidgets$class_creation_1__class_decl_dict;
            tmp_key_name_65 = const_str_plain_metaclass;
            tmp_metaclass_name_22 = DICT_GET_ITEM(tmp_dict_name_65, tmp_key_name_65);
            if (tmp_metaclass_name_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            goto condexpr_end_44;
            condexpr_false_44:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases);
            tmp_truth_name_22 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_1__bases);
            if (tmp_truth_name_22 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            tmp_condition_result_129 = tmp_truth_name_22 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_129 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_45;
            } else {
                goto condexpr_false_45;
            }
            condexpr_true_45:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases);
            tmp_subscribed_name_22 = tmp_QtWidgets$class_creation_1__bases;
            tmp_subscript_name_22 = const_int_0;
            tmp_type_arg_43 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_22, tmp_subscript_name_22, 0);
            if (tmp_type_arg_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            tmp_metaclass_name_22 = BUILTIN_TYPE1(tmp_type_arg_43);
            Py_DECREF(tmp_type_arg_43);
            if (tmp_metaclass_name_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            goto condexpr_end_45;
            condexpr_false_45:;
            tmp_metaclass_name_22 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_22);
            condexpr_end_45:;
            condexpr_end_44:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases);
            tmp_bases_name_22 = tmp_QtWidgets$class_creation_1__bases;
            tmp_assign_source_178 = SELECT_METACLASS(tmp_metaclass_name_22, tmp_bases_name_22);
            Py_DECREF(tmp_metaclass_name_22);
            if (tmp_assign_source_178 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            assert(tmp_QtWidgets$class_creation_1__metaclass == NULL);
            tmp_QtWidgets$class_creation_1__metaclass = tmp_assign_source_178;
        }
        {
            nuitka_bool tmp_condition_result_130;
            PyObject *tmp_key_name_66;
            PyObject *tmp_dict_name_66;
            tmp_key_name_66 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__class_decl_dict);
            tmp_dict_name_66 = tmp_QtWidgets$class_creation_1__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_66, tmp_key_name_66);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            tmp_condition_result_130 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_130 == NUITKA_BOOL_TRUE) {
                goto branch_yes_85;
            } else {
                goto branch_no_85;
            }
            branch_yes_85:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_1__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_65;
            }
            branch_no_85:;
        }
        {
            nuitka_bool tmp_condition_result_131;
            PyObject *tmp_source_name_87;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__metaclass);
            tmp_source_name_87 = tmp_QtWidgets$class_creation_1__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_87, const_str_plain___prepare__);
            tmp_condition_result_131 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_131 == NUITKA_BOOL_TRUE) {
                goto branch_yes_86;
            } else {
                goto branch_no_86;
            }
            branch_yes_86:;
            {
                PyObject *tmp_assign_source_179;
                PyObject *tmp_called_name_43;
                PyObject *tmp_source_name_88;
                PyObject *tmp_args_name_42;
                PyObject *tmp_tuple_element_82;
                PyObject *tmp_kw_name_42;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_1__metaclass);
                tmp_source_name_88 = tmp_QtWidgets$class_creation_1__metaclass;
                tmp_called_name_43 = LOOKUP_ATTRIBUTE(tmp_source_name_88, const_str_plain___prepare__);
                if (tmp_called_name_43 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 289;
                    type_description_2 = "o";
                    goto try_except_handler_65;
                }
                tmp_tuple_element_82 = const_str_plain_QApplication;
                tmp_args_name_42 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_82);
                PyTuple_SET_ITEM(tmp_args_name_42, 0, tmp_tuple_element_82);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases);
                tmp_tuple_element_82 = tmp_QtWidgets$class_creation_1__bases;
                Py_INCREF(tmp_tuple_element_82);
                PyTuple_SET_ITEM(tmp_args_name_42, 1, tmp_tuple_element_82);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_1__class_decl_dict);
                tmp_kw_name_42 = tmp_QtWidgets$class_creation_1__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 289;
                tmp_assign_source_179 = CALL_FUNCTION(tmp_called_name_43, tmp_args_name_42, tmp_kw_name_42);
                Py_DECREF(tmp_called_name_43);
                Py_DECREF(tmp_args_name_42);
                if (tmp_assign_source_179 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 289;
                    type_description_2 = "o";
                    goto try_except_handler_65;
                }
                assert(tmp_QtWidgets$class_creation_1__prepared == NULL);
                tmp_QtWidgets$class_creation_1__prepared = tmp_assign_source_179;
            }
            {
                nuitka_bool tmp_condition_result_132;
                PyObject *tmp_operand_name_22;
                PyObject *tmp_source_name_89;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_1__prepared);
                tmp_source_name_89 = tmp_QtWidgets$class_creation_1__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_89, const_str_plain___getitem__);
                tmp_operand_name_22 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_22);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 289;
                    type_description_2 = "o";
                    goto try_except_handler_65;
                }
                tmp_condition_result_132 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_132 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_87;
                } else {
                    goto branch_no_87;
                }
                branch_yes_87:;
                {
                    PyObject *tmp_raise_type_22;
                    PyObject *tmp_raise_value_22;
                    PyObject *tmp_left_name_22;
                    PyObject *tmp_right_name_22;
                    PyObject *tmp_tuple_element_83;
                    PyObject *tmp_getattr_target_22;
                    PyObject *tmp_getattr_attr_22;
                    PyObject *tmp_getattr_default_22;
                    PyObject *tmp_source_name_90;
                    PyObject *tmp_type_arg_44;
                    tmp_raise_type_22 = PyExc_TypeError;
                    tmp_left_name_22 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_1__metaclass);
                    tmp_getattr_target_22 = tmp_QtWidgets$class_creation_1__metaclass;
                    tmp_getattr_attr_22 = const_str_plain___name__;
                    tmp_getattr_default_22 = const_str_angle_metaclass;
                    tmp_tuple_element_83 = BUILTIN_GETATTR(tmp_getattr_target_22, tmp_getattr_attr_22, tmp_getattr_default_22);
                    if (tmp_tuple_element_83 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 289;
                        type_description_2 = "o";
                        goto try_except_handler_65;
                    }
                    tmp_right_name_22 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_22, 0, tmp_tuple_element_83);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_1__prepared);
                    tmp_type_arg_44 = tmp_QtWidgets$class_creation_1__prepared;
                    tmp_source_name_90 = BUILTIN_TYPE1(tmp_type_arg_44);
                    assert(!(tmp_source_name_90 == NULL));
                    tmp_tuple_element_83 = LOOKUP_ATTRIBUTE(tmp_source_name_90, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_90);
                    if (tmp_tuple_element_83 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_22);

                        exception_lineno = 289;
                        type_description_2 = "o";
                        goto try_except_handler_65;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_22, 1, tmp_tuple_element_83);
                    tmp_raise_value_22 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_22, tmp_right_name_22);
                    Py_DECREF(tmp_right_name_22);
                    if (tmp_raise_value_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 289;
                        type_description_2 = "o";
                        goto try_except_handler_65;
                    }
                    exception_type = tmp_raise_type_22;
                    Py_INCREF(tmp_raise_type_22);
                    exception_value = tmp_raise_value_22;
                    exception_lineno = 289;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_65;
                }
                branch_no_87:;
            }
            goto branch_end_86;
            branch_no_86:;
            {
                PyObject *tmp_assign_source_180;
                tmp_assign_source_180 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_1__prepared == NULL);
                tmp_QtWidgets$class_creation_1__prepared = tmp_assign_source_180;
            }
            branch_end_86:;
        }
        {
            PyObject *tmp_set_locals_22;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__prepared);
            tmp_set_locals_22 = tmp_QtWidgets$class_creation_1__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_289 = tmp_set_locals_22;
            Py_INCREF(tmp_set_locals_22);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_289, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 289;
            type_description_2 = "o";
            goto try_except_handler_67;
        }
        tmp_dictset_value = const_str_digest_b4ae43e0124e9d6d4041f0b627dc0af7;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_289, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 289;
            type_description_2 = "o";
            goto try_except_handler_67;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_84f7195f6a25d49c9ccba9b3ed0478e5_13, codeobj_84f7195f6a25d49c9ccba9b3ed0478e5, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_84f7195f6a25d49c9ccba9b3ed0478e5_13 = cache_frame_84f7195f6a25d49c9ccba9b3ed0478e5_13;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_84f7195f6a25d49c9ccba9b3ed0478e5_13);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_84f7195f6a25d49c9ccba9b3ed0478e5_13) == 2); // Frame stack

        // Framed code:
        {
            nuitka_bool tmp_condition_result_133;
            PyObject *tmp_called_name_44;
            PyObject *tmp_args_element_name_2;
            PyObject *tmp_staticmethod_arg_1;
            tmp_res = MAPPING_HAS_ITEM(locals_PyQt5$uic$Compiler$qtproxies_289, const_str_plain_staticmethod);

            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 290;
                type_description_3 = "o";
                goto frame_exception_exit_13;
            }
            tmp_condition_result_133 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_133 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_46;
            } else {
                goto condexpr_false_46;
            }
            condexpr_true_46:;
            tmp_called_name_44 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_289, const_str_plain_staticmethod);

            if (tmp_called_name_44 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1496 ], 34, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 290;
                type_description_3 = "o";
                goto frame_exception_exit_13;
            }

            if (tmp_called_name_44 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 290;
                type_description_3 = "o";
                goto frame_exception_exit_13;
            }
            tmp_args_element_name_2 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_21_translate();



            frame_84f7195f6a25d49c9ccba9b3ed0478e5_13->m_frame.f_lineno = 290;
            tmp_dictset_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_44, tmp_args_element_name_2);
            Py_DECREF(tmp_called_name_44);
            Py_DECREF(tmp_args_element_name_2);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 290;
                type_description_3 = "o";
                goto frame_exception_exit_13;
            }
            goto condexpr_end_46;
            condexpr_false_46:;
            tmp_staticmethod_arg_1 = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_21_translate();



            tmp_dictset_value = BUILTIN_STATICMETHOD(tmp_staticmethod_arg_1);
            Py_DECREF(tmp_staticmethod_arg_1);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 290;
                type_description_3 = "o";
                goto frame_exception_exit_13;
            }
            condexpr_end_46:;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_289, const_str_plain_translate, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 291;
                type_description_3 = "o";
                goto frame_exception_exit_13;
            }
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_84f7195f6a25d49c9ccba9b3ed0478e5_13);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_11;

        frame_exception_exit_13:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_84f7195f6a25d49c9ccba9b3ed0478e5_13);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_84f7195f6a25d49c9ccba9b3ed0478e5_13, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_84f7195f6a25d49c9ccba9b3ed0478e5_13->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_84f7195f6a25d49c9ccba9b3ed0478e5_13, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_84f7195f6a25d49c9ccba9b3ed0478e5_13,
            type_description_3,
            outline_21_var___class__
        );


        // Release cached frame.
        if (frame_84f7195f6a25d49c9ccba9b3ed0478e5_13 == cache_frame_84f7195f6a25d49c9ccba9b3ed0478e5_13) {
            Py_DECREF(frame_84f7195f6a25d49c9ccba9b3ed0478e5_13);
        }
        cache_frame_84f7195f6a25d49c9ccba9b3ed0478e5_13 = NULL;

        assertFrameObject(frame_84f7195f6a25d49c9ccba9b3ed0478e5_13);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_12;

        frame_no_exception_11:;
        goto skip_nested_handling_11;
        nested_frame_exit_12:;
        type_description_2 = "o";
        goto try_except_handler_67;
        skip_nested_handling_11:;
        {
            nuitka_bool tmp_condition_result_134;
            PyObject *tmp_compexpr_left_22;
            PyObject *tmp_compexpr_right_22;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases);
            tmp_compexpr_left_22 = tmp_QtWidgets$class_creation_1__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases_orig);
            tmp_compexpr_right_22 = tmp_QtWidgets$class_creation_1__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_22, tmp_compexpr_right_22);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_67;
            }
            tmp_condition_result_134 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_134 == NUITKA_BOOL_TRUE) {
                goto branch_yes_88;
            } else {
                goto branch_no_88;
            }
            branch_yes_88:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_1__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_289, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_67;
            }
            branch_no_88:;
        }
        {
            PyObject *tmp_assign_source_181;
            PyObject *tmp_called_name_45;
            PyObject *tmp_args_name_43;
            PyObject *tmp_tuple_element_84;
            PyObject *tmp_kw_name_43;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__metaclass);
            tmp_called_name_45 = tmp_QtWidgets$class_creation_1__metaclass;
            tmp_tuple_element_84 = const_str_plain_QApplication;
            tmp_args_name_43 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_84);
            PyTuple_SET_ITEM(tmp_args_name_43, 0, tmp_tuple_element_84);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__bases);
            tmp_tuple_element_84 = tmp_QtWidgets$class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_84);
            PyTuple_SET_ITEM(tmp_args_name_43, 1, tmp_tuple_element_84);
            tmp_tuple_element_84 = locals_PyQt5$uic$Compiler$qtproxies_289;
            Py_INCREF(tmp_tuple_element_84);
            PyTuple_SET_ITEM(tmp_args_name_43, 2, tmp_tuple_element_84);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_1__class_decl_dict);
            tmp_kw_name_43 = tmp_QtWidgets$class_creation_1__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 289;
            tmp_assign_source_181 = CALL_FUNCTION(tmp_called_name_45, tmp_args_name_43, tmp_kw_name_43);
            Py_DECREF(tmp_args_name_43);
            if (tmp_assign_source_181 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_2 = "o";
                goto try_except_handler_67;
            }
            assert(outline_21_var___class__ == NULL);
            outline_21_var___class__ = tmp_assign_source_181;
        }
        CHECK_OBJECT(outline_21_var___class__);
        tmp_dictset_value = outline_21_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_67;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_67:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_289);
        locals_PyQt5$uic$Compiler$qtproxies_289 = NULL;
        goto try_return_handler_66;
        // Exception handler code:
        try_except_handler_67:;
        exception_keeper_type_62 = exception_type;
        exception_keeper_value_62 = exception_value;
        exception_keeper_tb_62 = exception_tb;
        exception_keeper_lineno_62 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_289);
        locals_PyQt5$uic$Compiler$qtproxies_289 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_62;
        exception_value = exception_keeper_value_62;
        exception_tb = exception_keeper_tb_62;
        exception_lineno = exception_keeper_lineno_62;

        goto try_except_handler_66;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_66:;
        CHECK_OBJECT((PyObject *)outline_21_var___class__);
        Py_DECREF(outline_21_var___class__);
        outline_21_var___class__ = NULL;

        goto outline_result_22;
        // Exception handler code:
        try_except_handler_66:;
        exception_keeper_type_63 = exception_type;
        exception_keeper_value_63 = exception_value;
        exception_keeper_tb_63 = exception_tb;
        exception_keeper_lineno_63 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_63;
        exception_value = exception_keeper_value_63;
        exception_tb = exception_keeper_tb_63;
        exception_lineno = exception_keeper_lineno_63;

        goto outline_exception_22;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_22:;
        exception_lineno = 289;
        goto try_except_handler_65;
        outline_result_22:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QApplication, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 289;
            type_description_2 = "o";
            goto try_except_handler_65;
        }
        goto try_end_22;
        // Exception handler code:
        try_except_handler_65:;
        exception_keeper_type_64 = exception_type;
        exception_keeper_value_64 = exception_value;
        exception_keeper_tb_64 = exception_tb;
        exception_keeper_lineno_64 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_1__bases_orig);
        tmp_QtWidgets$class_creation_1__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_1__bases);
        tmp_QtWidgets$class_creation_1__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_1__class_decl_dict);
        tmp_QtWidgets$class_creation_1__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_1__metaclass);
        tmp_QtWidgets$class_creation_1__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_1__prepared);
        tmp_QtWidgets$class_creation_1__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_64;
        exception_value = exception_keeper_value_64;
        exception_tb = exception_keeper_tb_64;
        exception_lineno = exception_keeper_lineno_64;

        goto frame_exception_exit_12;
        // End of try:
        try_end_22:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_1__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_1__bases_orig);
        tmp_QtWidgets$class_creation_1__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_1__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_1__bases);
        tmp_QtWidgets$class_creation_1__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_1__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_1__class_decl_dict);
        tmp_QtWidgets$class_creation_1__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_1__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_1__metaclass);
        tmp_QtWidgets$class_creation_1__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_1__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_1__prepared);
        tmp_QtWidgets$class_creation_1__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_182;
            PyObject *tmp_tuple_element_85;
            PyObject *tmp_mvar_value_25;
            tmp_tuple_element_85 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_ProxyClass);

            if (tmp_tuple_element_85 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_25 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_25 == NULL)) {
                        tmp_mvar_value_25 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_25 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 294;
                        type_description_2 = "o";
                        goto try_except_handler_68;
                    }

                    tmp_tuple_element_85 = tmp_mvar_value_25;
                    Py_INCREF(tmp_tuple_element_85);
                }
            }

            tmp_assign_source_182 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_182, 0, tmp_tuple_element_85);
            assert(tmp_QtWidgets$class_creation_2__bases_orig == NULL);
            tmp_QtWidgets$class_creation_2__bases_orig = tmp_assign_source_182;
        }
        {
            PyObject *tmp_assign_source_183;
            PyObject *tmp_dircall_arg1_23;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases_orig);
            tmp_dircall_arg1_23 = tmp_QtWidgets$class_creation_2__bases_orig;
            Py_INCREF(tmp_dircall_arg1_23);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_23};
                tmp_assign_source_183 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_183 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            assert(tmp_QtWidgets$class_creation_2__bases == NULL);
            tmp_QtWidgets$class_creation_2__bases = tmp_assign_source_183;
        }
        {
            PyObject *tmp_assign_source_184;
            tmp_assign_source_184 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_2__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_2__class_decl_dict = tmp_assign_source_184;
        }
        {
            PyObject *tmp_assign_source_185;
            PyObject *tmp_metaclass_name_23;
            nuitka_bool tmp_condition_result_135;
            PyObject *tmp_key_name_67;
            PyObject *tmp_dict_name_67;
            PyObject *tmp_dict_name_68;
            PyObject *tmp_key_name_68;
            nuitka_bool tmp_condition_result_136;
            int tmp_truth_name_23;
            PyObject *tmp_type_arg_45;
            PyObject *tmp_subscribed_name_23;
            PyObject *tmp_subscript_name_23;
            PyObject *tmp_bases_name_23;
            tmp_key_name_67 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__class_decl_dict);
            tmp_dict_name_67 = tmp_QtWidgets$class_creation_2__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_67, tmp_key_name_67);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            tmp_condition_result_135 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_135 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_47;
            } else {
                goto condexpr_false_47;
            }
            condexpr_true_47:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__class_decl_dict);
            tmp_dict_name_68 = tmp_QtWidgets$class_creation_2__class_decl_dict;
            tmp_key_name_68 = const_str_plain_metaclass;
            tmp_metaclass_name_23 = DICT_GET_ITEM(tmp_dict_name_68, tmp_key_name_68);
            if (tmp_metaclass_name_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            goto condexpr_end_47;
            condexpr_false_47:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases);
            tmp_truth_name_23 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_2__bases);
            if (tmp_truth_name_23 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            tmp_condition_result_136 = tmp_truth_name_23 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_136 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_48;
            } else {
                goto condexpr_false_48;
            }
            condexpr_true_48:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases);
            tmp_subscribed_name_23 = tmp_QtWidgets$class_creation_2__bases;
            tmp_subscript_name_23 = const_int_0;
            tmp_type_arg_45 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_23, tmp_subscript_name_23, 0);
            if (tmp_type_arg_45 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            tmp_metaclass_name_23 = BUILTIN_TYPE1(tmp_type_arg_45);
            Py_DECREF(tmp_type_arg_45);
            if (tmp_metaclass_name_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            goto condexpr_end_48;
            condexpr_false_48:;
            tmp_metaclass_name_23 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_23);
            condexpr_end_48:;
            condexpr_end_47:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases);
            tmp_bases_name_23 = tmp_QtWidgets$class_creation_2__bases;
            tmp_assign_source_185 = SELECT_METACLASS(tmp_metaclass_name_23, tmp_bases_name_23);
            Py_DECREF(tmp_metaclass_name_23);
            if (tmp_assign_source_185 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            assert(tmp_QtWidgets$class_creation_2__metaclass == NULL);
            tmp_QtWidgets$class_creation_2__metaclass = tmp_assign_source_185;
        }
        {
            nuitka_bool tmp_condition_result_137;
            PyObject *tmp_key_name_69;
            PyObject *tmp_dict_name_69;
            tmp_key_name_69 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__class_decl_dict);
            tmp_dict_name_69 = tmp_QtWidgets$class_creation_2__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_69, tmp_key_name_69);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            tmp_condition_result_137 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_137 == NUITKA_BOOL_TRUE) {
                goto branch_yes_89;
            } else {
                goto branch_no_89;
            }
            branch_yes_89:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_2__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_68;
            }
            branch_no_89:;
        }
        {
            nuitka_bool tmp_condition_result_138;
            PyObject *tmp_source_name_91;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__metaclass);
            tmp_source_name_91 = tmp_QtWidgets$class_creation_2__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_91, const_str_plain___prepare__);
            tmp_condition_result_138 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_138 == NUITKA_BOOL_TRUE) {
                goto branch_yes_90;
            } else {
                goto branch_no_90;
            }
            branch_yes_90:;
            {
                PyObject *tmp_assign_source_186;
                PyObject *tmp_called_name_46;
                PyObject *tmp_source_name_92;
                PyObject *tmp_args_name_44;
                PyObject *tmp_tuple_element_86;
                PyObject *tmp_kw_name_44;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_2__metaclass);
                tmp_source_name_92 = tmp_QtWidgets$class_creation_2__metaclass;
                tmp_called_name_46 = LOOKUP_ATTRIBUTE(tmp_source_name_92, const_str_plain___prepare__);
                if (tmp_called_name_46 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 294;
                    type_description_2 = "o";
                    goto try_except_handler_68;
                }
                tmp_tuple_element_86 = const_str_plain_QSpacerItem;
                tmp_args_name_44 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_86);
                PyTuple_SET_ITEM(tmp_args_name_44, 0, tmp_tuple_element_86);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases);
                tmp_tuple_element_86 = tmp_QtWidgets$class_creation_2__bases;
                Py_INCREF(tmp_tuple_element_86);
                PyTuple_SET_ITEM(tmp_args_name_44, 1, tmp_tuple_element_86);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_2__class_decl_dict);
                tmp_kw_name_44 = tmp_QtWidgets$class_creation_2__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 294;
                tmp_assign_source_186 = CALL_FUNCTION(tmp_called_name_46, tmp_args_name_44, tmp_kw_name_44);
                Py_DECREF(tmp_called_name_46);
                Py_DECREF(tmp_args_name_44);
                if (tmp_assign_source_186 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 294;
                    type_description_2 = "o";
                    goto try_except_handler_68;
                }
                assert(tmp_QtWidgets$class_creation_2__prepared == NULL);
                tmp_QtWidgets$class_creation_2__prepared = tmp_assign_source_186;
            }
            {
                nuitka_bool tmp_condition_result_139;
                PyObject *tmp_operand_name_23;
                PyObject *tmp_source_name_93;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_2__prepared);
                tmp_source_name_93 = tmp_QtWidgets$class_creation_2__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_93, const_str_plain___getitem__);
                tmp_operand_name_23 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_23);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 294;
                    type_description_2 = "o";
                    goto try_except_handler_68;
                }
                tmp_condition_result_139 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_139 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_91;
                } else {
                    goto branch_no_91;
                }
                branch_yes_91:;
                {
                    PyObject *tmp_raise_type_23;
                    PyObject *tmp_raise_value_23;
                    PyObject *tmp_left_name_23;
                    PyObject *tmp_right_name_23;
                    PyObject *tmp_tuple_element_87;
                    PyObject *tmp_getattr_target_23;
                    PyObject *tmp_getattr_attr_23;
                    PyObject *tmp_getattr_default_23;
                    PyObject *tmp_source_name_94;
                    PyObject *tmp_type_arg_46;
                    tmp_raise_type_23 = PyExc_TypeError;
                    tmp_left_name_23 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_2__metaclass);
                    tmp_getattr_target_23 = tmp_QtWidgets$class_creation_2__metaclass;
                    tmp_getattr_attr_23 = const_str_plain___name__;
                    tmp_getattr_default_23 = const_str_angle_metaclass;
                    tmp_tuple_element_87 = BUILTIN_GETATTR(tmp_getattr_target_23, tmp_getattr_attr_23, tmp_getattr_default_23);
                    if (tmp_tuple_element_87 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 294;
                        type_description_2 = "o";
                        goto try_except_handler_68;
                    }
                    tmp_right_name_23 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_23, 0, tmp_tuple_element_87);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_2__prepared);
                    tmp_type_arg_46 = tmp_QtWidgets$class_creation_2__prepared;
                    tmp_source_name_94 = BUILTIN_TYPE1(tmp_type_arg_46);
                    assert(!(tmp_source_name_94 == NULL));
                    tmp_tuple_element_87 = LOOKUP_ATTRIBUTE(tmp_source_name_94, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_94);
                    if (tmp_tuple_element_87 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_23);

                        exception_lineno = 294;
                        type_description_2 = "o";
                        goto try_except_handler_68;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_23, 1, tmp_tuple_element_87);
                    tmp_raise_value_23 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_23, tmp_right_name_23);
                    Py_DECREF(tmp_right_name_23);
                    if (tmp_raise_value_23 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 294;
                        type_description_2 = "o";
                        goto try_except_handler_68;
                    }
                    exception_type = tmp_raise_type_23;
                    Py_INCREF(tmp_raise_type_23);
                    exception_value = tmp_raise_value_23;
                    exception_lineno = 294;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_68;
                }
                branch_no_91:;
            }
            goto branch_end_90;
            branch_no_90:;
            {
                PyObject *tmp_assign_source_187;
                tmp_assign_source_187 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_2__prepared == NULL);
                tmp_QtWidgets$class_creation_2__prepared = tmp_assign_source_187;
            }
            branch_end_90:;
        }
        {
            PyObject *tmp_set_locals_23;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__prepared);
            tmp_set_locals_23 = tmp_QtWidgets$class_creation_2__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_294 = tmp_set_locals_23;
            Py_INCREF(tmp_set_locals_23);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_294, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 294;
            type_description_2 = "o";
            goto try_except_handler_70;
        }
        tmp_dictset_value = const_str_digest_401eefcca6b9ab5a260d38fee46f238b;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_294, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 294;
            type_description_2 = "o";
            goto try_except_handler_70;
        }
        {
            nuitka_bool tmp_condition_result_140;
            PyObject *tmp_compexpr_left_23;
            PyObject *tmp_compexpr_right_23;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases);
            tmp_compexpr_left_23 = tmp_QtWidgets$class_creation_2__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases_orig);
            tmp_compexpr_right_23 = tmp_QtWidgets$class_creation_2__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_23, tmp_compexpr_right_23);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_70;
            }
            tmp_condition_result_140 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_140 == NUITKA_BOOL_TRUE) {
                goto branch_yes_92;
            } else {
                goto branch_no_92;
            }
            branch_yes_92:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_2__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_294, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_70;
            }
            branch_no_92:;
        }
        {
            PyObject *tmp_assign_source_188;
            PyObject *tmp_called_name_47;
            PyObject *tmp_args_name_45;
            PyObject *tmp_tuple_element_88;
            PyObject *tmp_kw_name_45;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__metaclass);
            tmp_called_name_47 = tmp_QtWidgets$class_creation_2__metaclass;
            tmp_tuple_element_88 = const_str_plain_QSpacerItem;
            tmp_args_name_45 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_88);
            PyTuple_SET_ITEM(tmp_args_name_45, 0, tmp_tuple_element_88);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__bases);
            tmp_tuple_element_88 = tmp_QtWidgets$class_creation_2__bases;
            Py_INCREF(tmp_tuple_element_88);
            PyTuple_SET_ITEM(tmp_args_name_45, 1, tmp_tuple_element_88);
            tmp_tuple_element_88 = locals_PyQt5$uic$Compiler$qtproxies_294;
            Py_INCREF(tmp_tuple_element_88);
            PyTuple_SET_ITEM(tmp_args_name_45, 2, tmp_tuple_element_88);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_2__class_decl_dict);
            tmp_kw_name_45 = tmp_QtWidgets$class_creation_2__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 294;
            tmp_assign_source_188 = CALL_FUNCTION(tmp_called_name_47, tmp_args_name_45, tmp_kw_name_45);
            Py_DECREF(tmp_args_name_45);
            if (tmp_assign_source_188 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_2 = "o";
                goto try_except_handler_70;
            }
            assert(outline_22_var___class__ == NULL);
            outline_22_var___class__ = tmp_assign_source_188;
        }
        CHECK_OBJECT(outline_22_var___class__);
        tmp_dictset_value = outline_22_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_70;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_70:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_294);
        locals_PyQt5$uic$Compiler$qtproxies_294 = NULL;
        goto try_return_handler_69;
        // Exception handler code:
        try_except_handler_70:;
        exception_keeper_type_65 = exception_type;
        exception_keeper_value_65 = exception_value;
        exception_keeper_tb_65 = exception_tb;
        exception_keeper_lineno_65 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_294);
        locals_PyQt5$uic$Compiler$qtproxies_294 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_65;
        exception_value = exception_keeper_value_65;
        exception_tb = exception_keeper_tb_65;
        exception_lineno = exception_keeper_lineno_65;

        goto try_except_handler_69;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_69:;
        CHECK_OBJECT((PyObject *)outline_22_var___class__);
        Py_DECREF(outline_22_var___class__);
        outline_22_var___class__ = NULL;

        goto outline_result_23;
        // Exception handler code:
        try_except_handler_69:;
        exception_keeper_type_66 = exception_type;
        exception_keeper_value_66 = exception_value;
        exception_keeper_tb_66 = exception_tb;
        exception_keeper_lineno_66 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_66;
        exception_value = exception_keeper_value_66;
        exception_tb = exception_keeper_tb_66;
        exception_lineno = exception_keeper_lineno_66;

        goto outline_exception_23;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_23:;
        exception_lineno = 294;
        goto try_except_handler_68;
        outline_result_23:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QSpacerItem, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 294;
            type_description_2 = "o";
            goto try_except_handler_68;
        }
        goto try_end_23;
        // Exception handler code:
        try_except_handler_68:;
        exception_keeper_type_67 = exception_type;
        exception_keeper_value_67 = exception_value;
        exception_keeper_tb_67 = exception_tb;
        exception_keeper_lineno_67 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_2__bases_orig);
        tmp_QtWidgets$class_creation_2__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_2__bases);
        tmp_QtWidgets$class_creation_2__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_2__class_decl_dict);
        tmp_QtWidgets$class_creation_2__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_2__metaclass);
        tmp_QtWidgets$class_creation_2__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_2__prepared);
        tmp_QtWidgets$class_creation_2__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_67;
        exception_value = exception_keeper_value_67;
        exception_tb = exception_keeper_tb_67;
        exception_lineno = exception_keeper_lineno_67;

        goto frame_exception_exit_12;
        // End of try:
        try_end_23:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_2__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_2__bases_orig);
        tmp_QtWidgets$class_creation_2__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_2__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_2__bases);
        tmp_QtWidgets$class_creation_2__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_2__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_2__class_decl_dict);
        tmp_QtWidgets$class_creation_2__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_2__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_2__metaclass);
        tmp_QtWidgets$class_creation_2__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_2__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_2__prepared);
        tmp_QtWidgets$class_creation_2__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_189;
            PyObject *tmp_tuple_element_89;
            PyObject *tmp_mvar_value_26;
            tmp_tuple_element_89 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_ProxyClass);

            if (tmp_tuple_element_89 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_26 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_26 == NULL)) {
                        tmp_mvar_value_26 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_26 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 295;
                        type_description_2 = "o";
                        goto try_except_handler_71;
                    }

                    tmp_tuple_element_89 = tmp_mvar_value_26;
                    Py_INCREF(tmp_tuple_element_89);
                }
            }

            tmp_assign_source_189 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_189, 0, tmp_tuple_element_89);
            assert(tmp_QtWidgets$class_creation_3__bases_orig == NULL);
            tmp_QtWidgets$class_creation_3__bases_orig = tmp_assign_source_189;
        }
        {
            PyObject *tmp_assign_source_190;
            PyObject *tmp_dircall_arg1_24;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases_orig);
            tmp_dircall_arg1_24 = tmp_QtWidgets$class_creation_3__bases_orig;
            Py_INCREF(tmp_dircall_arg1_24);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_24};
                tmp_assign_source_190 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_190 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            assert(tmp_QtWidgets$class_creation_3__bases == NULL);
            tmp_QtWidgets$class_creation_3__bases = tmp_assign_source_190;
        }
        {
            PyObject *tmp_assign_source_191;
            tmp_assign_source_191 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_3__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_3__class_decl_dict = tmp_assign_source_191;
        }
        {
            PyObject *tmp_assign_source_192;
            PyObject *tmp_metaclass_name_24;
            nuitka_bool tmp_condition_result_141;
            PyObject *tmp_key_name_70;
            PyObject *tmp_dict_name_70;
            PyObject *tmp_dict_name_71;
            PyObject *tmp_key_name_71;
            nuitka_bool tmp_condition_result_142;
            int tmp_truth_name_24;
            PyObject *tmp_type_arg_47;
            PyObject *tmp_subscribed_name_24;
            PyObject *tmp_subscript_name_24;
            PyObject *tmp_bases_name_24;
            tmp_key_name_70 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__class_decl_dict);
            tmp_dict_name_70 = tmp_QtWidgets$class_creation_3__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_70, tmp_key_name_70);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            tmp_condition_result_141 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_141 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_49;
            } else {
                goto condexpr_false_49;
            }
            condexpr_true_49:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__class_decl_dict);
            tmp_dict_name_71 = tmp_QtWidgets$class_creation_3__class_decl_dict;
            tmp_key_name_71 = const_str_plain_metaclass;
            tmp_metaclass_name_24 = DICT_GET_ITEM(tmp_dict_name_71, tmp_key_name_71);
            if (tmp_metaclass_name_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            goto condexpr_end_49;
            condexpr_false_49:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases);
            tmp_truth_name_24 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_3__bases);
            if (tmp_truth_name_24 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            tmp_condition_result_142 = tmp_truth_name_24 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_142 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_50;
            } else {
                goto condexpr_false_50;
            }
            condexpr_true_50:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases);
            tmp_subscribed_name_24 = tmp_QtWidgets$class_creation_3__bases;
            tmp_subscript_name_24 = const_int_0;
            tmp_type_arg_47 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_24, tmp_subscript_name_24, 0);
            if (tmp_type_arg_47 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            tmp_metaclass_name_24 = BUILTIN_TYPE1(tmp_type_arg_47);
            Py_DECREF(tmp_type_arg_47);
            if (tmp_metaclass_name_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            goto condexpr_end_50;
            condexpr_false_50:;
            tmp_metaclass_name_24 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_24);
            condexpr_end_50:;
            condexpr_end_49:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases);
            tmp_bases_name_24 = tmp_QtWidgets$class_creation_3__bases;
            tmp_assign_source_192 = SELECT_METACLASS(tmp_metaclass_name_24, tmp_bases_name_24);
            Py_DECREF(tmp_metaclass_name_24);
            if (tmp_assign_source_192 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            assert(tmp_QtWidgets$class_creation_3__metaclass == NULL);
            tmp_QtWidgets$class_creation_3__metaclass = tmp_assign_source_192;
        }
        {
            nuitka_bool tmp_condition_result_143;
            PyObject *tmp_key_name_72;
            PyObject *tmp_dict_name_72;
            tmp_key_name_72 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__class_decl_dict);
            tmp_dict_name_72 = tmp_QtWidgets$class_creation_3__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_72, tmp_key_name_72);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            tmp_condition_result_143 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_143 == NUITKA_BOOL_TRUE) {
                goto branch_yes_93;
            } else {
                goto branch_no_93;
            }
            branch_yes_93:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_3__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_71;
            }
            branch_no_93:;
        }
        {
            nuitka_bool tmp_condition_result_144;
            PyObject *tmp_source_name_95;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__metaclass);
            tmp_source_name_95 = tmp_QtWidgets$class_creation_3__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_95, const_str_plain___prepare__);
            tmp_condition_result_144 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_144 == NUITKA_BOOL_TRUE) {
                goto branch_yes_94;
            } else {
                goto branch_no_94;
            }
            branch_yes_94:;
            {
                PyObject *tmp_assign_source_193;
                PyObject *tmp_called_name_48;
                PyObject *tmp_source_name_96;
                PyObject *tmp_args_name_46;
                PyObject *tmp_tuple_element_90;
                PyObject *tmp_kw_name_46;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_3__metaclass);
                tmp_source_name_96 = tmp_QtWidgets$class_creation_3__metaclass;
                tmp_called_name_48 = LOOKUP_ATTRIBUTE(tmp_source_name_96, const_str_plain___prepare__);
                if (tmp_called_name_48 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 295;
                    type_description_2 = "o";
                    goto try_except_handler_71;
                }
                tmp_tuple_element_90 = const_str_plain_QSizePolicy;
                tmp_args_name_46 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_90);
                PyTuple_SET_ITEM(tmp_args_name_46, 0, tmp_tuple_element_90);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases);
                tmp_tuple_element_90 = tmp_QtWidgets$class_creation_3__bases;
                Py_INCREF(tmp_tuple_element_90);
                PyTuple_SET_ITEM(tmp_args_name_46, 1, tmp_tuple_element_90);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_3__class_decl_dict);
                tmp_kw_name_46 = tmp_QtWidgets$class_creation_3__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 295;
                tmp_assign_source_193 = CALL_FUNCTION(tmp_called_name_48, tmp_args_name_46, tmp_kw_name_46);
                Py_DECREF(tmp_called_name_48);
                Py_DECREF(tmp_args_name_46);
                if (tmp_assign_source_193 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 295;
                    type_description_2 = "o";
                    goto try_except_handler_71;
                }
                assert(tmp_QtWidgets$class_creation_3__prepared == NULL);
                tmp_QtWidgets$class_creation_3__prepared = tmp_assign_source_193;
            }
            {
                nuitka_bool tmp_condition_result_145;
                PyObject *tmp_operand_name_24;
                PyObject *tmp_source_name_97;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_3__prepared);
                tmp_source_name_97 = tmp_QtWidgets$class_creation_3__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_97, const_str_plain___getitem__);
                tmp_operand_name_24 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_24);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 295;
                    type_description_2 = "o";
                    goto try_except_handler_71;
                }
                tmp_condition_result_145 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_145 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_95;
                } else {
                    goto branch_no_95;
                }
                branch_yes_95:;
                {
                    PyObject *tmp_raise_type_24;
                    PyObject *tmp_raise_value_24;
                    PyObject *tmp_left_name_24;
                    PyObject *tmp_right_name_24;
                    PyObject *tmp_tuple_element_91;
                    PyObject *tmp_getattr_target_24;
                    PyObject *tmp_getattr_attr_24;
                    PyObject *tmp_getattr_default_24;
                    PyObject *tmp_source_name_98;
                    PyObject *tmp_type_arg_48;
                    tmp_raise_type_24 = PyExc_TypeError;
                    tmp_left_name_24 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_3__metaclass);
                    tmp_getattr_target_24 = tmp_QtWidgets$class_creation_3__metaclass;
                    tmp_getattr_attr_24 = const_str_plain___name__;
                    tmp_getattr_default_24 = const_str_angle_metaclass;
                    tmp_tuple_element_91 = BUILTIN_GETATTR(tmp_getattr_target_24, tmp_getattr_attr_24, tmp_getattr_default_24);
                    if (tmp_tuple_element_91 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 295;
                        type_description_2 = "o";
                        goto try_except_handler_71;
                    }
                    tmp_right_name_24 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_24, 0, tmp_tuple_element_91);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_3__prepared);
                    tmp_type_arg_48 = tmp_QtWidgets$class_creation_3__prepared;
                    tmp_source_name_98 = BUILTIN_TYPE1(tmp_type_arg_48);
                    assert(!(tmp_source_name_98 == NULL));
                    tmp_tuple_element_91 = LOOKUP_ATTRIBUTE(tmp_source_name_98, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_98);
                    if (tmp_tuple_element_91 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_24);

                        exception_lineno = 295;
                        type_description_2 = "o";
                        goto try_except_handler_71;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_24, 1, tmp_tuple_element_91);
                    tmp_raise_value_24 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_24, tmp_right_name_24);
                    Py_DECREF(tmp_right_name_24);
                    if (tmp_raise_value_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 295;
                        type_description_2 = "o";
                        goto try_except_handler_71;
                    }
                    exception_type = tmp_raise_type_24;
                    Py_INCREF(tmp_raise_type_24);
                    exception_value = tmp_raise_value_24;
                    exception_lineno = 295;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_71;
                }
                branch_no_95:;
            }
            goto branch_end_94;
            branch_no_94:;
            {
                PyObject *tmp_assign_source_194;
                tmp_assign_source_194 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_3__prepared == NULL);
                tmp_QtWidgets$class_creation_3__prepared = tmp_assign_source_194;
            }
            branch_end_94:;
        }
        {
            PyObject *tmp_set_locals_24;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__prepared);
            tmp_set_locals_24 = tmp_QtWidgets$class_creation_3__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_295 = tmp_set_locals_24;
            Py_INCREF(tmp_set_locals_24);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_295, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_2 = "o";
            goto try_except_handler_73;
        }
        tmp_dictset_value = const_str_digest_2a7e220ade4be8f2c3b8596f5728419c;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_295, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_2 = "o";
            goto try_except_handler_73;
        }
        {
            nuitka_bool tmp_condition_result_146;
            PyObject *tmp_compexpr_left_24;
            PyObject *tmp_compexpr_right_24;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases);
            tmp_compexpr_left_24 = tmp_QtWidgets$class_creation_3__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases_orig);
            tmp_compexpr_right_24 = tmp_QtWidgets$class_creation_3__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_24, tmp_compexpr_right_24);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_73;
            }
            tmp_condition_result_146 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_146 == NUITKA_BOOL_TRUE) {
                goto branch_yes_96;
            } else {
                goto branch_no_96;
            }
            branch_yes_96:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_3__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_295, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_73;
            }
            branch_no_96:;
        }
        {
            PyObject *tmp_assign_source_195;
            PyObject *tmp_called_name_49;
            PyObject *tmp_args_name_47;
            PyObject *tmp_tuple_element_92;
            PyObject *tmp_kw_name_47;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__metaclass);
            tmp_called_name_49 = tmp_QtWidgets$class_creation_3__metaclass;
            tmp_tuple_element_92 = const_str_plain_QSizePolicy;
            tmp_args_name_47 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_92);
            PyTuple_SET_ITEM(tmp_args_name_47, 0, tmp_tuple_element_92);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__bases);
            tmp_tuple_element_92 = tmp_QtWidgets$class_creation_3__bases;
            Py_INCREF(tmp_tuple_element_92);
            PyTuple_SET_ITEM(tmp_args_name_47, 1, tmp_tuple_element_92);
            tmp_tuple_element_92 = locals_PyQt5$uic$Compiler$qtproxies_295;
            Py_INCREF(tmp_tuple_element_92);
            PyTuple_SET_ITEM(tmp_args_name_47, 2, tmp_tuple_element_92);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_3__class_decl_dict);
            tmp_kw_name_47 = tmp_QtWidgets$class_creation_3__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 295;
            tmp_assign_source_195 = CALL_FUNCTION(tmp_called_name_49, tmp_args_name_47, tmp_kw_name_47);
            Py_DECREF(tmp_args_name_47);
            if (tmp_assign_source_195 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_2 = "o";
                goto try_except_handler_73;
            }
            assert(outline_23_var___class__ == NULL);
            outline_23_var___class__ = tmp_assign_source_195;
        }
        CHECK_OBJECT(outline_23_var___class__);
        tmp_dictset_value = outline_23_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_73;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_73:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_295);
        locals_PyQt5$uic$Compiler$qtproxies_295 = NULL;
        goto try_return_handler_72;
        // Exception handler code:
        try_except_handler_73:;
        exception_keeper_type_68 = exception_type;
        exception_keeper_value_68 = exception_value;
        exception_keeper_tb_68 = exception_tb;
        exception_keeper_lineno_68 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_295);
        locals_PyQt5$uic$Compiler$qtproxies_295 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_68;
        exception_value = exception_keeper_value_68;
        exception_tb = exception_keeper_tb_68;
        exception_lineno = exception_keeper_lineno_68;

        goto try_except_handler_72;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_72:;
        CHECK_OBJECT((PyObject *)outline_23_var___class__);
        Py_DECREF(outline_23_var___class__);
        outline_23_var___class__ = NULL;

        goto outline_result_24;
        // Exception handler code:
        try_except_handler_72:;
        exception_keeper_type_69 = exception_type;
        exception_keeper_value_69 = exception_value;
        exception_keeper_tb_69 = exception_tb;
        exception_keeper_lineno_69 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_69;
        exception_value = exception_keeper_value_69;
        exception_tb = exception_keeper_tb_69;
        exception_lineno = exception_keeper_lineno_69;

        goto outline_exception_24;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_24:;
        exception_lineno = 295;
        goto try_except_handler_71;
        outline_result_24:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QSizePolicy, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_2 = "o";
            goto try_except_handler_71;
        }
        goto try_end_24;
        // Exception handler code:
        try_except_handler_71:;
        exception_keeper_type_70 = exception_type;
        exception_keeper_value_70 = exception_value;
        exception_keeper_tb_70 = exception_tb;
        exception_keeper_lineno_70 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_3__bases_orig);
        tmp_QtWidgets$class_creation_3__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_3__bases);
        tmp_QtWidgets$class_creation_3__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_3__class_decl_dict);
        tmp_QtWidgets$class_creation_3__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_3__metaclass);
        tmp_QtWidgets$class_creation_3__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_3__prepared);
        tmp_QtWidgets$class_creation_3__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_70;
        exception_value = exception_keeper_value_70;
        exception_tb = exception_keeper_tb_70;
        exception_lineno = exception_keeper_lineno_70;

        goto frame_exception_exit_12;
        // End of try:
        try_end_24:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_3__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_3__bases_orig);
        tmp_QtWidgets$class_creation_3__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_3__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_3__bases);
        tmp_QtWidgets$class_creation_3__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_3__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_3__class_decl_dict);
        tmp_QtWidgets$class_creation_3__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_3__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_3__metaclass);
        tmp_QtWidgets$class_creation_3__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_3__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_3__prepared);
        tmp_QtWidgets$class_creation_3__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_196;
            PyObject *tmp_tuple_element_93;
            PyObject *tmp_source_name_99;
            PyObject *tmp_mvar_value_27;
            tmp_source_name_99 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QtCore);

            if (tmp_source_name_99 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_27 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtCore);

                    if (unlikely(tmp_mvar_value_27 == NULL)) {
                        tmp_mvar_value_27 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtCore);
                    }

                    if (tmp_mvar_value_27 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1468 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 299;
                        type_description_2 = "o";
                        goto try_except_handler_74;
                    }

                    tmp_source_name_99 = tmp_mvar_value_27;
                    Py_INCREF(tmp_source_name_99);
                }
            }

            tmp_tuple_element_93 = LOOKUP_ATTRIBUTE(tmp_source_name_99, const_str_plain_QObject);
            Py_DECREF(tmp_source_name_99);
            if (tmp_tuple_element_93 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            tmp_assign_source_196 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_196, 0, tmp_tuple_element_93);
            assert(tmp_QtWidgets$class_creation_4__bases_orig == NULL);
            tmp_QtWidgets$class_creation_4__bases_orig = tmp_assign_source_196;
        }
        {
            PyObject *tmp_assign_source_197;
            PyObject *tmp_dircall_arg1_25;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases_orig);
            tmp_dircall_arg1_25 = tmp_QtWidgets$class_creation_4__bases_orig;
            Py_INCREF(tmp_dircall_arg1_25);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_25};
                tmp_assign_source_197 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_197 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            assert(tmp_QtWidgets$class_creation_4__bases == NULL);
            tmp_QtWidgets$class_creation_4__bases = tmp_assign_source_197;
        }
        {
            PyObject *tmp_assign_source_198;
            tmp_assign_source_198 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_4__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_4__class_decl_dict = tmp_assign_source_198;
        }
        {
            PyObject *tmp_assign_source_199;
            PyObject *tmp_metaclass_name_25;
            nuitka_bool tmp_condition_result_147;
            PyObject *tmp_key_name_73;
            PyObject *tmp_dict_name_73;
            PyObject *tmp_dict_name_74;
            PyObject *tmp_key_name_74;
            nuitka_bool tmp_condition_result_148;
            int tmp_truth_name_25;
            PyObject *tmp_type_arg_49;
            PyObject *tmp_subscribed_name_25;
            PyObject *tmp_subscript_name_25;
            PyObject *tmp_bases_name_25;
            tmp_key_name_73 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__class_decl_dict);
            tmp_dict_name_73 = tmp_QtWidgets$class_creation_4__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_73, tmp_key_name_73);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            tmp_condition_result_147 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_147 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_51;
            } else {
                goto condexpr_false_51;
            }
            condexpr_true_51:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__class_decl_dict);
            tmp_dict_name_74 = tmp_QtWidgets$class_creation_4__class_decl_dict;
            tmp_key_name_74 = const_str_plain_metaclass;
            tmp_metaclass_name_25 = DICT_GET_ITEM(tmp_dict_name_74, tmp_key_name_74);
            if (tmp_metaclass_name_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            goto condexpr_end_51;
            condexpr_false_51:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases);
            tmp_truth_name_25 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_4__bases);
            if (tmp_truth_name_25 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            tmp_condition_result_148 = tmp_truth_name_25 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_148 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_52;
            } else {
                goto condexpr_false_52;
            }
            condexpr_true_52:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases);
            tmp_subscribed_name_25 = tmp_QtWidgets$class_creation_4__bases;
            tmp_subscript_name_25 = const_int_0;
            tmp_type_arg_49 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_25, tmp_subscript_name_25, 0);
            if (tmp_type_arg_49 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            tmp_metaclass_name_25 = BUILTIN_TYPE1(tmp_type_arg_49);
            Py_DECREF(tmp_type_arg_49);
            if (tmp_metaclass_name_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            goto condexpr_end_52;
            condexpr_false_52:;
            tmp_metaclass_name_25 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_25);
            condexpr_end_52:;
            condexpr_end_51:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases);
            tmp_bases_name_25 = tmp_QtWidgets$class_creation_4__bases;
            tmp_assign_source_199 = SELECT_METACLASS(tmp_metaclass_name_25, tmp_bases_name_25);
            Py_DECREF(tmp_metaclass_name_25);
            if (tmp_assign_source_199 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            assert(tmp_QtWidgets$class_creation_4__metaclass == NULL);
            tmp_QtWidgets$class_creation_4__metaclass = tmp_assign_source_199;
        }
        {
            nuitka_bool tmp_condition_result_149;
            PyObject *tmp_key_name_75;
            PyObject *tmp_dict_name_75;
            tmp_key_name_75 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__class_decl_dict);
            tmp_dict_name_75 = tmp_QtWidgets$class_creation_4__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_75, tmp_key_name_75);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            tmp_condition_result_149 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_149 == NUITKA_BOOL_TRUE) {
                goto branch_yes_97;
            } else {
                goto branch_no_97;
            }
            branch_yes_97:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_4__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_74;
            }
            branch_no_97:;
        }
        {
            nuitka_bool tmp_condition_result_150;
            PyObject *tmp_source_name_100;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__metaclass);
            tmp_source_name_100 = tmp_QtWidgets$class_creation_4__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_100, const_str_plain___prepare__);
            tmp_condition_result_150 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_150 == NUITKA_BOOL_TRUE) {
                goto branch_yes_98;
            } else {
                goto branch_no_98;
            }
            branch_yes_98:;
            {
                PyObject *tmp_assign_source_200;
                PyObject *tmp_called_name_50;
                PyObject *tmp_source_name_101;
                PyObject *tmp_args_name_48;
                PyObject *tmp_tuple_element_94;
                PyObject *tmp_kw_name_48;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_4__metaclass);
                tmp_source_name_101 = tmp_QtWidgets$class_creation_4__metaclass;
                tmp_called_name_50 = LOOKUP_ATTRIBUTE(tmp_source_name_101, const_str_plain___prepare__);
                if (tmp_called_name_50 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 299;
                    type_description_2 = "o";
                    goto try_except_handler_74;
                }
                tmp_tuple_element_94 = const_str_plain_QAction;
                tmp_args_name_48 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_94);
                PyTuple_SET_ITEM(tmp_args_name_48, 0, tmp_tuple_element_94);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases);
                tmp_tuple_element_94 = tmp_QtWidgets$class_creation_4__bases;
                Py_INCREF(tmp_tuple_element_94);
                PyTuple_SET_ITEM(tmp_args_name_48, 1, tmp_tuple_element_94);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_4__class_decl_dict);
                tmp_kw_name_48 = tmp_QtWidgets$class_creation_4__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 299;
                tmp_assign_source_200 = CALL_FUNCTION(tmp_called_name_50, tmp_args_name_48, tmp_kw_name_48);
                Py_DECREF(tmp_called_name_50);
                Py_DECREF(tmp_args_name_48);
                if (tmp_assign_source_200 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 299;
                    type_description_2 = "o";
                    goto try_except_handler_74;
                }
                assert(tmp_QtWidgets$class_creation_4__prepared == NULL);
                tmp_QtWidgets$class_creation_4__prepared = tmp_assign_source_200;
            }
            {
                nuitka_bool tmp_condition_result_151;
                PyObject *tmp_operand_name_25;
                PyObject *tmp_source_name_102;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_4__prepared);
                tmp_source_name_102 = tmp_QtWidgets$class_creation_4__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_102, const_str_plain___getitem__);
                tmp_operand_name_25 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_25);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 299;
                    type_description_2 = "o";
                    goto try_except_handler_74;
                }
                tmp_condition_result_151 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_151 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_99;
                } else {
                    goto branch_no_99;
                }
                branch_yes_99:;
                {
                    PyObject *tmp_raise_type_25;
                    PyObject *tmp_raise_value_25;
                    PyObject *tmp_left_name_25;
                    PyObject *tmp_right_name_25;
                    PyObject *tmp_tuple_element_95;
                    PyObject *tmp_getattr_target_25;
                    PyObject *tmp_getattr_attr_25;
                    PyObject *tmp_getattr_default_25;
                    PyObject *tmp_source_name_103;
                    PyObject *tmp_type_arg_50;
                    tmp_raise_type_25 = PyExc_TypeError;
                    tmp_left_name_25 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_4__metaclass);
                    tmp_getattr_target_25 = tmp_QtWidgets$class_creation_4__metaclass;
                    tmp_getattr_attr_25 = const_str_plain___name__;
                    tmp_getattr_default_25 = const_str_angle_metaclass;
                    tmp_tuple_element_95 = BUILTIN_GETATTR(tmp_getattr_target_25, tmp_getattr_attr_25, tmp_getattr_default_25);
                    if (tmp_tuple_element_95 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 299;
                        type_description_2 = "o";
                        goto try_except_handler_74;
                    }
                    tmp_right_name_25 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_25, 0, tmp_tuple_element_95);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_4__prepared);
                    tmp_type_arg_50 = tmp_QtWidgets$class_creation_4__prepared;
                    tmp_source_name_103 = BUILTIN_TYPE1(tmp_type_arg_50);
                    assert(!(tmp_source_name_103 == NULL));
                    tmp_tuple_element_95 = LOOKUP_ATTRIBUTE(tmp_source_name_103, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_103);
                    if (tmp_tuple_element_95 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_25);

                        exception_lineno = 299;
                        type_description_2 = "o";
                        goto try_except_handler_74;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_25, 1, tmp_tuple_element_95);
                    tmp_raise_value_25 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_25, tmp_right_name_25);
                    Py_DECREF(tmp_right_name_25);
                    if (tmp_raise_value_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 299;
                        type_description_2 = "o";
                        goto try_except_handler_74;
                    }
                    exception_type = tmp_raise_type_25;
                    Py_INCREF(tmp_raise_type_25);
                    exception_value = tmp_raise_value_25;
                    exception_lineno = 299;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_74;
                }
                branch_no_99:;
            }
            goto branch_end_98;
            branch_no_98:;
            {
                PyObject *tmp_assign_source_201;
                tmp_assign_source_201 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_4__prepared == NULL);
                tmp_QtWidgets$class_creation_4__prepared = tmp_assign_source_201;
            }
            branch_end_98:;
        }
        {
            PyObject *tmp_set_locals_25;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__prepared);
            tmp_set_locals_25 = tmp_QtWidgets$class_creation_4__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_299 = tmp_set_locals_25;
            Py_INCREF(tmp_set_locals_25);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_299, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 299;
            type_description_2 = "o";
            goto try_except_handler_76;
        }
        tmp_dictset_value = const_str_digest_4d59462542f561c3c69bc696d0fb9319;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_299, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 299;
            type_description_2 = "o";
            goto try_except_handler_76;
        }
        {
            nuitka_bool tmp_condition_result_152;
            PyObject *tmp_compexpr_left_25;
            PyObject *tmp_compexpr_right_25;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases);
            tmp_compexpr_left_25 = tmp_QtWidgets$class_creation_4__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases_orig);
            tmp_compexpr_right_25 = tmp_QtWidgets$class_creation_4__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_25, tmp_compexpr_right_25);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_76;
            }
            tmp_condition_result_152 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_152 == NUITKA_BOOL_TRUE) {
                goto branch_yes_100;
            } else {
                goto branch_no_100;
            }
            branch_yes_100:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_4__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_299, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_76;
            }
            branch_no_100:;
        }
        {
            PyObject *tmp_assign_source_202;
            PyObject *tmp_called_name_51;
            PyObject *tmp_args_name_49;
            PyObject *tmp_tuple_element_96;
            PyObject *tmp_kw_name_49;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__metaclass);
            tmp_called_name_51 = tmp_QtWidgets$class_creation_4__metaclass;
            tmp_tuple_element_96 = const_str_plain_QAction;
            tmp_args_name_49 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_96);
            PyTuple_SET_ITEM(tmp_args_name_49, 0, tmp_tuple_element_96);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__bases);
            tmp_tuple_element_96 = tmp_QtWidgets$class_creation_4__bases;
            Py_INCREF(tmp_tuple_element_96);
            PyTuple_SET_ITEM(tmp_args_name_49, 1, tmp_tuple_element_96);
            tmp_tuple_element_96 = locals_PyQt5$uic$Compiler$qtproxies_299;
            Py_INCREF(tmp_tuple_element_96);
            PyTuple_SET_ITEM(tmp_args_name_49, 2, tmp_tuple_element_96);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_4__class_decl_dict);
            tmp_kw_name_49 = tmp_QtWidgets$class_creation_4__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 299;
            tmp_assign_source_202 = CALL_FUNCTION(tmp_called_name_51, tmp_args_name_49, tmp_kw_name_49);
            Py_DECREF(tmp_args_name_49);
            if (tmp_assign_source_202 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_2 = "o";
                goto try_except_handler_76;
            }
            assert(outline_24_var___class__ == NULL);
            outline_24_var___class__ = tmp_assign_source_202;
        }
        CHECK_OBJECT(outline_24_var___class__);
        tmp_dictset_value = outline_24_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_76;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_76:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_299);
        locals_PyQt5$uic$Compiler$qtproxies_299 = NULL;
        goto try_return_handler_75;
        // Exception handler code:
        try_except_handler_76:;
        exception_keeper_type_71 = exception_type;
        exception_keeper_value_71 = exception_value;
        exception_keeper_tb_71 = exception_tb;
        exception_keeper_lineno_71 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_299);
        locals_PyQt5$uic$Compiler$qtproxies_299 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_71;
        exception_value = exception_keeper_value_71;
        exception_tb = exception_keeper_tb_71;
        exception_lineno = exception_keeper_lineno_71;

        goto try_except_handler_75;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_75:;
        CHECK_OBJECT((PyObject *)outline_24_var___class__);
        Py_DECREF(outline_24_var___class__);
        outline_24_var___class__ = NULL;

        goto outline_result_25;
        // Exception handler code:
        try_except_handler_75:;
        exception_keeper_type_72 = exception_type;
        exception_keeper_value_72 = exception_value;
        exception_keeper_tb_72 = exception_tb;
        exception_keeper_lineno_72 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_72;
        exception_value = exception_keeper_value_72;
        exception_tb = exception_keeper_tb_72;
        exception_lineno = exception_keeper_lineno_72;

        goto outline_exception_25;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_25:;
        exception_lineno = 299;
        goto try_except_handler_74;
        outline_result_25:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAction, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 299;
            type_description_2 = "o";
            goto try_except_handler_74;
        }
        goto try_end_25;
        // Exception handler code:
        try_except_handler_74:;
        exception_keeper_type_73 = exception_type;
        exception_keeper_value_73 = exception_value;
        exception_keeper_tb_73 = exception_tb;
        exception_keeper_lineno_73 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_4__bases_orig);
        tmp_QtWidgets$class_creation_4__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_4__bases);
        tmp_QtWidgets$class_creation_4__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_4__class_decl_dict);
        tmp_QtWidgets$class_creation_4__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_4__metaclass);
        tmp_QtWidgets$class_creation_4__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_4__prepared);
        tmp_QtWidgets$class_creation_4__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_73;
        exception_value = exception_keeper_value_73;
        exception_tb = exception_keeper_tb_73;
        exception_lineno = exception_keeper_lineno_73;

        goto frame_exception_exit_12;
        // End of try:
        try_end_25:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_4__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_4__bases_orig);
        tmp_QtWidgets$class_creation_4__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_4__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_4__bases);
        tmp_QtWidgets$class_creation_4__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_4__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_4__class_decl_dict);
        tmp_QtWidgets$class_creation_4__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_4__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_4__metaclass);
        tmp_QtWidgets$class_creation_4__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_4__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_4__prepared);
        tmp_QtWidgets$class_creation_4__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_203;
            PyObject *tmp_tuple_element_97;
            PyObject *tmp_source_name_104;
            PyObject *tmp_mvar_value_28;
            tmp_source_name_104 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QtCore);

            if (tmp_source_name_104 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_28 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtCore);

                    if (unlikely(tmp_mvar_value_28 == NULL)) {
                        tmp_mvar_value_28 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtCore);
                    }

                    if (tmp_mvar_value_28 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1468 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 300;
                        type_description_2 = "o";
                        goto try_except_handler_77;
                    }

                    tmp_source_name_104 = tmp_mvar_value_28;
                    Py_INCREF(tmp_source_name_104);
                }
            }

            tmp_tuple_element_97 = LOOKUP_ATTRIBUTE(tmp_source_name_104, const_str_plain_QObject);
            Py_DECREF(tmp_source_name_104);
            if (tmp_tuple_element_97 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            tmp_assign_source_203 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_203, 0, tmp_tuple_element_97);
            assert(tmp_QtWidgets$class_creation_5__bases_orig == NULL);
            tmp_QtWidgets$class_creation_5__bases_orig = tmp_assign_source_203;
        }
        {
            PyObject *tmp_assign_source_204;
            PyObject *tmp_dircall_arg1_26;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases_orig);
            tmp_dircall_arg1_26 = tmp_QtWidgets$class_creation_5__bases_orig;
            Py_INCREF(tmp_dircall_arg1_26);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_26};
                tmp_assign_source_204 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_204 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            assert(tmp_QtWidgets$class_creation_5__bases == NULL);
            tmp_QtWidgets$class_creation_5__bases = tmp_assign_source_204;
        }
        {
            PyObject *tmp_assign_source_205;
            tmp_assign_source_205 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_5__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_5__class_decl_dict = tmp_assign_source_205;
        }
        {
            PyObject *tmp_assign_source_206;
            PyObject *tmp_metaclass_name_26;
            nuitka_bool tmp_condition_result_153;
            PyObject *tmp_key_name_76;
            PyObject *tmp_dict_name_76;
            PyObject *tmp_dict_name_77;
            PyObject *tmp_key_name_77;
            nuitka_bool tmp_condition_result_154;
            int tmp_truth_name_26;
            PyObject *tmp_type_arg_51;
            PyObject *tmp_subscribed_name_26;
            PyObject *tmp_subscript_name_26;
            PyObject *tmp_bases_name_26;
            tmp_key_name_76 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__class_decl_dict);
            tmp_dict_name_76 = tmp_QtWidgets$class_creation_5__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_76, tmp_key_name_76);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            tmp_condition_result_153 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_153 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_53;
            } else {
                goto condexpr_false_53;
            }
            condexpr_true_53:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__class_decl_dict);
            tmp_dict_name_77 = tmp_QtWidgets$class_creation_5__class_decl_dict;
            tmp_key_name_77 = const_str_plain_metaclass;
            tmp_metaclass_name_26 = DICT_GET_ITEM(tmp_dict_name_77, tmp_key_name_77);
            if (tmp_metaclass_name_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            goto condexpr_end_53;
            condexpr_false_53:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases);
            tmp_truth_name_26 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_5__bases);
            if (tmp_truth_name_26 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            tmp_condition_result_154 = tmp_truth_name_26 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_154 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_54;
            } else {
                goto condexpr_false_54;
            }
            condexpr_true_54:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases);
            tmp_subscribed_name_26 = tmp_QtWidgets$class_creation_5__bases;
            tmp_subscript_name_26 = const_int_0;
            tmp_type_arg_51 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_26, tmp_subscript_name_26, 0);
            if (tmp_type_arg_51 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            tmp_metaclass_name_26 = BUILTIN_TYPE1(tmp_type_arg_51);
            Py_DECREF(tmp_type_arg_51);
            if (tmp_metaclass_name_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            goto condexpr_end_54;
            condexpr_false_54:;
            tmp_metaclass_name_26 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_26);
            condexpr_end_54:;
            condexpr_end_53:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases);
            tmp_bases_name_26 = tmp_QtWidgets$class_creation_5__bases;
            tmp_assign_source_206 = SELECT_METACLASS(tmp_metaclass_name_26, tmp_bases_name_26);
            Py_DECREF(tmp_metaclass_name_26);
            if (tmp_assign_source_206 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            assert(tmp_QtWidgets$class_creation_5__metaclass == NULL);
            tmp_QtWidgets$class_creation_5__metaclass = tmp_assign_source_206;
        }
        {
            nuitka_bool tmp_condition_result_155;
            PyObject *tmp_key_name_78;
            PyObject *tmp_dict_name_78;
            tmp_key_name_78 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__class_decl_dict);
            tmp_dict_name_78 = tmp_QtWidgets$class_creation_5__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_78, tmp_key_name_78);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            tmp_condition_result_155 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_155 == NUITKA_BOOL_TRUE) {
                goto branch_yes_101;
            } else {
                goto branch_no_101;
            }
            branch_yes_101:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_5__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_77;
            }
            branch_no_101:;
        }
        {
            nuitka_bool tmp_condition_result_156;
            PyObject *tmp_source_name_105;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__metaclass);
            tmp_source_name_105 = tmp_QtWidgets$class_creation_5__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_105, const_str_plain___prepare__);
            tmp_condition_result_156 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_156 == NUITKA_BOOL_TRUE) {
                goto branch_yes_102;
            } else {
                goto branch_no_102;
            }
            branch_yes_102:;
            {
                PyObject *tmp_assign_source_207;
                PyObject *tmp_called_name_52;
                PyObject *tmp_source_name_106;
                PyObject *tmp_args_name_50;
                PyObject *tmp_tuple_element_98;
                PyObject *tmp_kw_name_50;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_5__metaclass);
                tmp_source_name_106 = tmp_QtWidgets$class_creation_5__metaclass;
                tmp_called_name_52 = LOOKUP_ATTRIBUTE(tmp_source_name_106, const_str_plain___prepare__);
                if (tmp_called_name_52 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 300;
                    type_description_2 = "o";
                    goto try_except_handler_77;
                }
                tmp_tuple_element_98 = const_str_plain_QActionGroup;
                tmp_args_name_50 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_98);
                PyTuple_SET_ITEM(tmp_args_name_50, 0, tmp_tuple_element_98);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases);
                tmp_tuple_element_98 = tmp_QtWidgets$class_creation_5__bases;
                Py_INCREF(tmp_tuple_element_98);
                PyTuple_SET_ITEM(tmp_args_name_50, 1, tmp_tuple_element_98);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_5__class_decl_dict);
                tmp_kw_name_50 = tmp_QtWidgets$class_creation_5__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 300;
                tmp_assign_source_207 = CALL_FUNCTION(tmp_called_name_52, tmp_args_name_50, tmp_kw_name_50);
                Py_DECREF(tmp_called_name_52);
                Py_DECREF(tmp_args_name_50);
                if (tmp_assign_source_207 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 300;
                    type_description_2 = "o";
                    goto try_except_handler_77;
                }
                assert(tmp_QtWidgets$class_creation_5__prepared == NULL);
                tmp_QtWidgets$class_creation_5__prepared = tmp_assign_source_207;
            }
            {
                nuitka_bool tmp_condition_result_157;
                PyObject *tmp_operand_name_26;
                PyObject *tmp_source_name_107;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_5__prepared);
                tmp_source_name_107 = tmp_QtWidgets$class_creation_5__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_107, const_str_plain___getitem__);
                tmp_operand_name_26 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_26);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 300;
                    type_description_2 = "o";
                    goto try_except_handler_77;
                }
                tmp_condition_result_157 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_157 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_103;
                } else {
                    goto branch_no_103;
                }
                branch_yes_103:;
                {
                    PyObject *tmp_raise_type_26;
                    PyObject *tmp_raise_value_26;
                    PyObject *tmp_left_name_26;
                    PyObject *tmp_right_name_26;
                    PyObject *tmp_tuple_element_99;
                    PyObject *tmp_getattr_target_26;
                    PyObject *tmp_getattr_attr_26;
                    PyObject *tmp_getattr_default_26;
                    PyObject *tmp_source_name_108;
                    PyObject *tmp_type_arg_52;
                    tmp_raise_type_26 = PyExc_TypeError;
                    tmp_left_name_26 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_5__metaclass);
                    tmp_getattr_target_26 = tmp_QtWidgets$class_creation_5__metaclass;
                    tmp_getattr_attr_26 = const_str_plain___name__;
                    tmp_getattr_default_26 = const_str_angle_metaclass;
                    tmp_tuple_element_99 = BUILTIN_GETATTR(tmp_getattr_target_26, tmp_getattr_attr_26, tmp_getattr_default_26);
                    if (tmp_tuple_element_99 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 300;
                        type_description_2 = "o";
                        goto try_except_handler_77;
                    }
                    tmp_right_name_26 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_26, 0, tmp_tuple_element_99);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_5__prepared);
                    tmp_type_arg_52 = tmp_QtWidgets$class_creation_5__prepared;
                    tmp_source_name_108 = BUILTIN_TYPE1(tmp_type_arg_52);
                    assert(!(tmp_source_name_108 == NULL));
                    tmp_tuple_element_99 = LOOKUP_ATTRIBUTE(tmp_source_name_108, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_108);
                    if (tmp_tuple_element_99 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_26);

                        exception_lineno = 300;
                        type_description_2 = "o";
                        goto try_except_handler_77;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_26, 1, tmp_tuple_element_99);
                    tmp_raise_value_26 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_26, tmp_right_name_26);
                    Py_DECREF(tmp_right_name_26);
                    if (tmp_raise_value_26 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 300;
                        type_description_2 = "o";
                        goto try_except_handler_77;
                    }
                    exception_type = tmp_raise_type_26;
                    Py_INCREF(tmp_raise_type_26);
                    exception_value = tmp_raise_value_26;
                    exception_lineno = 300;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_77;
                }
                branch_no_103:;
            }
            goto branch_end_102;
            branch_no_102:;
            {
                PyObject *tmp_assign_source_208;
                tmp_assign_source_208 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_5__prepared == NULL);
                tmp_QtWidgets$class_creation_5__prepared = tmp_assign_source_208;
            }
            branch_end_102:;
        }
        {
            PyObject *tmp_set_locals_26;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__prepared);
            tmp_set_locals_26 = tmp_QtWidgets$class_creation_5__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_300 = tmp_set_locals_26;
            Py_INCREF(tmp_set_locals_26);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_300, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 300;
            type_description_2 = "o";
            goto try_except_handler_79;
        }
        tmp_dictset_value = const_str_digest_82953e72263762ee43fd71536cb103f9;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_300, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 300;
            type_description_2 = "o";
            goto try_except_handler_79;
        }
        {
            nuitka_bool tmp_condition_result_158;
            PyObject *tmp_compexpr_left_26;
            PyObject *tmp_compexpr_right_26;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases);
            tmp_compexpr_left_26 = tmp_QtWidgets$class_creation_5__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases_orig);
            tmp_compexpr_right_26 = tmp_QtWidgets$class_creation_5__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_26, tmp_compexpr_right_26);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_79;
            }
            tmp_condition_result_158 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_158 == NUITKA_BOOL_TRUE) {
                goto branch_yes_104;
            } else {
                goto branch_no_104;
            }
            branch_yes_104:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_5__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_300, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_79;
            }
            branch_no_104:;
        }
        {
            PyObject *tmp_assign_source_209;
            PyObject *tmp_called_name_53;
            PyObject *tmp_args_name_51;
            PyObject *tmp_tuple_element_100;
            PyObject *tmp_kw_name_51;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__metaclass);
            tmp_called_name_53 = tmp_QtWidgets$class_creation_5__metaclass;
            tmp_tuple_element_100 = const_str_plain_QActionGroup;
            tmp_args_name_51 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_100);
            PyTuple_SET_ITEM(tmp_args_name_51, 0, tmp_tuple_element_100);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__bases);
            tmp_tuple_element_100 = tmp_QtWidgets$class_creation_5__bases;
            Py_INCREF(tmp_tuple_element_100);
            PyTuple_SET_ITEM(tmp_args_name_51, 1, tmp_tuple_element_100);
            tmp_tuple_element_100 = locals_PyQt5$uic$Compiler$qtproxies_300;
            Py_INCREF(tmp_tuple_element_100);
            PyTuple_SET_ITEM(tmp_args_name_51, 2, tmp_tuple_element_100);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_5__class_decl_dict);
            tmp_kw_name_51 = tmp_QtWidgets$class_creation_5__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 300;
            tmp_assign_source_209 = CALL_FUNCTION(tmp_called_name_53, tmp_args_name_51, tmp_kw_name_51);
            Py_DECREF(tmp_args_name_51);
            if (tmp_assign_source_209 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_2 = "o";
                goto try_except_handler_79;
            }
            assert(outline_25_var___class__ == NULL);
            outline_25_var___class__ = tmp_assign_source_209;
        }
        CHECK_OBJECT(outline_25_var___class__);
        tmp_dictset_value = outline_25_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_79;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_79:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_300);
        locals_PyQt5$uic$Compiler$qtproxies_300 = NULL;
        goto try_return_handler_78;
        // Exception handler code:
        try_except_handler_79:;
        exception_keeper_type_74 = exception_type;
        exception_keeper_value_74 = exception_value;
        exception_keeper_tb_74 = exception_tb;
        exception_keeper_lineno_74 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_300);
        locals_PyQt5$uic$Compiler$qtproxies_300 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_74;
        exception_value = exception_keeper_value_74;
        exception_tb = exception_keeper_tb_74;
        exception_lineno = exception_keeper_lineno_74;

        goto try_except_handler_78;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_78:;
        CHECK_OBJECT((PyObject *)outline_25_var___class__);
        Py_DECREF(outline_25_var___class__);
        outline_25_var___class__ = NULL;

        goto outline_result_26;
        // Exception handler code:
        try_except_handler_78:;
        exception_keeper_type_75 = exception_type;
        exception_keeper_value_75 = exception_value;
        exception_keeper_tb_75 = exception_tb;
        exception_keeper_lineno_75 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_75;
        exception_value = exception_keeper_value_75;
        exception_tb = exception_keeper_tb_75;
        exception_lineno = exception_keeper_lineno_75;

        goto outline_exception_26;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_26:;
        exception_lineno = 300;
        goto try_except_handler_77;
        outline_result_26:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QActionGroup, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 300;
            type_description_2 = "o";
            goto try_except_handler_77;
        }
        goto try_end_26;
        // Exception handler code:
        try_except_handler_77:;
        exception_keeper_type_76 = exception_type;
        exception_keeper_value_76 = exception_value;
        exception_keeper_tb_76 = exception_tb;
        exception_keeper_lineno_76 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_5__bases_orig);
        tmp_QtWidgets$class_creation_5__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_5__bases);
        tmp_QtWidgets$class_creation_5__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_5__class_decl_dict);
        tmp_QtWidgets$class_creation_5__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_5__metaclass);
        tmp_QtWidgets$class_creation_5__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_5__prepared);
        tmp_QtWidgets$class_creation_5__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_76;
        exception_value = exception_keeper_value_76;
        exception_tb = exception_keeper_tb_76;
        exception_lineno = exception_keeper_lineno_76;

        goto frame_exception_exit_12;
        // End of try:
        try_end_26:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_5__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_5__bases_orig);
        tmp_QtWidgets$class_creation_5__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_5__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_5__bases);
        tmp_QtWidgets$class_creation_5__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_5__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_5__class_decl_dict);
        tmp_QtWidgets$class_creation_5__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_5__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_5__metaclass);
        tmp_QtWidgets$class_creation_5__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_5__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_5__prepared);
        tmp_QtWidgets$class_creation_5__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_210;
            PyObject *tmp_tuple_element_101;
            PyObject *tmp_source_name_109;
            PyObject *tmp_mvar_value_29;
            tmp_source_name_109 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QtCore);

            if (tmp_source_name_109 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_29 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtCore);

                    if (unlikely(tmp_mvar_value_29 == NULL)) {
                        tmp_mvar_value_29 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtCore);
                    }

                    if (tmp_mvar_value_29 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1468 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 301;
                        type_description_2 = "o";
                        goto try_except_handler_80;
                    }

                    tmp_source_name_109 = tmp_mvar_value_29;
                    Py_INCREF(tmp_source_name_109);
                }
            }

            tmp_tuple_element_101 = LOOKUP_ATTRIBUTE(tmp_source_name_109, const_str_plain_QObject);
            Py_DECREF(tmp_source_name_109);
            if (tmp_tuple_element_101 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            tmp_assign_source_210 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_210, 0, tmp_tuple_element_101);
            assert(tmp_QtWidgets$class_creation_6__bases_orig == NULL);
            tmp_QtWidgets$class_creation_6__bases_orig = tmp_assign_source_210;
        }
        {
            PyObject *tmp_assign_source_211;
            PyObject *tmp_dircall_arg1_27;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases_orig);
            tmp_dircall_arg1_27 = tmp_QtWidgets$class_creation_6__bases_orig;
            Py_INCREF(tmp_dircall_arg1_27);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_27};
                tmp_assign_source_211 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_211 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            assert(tmp_QtWidgets$class_creation_6__bases == NULL);
            tmp_QtWidgets$class_creation_6__bases = tmp_assign_source_211;
        }
        {
            PyObject *tmp_assign_source_212;
            tmp_assign_source_212 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_6__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_6__class_decl_dict = tmp_assign_source_212;
        }
        {
            PyObject *tmp_assign_source_213;
            PyObject *tmp_metaclass_name_27;
            nuitka_bool tmp_condition_result_159;
            PyObject *tmp_key_name_79;
            PyObject *tmp_dict_name_79;
            PyObject *tmp_dict_name_80;
            PyObject *tmp_key_name_80;
            nuitka_bool tmp_condition_result_160;
            int tmp_truth_name_27;
            PyObject *tmp_type_arg_53;
            PyObject *tmp_subscribed_name_27;
            PyObject *tmp_subscript_name_27;
            PyObject *tmp_bases_name_27;
            tmp_key_name_79 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__class_decl_dict);
            tmp_dict_name_79 = tmp_QtWidgets$class_creation_6__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_79, tmp_key_name_79);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            tmp_condition_result_159 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_159 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_55;
            } else {
                goto condexpr_false_55;
            }
            condexpr_true_55:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__class_decl_dict);
            tmp_dict_name_80 = tmp_QtWidgets$class_creation_6__class_decl_dict;
            tmp_key_name_80 = const_str_plain_metaclass;
            tmp_metaclass_name_27 = DICT_GET_ITEM(tmp_dict_name_80, tmp_key_name_80);
            if (tmp_metaclass_name_27 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            goto condexpr_end_55;
            condexpr_false_55:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases);
            tmp_truth_name_27 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_6__bases);
            if (tmp_truth_name_27 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            tmp_condition_result_160 = tmp_truth_name_27 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_160 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_56;
            } else {
                goto condexpr_false_56;
            }
            condexpr_true_56:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases);
            tmp_subscribed_name_27 = tmp_QtWidgets$class_creation_6__bases;
            tmp_subscript_name_27 = const_int_0;
            tmp_type_arg_53 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_27, tmp_subscript_name_27, 0);
            if (tmp_type_arg_53 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            tmp_metaclass_name_27 = BUILTIN_TYPE1(tmp_type_arg_53);
            Py_DECREF(tmp_type_arg_53);
            if (tmp_metaclass_name_27 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            goto condexpr_end_56;
            condexpr_false_56:;
            tmp_metaclass_name_27 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_27);
            condexpr_end_56:;
            condexpr_end_55:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases);
            tmp_bases_name_27 = tmp_QtWidgets$class_creation_6__bases;
            tmp_assign_source_213 = SELECT_METACLASS(tmp_metaclass_name_27, tmp_bases_name_27);
            Py_DECREF(tmp_metaclass_name_27);
            if (tmp_assign_source_213 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            assert(tmp_QtWidgets$class_creation_6__metaclass == NULL);
            tmp_QtWidgets$class_creation_6__metaclass = tmp_assign_source_213;
        }
        {
            nuitka_bool tmp_condition_result_161;
            PyObject *tmp_key_name_81;
            PyObject *tmp_dict_name_81;
            tmp_key_name_81 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__class_decl_dict);
            tmp_dict_name_81 = tmp_QtWidgets$class_creation_6__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_81, tmp_key_name_81);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            tmp_condition_result_161 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_161 == NUITKA_BOOL_TRUE) {
                goto branch_yes_105;
            } else {
                goto branch_no_105;
            }
            branch_yes_105:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_6__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_80;
            }
            branch_no_105:;
        }
        {
            nuitka_bool tmp_condition_result_162;
            PyObject *tmp_source_name_110;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__metaclass);
            tmp_source_name_110 = tmp_QtWidgets$class_creation_6__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_110, const_str_plain___prepare__);
            tmp_condition_result_162 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_162 == NUITKA_BOOL_TRUE) {
                goto branch_yes_106;
            } else {
                goto branch_no_106;
            }
            branch_yes_106:;
            {
                PyObject *tmp_assign_source_214;
                PyObject *tmp_called_name_54;
                PyObject *tmp_source_name_111;
                PyObject *tmp_args_name_52;
                PyObject *tmp_tuple_element_102;
                PyObject *tmp_kw_name_52;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_6__metaclass);
                tmp_source_name_111 = tmp_QtWidgets$class_creation_6__metaclass;
                tmp_called_name_54 = LOOKUP_ATTRIBUTE(tmp_source_name_111, const_str_plain___prepare__);
                if (tmp_called_name_54 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 301;
                    type_description_2 = "o";
                    goto try_except_handler_80;
                }
                tmp_tuple_element_102 = const_str_plain_QButtonGroup;
                tmp_args_name_52 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_102);
                PyTuple_SET_ITEM(tmp_args_name_52, 0, tmp_tuple_element_102);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases);
                tmp_tuple_element_102 = tmp_QtWidgets$class_creation_6__bases;
                Py_INCREF(tmp_tuple_element_102);
                PyTuple_SET_ITEM(tmp_args_name_52, 1, tmp_tuple_element_102);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_6__class_decl_dict);
                tmp_kw_name_52 = tmp_QtWidgets$class_creation_6__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 301;
                tmp_assign_source_214 = CALL_FUNCTION(tmp_called_name_54, tmp_args_name_52, tmp_kw_name_52);
                Py_DECREF(tmp_called_name_54);
                Py_DECREF(tmp_args_name_52);
                if (tmp_assign_source_214 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 301;
                    type_description_2 = "o";
                    goto try_except_handler_80;
                }
                assert(tmp_QtWidgets$class_creation_6__prepared == NULL);
                tmp_QtWidgets$class_creation_6__prepared = tmp_assign_source_214;
            }
            {
                nuitka_bool tmp_condition_result_163;
                PyObject *tmp_operand_name_27;
                PyObject *tmp_source_name_112;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_6__prepared);
                tmp_source_name_112 = tmp_QtWidgets$class_creation_6__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_112, const_str_plain___getitem__);
                tmp_operand_name_27 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_27);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 301;
                    type_description_2 = "o";
                    goto try_except_handler_80;
                }
                tmp_condition_result_163 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_163 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_107;
                } else {
                    goto branch_no_107;
                }
                branch_yes_107:;
                {
                    PyObject *tmp_raise_type_27;
                    PyObject *tmp_raise_value_27;
                    PyObject *tmp_left_name_27;
                    PyObject *tmp_right_name_27;
                    PyObject *tmp_tuple_element_103;
                    PyObject *tmp_getattr_target_27;
                    PyObject *tmp_getattr_attr_27;
                    PyObject *tmp_getattr_default_27;
                    PyObject *tmp_source_name_113;
                    PyObject *tmp_type_arg_54;
                    tmp_raise_type_27 = PyExc_TypeError;
                    tmp_left_name_27 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_6__metaclass);
                    tmp_getattr_target_27 = tmp_QtWidgets$class_creation_6__metaclass;
                    tmp_getattr_attr_27 = const_str_plain___name__;
                    tmp_getattr_default_27 = const_str_angle_metaclass;
                    tmp_tuple_element_103 = BUILTIN_GETATTR(tmp_getattr_target_27, tmp_getattr_attr_27, tmp_getattr_default_27);
                    if (tmp_tuple_element_103 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 301;
                        type_description_2 = "o";
                        goto try_except_handler_80;
                    }
                    tmp_right_name_27 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_27, 0, tmp_tuple_element_103);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_6__prepared);
                    tmp_type_arg_54 = tmp_QtWidgets$class_creation_6__prepared;
                    tmp_source_name_113 = BUILTIN_TYPE1(tmp_type_arg_54);
                    assert(!(tmp_source_name_113 == NULL));
                    tmp_tuple_element_103 = LOOKUP_ATTRIBUTE(tmp_source_name_113, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_113);
                    if (tmp_tuple_element_103 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_27);

                        exception_lineno = 301;
                        type_description_2 = "o";
                        goto try_except_handler_80;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_27, 1, tmp_tuple_element_103);
                    tmp_raise_value_27 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_27, tmp_right_name_27);
                    Py_DECREF(tmp_right_name_27);
                    if (tmp_raise_value_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 301;
                        type_description_2 = "o";
                        goto try_except_handler_80;
                    }
                    exception_type = tmp_raise_type_27;
                    Py_INCREF(tmp_raise_type_27);
                    exception_value = tmp_raise_value_27;
                    exception_lineno = 301;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_80;
                }
                branch_no_107:;
            }
            goto branch_end_106;
            branch_no_106:;
            {
                PyObject *tmp_assign_source_215;
                tmp_assign_source_215 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_6__prepared == NULL);
                tmp_QtWidgets$class_creation_6__prepared = tmp_assign_source_215;
            }
            branch_end_106:;
        }
        {
            PyObject *tmp_set_locals_27;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__prepared);
            tmp_set_locals_27 = tmp_QtWidgets$class_creation_6__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_301 = tmp_set_locals_27;
            Py_INCREF(tmp_set_locals_27);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_301, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 301;
            type_description_2 = "o";
            goto try_except_handler_82;
        }
        tmp_dictset_value = const_str_digest_17148cfb82ca51e0b7a9df37852d2daa;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_301, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 301;
            type_description_2 = "o";
            goto try_except_handler_82;
        }
        {
            nuitka_bool tmp_condition_result_164;
            PyObject *tmp_compexpr_left_27;
            PyObject *tmp_compexpr_right_27;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases);
            tmp_compexpr_left_27 = tmp_QtWidgets$class_creation_6__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases_orig);
            tmp_compexpr_right_27 = tmp_QtWidgets$class_creation_6__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_82;
            }
            tmp_condition_result_164 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_164 == NUITKA_BOOL_TRUE) {
                goto branch_yes_108;
            } else {
                goto branch_no_108;
            }
            branch_yes_108:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_6__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_301, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_82;
            }
            branch_no_108:;
        }
        {
            PyObject *tmp_assign_source_216;
            PyObject *tmp_called_name_55;
            PyObject *tmp_args_name_53;
            PyObject *tmp_tuple_element_104;
            PyObject *tmp_kw_name_53;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__metaclass);
            tmp_called_name_55 = tmp_QtWidgets$class_creation_6__metaclass;
            tmp_tuple_element_104 = const_str_plain_QButtonGroup;
            tmp_args_name_53 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_104);
            PyTuple_SET_ITEM(tmp_args_name_53, 0, tmp_tuple_element_104);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__bases);
            tmp_tuple_element_104 = tmp_QtWidgets$class_creation_6__bases;
            Py_INCREF(tmp_tuple_element_104);
            PyTuple_SET_ITEM(tmp_args_name_53, 1, tmp_tuple_element_104);
            tmp_tuple_element_104 = locals_PyQt5$uic$Compiler$qtproxies_301;
            Py_INCREF(tmp_tuple_element_104);
            PyTuple_SET_ITEM(tmp_args_name_53, 2, tmp_tuple_element_104);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_6__class_decl_dict);
            tmp_kw_name_53 = tmp_QtWidgets$class_creation_6__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 301;
            tmp_assign_source_216 = CALL_FUNCTION(tmp_called_name_55, tmp_args_name_53, tmp_kw_name_53);
            Py_DECREF(tmp_args_name_53);
            if (tmp_assign_source_216 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_2 = "o";
                goto try_except_handler_82;
            }
            assert(outline_26_var___class__ == NULL);
            outline_26_var___class__ = tmp_assign_source_216;
        }
        CHECK_OBJECT(outline_26_var___class__);
        tmp_dictset_value = outline_26_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_82;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_82:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_301);
        locals_PyQt5$uic$Compiler$qtproxies_301 = NULL;
        goto try_return_handler_81;
        // Exception handler code:
        try_except_handler_82:;
        exception_keeper_type_77 = exception_type;
        exception_keeper_value_77 = exception_value;
        exception_keeper_tb_77 = exception_tb;
        exception_keeper_lineno_77 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_301);
        locals_PyQt5$uic$Compiler$qtproxies_301 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_77;
        exception_value = exception_keeper_value_77;
        exception_tb = exception_keeper_tb_77;
        exception_lineno = exception_keeper_lineno_77;

        goto try_except_handler_81;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_81:;
        CHECK_OBJECT((PyObject *)outline_26_var___class__);
        Py_DECREF(outline_26_var___class__);
        outline_26_var___class__ = NULL;

        goto outline_result_27;
        // Exception handler code:
        try_except_handler_81:;
        exception_keeper_type_78 = exception_type;
        exception_keeper_value_78 = exception_value;
        exception_keeper_tb_78 = exception_tb;
        exception_keeper_lineno_78 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_78;
        exception_value = exception_keeper_value_78;
        exception_tb = exception_keeper_tb_78;
        exception_lineno = exception_keeper_lineno_78;

        goto outline_exception_27;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_27:;
        exception_lineno = 301;
        goto try_except_handler_80;
        outline_result_27:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QButtonGroup, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 301;
            type_description_2 = "o";
            goto try_except_handler_80;
        }
        goto try_end_27;
        // Exception handler code:
        try_except_handler_80:;
        exception_keeper_type_79 = exception_type;
        exception_keeper_value_79 = exception_value;
        exception_keeper_tb_79 = exception_tb;
        exception_keeper_lineno_79 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_6__bases_orig);
        tmp_QtWidgets$class_creation_6__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_6__bases);
        tmp_QtWidgets$class_creation_6__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_6__class_decl_dict);
        tmp_QtWidgets$class_creation_6__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_6__metaclass);
        tmp_QtWidgets$class_creation_6__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_6__prepared);
        tmp_QtWidgets$class_creation_6__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_79;
        exception_value = exception_keeper_value_79;
        exception_tb = exception_keeper_tb_79;
        exception_lineno = exception_keeper_lineno_79;

        goto frame_exception_exit_12;
        // End of try:
        try_end_27:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_6__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_6__bases_orig);
        tmp_QtWidgets$class_creation_6__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_6__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_6__bases);
        tmp_QtWidgets$class_creation_6__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_6__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_6__class_decl_dict);
        tmp_QtWidgets$class_creation_6__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_6__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_6__metaclass);
        tmp_QtWidgets$class_creation_6__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_6__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_6__prepared);
        tmp_QtWidgets$class_creation_6__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_217;
            PyObject *tmp_tuple_element_105;
            PyObject *tmp_source_name_114;
            PyObject *tmp_mvar_value_30;
            tmp_source_name_114 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QtCore);

            if (tmp_source_name_114 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_30 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtCore);

                    if (unlikely(tmp_mvar_value_30 == NULL)) {
                        tmp_mvar_value_30 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtCore);
                    }

                    if (tmp_mvar_value_30 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1468 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 302;
                        type_description_2 = "o";
                        goto try_except_handler_83;
                    }

                    tmp_source_name_114 = tmp_mvar_value_30;
                    Py_INCREF(tmp_source_name_114);
                }
            }

            tmp_tuple_element_105 = LOOKUP_ATTRIBUTE(tmp_source_name_114, const_str_plain_QObject);
            Py_DECREF(tmp_source_name_114);
            if (tmp_tuple_element_105 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            tmp_assign_source_217 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_217, 0, tmp_tuple_element_105);
            assert(tmp_QtWidgets$class_creation_7__bases_orig == NULL);
            tmp_QtWidgets$class_creation_7__bases_orig = tmp_assign_source_217;
        }
        {
            PyObject *tmp_assign_source_218;
            PyObject *tmp_dircall_arg1_28;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases_orig);
            tmp_dircall_arg1_28 = tmp_QtWidgets$class_creation_7__bases_orig;
            Py_INCREF(tmp_dircall_arg1_28);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_28};
                tmp_assign_source_218 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_218 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            assert(tmp_QtWidgets$class_creation_7__bases == NULL);
            tmp_QtWidgets$class_creation_7__bases = tmp_assign_source_218;
        }
        {
            PyObject *tmp_assign_source_219;
            tmp_assign_source_219 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_7__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_7__class_decl_dict = tmp_assign_source_219;
        }
        {
            PyObject *tmp_assign_source_220;
            PyObject *tmp_metaclass_name_28;
            nuitka_bool tmp_condition_result_165;
            PyObject *tmp_key_name_82;
            PyObject *tmp_dict_name_82;
            PyObject *tmp_dict_name_83;
            PyObject *tmp_key_name_83;
            nuitka_bool tmp_condition_result_166;
            int tmp_truth_name_28;
            PyObject *tmp_type_arg_55;
            PyObject *tmp_subscribed_name_28;
            PyObject *tmp_subscript_name_28;
            PyObject *tmp_bases_name_28;
            tmp_key_name_82 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__class_decl_dict);
            tmp_dict_name_82 = tmp_QtWidgets$class_creation_7__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_82, tmp_key_name_82);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            tmp_condition_result_165 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_165 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_57;
            } else {
                goto condexpr_false_57;
            }
            condexpr_true_57:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__class_decl_dict);
            tmp_dict_name_83 = tmp_QtWidgets$class_creation_7__class_decl_dict;
            tmp_key_name_83 = const_str_plain_metaclass;
            tmp_metaclass_name_28 = DICT_GET_ITEM(tmp_dict_name_83, tmp_key_name_83);
            if (tmp_metaclass_name_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            goto condexpr_end_57;
            condexpr_false_57:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases);
            tmp_truth_name_28 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_7__bases);
            if (tmp_truth_name_28 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            tmp_condition_result_166 = tmp_truth_name_28 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_166 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_58;
            } else {
                goto condexpr_false_58;
            }
            condexpr_true_58:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases);
            tmp_subscribed_name_28 = tmp_QtWidgets$class_creation_7__bases;
            tmp_subscript_name_28 = const_int_0;
            tmp_type_arg_55 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_28, tmp_subscript_name_28, 0);
            if (tmp_type_arg_55 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            tmp_metaclass_name_28 = BUILTIN_TYPE1(tmp_type_arg_55);
            Py_DECREF(tmp_type_arg_55);
            if (tmp_metaclass_name_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            goto condexpr_end_58;
            condexpr_false_58:;
            tmp_metaclass_name_28 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_28);
            condexpr_end_58:;
            condexpr_end_57:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases);
            tmp_bases_name_28 = tmp_QtWidgets$class_creation_7__bases;
            tmp_assign_source_220 = SELECT_METACLASS(tmp_metaclass_name_28, tmp_bases_name_28);
            Py_DECREF(tmp_metaclass_name_28);
            if (tmp_assign_source_220 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            assert(tmp_QtWidgets$class_creation_7__metaclass == NULL);
            tmp_QtWidgets$class_creation_7__metaclass = tmp_assign_source_220;
        }
        {
            nuitka_bool tmp_condition_result_167;
            PyObject *tmp_key_name_84;
            PyObject *tmp_dict_name_84;
            tmp_key_name_84 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__class_decl_dict);
            tmp_dict_name_84 = tmp_QtWidgets$class_creation_7__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_84, tmp_key_name_84);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            tmp_condition_result_167 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_167 == NUITKA_BOOL_TRUE) {
                goto branch_yes_109;
            } else {
                goto branch_no_109;
            }
            branch_yes_109:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_7__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_83;
            }
            branch_no_109:;
        }
        {
            nuitka_bool tmp_condition_result_168;
            PyObject *tmp_source_name_115;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__metaclass);
            tmp_source_name_115 = tmp_QtWidgets$class_creation_7__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_115, const_str_plain___prepare__);
            tmp_condition_result_168 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_168 == NUITKA_BOOL_TRUE) {
                goto branch_yes_110;
            } else {
                goto branch_no_110;
            }
            branch_yes_110:;
            {
                PyObject *tmp_assign_source_221;
                PyObject *tmp_called_name_56;
                PyObject *tmp_source_name_116;
                PyObject *tmp_args_name_54;
                PyObject *tmp_tuple_element_106;
                PyObject *tmp_kw_name_54;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_7__metaclass);
                tmp_source_name_116 = tmp_QtWidgets$class_creation_7__metaclass;
                tmp_called_name_56 = LOOKUP_ATTRIBUTE(tmp_source_name_116, const_str_plain___prepare__);
                if (tmp_called_name_56 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 302;
                    type_description_2 = "o";
                    goto try_except_handler_83;
                }
                tmp_tuple_element_106 = const_str_plain_QLayout;
                tmp_args_name_54 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_106);
                PyTuple_SET_ITEM(tmp_args_name_54, 0, tmp_tuple_element_106);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases);
                tmp_tuple_element_106 = tmp_QtWidgets$class_creation_7__bases;
                Py_INCREF(tmp_tuple_element_106);
                PyTuple_SET_ITEM(tmp_args_name_54, 1, tmp_tuple_element_106);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_7__class_decl_dict);
                tmp_kw_name_54 = tmp_QtWidgets$class_creation_7__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 302;
                tmp_assign_source_221 = CALL_FUNCTION(tmp_called_name_56, tmp_args_name_54, tmp_kw_name_54);
                Py_DECREF(tmp_called_name_56);
                Py_DECREF(tmp_args_name_54);
                if (tmp_assign_source_221 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 302;
                    type_description_2 = "o";
                    goto try_except_handler_83;
                }
                assert(tmp_QtWidgets$class_creation_7__prepared == NULL);
                tmp_QtWidgets$class_creation_7__prepared = tmp_assign_source_221;
            }
            {
                nuitka_bool tmp_condition_result_169;
                PyObject *tmp_operand_name_28;
                PyObject *tmp_source_name_117;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_7__prepared);
                tmp_source_name_117 = tmp_QtWidgets$class_creation_7__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_117, const_str_plain___getitem__);
                tmp_operand_name_28 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_28);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 302;
                    type_description_2 = "o";
                    goto try_except_handler_83;
                }
                tmp_condition_result_169 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_169 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_111;
                } else {
                    goto branch_no_111;
                }
                branch_yes_111:;
                {
                    PyObject *tmp_raise_type_28;
                    PyObject *tmp_raise_value_28;
                    PyObject *tmp_left_name_28;
                    PyObject *tmp_right_name_28;
                    PyObject *tmp_tuple_element_107;
                    PyObject *tmp_getattr_target_28;
                    PyObject *tmp_getattr_attr_28;
                    PyObject *tmp_getattr_default_28;
                    PyObject *tmp_source_name_118;
                    PyObject *tmp_type_arg_56;
                    tmp_raise_type_28 = PyExc_TypeError;
                    tmp_left_name_28 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_7__metaclass);
                    tmp_getattr_target_28 = tmp_QtWidgets$class_creation_7__metaclass;
                    tmp_getattr_attr_28 = const_str_plain___name__;
                    tmp_getattr_default_28 = const_str_angle_metaclass;
                    tmp_tuple_element_107 = BUILTIN_GETATTR(tmp_getattr_target_28, tmp_getattr_attr_28, tmp_getattr_default_28);
                    if (tmp_tuple_element_107 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 302;
                        type_description_2 = "o";
                        goto try_except_handler_83;
                    }
                    tmp_right_name_28 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_28, 0, tmp_tuple_element_107);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_7__prepared);
                    tmp_type_arg_56 = tmp_QtWidgets$class_creation_7__prepared;
                    tmp_source_name_118 = BUILTIN_TYPE1(tmp_type_arg_56);
                    assert(!(tmp_source_name_118 == NULL));
                    tmp_tuple_element_107 = LOOKUP_ATTRIBUTE(tmp_source_name_118, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_118);
                    if (tmp_tuple_element_107 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_28);

                        exception_lineno = 302;
                        type_description_2 = "o";
                        goto try_except_handler_83;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_28, 1, tmp_tuple_element_107);
                    tmp_raise_value_28 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_28, tmp_right_name_28);
                    Py_DECREF(tmp_right_name_28);
                    if (tmp_raise_value_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 302;
                        type_description_2 = "o";
                        goto try_except_handler_83;
                    }
                    exception_type = tmp_raise_type_28;
                    Py_INCREF(tmp_raise_type_28);
                    exception_value = tmp_raise_value_28;
                    exception_lineno = 302;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_83;
                }
                branch_no_111:;
            }
            goto branch_end_110;
            branch_no_110:;
            {
                PyObject *tmp_assign_source_222;
                tmp_assign_source_222 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_7__prepared == NULL);
                tmp_QtWidgets$class_creation_7__prepared = tmp_assign_source_222;
            }
            branch_end_110:;
        }
        {
            PyObject *tmp_set_locals_28;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__prepared);
            tmp_set_locals_28 = tmp_QtWidgets$class_creation_7__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_302 = tmp_set_locals_28;
            Py_INCREF(tmp_set_locals_28);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_302, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;
            type_description_2 = "o";
            goto try_except_handler_85;
        }
        tmp_dictset_value = const_str_digest_26f156ef8a5c98e314353ccffdff7278;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_302, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;
            type_description_2 = "o";
            goto try_except_handler_85;
        }
        {
            nuitka_bool tmp_condition_result_170;
            PyObject *tmp_compexpr_left_28;
            PyObject *tmp_compexpr_right_28;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases);
            tmp_compexpr_left_28 = tmp_QtWidgets$class_creation_7__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases_orig);
            tmp_compexpr_right_28 = tmp_QtWidgets$class_creation_7__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_28, tmp_compexpr_right_28);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_85;
            }
            tmp_condition_result_170 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_170 == NUITKA_BOOL_TRUE) {
                goto branch_yes_112;
            } else {
                goto branch_no_112;
            }
            branch_yes_112:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_7__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_302, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_85;
            }
            branch_no_112:;
        }
        {
            PyObject *tmp_assign_source_223;
            PyObject *tmp_called_name_57;
            PyObject *tmp_args_name_55;
            PyObject *tmp_tuple_element_108;
            PyObject *tmp_kw_name_55;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__metaclass);
            tmp_called_name_57 = tmp_QtWidgets$class_creation_7__metaclass;
            tmp_tuple_element_108 = const_str_plain_QLayout;
            tmp_args_name_55 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_108);
            PyTuple_SET_ITEM(tmp_args_name_55, 0, tmp_tuple_element_108);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__bases);
            tmp_tuple_element_108 = tmp_QtWidgets$class_creation_7__bases;
            Py_INCREF(tmp_tuple_element_108);
            PyTuple_SET_ITEM(tmp_args_name_55, 1, tmp_tuple_element_108);
            tmp_tuple_element_108 = locals_PyQt5$uic$Compiler$qtproxies_302;
            Py_INCREF(tmp_tuple_element_108);
            PyTuple_SET_ITEM(tmp_args_name_55, 2, tmp_tuple_element_108);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_7__class_decl_dict);
            tmp_kw_name_55 = tmp_QtWidgets$class_creation_7__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 302;
            tmp_assign_source_223 = CALL_FUNCTION(tmp_called_name_57, tmp_args_name_55, tmp_kw_name_55);
            Py_DECREF(tmp_args_name_55);
            if (tmp_assign_source_223 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_2 = "o";
                goto try_except_handler_85;
            }
            assert(outline_27_var___class__ == NULL);
            outline_27_var___class__ = tmp_assign_source_223;
        }
        CHECK_OBJECT(outline_27_var___class__);
        tmp_dictset_value = outline_27_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_85;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_85:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_302);
        locals_PyQt5$uic$Compiler$qtproxies_302 = NULL;
        goto try_return_handler_84;
        // Exception handler code:
        try_except_handler_85:;
        exception_keeper_type_80 = exception_type;
        exception_keeper_value_80 = exception_value;
        exception_keeper_tb_80 = exception_tb;
        exception_keeper_lineno_80 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_302);
        locals_PyQt5$uic$Compiler$qtproxies_302 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_80;
        exception_value = exception_keeper_value_80;
        exception_tb = exception_keeper_tb_80;
        exception_lineno = exception_keeper_lineno_80;

        goto try_except_handler_84;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_84:;
        CHECK_OBJECT((PyObject *)outline_27_var___class__);
        Py_DECREF(outline_27_var___class__);
        outline_27_var___class__ = NULL;

        goto outline_result_28;
        // Exception handler code:
        try_except_handler_84:;
        exception_keeper_type_81 = exception_type;
        exception_keeper_value_81 = exception_value;
        exception_keeper_tb_81 = exception_tb;
        exception_keeper_lineno_81 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_81;
        exception_value = exception_keeper_value_81;
        exception_tb = exception_keeper_tb_81;
        exception_lineno = exception_keeper_lineno_81;

        goto outline_exception_28;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_28:;
        exception_lineno = 302;
        goto try_except_handler_83;
        outline_result_28:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QLayout, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;
            type_description_2 = "o";
            goto try_except_handler_83;
        }
        goto try_end_28;
        // Exception handler code:
        try_except_handler_83:;
        exception_keeper_type_82 = exception_type;
        exception_keeper_value_82 = exception_value;
        exception_keeper_tb_82 = exception_tb;
        exception_keeper_lineno_82 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_7__bases_orig);
        tmp_QtWidgets$class_creation_7__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_7__bases);
        tmp_QtWidgets$class_creation_7__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_7__class_decl_dict);
        tmp_QtWidgets$class_creation_7__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_7__metaclass);
        tmp_QtWidgets$class_creation_7__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_7__prepared);
        tmp_QtWidgets$class_creation_7__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_82;
        exception_value = exception_keeper_value_82;
        exception_tb = exception_keeper_tb_82;
        exception_lineno = exception_keeper_lineno_82;

        goto frame_exception_exit_12;
        // End of try:
        try_end_28:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_7__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_7__bases_orig);
        tmp_QtWidgets$class_creation_7__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_7__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_7__bases);
        tmp_QtWidgets$class_creation_7__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_7__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_7__class_decl_dict);
        tmp_QtWidgets$class_creation_7__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_7__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_7__metaclass);
        tmp_QtWidgets$class_creation_7__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_7__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_7__prepared);
        tmp_QtWidgets$class_creation_7__prepared = NULL;

        {
            PyObject *tmp_assign_source_224;
            PyObject *tmp_tuple_element_109;
            tmp_tuple_element_109 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QLayout);

            if (tmp_tuple_element_109 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1530 ], 29, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 303;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_109 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_224 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_224, 0, tmp_tuple_element_109);
            assert(tmp_QtWidgets$class_creation_8__bases_orig == NULL);
            tmp_QtWidgets$class_creation_8__bases_orig = tmp_assign_source_224;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_225;
            PyObject *tmp_dircall_arg1_29;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases_orig);
            tmp_dircall_arg1_29 = tmp_QtWidgets$class_creation_8__bases_orig;
            Py_INCREF(tmp_dircall_arg1_29);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_29};
                tmp_assign_source_225 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_225 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            assert(tmp_QtWidgets$class_creation_8__bases == NULL);
            tmp_QtWidgets$class_creation_8__bases = tmp_assign_source_225;
        }
        {
            PyObject *tmp_assign_source_226;
            tmp_assign_source_226 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_8__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_8__class_decl_dict = tmp_assign_source_226;
        }
        {
            PyObject *tmp_assign_source_227;
            PyObject *tmp_metaclass_name_29;
            nuitka_bool tmp_condition_result_171;
            PyObject *tmp_key_name_85;
            PyObject *tmp_dict_name_85;
            PyObject *tmp_dict_name_86;
            PyObject *tmp_key_name_86;
            nuitka_bool tmp_condition_result_172;
            int tmp_truth_name_29;
            PyObject *tmp_type_arg_57;
            PyObject *tmp_subscribed_name_29;
            PyObject *tmp_subscript_name_29;
            PyObject *tmp_bases_name_29;
            tmp_key_name_85 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__class_decl_dict);
            tmp_dict_name_85 = tmp_QtWidgets$class_creation_8__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_85, tmp_key_name_85);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            tmp_condition_result_171 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_171 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_59;
            } else {
                goto condexpr_false_59;
            }
            condexpr_true_59:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__class_decl_dict);
            tmp_dict_name_86 = tmp_QtWidgets$class_creation_8__class_decl_dict;
            tmp_key_name_86 = const_str_plain_metaclass;
            tmp_metaclass_name_29 = DICT_GET_ITEM(tmp_dict_name_86, tmp_key_name_86);
            if (tmp_metaclass_name_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            goto condexpr_end_59;
            condexpr_false_59:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases);
            tmp_truth_name_29 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_8__bases);
            if (tmp_truth_name_29 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            tmp_condition_result_172 = tmp_truth_name_29 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_172 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_60;
            } else {
                goto condexpr_false_60;
            }
            condexpr_true_60:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases);
            tmp_subscribed_name_29 = tmp_QtWidgets$class_creation_8__bases;
            tmp_subscript_name_29 = const_int_0;
            tmp_type_arg_57 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_29, tmp_subscript_name_29, 0);
            if (tmp_type_arg_57 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            tmp_metaclass_name_29 = BUILTIN_TYPE1(tmp_type_arg_57);
            Py_DECREF(tmp_type_arg_57);
            if (tmp_metaclass_name_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            goto condexpr_end_60;
            condexpr_false_60:;
            tmp_metaclass_name_29 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_29);
            condexpr_end_60:;
            condexpr_end_59:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases);
            tmp_bases_name_29 = tmp_QtWidgets$class_creation_8__bases;
            tmp_assign_source_227 = SELECT_METACLASS(tmp_metaclass_name_29, tmp_bases_name_29);
            Py_DECREF(tmp_metaclass_name_29);
            if (tmp_assign_source_227 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            assert(tmp_QtWidgets$class_creation_8__metaclass == NULL);
            tmp_QtWidgets$class_creation_8__metaclass = tmp_assign_source_227;
        }
        {
            nuitka_bool tmp_condition_result_173;
            PyObject *tmp_key_name_87;
            PyObject *tmp_dict_name_87;
            tmp_key_name_87 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__class_decl_dict);
            tmp_dict_name_87 = tmp_QtWidgets$class_creation_8__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_87, tmp_key_name_87);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            tmp_condition_result_173 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_173 == NUITKA_BOOL_TRUE) {
                goto branch_yes_113;
            } else {
                goto branch_no_113;
            }
            branch_yes_113:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_8__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_86;
            }
            branch_no_113:;
        }
        {
            nuitka_bool tmp_condition_result_174;
            PyObject *tmp_source_name_119;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__metaclass);
            tmp_source_name_119 = tmp_QtWidgets$class_creation_8__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_119, const_str_plain___prepare__);
            tmp_condition_result_174 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_174 == NUITKA_BOOL_TRUE) {
                goto branch_yes_114;
            } else {
                goto branch_no_114;
            }
            branch_yes_114:;
            {
                PyObject *tmp_assign_source_228;
                PyObject *tmp_called_name_58;
                PyObject *tmp_source_name_120;
                PyObject *tmp_args_name_56;
                PyObject *tmp_tuple_element_110;
                PyObject *tmp_kw_name_56;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_8__metaclass);
                tmp_source_name_120 = tmp_QtWidgets$class_creation_8__metaclass;
                tmp_called_name_58 = LOOKUP_ATTRIBUTE(tmp_source_name_120, const_str_plain___prepare__);
                if (tmp_called_name_58 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 303;
                    type_description_2 = "o";
                    goto try_except_handler_86;
                }
                tmp_tuple_element_110 = const_str_plain_QGridLayout;
                tmp_args_name_56 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_110);
                PyTuple_SET_ITEM(tmp_args_name_56, 0, tmp_tuple_element_110);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases);
                tmp_tuple_element_110 = tmp_QtWidgets$class_creation_8__bases;
                Py_INCREF(tmp_tuple_element_110);
                PyTuple_SET_ITEM(tmp_args_name_56, 1, tmp_tuple_element_110);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_8__class_decl_dict);
                tmp_kw_name_56 = tmp_QtWidgets$class_creation_8__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 303;
                tmp_assign_source_228 = CALL_FUNCTION(tmp_called_name_58, tmp_args_name_56, tmp_kw_name_56);
                Py_DECREF(tmp_called_name_58);
                Py_DECREF(tmp_args_name_56);
                if (tmp_assign_source_228 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 303;
                    type_description_2 = "o";
                    goto try_except_handler_86;
                }
                assert(tmp_QtWidgets$class_creation_8__prepared == NULL);
                tmp_QtWidgets$class_creation_8__prepared = tmp_assign_source_228;
            }
            {
                nuitka_bool tmp_condition_result_175;
                PyObject *tmp_operand_name_29;
                PyObject *tmp_source_name_121;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_8__prepared);
                tmp_source_name_121 = tmp_QtWidgets$class_creation_8__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_121, const_str_plain___getitem__);
                tmp_operand_name_29 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_29);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 303;
                    type_description_2 = "o";
                    goto try_except_handler_86;
                }
                tmp_condition_result_175 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_175 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_115;
                } else {
                    goto branch_no_115;
                }
                branch_yes_115:;
                {
                    PyObject *tmp_raise_type_29;
                    PyObject *tmp_raise_value_29;
                    PyObject *tmp_left_name_29;
                    PyObject *tmp_right_name_29;
                    PyObject *tmp_tuple_element_111;
                    PyObject *tmp_getattr_target_29;
                    PyObject *tmp_getattr_attr_29;
                    PyObject *tmp_getattr_default_29;
                    PyObject *tmp_source_name_122;
                    PyObject *tmp_type_arg_58;
                    tmp_raise_type_29 = PyExc_TypeError;
                    tmp_left_name_29 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_8__metaclass);
                    tmp_getattr_target_29 = tmp_QtWidgets$class_creation_8__metaclass;
                    tmp_getattr_attr_29 = const_str_plain___name__;
                    tmp_getattr_default_29 = const_str_angle_metaclass;
                    tmp_tuple_element_111 = BUILTIN_GETATTR(tmp_getattr_target_29, tmp_getattr_attr_29, tmp_getattr_default_29);
                    if (tmp_tuple_element_111 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 303;
                        type_description_2 = "o";
                        goto try_except_handler_86;
                    }
                    tmp_right_name_29 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_29, 0, tmp_tuple_element_111);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_8__prepared);
                    tmp_type_arg_58 = tmp_QtWidgets$class_creation_8__prepared;
                    tmp_source_name_122 = BUILTIN_TYPE1(tmp_type_arg_58);
                    assert(!(tmp_source_name_122 == NULL));
                    tmp_tuple_element_111 = LOOKUP_ATTRIBUTE(tmp_source_name_122, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_122);
                    if (tmp_tuple_element_111 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_29);

                        exception_lineno = 303;
                        type_description_2 = "o";
                        goto try_except_handler_86;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_29, 1, tmp_tuple_element_111);
                    tmp_raise_value_29 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_29, tmp_right_name_29);
                    Py_DECREF(tmp_right_name_29);
                    if (tmp_raise_value_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 303;
                        type_description_2 = "o";
                        goto try_except_handler_86;
                    }
                    exception_type = tmp_raise_type_29;
                    Py_INCREF(tmp_raise_type_29);
                    exception_value = tmp_raise_value_29;
                    exception_lineno = 303;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_86;
                }
                branch_no_115:;
            }
            goto branch_end_114;
            branch_no_114:;
            {
                PyObject *tmp_assign_source_229;
                tmp_assign_source_229 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_8__prepared == NULL);
                tmp_QtWidgets$class_creation_8__prepared = tmp_assign_source_229;
            }
            branch_end_114:;
        }
        {
            PyObject *tmp_set_locals_29;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__prepared);
            tmp_set_locals_29 = tmp_QtWidgets$class_creation_8__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_303 = tmp_set_locals_29;
            Py_INCREF(tmp_set_locals_29);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_303, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 303;
            type_description_2 = "o";
            goto try_except_handler_88;
        }
        tmp_dictset_value = const_str_digest_6cfd256a9d9c861b5abed43048ea31a5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_303, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 303;
            type_description_2 = "o";
            goto try_except_handler_88;
        }
        {
            nuitka_bool tmp_condition_result_176;
            PyObject *tmp_compexpr_left_29;
            PyObject *tmp_compexpr_right_29;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases);
            tmp_compexpr_left_29 = tmp_QtWidgets$class_creation_8__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases_orig);
            tmp_compexpr_right_29 = tmp_QtWidgets$class_creation_8__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_29, tmp_compexpr_right_29);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_88;
            }
            tmp_condition_result_176 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_176 == NUITKA_BOOL_TRUE) {
                goto branch_yes_116;
            } else {
                goto branch_no_116;
            }
            branch_yes_116:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_8__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_303, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_88;
            }
            branch_no_116:;
        }
        {
            PyObject *tmp_assign_source_230;
            PyObject *tmp_called_name_59;
            PyObject *tmp_args_name_57;
            PyObject *tmp_tuple_element_112;
            PyObject *tmp_kw_name_57;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__metaclass);
            tmp_called_name_59 = tmp_QtWidgets$class_creation_8__metaclass;
            tmp_tuple_element_112 = const_str_plain_QGridLayout;
            tmp_args_name_57 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_112);
            PyTuple_SET_ITEM(tmp_args_name_57, 0, tmp_tuple_element_112);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__bases);
            tmp_tuple_element_112 = tmp_QtWidgets$class_creation_8__bases;
            Py_INCREF(tmp_tuple_element_112);
            PyTuple_SET_ITEM(tmp_args_name_57, 1, tmp_tuple_element_112);
            tmp_tuple_element_112 = locals_PyQt5$uic$Compiler$qtproxies_303;
            Py_INCREF(tmp_tuple_element_112);
            PyTuple_SET_ITEM(tmp_args_name_57, 2, tmp_tuple_element_112);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_8__class_decl_dict);
            tmp_kw_name_57 = tmp_QtWidgets$class_creation_8__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 303;
            tmp_assign_source_230 = CALL_FUNCTION(tmp_called_name_59, tmp_args_name_57, tmp_kw_name_57);
            Py_DECREF(tmp_args_name_57);
            if (tmp_assign_source_230 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_2 = "o";
                goto try_except_handler_88;
            }
            assert(outline_28_var___class__ == NULL);
            outline_28_var___class__ = tmp_assign_source_230;
        }
        CHECK_OBJECT(outline_28_var___class__);
        tmp_dictset_value = outline_28_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_88;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_88:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_303);
        locals_PyQt5$uic$Compiler$qtproxies_303 = NULL;
        goto try_return_handler_87;
        // Exception handler code:
        try_except_handler_88:;
        exception_keeper_type_83 = exception_type;
        exception_keeper_value_83 = exception_value;
        exception_keeper_tb_83 = exception_tb;
        exception_keeper_lineno_83 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_303);
        locals_PyQt5$uic$Compiler$qtproxies_303 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_83;
        exception_value = exception_keeper_value_83;
        exception_tb = exception_keeper_tb_83;
        exception_lineno = exception_keeper_lineno_83;

        goto try_except_handler_87;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_87:;
        CHECK_OBJECT((PyObject *)outline_28_var___class__);
        Py_DECREF(outline_28_var___class__);
        outline_28_var___class__ = NULL;

        goto outline_result_29;
        // Exception handler code:
        try_except_handler_87:;
        exception_keeper_type_84 = exception_type;
        exception_keeper_value_84 = exception_value;
        exception_keeper_tb_84 = exception_tb;
        exception_keeper_lineno_84 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_84;
        exception_value = exception_keeper_value_84;
        exception_tb = exception_keeper_tb_84;
        exception_lineno = exception_keeper_lineno_84;

        goto outline_exception_29;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_29:;
        exception_lineno = 303;
        goto try_except_handler_86;
        outline_result_29:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QGridLayout, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 303;
            type_description_2 = "o";
            goto try_except_handler_86;
        }
        goto try_end_29;
        // Exception handler code:
        try_except_handler_86:;
        exception_keeper_type_85 = exception_type;
        exception_keeper_value_85 = exception_value;
        exception_keeper_tb_85 = exception_tb;
        exception_keeper_lineno_85 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_8__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_8__bases_orig);
        tmp_QtWidgets$class_creation_8__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_8__bases);
        tmp_QtWidgets$class_creation_8__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_8__class_decl_dict);
        tmp_QtWidgets$class_creation_8__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_8__metaclass);
        tmp_QtWidgets$class_creation_8__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_8__prepared);
        tmp_QtWidgets$class_creation_8__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_85;
        exception_value = exception_keeper_value_85;
        exception_tb = exception_keeper_tb_85;
        exception_lineno = exception_keeper_lineno_85;

        goto frame_exception_exit_12;
        // End of try:
        try_end_29:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_8__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_8__bases_orig);
        tmp_QtWidgets$class_creation_8__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_8__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_8__bases);
        tmp_QtWidgets$class_creation_8__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_8__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_8__class_decl_dict);
        tmp_QtWidgets$class_creation_8__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_8__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_8__metaclass);
        tmp_QtWidgets$class_creation_8__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_8__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_8__prepared);
        tmp_QtWidgets$class_creation_8__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_231;
            PyObject *tmp_tuple_element_113;
            PyObject *tmp_mvar_value_31;
            tmp_tuple_element_113 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QLayout);

            if (tmp_tuple_element_113 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_31 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QLayout);

                    if (unlikely(tmp_mvar_value_31 == NULL)) {
                        tmp_mvar_value_31 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QLayout);
                    }

                    if (tmp_mvar_value_31 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1530 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 304;
                        type_description_2 = "o";
                        goto try_except_handler_89;
                    }

                    tmp_tuple_element_113 = tmp_mvar_value_31;
                    Py_INCREF(tmp_tuple_element_113);
                }
            }

            tmp_assign_source_231 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_231, 0, tmp_tuple_element_113);
            assert(tmp_QtWidgets$class_creation_9__bases_orig == NULL);
            tmp_QtWidgets$class_creation_9__bases_orig = tmp_assign_source_231;
        }
        {
            PyObject *tmp_assign_source_232;
            PyObject *tmp_dircall_arg1_30;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases_orig);
            tmp_dircall_arg1_30 = tmp_QtWidgets$class_creation_9__bases_orig;
            Py_INCREF(tmp_dircall_arg1_30);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_30};
                tmp_assign_source_232 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_232 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            assert(tmp_QtWidgets$class_creation_9__bases == NULL);
            tmp_QtWidgets$class_creation_9__bases = tmp_assign_source_232;
        }
        {
            PyObject *tmp_assign_source_233;
            tmp_assign_source_233 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_9__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_9__class_decl_dict = tmp_assign_source_233;
        }
        {
            PyObject *tmp_assign_source_234;
            PyObject *tmp_metaclass_name_30;
            nuitka_bool tmp_condition_result_177;
            PyObject *tmp_key_name_88;
            PyObject *tmp_dict_name_88;
            PyObject *tmp_dict_name_89;
            PyObject *tmp_key_name_89;
            nuitka_bool tmp_condition_result_178;
            int tmp_truth_name_30;
            PyObject *tmp_type_arg_59;
            PyObject *tmp_subscribed_name_30;
            PyObject *tmp_subscript_name_30;
            PyObject *tmp_bases_name_30;
            tmp_key_name_88 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__class_decl_dict);
            tmp_dict_name_88 = tmp_QtWidgets$class_creation_9__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_88, tmp_key_name_88);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            tmp_condition_result_177 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_177 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_61;
            } else {
                goto condexpr_false_61;
            }
            condexpr_true_61:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__class_decl_dict);
            tmp_dict_name_89 = tmp_QtWidgets$class_creation_9__class_decl_dict;
            tmp_key_name_89 = const_str_plain_metaclass;
            tmp_metaclass_name_30 = DICT_GET_ITEM(tmp_dict_name_89, tmp_key_name_89);
            if (tmp_metaclass_name_30 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            goto condexpr_end_61;
            condexpr_false_61:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases);
            tmp_truth_name_30 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_9__bases);
            if (tmp_truth_name_30 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            tmp_condition_result_178 = tmp_truth_name_30 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_178 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_62;
            } else {
                goto condexpr_false_62;
            }
            condexpr_true_62:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases);
            tmp_subscribed_name_30 = tmp_QtWidgets$class_creation_9__bases;
            tmp_subscript_name_30 = const_int_0;
            tmp_type_arg_59 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_30, tmp_subscript_name_30, 0);
            if (tmp_type_arg_59 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            tmp_metaclass_name_30 = BUILTIN_TYPE1(tmp_type_arg_59);
            Py_DECREF(tmp_type_arg_59);
            if (tmp_metaclass_name_30 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            goto condexpr_end_62;
            condexpr_false_62:;
            tmp_metaclass_name_30 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_30);
            condexpr_end_62:;
            condexpr_end_61:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases);
            tmp_bases_name_30 = tmp_QtWidgets$class_creation_9__bases;
            tmp_assign_source_234 = SELECT_METACLASS(tmp_metaclass_name_30, tmp_bases_name_30);
            Py_DECREF(tmp_metaclass_name_30);
            if (tmp_assign_source_234 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            assert(tmp_QtWidgets$class_creation_9__metaclass == NULL);
            tmp_QtWidgets$class_creation_9__metaclass = tmp_assign_source_234;
        }
        {
            nuitka_bool tmp_condition_result_179;
            PyObject *tmp_key_name_90;
            PyObject *tmp_dict_name_90;
            tmp_key_name_90 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__class_decl_dict);
            tmp_dict_name_90 = tmp_QtWidgets$class_creation_9__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_90, tmp_key_name_90);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            tmp_condition_result_179 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_179 == NUITKA_BOOL_TRUE) {
                goto branch_yes_117;
            } else {
                goto branch_no_117;
            }
            branch_yes_117:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_9__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_89;
            }
            branch_no_117:;
        }
        {
            nuitka_bool tmp_condition_result_180;
            PyObject *tmp_source_name_123;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__metaclass);
            tmp_source_name_123 = tmp_QtWidgets$class_creation_9__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_123, const_str_plain___prepare__);
            tmp_condition_result_180 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_180 == NUITKA_BOOL_TRUE) {
                goto branch_yes_118;
            } else {
                goto branch_no_118;
            }
            branch_yes_118:;
            {
                PyObject *tmp_assign_source_235;
                PyObject *tmp_called_name_60;
                PyObject *tmp_source_name_124;
                PyObject *tmp_args_name_58;
                PyObject *tmp_tuple_element_114;
                PyObject *tmp_kw_name_58;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_9__metaclass);
                tmp_source_name_124 = tmp_QtWidgets$class_creation_9__metaclass;
                tmp_called_name_60 = LOOKUP_ATTRIBUTE(tmp_source_name_124, const_str_plain___prepare__);
                if (tmp_called_name_60 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 304;
                    type_description_2 = "o";
                    goto try_except_handler_89;
                }
                tmp_tuple_element_114 = const_str_plain_QBoxLayout;
                tmp_args_name_58 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_114);
                PyTuple_SET_ITEM(tmp_args_name_58, 0, tmp_tuple_element_114);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases);
                tmp_tuple_element_114 = tmp_QtWidgets$class_creation_9__bases;
                Py_INCREF(tmp_tuple_element_114);
                PyTuple_SET_ITEM(tmp_args_name_58, 1, tmp_tuple_element_114);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_9__class_decl_dict);
                tmp_kw_name_58 = tmp_QtWidgets$class_creation_9__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 304;
                tmp_assign_source_235 = CALL_FUNCTION(tmp_called_name_60, tmp_args_name_58, tmp_kw_name_58);
                Py_DECREF(tmp_called_name_60);
                Py_DECREF(tmp_args_name_58);
                if (tmp_assign_source_235 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 304;
                    type_description_2 = "o";
                    goto try_except_handler_89;
                }
                assert(tmp_QtWidgets$class_creation_9__prepared == NULL);
                tmp_QtWidgets$class_creation_9__prepared = tmp_assign_source_235;
            }
            {
                nuitka_bool tmp_condition_result_181;
                PyObject *tmp_operand_name_30;
                PyObject *tmp_source_name_125;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_9__prepared);
                tmp_source_name_125 = tmp_QtWidgets$class_creation_9__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_125, const_str_plain___getitem__);
                tmp_operand_name_30 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_30);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 304;
                    type_description_2 = "o";
                    goto try_except_handler_89;
                }
                tmp_condition_result_181 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_181 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_119;
                } else {
                    goto branch_no_119;
                }
                branch_yes_119:;
                {
                    PyObject *tmp_raise_type_30;
                    PyObject *tmp_raise_value_30;
                    PyObject *tmp_left_name_30;
                    PyObject *tmp_right_name_30;
                    PyObject *tmp_tuple_element_115;
                    PyObject *tmp_getattr_target_30;
                    PyObject *tmp_getattr_attr_30;
                    PyObject *tmp_getattr_default_30;
                    PyObject *tmp_source_name_126;
                    PyObject *tmp_type_arg_60;
                    tmp_raise_type_30 = PyExc_TypeError;
                    tmp_left_name_30 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_9__metaclass);
                    tmp_getattr_target_30 = tmp_QtWidgets$class_creation_9__metaclass;
                    tmp_getattr_attr_30 = const_str_plain___name__;
                    tmp_getattr_default_30 = const_str_angle_metaclass;
                    tmp_tuple_element_115 = BUILTIN_GETATTR(tmp_getattr_target_30, tmp_getattr_attr_30, tmp_getattr_default_30);
                    if (tmp_tuple_element_115 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 304;
                        type_description_2 = "o";
                        goto try_except_handler_89;
                    }
                    tmp_right_name_30 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_30, 0, tmp_tuple_element_115);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_9__prepared);
                    tmp_type_arg_60 = tmp_QtWidgets$class_creation_9__prepared;
                    tmp_source_name_126 = BUILTIN_TYPE1(tmp_type_arg_60);
                    assert(!(tmp_source_name_126 == NULL));
                    tmp_tuple_element_115 = LOOKUP_ATTRIBUTE(tmp_source_name_126, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_126);
                    if (tmp_tuple_element_115 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_30);

                        exception_lineno = 304;
                        type_description_2 = "o";
                        goto try_except_handler_89;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_30, 1, tmp_tuple_element_115);
                    tmp_raise_value_30 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_30, tmp_right_name_30);
                    Py_DECREF(tmp_right_name_30);
                    if (tmp_raise_value_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 304;
                        type_description_2 = "o";
                        goto try_except_handler_89;
                    }
                    exception_type = tmp_raise_type_30;
                    Py_INCREF(tmp_raise_type_30);
                    exception_value = tmp_raise_value_30;
                    exception_lineno = 304;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_89;
                }
                branch_no_119:;
            }
            goto branch_end_118;
            branch_no_118:;
            {
                PyObject *tmp_assign_source_236;
                tmp_assign_source_236 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_9__prepared == NULL);
                tmp_QtWidgets$class_creation_9__prepared = tmp_assign_source_236;
            }
            branch_end_118:;
        }
        {
            PyObject *tmp_set_locals_30;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__prepared);
            tmp_set_locals_30 = tmp_QtWidgets$class_creation_9__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_304 = tmp_set_locals_30;
            Py_INCREF(tmp_set_locals_30);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_304, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;
            type_description_2 = "o";
            goto try_except_handler_91;
        }
        tmp_dictset_value = const_str_digest_c66db4fec36bbb504504ec0bc763bc01;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_304, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;
            type_description_2 = "o";
            goto try_except_handler_91;
        }
        {
            nuitka_bool tmp_condition_result_182;
            PyObject *tmp_compexpr_left_30;
            PyObject *tmp_compexpr_right_30;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases);
            tmp_compexpr_left_30 = tmp_QtWidgets$class_creation_9__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases_orig);
            tmp_compexpr_right_30 = tmp_QtWidgets$class_creation_9__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_30, tmp_compexpr_right_30);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_91;
            }
            tmp_condition_result_182 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_182 == NUITKA_BOOL_TRUE) {
                goto branch_yes_120;
            } else {
                goto branch_no_120;
            }
            branch_yes_120:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_9__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_304, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_91;
            }
            branch_no_120:;
        }
        {
            PyObject *tmp_assign_source_237;
            PyObject *tmp_called_name_61;
            PyObject *tmp_args_name_59;
            PyObject *tmp_tuple_element_116;
            PyObject *tmp_kw_name_59;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__metaclass);
            tmp_called_name_61 = tmp_QtWidgets$class_creation_9__metaclass;
            tmp_tuple_element_116 = const_str_plain_QBoxLayout;
            tmp_args_name_59 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_116);
            PyTuple_SET_ITEM(tmp_args_name_59, 0, tmp_tuple_element_116);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__bases);
            tmp_tuple_element_116 = tmp_QtWidgets$class_creation_9__bases;
            Py_INCREF(tmp_tuple_element_116);
            PyTuple_SET_ITEM(tmp_args_name_59, 1, tmp_tuple_element_116);
            tmp_tuple_element_116 = locals_PyQt5$uic$Compiler$qtproxies_304;
            Py_INCREF(tmp_tuple_element_116);
            PyTuple_SET_ITEM(tmp_args_name_59, 2, tmp_tuple_element_116);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_9__class_decl_dict);
            tmp_kw_name_59 = tmp_QtWidgets$class_creation_9__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 304;
            tmp_assign_source_237 = CALL_FUNCTION(tmp_called_name_61, tmp_args_name_59, tmp_kw_name_59);
            Py_DECREF(tmp_args_name_59);
            if (tmp_assign_source_237 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_2 = "o";
                goto try_except_handler_91;
            }
            assert(outline_29_var___class__ == NULL);
            outline_29_var___class__ = tmp_assign_source_237;
        }
        CHECK_OBJECT(outline_29_var___class__);
        tmp_dictset_value = outline_29_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_91;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_91:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_304);
        locals_PyQt5$uic$Compiler$qtproxies_304 = NULL;
        goto try_return_handler_90;
        // Exception handler code:
        try_except_handler_91:;
        exception_keeper_type_86 = exception_type;
        exception_keeper_value_86 = exception_value;
        exception_keeper_tb_86 = exception_tb;
        exception_keeper_lineno_86 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_304);
        locals_PyQt5$uic$Compiler$qtproxies_304 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_86;
        exception_value = exception_keeper_value_86;
        exception_tb = exception_keeper_tb_86;
        exception_lineno = exception_keeper_lineno_86;

        goto try_except_handler_90;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_90:;
        CHECK_OBJECT((PyObject *)outline_29_var___class__);
        Py_DECREF(outline_29_var___class__);
        outline_29_var___class__ = NULL;

        goto outline_result_30;
        // Exception handler code:
        try_except_handler_90:;
        exception_keeper_type_87 = exception_type;
        exception_keeper_value_87 = exception_value;
        exception_keeper_tb_87 = exception_tb;
        exception_keeper_lineno_87 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_87;
        exception_value = exception_keeper_value_87;
        exception_tb = exception_keeper_tb_87;
        exception_lineno = exception_keeper_lineno_87;

        goto outline_exception_30;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_30:;
        exception_lineno = 304;
        goto try_except_handler_89;
        outline_result_30:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QBoxLayout, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;
            type_description_2 = "o";
            goto try_except_handler_89;
        }
        goto try_end_30;
        // Exception handler code:
        try_except_handler_89:;
        exception_keeper_type_88 = exception_type;
        exception_keeper_value_88 = exception_value;
        exception_keeper_tb_88 = exception_tb;
        exception_keeper_lineno_88 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_9__bases_orig);
        tmp_QtWidgets$class_creation_9__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_9__bases);
        tmp_QtWidgets$class_creation_9__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_9__class_decl_dict);
        tmp_QtWidgets$class_creation_9__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_9__metaclass);
        tmp_QtWidgets$class_creation_9__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_9__prepared);
        tmp_QtWidgets$class_creation_9__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_88;
        exception_value = exception_keeper_value_88;
        exception_tb = exception_keeper_tb_88;
        exception_lineno = exception_keeper_lineno_88;

        goto frame_exception_exit_12;
        // End of try:
        try_end_30:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_9__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_9__bases_orig);
        tmp_QtWidgets$class_creation_9__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_9__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_9__bases);
        tmp_QtWidgets$class_creation_9__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_9__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_9__class_decl_dict);
        tmp_QtWidgets$class_creation_9__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_9__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_9__metaclass);
        tmp_QtWidgets$class_creation_9__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_9__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_9__prepared);
        tmp_QtWidgets$class_creation_9__prepared = NULL;

        {
            PyObject *tmp_assign_source_238;
            PyObject *tmp_tuple_element_117;
            tmp_tuple_element_117 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QBoxLayout);

            if (tmp_tuple_element_117 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1559 ], 32, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 305;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_117 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_238 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_238, 0, tmp_tuple_element_117);
            assert(tmp_QtWidgets$class_creation_10__bases_orig == NULL);
            tmp_QtWidgets$class_creation_10__bases_orig = tmp_assign_source_238;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_239;
            PyObject *tmp_dircall_arg1_31;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases_orig);
            tmp_dircall_arg1_31 = tmp_QtWidgets$class_creation_10__bases_orig;
            Py_INCREF(tmp_dircall_arg1_31);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_31};
                tmp_assign_source_239 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_239 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            assert(tmp_QtWidgets$class_creation_10__bases == NULL);
            tmp_QtWidgets$class_creation_10__bases = tmp_assign_source_239;
        }
        {
            PyObject *tmp_assign_source_240;
            tmp_assign_source_240 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_10__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_10__class_decl_dict = tmp_assign_source_240;
        }
        {
            PyObject *tmp_assign_source_241;
            PyObject *tmp_metaclass_name_31;
            nuitka_bool tmp_condition_result_183;
            PyObject *tmp_key_name_91;
            PyObject *tmp_dict_name_91;
            PyObject *tmp_dict_name_92;
            PyObject *tmp_key_name_92;
            nuitka_bool tmp_condition_result_184;
            int tmp_truth_name_31;
            PyObject *tmp_type_arg_61;
            PyObject *tmp_subscribed_name_31;
            PyObject *tmp_subscript_name_31;
            PyObject *tmp_bases_name_31;
            tmp_key_name_91 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__class_decl_dict);
            tmp_dict_name_91 = tmp_QtWidgets$class_creation_10__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_91, tmp_key_name_91);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            tmp_condition_result_183 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_183 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_63;
            } else {
                goto condexpr_false_63;
            }
            condexpr_true_63:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__class_decl_dict);
            tmp_dict_name_92 = tmp_QtWidgets$class_creation_10__class_decl_dict;
            tmp_key_name_92 = const_str_plain_metaclass;
            tmp_metaclass_name_31 = DICT_GET_ITEM(tmp_dict_name_92, tmp_key_name_92);
            if (tmp_metaclass_name_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            goto condexpr_end_63;
            condexpr_false_63:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases);
            tmp_truth_name_31 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_10__bases);
            if (tmp_truth_name_31 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            tmp_condition_result_184 = tmp_truth_name_31 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_184 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_64;
            } else {
                goto condexpr_false_64;
            }
            condexpr_true_64:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases);
            tmp_subscribed_name_31 = tmp_QtWidgets$class_creation_10__bases;
            tmp_subscript_name_31 = const_int_0;
            tmp_type_arg_61 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_31, tmp_subscript_name_31, 0);
            if (tmp_type_arg_61 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            tmp_metaclass_name_31 = BUILTIN_TYPE1(tmp_type_arg_61);
            Py_DECREF(tmp_type_arg_61);
            if (tmp_metaclass_name_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            goto condexpr_end_64;
            condexpr_false_64:;
            tmp_metaclass_name_31 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_31);
            condexpr_end_64:;
            condexpr_end_63:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases);
            tmp_bases_name_31 = tmp_QtWidgets$class_creation_10__bases;
            tmp_assign_source_241 = SELECT_METACLASS(tmp_metaclass_name_31, tmp_bases_name_31);
            Py_DECREF(tmp_metaclass_name_31);
            if (tmp_assign_source_241 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            assert(tmp_QtWidgets$class_creation_10__metaclass == NULL);
            tmp_QtWidgets$class_creation_10__metaclass = tmp_assign_source_241;
        }
        {
            nuitka_bool tmp_condition_result_185;
            PyObject *tmp_key_name_93;
            PyObject *tmp_dict_name_93;
            tmp_key_name_93 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__class_decl_dict);
            tmp_dict_name_93 = tmp_QtWidgets$class_creation_10__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_93, tmp_key_name_93);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            tmp_condition_result_185 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_185 == NUITKA_BOOL_TRUE) {
                goto branch_yes_121;
            } else {
                goto branch_no_121;
            }
            branch_yes_121:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_10__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_92;
            }
            branch_no_121:;
        }
        {
            nuitka_bool tmp_condition_result_186;
            PyObject *tmp_source_name_127;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__metaclass);
            tmp_source_name_127 = tmp_QtWidgets$class_creation_10__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_127, const_str_plain___prepare__);
            tmp_condition_result_186 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_186 == NUITKA_BOOL_TRUE) {
                goto branch_yes_122;
            } else {
                goto branch_no_122;
            }
            branch_yes_122:;
            {
                PyObject *tmp_assign_source_242;
                PyObject *tmp_called_name_62;
                PyObject *tmp_source_name_128;
                PyObject *tmp_args_name_60;
                PyObject *tmp_tuple_element_118;
                PyObject *tmp_kw_name_60;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_10__metaclass);
                tmp_source_name_128 = tmp_QtWidgets$class_creation_10__metaclass;
                tmp_called_name_62 = LOOKUP_ATTRIBUTE(tmp_source_name_128, const_str_plain___prepare__);
                if (tmp_called_name_62 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 305;
                    type_description_2 = "o";
                    goto try_except_handler_92;
                }
                tmp_tuple_element_118 = const_str_plain_QHBoxLayout;
                tmp_args_name_60 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_118);
                PyTuple_SET_ITEM(tmp_args_name_60, 0, tmp_tuple_element_118);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases);
                tmp_tuple_element_118 = tmp_QtWidgets$class_creation_10__bases;
                Py_INCREF(tmp_tuple_element_118);
                PyTuple_SET_ITEM(tmp_args_name_60, 1, tmp_tuple_element_118);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_10__class_decl_dict);
                tmp_kw_name_60 = tmp_QtWidgets$class_creation_10__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 305;
                tmp_assign_source_242 = CALL_FUNCTION(tmp_called_name_62, tmp_args_name_60, tmp_kw_name_60);
                Py_DECREF(tmp_called_name_62);
                Py_DECREF(tmp_args_name_60);
                if (tmp_assign_source_242 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 305;
                    type_description_2 = "o";
                    goto try_except_handler_92;
                }
                assert(tmp_QtWidgets$class_creation_10__prepared == NULL);
                tmp_QtWidgets$class_creation_10__prepared = tmp_assign_source_242;
            }
            {
                nuitka_bool tmp_condition_result_187;
                PyObject *tmp_operand_name_31;
                PyObject *tmp_source_name_129;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_10__prepared);
                tmp_source_name_129 = tmp_QtWidgets$class_creation_10__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_129, const_str_plain___getitem__);
                tmp_operand_name_31 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_31);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 305;
                    type_description_2 = "o";
                    goto try_except_handler_92;
                }
                tmp_condition_result_187 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_187 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_123;
                } else {
                    goto branch_no_123;
                }
                branch_yes_123:;
                {
                    PyObject *tmp_raise_type_31;
                    PyObject *tmp_raise_value_31;
                    PyObject *tmp_left_name_31;
                    PyObject *tmp_right_name_31;
                    PyObject *tmp_tuple_element_119;
                    PyObject *tmp_getattr_target_31;
                    PyObject *tmp_getattr_attr_31;
                    PyObject *tmp_getattr_default_31;
                    PyObject *tmp_source_name_130;
                    PyObject *tmp_type_arg_62;
                    tmp_raise_type_31 = PyExc_TypeError;
                    tmp_left_name_31 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_10__metaclass);
                    tmp_getattr_target_31 = tmp_QtWidgets$class_creation_10__metaclass;
                    tmp_getattr_attr_31 = const_str_plain___name__;
                    tmp_getattr_default_31 = const_str_angle_metaclass;
                    tmp_tuple_element_119 = BUILTIN_GETATTR(tmp_getattr_target_31, tmp_getattr_attr_31, tmp_getattr_default_31);
                    if (tmp_tuple_element_119 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 305;
                        type_description_2 = "o";
                        goto try_except_handler_92;
                    }
                    tmp_right_name_31 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_31, 0, tmp_tuple_element_119);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_10__prepared);
                    tmp_type_arg_62 = tmp_QtWidgets$class_creation_10__prepared;
                    tmp_source_name_130 = BUILTIN_TYPE1(tmp_type_arg_62);
                    assert(!(tmp_source_name_130 == NULL));
                    tmp_tuple_element_119 = LOOKUP_ATTRIBUTE(tmp_source_name_130, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_130);
                    if (tmp_tuple_element_119 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_31);

                        exception_lineno = 305;
                        type_description_2 = "o";
                        goto try_except_handler_92;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_31, 1, tmp_tuple_element_119);
                    tmp_raise_value_31 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_31, tmp_right_name_31);
                    Py_DECREF(tmp_right_name_31);
                    if (tmp_raise_value_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 305;
                        type_description_2 = "o";
                        goto try_except_handler_92;
                    }
                    exception_type = tmp_raise_type_31;
                    Py_INCREF(tmp_raise_type_31);
                    exception_value = tmp_raise_value_31;
                    exception_lineno = 305;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_92;
                }
                branch_no_123:;
            }
            goto branch_end_122;
            branch_no_122:;
            {
                PyObject *tmp_assign_source_243;
                tmp_assign_source_243 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_10__prepared == NULL);
                tmp_QtWidgets$class_creation_10__prepared = tmp_assign_source_243;
            }
            branch_end_122:;
        }
        {
            PyObject *tmp_set_locals_31;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__prepared);
            tmp_set_locals_31 = tmp_QtWidgets$class_creation_10__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_305 = tmp_set_locals_31;
            Py_INCREF(tmp_set_locals_31);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_305, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 305;
            type_description_2 = "o";
            goto try_except_handler_94;
        }
        tmp_dictset_value = const_str_digest_26315b6bed3fbaa50143a904d5c70cf4;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_305, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 305;
            type_description_2 = "o";
            goto try_except_handler_94;
        }
        {
            nuitka_bool tmp_condition_result_188;
            PyObject *tmp_compexpr_left_31;
            PyObject *tmp_compexpr_right_31;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases);
            tmp_compexpr_left_31 = tmp_QtWidgets$class_creation_10__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases_orig);
            tmp_compexpr_right_31 = tmp_QtWidgets$class_creation_10__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_31, tmp_compexpr_right_31);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_94;
            }
            tmp_condition_result_188 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_188 == NUITKA_BOOL_TRUE) {
                goto branch_yes_124;
            } else {
                goto branch_no_124;
            }
            branch_yes_124:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_10__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_305, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_94;
            }
            branch_no_124:;
        }
        {
            PyObject *tmp_assign_source_244;
            PyObject *tmp_called_name_63;
            PyObject *tmp_args_name_61;
            PyObject *tmp_tuple_element_120;
            PyObject *tmp_kw_name_61;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__metaclass);
            tmp_called_name_63 = tmp_QtWidgets$class_creation_10__metaclass;
            tmp_tuple_element_120 = const_str_plain_QHBoxLayout;
            tmp_args_name_61 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_120);
            PyTuple_SET_ITEM(tmp_args_name_61, 0, tmp_tuple_element_120);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__bases);
            tmp_tuple_element_120 = tmp_QtWidgets$class_creation_10__bases;
            Py_INCREF(tmp_tuple_element_120);
            PyTuple_SET_ITEM(tmp_args_name_61, 1, tmp_tuple_element_120);
            tmp_tuple_element_120 = locals_PyQt5$uic$Compiler$qtproxies_305;
            Py_INCREF(tmp_tuple_element_120);
            PyTuple_SET_ITEM(tmp_args_name_61, 2, tmp_tuple_element_120);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_10__class_decl_dict);
            tmp_kw_name_61 = tmp_QtWidgets$class_creation_10__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 305;
            tmp_assign_source_244 = CALL_FUNCTION(tmp_called_name_63, tmp_args_name_61, tmp_kw_name_61);
            Py_DECREF(tmp_args_name_61);
            if (tmp_assign_source_244 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_2 = "o";
                goto try_except_handler_94;
            }
            assert(outline_30_var___class__ == NULL);
            outline_30_var___class__ = tmp_assign_source_244;
        }
        CHECK_OBJECT(outline_30_var___class__);
        tmp_dictset_value = outline_30_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_94;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_94:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_305);
        locals_PyQt5$uic$Compiler$qtproxies_305 = NULL;
        goto try_return_handler_93;
        // Exception handler code:
        try_except_handler_94:;
        exception_keeper_type_89 = exception_type;
        exception_keeper_value_89 = exception_value;
        exception_keeper_tb_89 = exception_tb;
        exception_keeper_lineno_89 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_305);
        locals_PyQt5$uic$Compiler$qtproxies_305 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_89;
        exception_value = exception_keeper_value_89;
        exception_tb = exception_keeper_tb_89;
        exception_lineno = exception_keeper_lineno_89;

        goto try_except_handler_93;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_93:;
        CHECK_OBJECT((PyObject *)outline_30_var___class__);
        Py_DECREF(outline_30_var___class__);
        outline_30_var___class__ = NULL;

        goto outline_result_31;
        // Exception handler code:
        try_except_handler_93:;
        exception_keeper_type_90 = exception_type;
        exception_keeper_value_90 = exception_value;
        exception_keeper_tb_90 = exception_tb;
        exception_keeper_lineno_90 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_90;
        exception_value = exception_keeper_value_90;
        exception_tb = exception_keeper_tb_90;
        exception_lineno = exception_keeper_lineno_90;

        goto outline_exception_31;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_31:;
        exception_lineno = 305;
        goto try_except_handler_92;
        outline_result_31:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QHBoxLayout, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 305;
            type_description_2 = "o";
            goto try_except_handler_92;
        }
        goto try_end_31;
        // Exception handler code:
        try_except_handler_92:;
        exception_keeper_type_91 = exception_type;
        exception_keeper_value_91 = exception_value;
        exception_keeper_tb_91 = exception_tb;
        exception_keeper_lineno_91 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_10__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_10__bases_orig);
        tmp_QtWidgets$class_creation_10__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_10__bases);
        tmp_QtWidgets$class_creation_10__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_10__class_decl_dict);
        tmp_QtWidgets$class_creation_10__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_10__metaclass);
        tmp_QtWidgets$class_creation_10__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_10__prepared);
        tmp_QtWidgets$class_creation_10__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_91;
        exception_value = exception_keeper_value_91;
        exception_tb = exception_keeper_tb_91;
        exception_lineno = exception_keeper_lineno_91;

        goto frame_exception_exit_12;
        // End of try:
        try_end_31:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_10__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_10__bases_orig);
        tmp_QtWidgets$class_creation_10__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_10__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_10__bases);
        tmp_QtWidgets$class_creation_10__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_10__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_10__class_decl_dict);
        tmp_QtWidgets$class_creation_10__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_10__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_10__metaclass);
        tmp_QtWidgets$class_creation_10__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_10__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_10__prepared);
        tmp_QtWidgets$class_creation_10__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_245;
            PyObject *tmp_tuple_element_121;
            PyObject *tmp_mvar_value_32;
            tmp_tuple_element_121 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QBoxLayout);

            if (tmp_tuple_element_121 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_32 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QBoxLayout);

                    if (unlikely(tmp_mvar_value_32 == NULL)) {
                        tmp_mvar_value_32 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QBoxLayout);
                    }

                    if (tmp_mvar_value_32 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1559 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 306;
                        type_description_2 = "o";
                        goto try_except_handler_95;
                    }

                    tmp_tuple_element_121 = tmp_mvar_value_32;
                    Py_INCREF(tmp_tuple_element_121);
                }
            }

            tmp_assign_source_245 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_245, 0, tmp_tuple_element_121);
            assert(tmp_QtWidgets$class_creation_11__bases_orig == NULL);
            tmp_QtWidgets$class_creation_11__bases_orig = tmp_assign_source_245;
        }
        {
            PyObject *tmp_assign_source_246;
            PyObject *tmp_dircall_arg1_32;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases_orig);
            tmp_dircall_arg1_32 = tmp_QtWidgets$class_creation_11__bases_orig;
            Py_INCREF(tmp_dircall_arg1_32);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_32};
                tmp_assign_source_246 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_246 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            assert(tmp_QtWidgets$class_creation_11__bases == NULL);
            tmp_QtWidgets$class_creation_11__bases = tmp_assign_source_246;
        }
        {
            PyObject *tmp_assign_source_247;
            tmp_assign_source_247 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_11__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_11__class_decl_dict = tmp_assign_source_247;
        }
        {
            PyObject *tmp_assign_source_248;
            PyObject *tmp_metaclass_name_32;
            nuitka_bool tmp_condition_result_189;
            PyObject *tmp_key_name_94;
            PyObject *tmp_dict_name_94;
            PyObject *tmp_dict_name_95;
            PyObject *tmp_key_name_95;
            nuitka_bool tmp_condition_result_190;
            int tmp_truth_name_32;
            PyObject *tmp_type_arg_63;
            PyObject *tmp_subscribed_name_32;
            PyObject *tmp_subscript_name_32;
            PyObject *tmp_bases_name_32;
            tmp_key_name_94 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__class_decl_dict);
            tmp_dict_name_94 = tmp_QtWidgets$class_creation_11__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_94, tmp_key_name_94);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            tmp_condition_result_189 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_189 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_65;
            } else {
                goto condexpr_false_65;
            }
            condexpr_true_65:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__class_decl_dict);
            tmp_dict_name_95 = tmp_QtWidgets$class_creation_11__class_decl_dict;
            tmp_key_name_95 = const_str_plain_metaclass;
            tmp_metaclass_name_32 = DICT_GET_ITEM(tmp_dict_name_95, tmp_key_name_95);
            if (tmp_metaclass_name_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            goto condexpr_end_65;
            condexpr_false_65:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases);
            tmp_truth_name_32 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_11__bases);
            if (tmp_truth_name_32 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            tmp_condition_result_190 = tmp_truth_name_32 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_190 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_66;
            } else {
                goto condexpr_false_66;
            }
            condexpr_true_66:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases);
            tmp_subscribed_name_32 = tmp_QtWidgets$class_creation_11__bases;
            tmp_subscript_name_32 = const_int_0;
            tmp_type_arg_63 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_32, tmp_subscript_name_32, 0);
            if (tmp_type_arg_63 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            tmp_metaclass_name_32 = BUILTIN_TYPE1(tmp_type_arg_63);
            Py_DECREF(tmp_type_arg_63);
            if (tmp_metaclass_name_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            goto condexpr_end_66;
            condexpr_false_66:;
            tmp_metaclass_name_32 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_32);
            condexpr_end_66:;
            condexpr_end_65:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases);
            tmp_bases_name_32 = tmp_QtWidgets$class_creation_11__bases;
            tmp_assign_source_248 = SELECT_METACLASS(tmp_metaclass_name_32, tmp_bases_name_32);
            Py_DECREF(tmp_metaclass_name_32);
            if (tmp_assign_source_248 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            assert(tmp_QtWidgets$class_creation_11__metaclass == NULL);
            tmp_QtWidgets$class_creation_11__metaclass = tmp_assign_source_248;
        }
        {
            nuitka_bool tmp_condition_result_191;
            PyObject *tmp_key_name_96;
            PyObject *tmp_dict_name_96;
            tmp_key_name_96 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__class_decl_dict);
            tmp_dict_name_96 = tmp_QtWidgets$class_creation_11__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_96, tmp_key_name_96);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            tmp_condition_result_191 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_191 == NUITKA_BOOL_TRUE) {
                goto branch_yes_125;
            } else {
                goto branch_no_125;
            }
            branch_yes_125:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_11__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_95;
            }
            branch_no_125:;
        }
        {
            nuitka_bool tmp_condition_result_192;
            PyObject *tmp_source_name_131;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__metaclass);
            tmp_source_name_131 = tmp_QtWidgets$class_creation_11__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_131, const_str_plain___prepare__);
            tmp_condition_result_192 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_192 == NUITKA_BOOL_TRUE) {
                goto branch_yes_126;
            } else {
                goto branch_no_126;
            }
            branch_yes_126:;
            {
                PyObject *tmp_assign_source_249;
                PyObject *tmp_called_name_64;
                PyObject *tmp_source_name_132;
                PyObject *tmp_args_name_62;
                PyObject *tmp_tuple_element_122;
                PyObject *tmp_kw_name_62;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_11__metaclass);
                tmp_source_name_132 = tmp_QtWidgets$class_creation_11__metaclass;
                tmp_called_name_64 = LOOKUP_ATTRIBUTE(tmp_source_name_132, const_str_plain___prepare__);
                if (tmp_called_name_64 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 306;
                    type_description_2 = "o";
                    goto try_except_handler_95;
                }
                tmp_tuple_element_122 = const_str_plain_QVBoxLayout;
                tmp_args_name_62 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_122);
                PyTuple_SET_ITEM(tmp_args_name_62, 0, tmp_tuple_element_122);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases);
                tmp_tuple_element_122 = tmp_QtWidgets$class_creation_11__bases;
                Py_INCREF(tmp_tuple_element_122);
                PyTuple_SET_ITEM(tmp_args_name_62, 1, tmp_tuple_element_122);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_11__class_decl_dict);
                tmp_kw_name_62 = tmp_QtWidgets$class_creation_11__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 306;
                tmp_assign_source_249 = CALL_FUNCTION(tmp_called_name_64, tmp_args_name_62, tmp_kw_name_62);
                Py_DECREF(tmp_called_name_64);
                Py_DECREF(tmp_args_name_62);
                if (tmp_assign_source_249 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 306;
                    type_description_2 = "o";
                    goto try_except_handler_95;
                }
                assert(tmp_QtWidgets$class_creation_11__prepared == NULL);
                tmp_QtWidgets$class_creation_11__prepared = tmp_assign_source_249;
            }
            {
                nuitka_bool tmp_condition_result_193;
                PyObject *tmp_operand_name_32;
                PyObject *tmp_source_name_133;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_11__prepared);
                tmp_source_name_133 = tmp_QtWidgets$class_creation_11__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_133, const_str_plain___getitem__);
                tmp_operand_name_32 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_32);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 306;
                    type_description_2 = "o";
                    goto try_except_handler_95;
                }
                tmp_condition_result_193 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_193 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_127;
                } else {
                    goto branch_no_127;
                }
                branch_yes_127:;
                {
                    PyObject *tmp_raise_type_32;
                    PyObject *tmp_raise_value_32;
                    PyObject *tmp_left_name_32;
                    PyObject *tmp_right_name_32;
                    PyObject *tmp_tuple_element_123;
                    PyObject *tmp_getattr_target_32;
                    PyObject *tmp_getattr_attr_32;
                    PyObject *tmp_getattr_default_32;
                    PyObject *tmp_source_name_134;
                    PyObject *tmp_type_arg_64;
                    tmp_raise_type_32 = PyExc_TypeError;
                    tmp_left_name_32 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_11__metaclass);
                    tmp_getattr_target_32 = tmp_QtWidgets$class_creation_11__metaclass;
                    tmp_getattr_attr_32 = const_str_plain___name__;
                    tmp_getattr_default_32 = const_str_angle_metaclass;
                    tmp_tuple_element_123 = BUILTIN_GETATTR(tmp_getattr_target_32, tmp_getattr_attr_32, tmp_getattr_default_32);
                    if (tmp_tuple_element_123 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 306;
                        type_description_2 = "o";
                        goto try_except_handler_95;
                    }
                    tmp_right_name_32 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_32, 0, tmp_tuple_element_123);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_11__prepared);
                    tmp_type_arg_64 = tmp_QtWidgets$class_creation_11__prepared;
                    tmp_source_name_134 = BUILTIN_TYPE1(tmp_type_arg_64);
                    assert(!(tmp_source_name_134 == NULL));
                    tmp_tuple_element_123 = LOOKUP_ATTRIBUTE(tmp_source_name_134, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_134);
                    if (tmp_tuple_element_123 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_32);

                        exception_lineno = 306;
                        type_description_2 = "o";
                        goto try_except_handler_95;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_32, 1, tmp_tuple_element_123);
                    tmp_raise_value_32 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_32, tmp_right_name_32);
                    Py_DECREF(tmp_right_name_32);
                    if (tmp_raise_value_32 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 306;
                        type_description_2 = "o";
                        goto try_except_handler_95;
                    }
                    exception_type = tmp_raise_type_32;
                    Py_INCREF(tmp_raise_type_32);
                    exception_value = tmp_raise_value_32;
                    exception_lineno = 306;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_95;
                }
                branch_no_127:;
            }
            goto branch_end_126;
            branch_no_126:;
            {
                PyObject *tmp_assign_source_250;
                tmp_assign_source_250 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_11__prepared == NULL);
                tmp_QtWidgets$class_creation_11__prepared = tmp_assign_source_250;
            }
            branch_end_126:;
        }
        {
            PyObject *tmp_set_locals_32;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__prepared);
            tmp_set_locals_32 = tmp_QtWidgets$class_creation_11__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_306 = tmp_set_locals_32;
            Py_INCREF(tmp_set_locals_32);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_306, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 306;
            type_description_2 = "o";
            goto try_except_handler_97;
        }
        tmp_dictset_value = const_str_digest_e9116ad3e836e6a65b3043a1ba7c5bec;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_306, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 306;
            type_description_2 = "o";
            goto try_except_handler_97;
        }
        {
            nuitka_bool tmp_condition_result_194;
            PyObject *tmp_compexpr_left_32;
            PyObject *tmp_compexpr_right_32;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases);
            tmp_compexpr_left_32 = tmp_QtWidgets$class_creation_11__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases_orig);
            tmp_compexpr_right_32 = tmp_QtWidgets$class_creation_11__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_32, tmp_compexpr_right_32);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_97;
            }
            tmp_condition_result_194 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_194 == NUITKA_BOOL_TRUE) {
                goto branch_yes_128;
            } else {
                goto branch_no_128;
            }
            branch_yes_128:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_11__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_306, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_97;
            }
            branch_no_128:;
        }
        {
            PyObject *tmp_assign_source_251;
            PyObject *tmp_called_name_65;
            PyObject *tmp_args_name_63;
            PyObject *tmp_tuple_element_124;
            PyObject *tmp_kw_name_63;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__metaclass);
            tmp_called_name_65 = tmp_QtWidgets$class_creation_11__metaclass;
            tmp_tuple_element_124 = const_str_plain_QVBoxLayout;
            tmp_args_name_63 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_124);
            PyTuple_SET_ITEM(tmp_args_name_63, 0, tmp_tuple_element_124);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__bases);
            tmp_tuple_element_124 = tmp_QtWidgets$class_creation_11__bases;
            Py_INCREF(tmp_tuple_element_124);
            PyTuple_SET_ITEM(tmp_args_name_63, 1, tmp_tuple_element_124);
            tmp_tuple_element_124 = locals_PyQt5$uic$Compiler$qtproxies_306;
            Py_INCREF(tmp_tuple_element_124);
            PyTuple_SET_ITEM(tmp_args_name_63, 2, tmp_tuple_element_124);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_11__class_decl_dict);
            tmp_kw_name_63 = tmp_QtWidgets$class_creation_11__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 306;
            tmp_assign_source_251 = CALL_FUNCTION(tmp_called_name_65, tmp_args_name_63, tmp_kw_name_63);
            Py_DECREF(tmp_args_name_63);
            if (tmp_assign_source_251 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_2 = "o";
                goto try_except_handler_97;
            }
            assert(outline_31_var___class__ == NULL);
            outline_31_var___class__ = tmp_assign_source_251;
        }
        CHECK_OBJECT(outline_31_var___class__);
        tmp_dictset_value = outline_31_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_97;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_97:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_306);
        locals_PyQt5$uic$Compiler$qtproxies_306 = NULL;
        goto try_return_handler_96;
        // Exception handler code:
        try_except_handler_97:;
        exception_keeper_type_92 = exception_type;
        exception_keeper_value_92 = exception_value;
        exception_keeper_tb_92 = exception_tb;
        exception_keeper_lineno_92 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_306);
        locals_PyQt5$uic$Compiler$qtproxies_306 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_92;
        exception_value = exception_keeper_value_92;
        exception_tb = exception_keeper_tb_92;
        exception_lineno = exception_keeper_lineno_92;

        goto try_except_handler_96;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_96:;
        CHECK_OBJECT((PyObject *)outline_31_var___class__);
        Py_DECREF(outline_31_var___class__);
        outline_31_var___class__ = NULL;

        goto outline_result_32;
        // Exception handler code:
        try_except_handler_96:;
        exception_keeper_type_93 = exception_type;
        exception_keeper_value_93 = exception_value;
        exception_keeper_tb_93 = exception_tb;
        exception_keeper_lineno_93 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_93;
        exception_value = exception_keeper_value_93;
        exception_tb = exception_keeper_tb_93;
        exception_lineno = exception_keeper_lineno_93;

        goto outline_exception_32;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_32:;
        exception_lineno = 306;
        goto try_except_handler_95;
        outline_result_32:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QVBoxLayout, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 306;
            type_description_2 = "o";
            goto try_except_handler_95;
        }
        goto try_end_32;
        // Exception handler code:
        try_except_handler_95:;
        exception_keeper_type_94 = exception_type;
        exception_keeper_value_94 = exception_value;
        exception_keeper_tb_94 = exception_tb;
        exception_keeper_lineno_94 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_11__bases_orig);
        tmp_QtWidgets$class_creation_11__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_11__bases);
        tmp_QtWidgets$class_creation_11__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_11__class_decl_dict);
        tmp_QtWidgets$class_creation_11__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_11__metaclass);
        tmp_QtWidgets$class_creation_11__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_11__prepared);
        tmp_QtWidgets$class_creation_11__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_94;
        exception_value = exception_keeper_value_94;
        exception_tb = exception_keeper_tb_94;
        exception_lineno = exception_keeper_lineno_94;

        goto frame_exception_exit_12;
        // End of try:
        try_end_32:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_11__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_11__bases_orig);
        tmp_QtWidgets$class_creation_11__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_11__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_11__bases);
        tmp_QtWidgets$class_creation_11__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_11__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_11__class_decl_dict);
        tmp_QtWidgets$class_creation_11__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_11__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_11__metaclass);
        tmp_QtWidgets$class_creation_11__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_11__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_11__prepared);
        tmp_QtWidgets$class_creation_11__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_252;
            PyObject *tmp_tuple_element_125;
            PyObject *tmp_mvar_value_33;
            tmp_tuple_element_125 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QLayout);

            if (tmp_tuple_element_125 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_33 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QLayout);

                    if (unlikely(tmp_mvar_value_33 == NULL)) {
                        tmp_mvar_value_33 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QLayout);
                    }

                    if (tmp_mvar_value_33 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1530 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 307;
                        type_description_2 = "o";
                        goto try_except_handler_98;
                    }

                    tmp_tuple_element_125 = tmp_mvar_value_33;
                    Py_INCREF(tmp_tuple_element_125);
                }
            }

            tmp_assign_source_252 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_252, 0, tmp_tuple_element_125);
            assert(tmp_QtWidgets$class_creation_12__bases_orig == NULL);
            tmp_QtWidgets$class_creation_12__bases_orig = tmp_assign_source_252;
        }
        {
            PyObject *tmp_assign_source_253;
            PyObject *tmp_dircall_arg1_33;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases_orig);
            tmp_dircall_arg1_33 = tmp_QtWidgets$class_creation_12__bases_orig;
            Py_INCREF(tmp_dircall_arg1_33);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_33};
                tmp_assign_source_253 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_253 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            assert(tmp_QtWidgets$class_creation_12__bases == NULL);
            tmp_QtWidgets$class_creation_12__bases = tmp_assign_source_253;
        }
        {
            PyObject *tmp_assign_source_254;
            tmp_assign_source_254 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_12__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_12__class_decl_dict = tmp_assign_source_254;
        }
        {
            PyObject *tmp_assign_source_255;
            PyObject *tmp_metaclass_name_33;
            nuitka_bool tmp_condition_result_195;
            PyObject *tmp_key_name_97;
            PyObject *tmp_dict_name_97;
            PyObject *tmp_dict_name_98;
            PyObject *tmp_key_name_98;
            nuitka_bool tmp_condition_result_196;
            int tmp_truth_name_33;
            PyObject *tmp_type_arg_65;
            PyObject *tmp_subscribed_name_33;
            PyObject *tmp_subscript_name_33;
            PyObject *tmp_bases_name_33;
            tmp_key_name_97 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__class_decl_dict);
            tmp_dict_name_97 = tmp_QtWidgets$class_creation_12__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_97, tmp_key_name_97);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            tmp_condition_result_195 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_195 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_67;
            } else {
                goto condexpr_false_67;
            }
            condexpr_true_67:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__class_decl_dict);
            tmp_dict_name_98 = tmp_QtWidgets$class_creation_12__class_decl_dict;
            tmp_key_name_98 = const_str_plain_metaclass;
            tmp_metaclass_name_33 = DICT_GET_ITEM(tmp_dict_name_98, tmp_key_name_98);
            if (tmp_metaclass_name_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            goto condexpr_end_67;
            condexpr_false_67:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases);
            tmp_truth_name_33 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_12__bases);
            if (tmp_truth_name_33 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            tmp_condition_result_196 = tmp_truth_name_33 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_196 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_68;
            } else {
                goto condexpr_false_68;
            }
            condexpr_true_68:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases);
            tmp_subscribed_name_33 = tmp_QtWidgets$class_creation_12__bases;
            tmp_subscript_name_33 = const_int_0;
            tmp_type_arg_65 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_33, tmp_subscript_name_33, 0);
            if (tmp_type_arg_65 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            tmp_metaclass_name_33 = BUILTIN_TYPE1(tmp_type_arg_65);
            Py_DECREF(tmp_type_arg_65);
            if (tmp_metaclass_name_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            goto condexpr_end_68;
            condexpr_false_68:;
            tmp_metaclass_name_33 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_33);
            condexpr_end_68:;
            condexpr_end_67:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases);
            tmp_bases_name_33 = tmp_QtWidgets$class_creation_12__bases;
            tmp_assign_source_255 = SELECT_METACLASS(tmp_metaclass_name_33, tmp_bases_name_33);
            Py_DECREF(tmp_metaclass_name_33);
            if (tmp_assign_source_255 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            assert(tmp_QtWidgets$class_creation_12__metaclass == NULL);
            tmp_QtWidgets$class_creation_12__metaclass = tmp_assign_source_255;
        }
        {
            nuitka_bool tmp_condition_result_197;
            PyObject *tmp_key_name_99;
            PyObject *tmp_dict_name_99;
            tmp_key_name_99 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__class_decl_dict);
            tmp_dict_name_99 = tmp_QtWidgets$class_creation_12__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_99, tmp_key_name_99);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            tmp_condition_result_197 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_197 == NUITKA_BOOL_TRUE) {
                goto branch_yes_129;
            } else {
                goto branch_no_129;
            }
            branch_yes_129:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_12__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_98;
            }
            branch_no_129:;
        }
        {
            nuitka_bool tmp_condition_result_198;
            PyObject *tmp_source_name_135;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__metaclass);
            tmp_source_name_135 = tmp_QtWidgets$class_creation_12__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_135, const_str_plain___prepare__);
            tmp_condition_result_198 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_198 == NUITKA_BOOL_TRUE) {
                goto branch_yes_130;
            } else {
                goto branch_no_130;
            }
            branch_yes_130:;
            {
                PyObject *tmp_assign_source_256;
                PyObject *tmp_called_name_66;
                PyObject *tmp_source_name_136;
                PyObject *tmp_args_name_64;
                PyObject *tmp_tuple_element_126;
                PyObject *tmp_kw_name_64;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_12__metaclass);
                tmp_source_name_136 = tmp_QtWidgets$class_creation_12__metaclass;
                tmp_called_name_66 = LOOKUP_ATTRIBUTE(tmp_source_name_136, const_str_plain___prepare__);
                if (tmp_called_name_66 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 307;
                    type_description_2 = "o";
                    goto try_except_handler_98;
                }
                tmp_tuple_element_126 = const_str_plain_QFormLayout;
                tmp_args_name_64 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_126);
                PyTuple_SET_ITEM(tmp_args_name_64, 0, tmp_tuple_element_126);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases);
                tmp_tuple_element_126 = tmp_QtWidgets$class_creation_12__bases;
                Py_INCREF(tmp_tuple_element_126);
                PyTuple_SET_ITEM(tmp_args_name_64, 1, tmp_tuple_element_126);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_12__class_decl_dict);
                tmp_kw_name_64 = tmp_QtWidgets$class_creation_12__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 307;
                tmp_assign_source_256 = CALL_FUNCTION(tmp_called_name_66, tmp_args_name_64, tmp_kw_name_64);
                Py_DECREF(tmp_called_name_66);
                Py_DECREF(tmp_args_name_64);
                if (tmp_assign_source_256 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 307;
                    type_description_2 = "o";
                    goto try_except_handler_98;
                }
                assert(tmp_QtWidgets$class_creation_12__prepared == NULL);
                tmp_QtWidgets$class_creation_12__prepared = tmp_assign_source_256;
            }
            {
                nuitka_bool tmp_condition_result_199;
                PyObject *tmp_operand_name_33;
                PyObject *tmp_source_name_137;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_12__prepared);
                tmp_source_name_137 = tmp_QtWidgets$class_creation_12__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_137, const_str_plain___getitem__);
                tmp_operand_name_33 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_33);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 307;
                    type_description_2 = "o";
                    goto try_except_handler_98;
                }
                tmp_condition_result_199 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_199 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_131;
                } else {
                    goto branch_no_131;
                }
                branch_yes_131:;
                {
                    PyObject *tmp_raise_type_33;
                    PyObject *tmp_raise_value_33;
                    PyObject *tmp_left_name_33;
                    PyObject *tmp_right_name_33;
                    PyObject *tmp_tuple_element_127;
                    PyObject *tmp_getattr_target_33;
                    PyObject *tmp_getattr_attr_33;
                    PyObject *tmp_getattr_default_33;
                    PyObject *tmp_source_name_138;
                    PyObject *tmp_type_arg_66;
                    tmp_raise_type_33 = PyExc_TypeError;
                    tmp_left_name_33 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_12__metaclass);
                    tmp_getattr_target_33 = tmp_QtWidgets$class_creation_12__metaclass;
                    tmp_getattr_attr_33 = const_str_plain___name__;
                    tmp_getattr_default_33 = const_str_angle_metaclass;
                    tmp_tuple_element_127 = BUILTIN_GETATTR(tmp_getattr_target_33, tmp_getattr_attr_33, tmp_getattr_default_33);
                    if (tmp_tuple_element_127 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 307;
                        type_description_2 = "o";
                        goto try_except_handler_98;
                    }
                    tmp_right_name_33 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_33, 0, tmp_tuple_element_127);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_12__prepared);
                    tmp_type_arg_66 = tmp_QtWidgets$class_creation_12__prepared;
                    tmp_source_name_138 = BUILTIN_TYPE1(tmp_type_arg_66);
                    assert(!(tmp_source_name_138 == NULL));
                    tmp_tuple_element_127 = LOOKUP_ATTRIBUTE(tmp_source_name_138, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_138);
                    if (tmp_tuple_element_127 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_33);

                        exception_lineno = 307;
                        type_description_2 = "o";
                        goto try_except_handler_98;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_33, 1, tmp_tuple_element_127);
                    tmp_raise_value_33 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_33, tmp_right_name_33);
                    Py_DECREF(tmp_right_name_33);
                    if (tmp_raise_value_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 307;
                        type_description_2 = "o";
                        goto try_except_handler_98;
                    }
                    exception_type = tmp_raise_type_33;
                    Py_INCREF(tmp_raise_type_33);
                    exception_value = tmp_raise_value_33;
                    exception_lineno = 307;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_98;
                }
                branch_no_131:;
            }
            goto branch_end_130;
            branch_no_130:;
            {
                PyObject *tmp_assign_source_257;
                tmp_assign_source_257 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_12__prepared == NULL);
                tmp_QtWidgets$class_creation_12__prepared = tmp_assign_source_257;
            }
            branch_end_130:;
        }
        {
            PyObject *tmp_set_locals_33;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__prepared);
            tmp_set_locals_33 = tmp_QtWidgets$class_creation_12__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_307 = tmp_set_locals_33;
            Py_INCREF(tmp_set_locals_33);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_307, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 307;
            type_description_2 = "o";
            goto try_except_handler_100;
        }
        tmp_dictset_value = const_str_digest_69d8a6396683f491be9a483281531410;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_307, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 307;
            type_description_2 = "o";
            goto try_except_handler_100;
        }
        {
            nuitka_bool tmp_condition_result_200;
            PyObject *tmp_compexpr_left_33;
            PyObject *tmp_compexpr_right_33;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases);
            tmp_compexpr_left_33 = tmp_QtWidgets$class_creation_12__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases_orig);
            tmp_compexpr_right_33 = tmp_QtWidgets$class_creation_12__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_33, tmp_compexpr_right_33);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_100;
            }
            tmp_condition_result_200 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_200 == NUITKA_BOOL_TRUE) {
                goto branch_yes_132;
            } else {
                goto branch_no_132;
            }
            branch_yes_132:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_12__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_307, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_100;
            }
            branch_no_132:;
        }
        {
            PyObject *tmp_assign_source_258;
            PyObject *tmp_called_name_67;
            PyObject *tmp_args_name_65;
            PyObject *tmp_tuple_element_128;
            PyObject *tmp_kw_name_65;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__metaclass);
            tmp_called_name_67 = tmp_QtWidgets$class_creation_12__metaclass;
            tmp_tuple_element_128 = const_str_plain_QFormLayout;
            tmp_args_name_65 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_128);
            PyTuple_SET_ITEM(tmp_args_name_65, 0, tmp_tuple_element_128);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__bases);
            tmp_tuple_element_128 = tmp_QtWidgets$class_creation_12__bases;
            Py_INCREF(tmp_tuple_element_128);
            PyTuple_SET_ITEM(tmp_args_name_65, 1, tmp_tuple_element_128);
            tmp_tuple_element_128 = locals_PyQt5$uic$Compiler$qtproxies_307;
            Py_INCREF(tmp_tuple_element_128);
            PyTuple_SET_ITEM(tmp_args_name_65, 2, tmp_tuple_element_128);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_12__class_decl_dict);
            tmp_kw_name_65 = tmp_QtWidgets$class_creation_12__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 307;
            tmp_assign_source_258 = CALL_FUNCTION(tmp_called_name_67, tmp_args_name_65, tmp_kw_name_65);
            Py_DECREF(tmp_args_name_65);
            if (tmp_assign_source_258 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_2 = "o";
                goto try_except_handler_100;
            }
            assert(outline_32_var___class__ == NULL);
            outline_32_var___class__ = tmp_assign_source_258;
        }
        CHECK_OBJECT(outline_32_var___class__);
        tmp_dictset_value = outline_32_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_100;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_100:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_307);
        locals_PyQt5$uic$Compiler$qtproxies_307 = NULL;
        goto try_return_handler_99;
        // Exception handler code:
        try_except_handler_100:;
        exception_keeper_type_95 = exception_type;
        exception_keeper_value_95 = exception_value;
        exception_keeper_tb_95 = exception_tb;
        exception_keeper_lineno_95 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_307);
        locals_PyQt5$uic$Compiler$qtproxies_307 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_95;
        exception_value = exception_keeper_value_95;
        exception_tb = exception_keeper_tb_95;
        exception_lineno = exception_keeper_lineno_95;

        goto try_except_handler_99;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_99:;
        CHECK_OBJECT((PyObject *)outline_32_var___class__);
        Py_DECREF(outline_32_var___class__);
        outline_32_var___class__ = NULL;

        goto outline_result_33;
        // Exception handler code:
        try_except_handler_99:;
        exception_keeper_type_96 = exception_type;
        exception_keeper_value_96 = exception_value;
        exception_keeper_tb_96 = exception_tb;
        exception_keeper_lineno_96 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_96;
        exception_value = exception_keeper_value_96;
        exception_tb = exception_keeper_tb_96;
        exception_lineno = exception_keeper_lineno_96;

        goto outline_exception_33;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_33:;
        exception_lineno = 307;
        goto try_except_handler_98;
        outline_result_33:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFormLayout, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 307;
            type_description_2 = "o";
            goto try_except_handler_98;
        }
        goto try_end_33;
        // Exception handler code:
        try_except_handler_98:;
        exception_keeper_type_97 = exception_type;
        exception_keeper_value_97 = exception_value;
        exception_keeper_tb_97 = exception_tb;
        exception_keeper_lineno_97 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_12__bases_orig);
        tmp_QtWidgets$class_creation_12__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_12__bases);
        tmp_QtWidgets$class_creation_12__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_12__class_decl_dict);
        tmp_QtWidgets$class_creation_12__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_12__metaclass);
        tmp_QtWidgets$class_creation_12__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_12__prepared);
        tmp_QtWidgets$class_creation_12__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_97;
        exception_value = exception_keeper_value_97;
        exception_tb = exception_keeper_tb_97;
        exception_lineno = exception_keeper_lineno_97;

        goto frame_exception_exit_12;
        // End of try:
        try_end_33:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_12__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_12__bases_orig);
        tmp_QtWidgets$class_creation_12__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_12__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_12__bases);
        tmp_QtWidgets$class_creation_12__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_12__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_12__class_decl_dict);
        tmp_QtWidgets$class_creation_12__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_12__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_12__metaclass);
        tmp_QtWidgets$class_creation_12__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_12__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_12__prepared);
        tmp_QtWidgets$class_creation_12__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_259;
            PyObject *tmp_tuple_element_129;
            PyObject *tmp_source_name_139;
            PyObject *tmp_mvar_value_34;
            tmp_source_name_139 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QtCore);

            if (tmp_source_name_139 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_34 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtCore);

                    if (unlikely(tmp_mvar_value_34 == NULL)) {
                        tmp_mvar_value_34 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QtCore);
                    }

                    if (tmp_mvar_value_34 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1468 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 309;
                        type_description_2 = "o";
                        goto try_except_handler_101;
                    }

                    tmp_source_name_139 = tmp_mvar_value_34;
                    Py_INCREF(tmp_source_name_139);
                }
            }

            tmp_tuple_element_129 = LOOKUP_ATTRIBUTE(tmp_source_name_139, const_str_plain_QObject);
            Py_DECREF(tmp_source_name_139);
            if (tmp_tuple_element_129 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            tmp_assign_source_259 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_259, 0, tmp_tuple_element_129);
            assert(tmp_QtWidgets$class_creation_13__bases_orig == NULL);
            tmp_QtWidgets$class_creation_13__bases_orig = tmp_assign_source_259;
        }
        {
            PyObject *tmp_assign_source_260;
            PyObject *tmp_dircall_arg1_34;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases_orig);
            tmp_dircall_arg1_34 = tmp_QtWidgets$class_creation_13__bases_orig;
            Py_INCREF(tmp_dircall_arg1_34);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_34};
                tmp_assign_source_260 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_260 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            assert(tmp_QtWidgets$class_creation_13__bases == NULL);
            tmp_QtWidgets$class_creation_13__bases = tmp_assign_source_260;
        }
        {
            PyObject *tmp_assign_source_261;
            tmp_assign_source_261 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_13__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_13__class_decl_dict = tmp_assign_source_261;
        }
        {
            PyObject *tmp_assign_source_262;
            PyObject *tmp_metaclass_name_34;
            nuitka_bool tmp_condition_result_201;
            PyObject *tmp_key_name_100;
            PyObject *tmp_dict_name_100;
            PyObject *tmp_dict_name_101;
            PyObject *tmp_key_name_101;
            nuitka_bool tmp_condition_result_202;
            int tmp_truth_name_34;
            PyObject *tmp_type_arg_67;
            PyObject *tmp_subscribed_name_34;
            PyObject *tmp_subscript_name_34;
            PyObject *tmp_bases_name_34;
            tmp_key_name_100 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__class_decl_dict);
            tmp_dict_name_100 = tmp_QtWidgets$class_creation_13__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_100, tmp_key_name_100);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            tmp_condition_result_201 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_201 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_69;
            } else {
                goto condexpr_false_69;
            }
            condexpr_true_69:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__class_decl_dict);
            tmp_dict_name_101 = tmp_QtWidgets$class_creation_13__class_decl_dict;
            tmp_key_name_101 = const_str_plain_metaclass;
            tmp_metaclass_name_34 = DICT_GET_ITEM(tmp_dict_name_101, tmp_key_name_101);
            if (tmp_metaclass_name_34 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            goto condexpr_end_69;
            condexpr_false_69:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases);
            tmp_truth_name_34 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_13__bases);
            if (tmp_truth_name_34 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            tmp_condition_result_202 = tmp_truth_name_34 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_202 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_70;
            } else {
                goto condexpr_false_70;
            }
            condexpr_true_70:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases);
            tmp_subscribed_name_34 = tmp_QtWidgets$class_creation_13__bases;
            tmp_subscript_name_34 = const_int_0;
            tmp_type_arg_67 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_34, tmp_subscript_name_34, 0);
            if (tmp_type_arg_67 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            tmp_metaclass_name_34 = BUILTIN_TYPE1(tmp_type_arg_67);
            Py_DECREF(tmp_type_arg_67);
            if (tmp_metaclass_name_34 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            goto condexpr_end_70;
            condexpr_false_70:;
            tmp_metaclass_name_34 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_34);
            condexpr_end_70:;
            condexpr_end_69:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases);
            tmp_bases_name_34 = tmp_QtWidgets$class_creation_13__bases;
            tmp_assign_source_262 = SELECT_METACLASS(tmp_metaclass_name_34, tmp_bases_name_34);
            Py_DECREF(tmp_metaclass_name_34);
            if (tmp_assign_source_262 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            assert(tmp_QtWidgets$class_creation_13__metaclass == NULL);
            tmp_QtWidgets$class_creation_13__metaclass = tmp_assign_source_262;
        }
        {
            nuitka_bool tmp_condition_result_203;
            PyObject *tmp_key_name_102;
            PyObject *tmp_dict_name_102;
            tmp_key_name_102 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__class_decl_dict);
            tmp_dict_name_102 = tmp_QtWidgets$class_creation_13__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_102, tmp_key_name_102);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            tmp_condition_result_203 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_203 == NUITKA_BOOL_TRUE) {
                goto branch_yes_133;
            } else {
                goto branch_no_133;
            }
            branch_yes_133:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_13__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_101;
            }
            branch_no_133:;
        }
        {
            nuitka_bool tmp_condition_result_204;
            PyObject *tmp_source_name_140;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__metaclass);
            tmp_source_name_140 = tmp_QtWidgets$class_creation_13__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_140, const_str_plain___prepare__);
            tmp_condition_result_204 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_204 == NUITKA_BOOL_TRUE) {
                goto branch_yes_134;
            } else {
                goto branch_no_134;
            }
            branch_yes_134:;
            {
                PyObject *tmp_assign_source_263;
                PyObject *tmp_called_name_68;
                PyObject *tmp_source_name_141;
                PyObject *tmp_args_name_66;
                PyObject *tmp_tuple_element_130;
                PyObject *tmp_kw_name_66;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_13__metaclass);
                tmp_source_name_141 = tmp_QtWidgets$class_creation_13__metaclass;
                tmp_called_name_68 = LOOKUP_ATTRIBUTE(tmp_source_name_141, const_str_plain___prepare__);
                if (tmp_called_name_68 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 309;
                    type_description_2 = "o";
                    goto try_except_handler_101;
                }
                tmp_tuple_element_130 = const_str_plain_QWidget;
                tmp_args_name_66 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_130);
                PyTuple_SET_ITEM(tmp_args_name_66, 0, tmp_tuple_element_130);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases);
                tmp_tuple_element_130 = tmp_QtWidgets$class_creation_13__bases;
                Py_INCREF(tmp_tuple_element_130);
                PyTuple_SET_ITEM(tmp_args_name_66, 1, tmp_tuple_element_130);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_13__class_decl_dict);
                tmp_kw_name_66 = tmp_QtWidgets$class_creation_13__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 309;
                tmp_assign_source_263 = CALL_FUNCTION(tmp_called_name_68, tmp_args_name_66, tmp_kw_name_66);
                Py_DECREF(tmp_called_name_68);
                Py_DECREF(tmp_args_name_66);
                if (tmp_assign_source_263 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 309;
                    type_description_2 = "o";
                    goto try_except_handler_101;
                }
                assert(tmp_QtWidgets$class_creation_13__prepared == NULL);
                tmp_QtWidgets$class_creation_13__prepared = tmp_assign_source_263;
            }
            {
                nuitka_bool tmp_condition_result_205;
                PyObject *tmp_operand_name_34;
                PyObject *tmp_source_name_142;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_13__prepared);
                tmp_source_name_142 = tmp_QtWidgets$class_creation_13__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_142, const_str_plain___getitem__);
                tmp_operand_name_34 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_34);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 309;
                    type_description_2 = "o";
                    goto try_except_handler_101;
                }
                tmp_condition_result_205 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_205 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_135;
                } else {
                    goto branch_no_135;
                }
                branch_yes_135:;
                {
                    PyObject *tmp_raise_type_34;
                    PyObject *tmp_raise_value_34;
                    PyObject *tmp_left_name_34;
                    PyObject *tmp_right_name_34;
                    PyObject *tmp_tuple_element_131;
                    PyObject *tmp_getattr_target_34;
                    PyObject *tmp_getattr_attr_34;
                    PyObject *tmp_getattr_default_34;
                    PyObject *tmp_source_name_143;
                    PyObject *tmp_type_arg_68;
                    tmp_raise_type_34 = PyExc_TypeError;
                    tmp_left_name_34 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_13__metaclass);
                    tmp_getattr_target_34 = tmp_QtWidgets$class_creation_13__metaclass;
                    tmp_getattr_attr_34 = const_str_plain___name__;
                    tmp_getattr_default_34 = const_str_angle_metaclass;
                    tmp_tuple_element_131 = BUILTIN_GETATTR(tmp_getattr_target_34, tmp_getattr_attr_34, tmp_getattr_default_34);
                    if (tmp_tuple_element_131 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 309;
                        type_description_2 = "o";
                        goto try_except_handler_101;
                    }
                    tmp_right_name_34 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_34, 0, tmp_tuple_element_131);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_13__prepared);
                    tmp_type_arg_68 = tmp_QtWidgets$class_creation_13__prepared;
                    tmp_source_name_143 = BUILTIN_TYPE1(tmp_type_arg_68);
                    assert(!(tmp_source_name_143 == NULL));
                    tmp_tuple_element_131 = LOOKUP_ATTRIBUTE(tmp_source_name_143, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_143);
                    if (tmp_tuple_element_131 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_34);

                        exception_lineno = 309;
                        type_description_2 = "o";
                        goto try_except_handler_101;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_34, 1, tmp_tuple_element_131);
                    tmp_raise_value_34 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_34, tmp_right_name_34);
                    Py_DECREF(tmp_right_name_34);
                    if (tmp_raise_value_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 309;
                        type_description_2 = "o";
                        goto try_except_handler_101;
                    }
                    exception_type = tmp_raise_type_34;
                    Py_INCREF(tmp_raise_type_34);
                    exception_value = tmp_raise_value_34;
                    exception_lineno = 309;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_101;
                }
                branch_no_135:;
            }
            goto branch_end_134;
            branch_no_134:;
            {
                PyObject *tmp_assign_source_264;
                tmp_assign_source_264 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_13__prepared == NULL);
                tmp_QtWidgets$class_creation_13__prepared = tmp_assign_source_264;
            }
            branch_end_134:;
        }
        {
            PyObject *tmp_set_locals_34;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__prepared);
            tmp_set_locals_34 = tmp_QtWidgets$class_creation_13__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_309 = tmp_set_locals_34;
            Py_INCREF(tmp_set_locals_34);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_309, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 309;
            type_description_2 = "o";
            goto try_except_handler_103;
        }
        tmp_dictset_value = const_str_digest_bbfddf3a2d8cd4fa3c160ae60b25e373;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_309, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 309;
            type_description_2 = "o";
            goto try_except_handler_103;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_a9231d8273ddef68b5e33e09c5b1cc0d_14, codeobj_a9231d8273ddef68b5e33e09c5b1cc0d, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_a9231d8273ddef68b5e33e09c5b1cc0d_14 = cache_frame_a9231d8273ddef68b5e33e09c5b1cc0d_14;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_a9231d8273ddef68b5e33e09c5b1cc0d_14);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_a9231d8273ddef68b5e33e09c5b1cc0d_14) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_22_font();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_309, const_str_plain_font, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 310;
            type_description_3 = "o";
            goto frame_exception_exit_14;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_23_minimumSizeHint();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_309, const_str_plain_minimumSizeHint, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 313;
            type_description_3 = "o";
            goto frame_exception_exit_14;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_24_sizePolicy();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_309, const_str_plain_sizePolicy, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 316;
            type_description_3 = "o";
            goto frame_exception_exit_14;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a9231d8273ddef68b5e33e09c5b1cc0d_14);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_12;

        frame_exception_exit_14:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a9231d8273ddef68b5e33e09c5b1cc0d_14);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_a9231d8273ddef68b5e33e09c5b1cc0d_14, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_a9231d8273ddef68b5e33e09c5b1cc0d_14->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_a9231d8273ddef68b5e33e09c5b1cc0d_14, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_a9231d8273ddef68b5e33e09c5b1cc0d_14,
            type_description_3,
            outline_33_var___class__
        );


        // Release cached frame.
        if (frame_a9231d8273ddef68b5e33e09c5b1cc0d_14 == cache_frame_a9231d8273ddef68b5e33e09c5b1cc0d_14) {
            Py_DECREF(frame_a9231d8273ddef68b5e33e09c5b1cc0d_14);
        }
        cache_frame_a9231d8273ddef68b5e33e09c5b1cc0d_14 = NULL;

        assertFrameObject(frame_a9231d8273ddef68b5e33e09c5b1cc0d_14);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_13;

        frame_no_exception_12:;
        goto skip_nested_handling_12;
        nested_frame_exit_13:;
        type_description_2 = "o";
        goto try_except_handler_103;
        skip_nested_handling_12:;
        {
            nuitka_bool tmp_condition_result_206;
            PyObject *tmp_compexpr_left_34;
            PyObject *tmp_compexpr_right_34;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases);
            tmp_compexpr_left_34 = tmp_QtWidgets$class_creation_13__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases_orig);
            tmp_compexpr_right_34 = tmp_QtWidgets$class_creation_13__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_34, tmp_compexpr_right_34);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_103;
            }
            tmp_condition_result_206 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_206 == NUITKA_BOOL_TRUE) {
                goto branch_yes_136;
            } else {
                goto branch_no_136;
            }
            branch_yes_136:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_13__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_309, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_103;
            }
            branch_no_136:;
        }
        {
            PyObject *tmp_assign_source_265;
            PyObject *tmp_called_name_69;
            PyObject *tmp_args_name_67;
            PyObject *tmp_tuple_element_132;
            PyObject *tmp_kw_name_67;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__metaclass);
            tmp_called_name_69 = tmp_QtWidgets$class_creation_13__metaclass;
            tmp_tuple_element_132 = const_str_plain_QWidget;
            tmp_args_name_67 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_132);
            PyTuple_SET_ITEM(tmp_args_name_67, 0, tmp_tuple_element_132);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__bases);
            tmp_tuple_element_132 = tmp_QtWidgets$class_creation_13__bases;
            Py_INCREF(tmp_tuple_element_132);
            PyTuple_SET_ITEM(tmp_args_name_67, 1, tmp_tuple_element_132);
            tmp_tuple_element_132 = locals_PyQt5$uic$Compiler$qtproxies_309;
            Py_INCREF(tmp_tuple_element_132);
            PyTuple_SET_ITEM(tmp_args_name_67, 2, tmp_tuple_element_132);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_13__class_decl_dict);
            tmp_kw_name_67 = tmp_QtWidgets$class_creation_13__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 309;
            tmp_assign_source_265 = CALL_FUNCTION(tmp_called_name_69, tmp_args_name_67, tmp_kw_name_67);
            Py_DECREF(tmp_args_name_67);
            if (tmp_assign_source_265 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 309;
                type_description_2 = "o";
                goto try_except_handler_103;
            }
            assert(outline_33_var___class__ == NULL);
            outline_33_var___class__ = tmp_assign_source_265;
        }
        CHECK_OBJECT(outline_33_var___class__);
        tmp_dictset_value = outline_33_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_103;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_103:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_309);
        locals_PyQt5$uic$Compiler$qtproxies_309 = NULL;
        goto try_return_handler_102;
        // Exception handler code:
        try_except_handler_103:;
        exception_keeper_type_98 = exception_type;
        exception_keeper_value_98 = exception_value;
        exception_keeper_tb_98 = exception_tb;
        exception_keeper_lineno_98 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_309);
        locals_PyQt5$uic$Compiler$qtproxies_309 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_98;
        exception_value = exception_keeper_value_98;
        exception_tb = exception_keeper_tb_98;
        exception_lineno = exception_keeper_lineno_98;

        goto try_except_handler_102;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_102:;
        CHECK_OBJECT((PyObject *)outline_33_var___class__);
        Py_DECREF(outline_33_var___class__);
        outline_33_var___class__ = NULL;

        goto outline_result_34;
        // Exception handler code:
        try_except_handler_102:;
        exception_keeper_type_99 = exception_type;
        exception_keeper_value_99 = exception_value;
        exception_keeper_tb_99 = exception_tb;
        exception_keeper_lineno_99 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_99;
        exception_value = exception_keeper_value_99;
        exception_tb = exception_keeper_tb_99;
        exception_lineno = exception_keeper_lineno_99;

        goto outline_exception_34;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_34:;
        exception_lineno = 309;
        goto try_except_handler_101;
        outline_result_34:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 309;
            type_description_2 = "o";
            goto try_except_handler_101;
        }
        goto try_end_34;
        // Exception handler code:
        try_except_handler_101:;
        exception_keeper_type_100 = exception_type;
        exception_keeper_value_100 = exception_value;
        exception_keeper_tb_100 = exception_tb;
        exception_keeper_lineno_100 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_13__bases_orig);
        tmp_QtWidgets$class_creation_13__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_13__bases);
        tmp_QtWidgets$class_creation_13__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_13__class_decl_dict);
        tmp_QtWidgets$class_creation_13__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_13__metaclass);
        tmp_QtWidgets$class_creation_13__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_13__prepared);
        tmp_QtWidgets$class_creation_13__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_100;
        exception_value = exception_keeper_value_100;
        exception_tb = exception_keeper_tb_100;
        exception_lineno = exception_keeper_lineno_100;

        goto frame_exception_exit_12;
        // End of try:
        try_end_34:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_13__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_13__bases_orig);
        tmp_QtWidgets$class_creation_13__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_13__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_13__bases);
        tmp_QtWidgets$class_creation_13__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_13__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_13__class_decl_dict);
        tmp_QtWidgets$class_creation_13__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_13__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_13__metaclass);
        tmp_QtWidgets$class_creation_13__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_13__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_13__prepared);
        tmp_QtWidgets$class_creation_13__prepared = NULL;

        {
            PyObject *tmp_assign_source_266;
            PyObject *tmp_tuple_element_133;
            tmp_tuple_element_133 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_133 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 321;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_133 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_266 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_266, 0, tmp_tuple_element_133);
            assert(tmp_QtWidgets$class_creation_14__bases_orig == NULL);
            tmp_QtWidgets$class_creation_14__bases_orig = tmp_assign_source_266;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_267;
            PyObject *tmp_dircall_arg1_35;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases_orig);
            tmp_dircall_arg1_35 = tmp_QtWidgets$class_creation_14__bases_orig;
            Py_INCREF(tmp_dircall_arg1_35);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_35};
                tmp_assign_source_267 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_267 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            assert(tmp_QtWidgets$class_creation_14__bases == NULL);
            tmp_QtWidgets$class_creation_14__bases = tmp_assign_source_267;
        }
        {
            PyObject *tmp_assign_source_268;
            tmp_assign_source_268 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_14__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_14__class_decl_dict = tmp_assign_source_268;
        }
        {
            PyObject *tmp_assign_source_269;
            PyObject *tmp_metaclass_name_35;
            nuitka_bool tmp_condition_result_207;
            PyObject *tmp_key_name_103;
            PyObject *tmp_dict_name_103;
            PyObject *tmp_dict_name_104;
            PyObject *tmp_key_name_104;
            nuitka_bool tmp_condition_result_208;
            int tmp_truth_name_35;
            PyObject *tmp_type_arg_69;
            PyObject *tmp_subscribed_name_35;
            PyObject *tmp_subscript_name_35;
            PyObject *tmp_bases_name_35;
            tmp_key_name_103 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__class_decl_dict);
            tmp_dict_name_103 = tmp_QtWidgets$class_creation_14__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_103, tmp_key_name_103);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            tmp_condition_result_207 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_207 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_71;
            } else {
                goto condexpr_false_71;
            }
            condexpr_true_71:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__class_decl_dict);
            tmp_dict_name_104 = tmp_QtWidgets$class_creation_14__class_decl_dict;
            tmp_key_name_104 = const_str_plain_metaclass;
            tmp_metaclass_name_35 = DICT_GET_ITEM(tmp_dict_name_104, tmp_key_name_104);
            if (tmp_metaclass_name_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            goto condexpr_end_71;
            condexpr_false_71:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases);
            tmp_truth_name_35 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_14__bases);
            if (tmp_truth_name_35 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            tmp_condition_result_208 = tmp_truth_name_35 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_208 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_72;
            } else {
                goto condexpr_false_72;
            }
            condexpr_true_72:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases);
            tmp_subscribed_name_35 = tmp_QtWidgets$class_creation_14__bases;
            tmp_subscript_name_35 = const_int_0;
            tmp_type_arg_69 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_35, tmp_subscript_name_35, 0);
            if (tmp_type_arg_69 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            tmp_metaclass_name_35 = BUILTIN_TYPE1(tmp_type_arg_69);
            Py_DECREF(tmp_type_arg_69);
            if (tmp_metaclass_name_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            goto condexpr_end_72;
            condexpr_false_72:;
            tmp_metaclass_name_35 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_35);
            condexpr_end_72:;
            condexpr_end_71:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases);
            tmp_bases_name_35 = tmp_QtWidgets$class_creation_14__bases;
            tmp_assign_source_269 = SELECT_METACLASS(tmp_metaclass_name_35, tmp_bases_name_35);
            Py_DECREF(tmp_metaclass_name_35);
            if (tmp_assign_source_269 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            assert(tmp_QtWidgets$class_creation_14__metaclass == NULL);
            tmp_QtWidgets$class_creation_14__metaclass = tmp_assign_source_269;
        }
        {
            nuitka_bool tmp_condition_result_209;
            PyObject *tmp_key_name_105;
            PyObject *tmp_dict_name_105;
            tmp_key_name_105 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__class_decl_dict);
            tmp_dict_name_105 = tmp_QtWidgets$class_creation_14__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_105, tmp_key_name_105);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            tmp_condition_result_209 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_209 == NUITKA_BOOL_TRUE) {
                goto branch_yes_137;
            } else {
                goto branch_no_137;
            }
            branch_yes_137:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_14__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_104;
            }
            branch_no_137:;
        }
        {
            nuitka_bool tmp_condition_result_210;
            PyObject *tmp_source_name_144;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__metaclass);
            tmp_source_name_144 = tmp_QtWidgets$class_creation_14__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_144, const_str_plain___prepare__);
            tmp_condition_result_210 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_210 == NUITKA_BOOL_TRUE) {
                goto branch_yes_138;
            } else {
                goto branch_no_138;
            }
            branch_yes_138:;
            {
                PyObject *tmp_assign_source_270;
                PyObject *tmp_called_name_70;
                PyObject *tmp_source_name_145;
                PyObject *tmp_args_name_68;
                PyObject *tmp_tuple_element_134;
                PyObject *tmp_kw_name_68;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_14__metaclass);
                tmp_source_name_145 = tmp_QtWidgets$class_creation_14__metaclass;
                tmp_called_name_70 = LOOKUP_ATTRIBUTE(tmp_source_name_145, const_str_plain___prepare__);
                if (tmp_called_name_70 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 321;
                    type_description_2 = "o";
                    goto try_except_handler_104;
                }
                tmp_tuple_element_134 = const_str_plain_QDialog;
                tmp_args_name_68 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_134);
                PyTuple_SET_ITEM(tmp_args_name_68, 0, tmp_tuple_element_134);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases);
                tmp_tuple_element_134 = tmp_QtWidgets$class_creation_14__bases;
                Py_INCREF(tmp_tuple_element_134);
                PyTuple_SET_ITEM(tmp_args_name_68, 1, tmp_tuple_element_134);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_14__class_decl_dict);
                tmp_kw_name_68 = tmp_QtWidgets$class_creation_14__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 321;
                tmp_assign_source_270 = CALL_FUNCTION(tmp_called_name_70, tmp_args_name_68, tmp_kw_name_68);
                Py_DECREF(tmp_called_name_70);
                Py_DECREF(tmp_args_name_68);
                if (tmp_assign_source_270 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 321;
                    type_description_2 = "o";
                    goto try_except_handler_104;
                }
                assert(tmp_QtWidgets$class_creation_14__prepared == NULL);
                tmp_QtWidgets$class_creation_14__prepared = tmp_assign_source_270;
            }
            {
                nuitka_bool tmp_condition_result_211;
                PyObject *tmp_operand_name_35;
                PyObject *tmp_source_name_146;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_14__prepared);
                tmp_source_name_146 = tmp_QtWidgets$class_creation_14__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_146, const_str_plain___getitem__);
                tmp_operand_name_35 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_35);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 321;
                    type_description_2 = "o";
                    goto try_except_handler_104;
                }
                tmp_condition_result_211 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_211 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_139;
                } else {
                    goto branch_no_139;
                }
                branch_yes_139:;
                {
                    PyObject *tmp_raise_type_35;
                    PyObject *tmp_raise_value_35;
                    PyObject *tmp_left_name_35;
                    PyObject *tmp_right_name_35;
                    PyObject *tmp_tuple_element_135;
                    PyObject *tmp_getattr_target_35;
                    PyObject *tmp_getattr_attr_35;
                    PyObject *tmp_getattr_default_35;
                    PyObject *tmp_source_name_147;
                    PyObject *tmp_type_arg_70;
                    tmp_raise_type_35 = PyExc_TypeError;
                    tmp_left_name_35 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_14__metaclass);
                    tmp_getattr_target_35 = tmp_QtWidgets$class_creation_14__metaclass;
                    tmp_getattr_attr_35 = const_str_plain___name__;
                    tmp_getattr_default_35 = const_str_angle_metaclass;
                    tmp_tuple_element_135 = BUILTIN_GETATTR(tmp_getattr_target_35, tmp_getattr_attr_35, tmp_getattr_default_35);
                    if (tmp_tuple_element_135 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 321;
                        type_description_2 = "o";
                        goto try_except_handler_104;
                    }
                    tmp_right_name_35 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_35, 0, tmp_tuple_element_135);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_14__prepared);
                    tmp_type_arg_70 = tmp_QtWidgets$class_creation_14__prepared;
                    tmp_source_name_147 = BUILTIN_TYPE1(tmp_type_arg_70);
                    assert(!(tmp_source_name_147 == NULL));
                    tmp_tuple_element_135 = LOOKUP_ATTRIBUTE(tmp_source_name_147, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_147);
                    if (tmp_tuple_element_135 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_35);

                        exception_lineno = 321;
                        type_description_2 = "o";
                        goto try_except_handler_104;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_35, 1, tmp_tuple_element_135);
                    tmp_raise_value_35 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_35, tmp_right_name_35);
                    Py_DECREF(tmp_right_name_35);
                    if (tmp_raise_value_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 321;
                        type_description_2 = "o";
                        goto try_except_handler_104;
                    }
                    exception_type = tmp_raise_type_35;
                    Py_INCREF(tmp_raise_type_35);
                    exception_value = tmp_raise_value_35;
                    exception_lineno = 321;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_104;
                }
                branch_no_139:;
            }
            goto branch_end_138;
            branch_no_138:;
            {
                PyObject *tmp_assign_source_271;
                tmp_assign_source_271 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_14__prepared == NULL);
                tmp_QtWidgets$class_creation_14__prepared = tmp_assign_source_271;
            }
            branch_end_138:;
        }
        {
            PyObject *tmp_set_locals_35;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__prepared);
            tmp_set_locals_35 = tmp_QtWidgets$class_creation_14__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_321 = tmp_set_locals_35;
            Py_INCREF(tmp_set_locals_35);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_321, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;
            type_description_2 = "o";
            goto try_except_handler_106;
        }
        tmp_dictset_value = const_str_digest_e9f22005d8828bb0a675a8840855f13d;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_321, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;
            type_description_2 = "o";
            goto try_except_handler_106;
        }
        {
            nuitka_bool tmp_condition_result_212;
            PyObject *tmp_compexpr_left_35;
            PyObject *tmp_compexpr_right_35;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases);
            tmp_compexpr_left_35 = tmp_QtWidgets$class_creation_14__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases_orig);
            tmp_compexpr_right_35 = tmp_QtWidgets$class_creation_14__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_35, tmp_compexpr_right_35);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_106;
            }
            tmp_condition_result_212 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_212 == NUITKA_BOOL_TRUE) {
                goto branch_yes_140;
            } else {
                goto branch_no_140;
            }
            branch_yes_140:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_14__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_321, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_106;
            }
            branch_no_140:;
        }
        {
            PyObject *tmp_assign_source_272;
            PyObject *tmp_called_name_71;
            PyObject *tmp_args_name_69;
            PyObject *tmp_tuple_element_136;
            PyObject *tmp_kw_name_69;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__metaclass);
            tmp_called_name_71 = tmp_QtWidgets$class_creation_14__metaclass;
            tmp_tuple_element_136 = const_str_plain_QDialog;
            tmp_args_name_69 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_136);
            PyTuple_SET_ITEM(tmp_args_name_69, 0, tmp_tuple_element_136);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__bases);
            tmp_tuple_element_136 = tmp_QtWidgets$class_creation_14__bases;
            Py_INCREF(tmp_tuple_element_136);
            PyTuple_SET_ITEM(tmp_args_name_69, 1, tmp_tuple_element_136);
            tmp_tuple_element_136 = locals_PyQt5$uic$Compiler$qtproxies_321;
            Py_INCREF(tmp_tuple_element_136);
            PyTuple_SET_ITEM(tmp_args_name_69, 2, tmp_tuple_element_136);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_14__class_decl_dict);
            tmp_kw_name_69 = tmp_QtWidgets$class_creation_14__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 321;
            tmp_assign_source_272 = CALL_FUNCTION(tmp_called_name_71, tmp_args_name_69, tmp_kw_name_69);
            Py_DECREF(tmp_args_name_69);
            if (tmp_assign_source_272 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_2 = "o";
                goto try_except_handler_106;
            }
            assert(outline_34_var___class__ == NULL);
            outline_34_var___class__ = tmp_assign_source_272;
        }
        CHECK_OBJECT(outline_34_var___class__);
        tmp_dictset_value = outline_34_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_106;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_106:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_321);
        locals_PyQt5$uic$Compiler$qtproxies_321 = NULL;
        goto try_return_handler_105;
        // Exception handler code:
        try_except_handler_106:;
        exception_keeper_type_101 = exception_type;
        exception_keeper_value_101 = exception_value;
        exception_keeper_tb_101 = exception_tb;
        exception_keeper_lineno_101 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_321);
        locals_PyQt5$uic$Compiler$qtproxies_321 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_101;
        exception_value = exception_keeper_value_101;
        exception_tb = exception_keeper_tb_101;
        exception_lineno = exception_keeper_lineno_101;

        goto try_except_handler_105;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_105:;
        CHECK_OBJECT((PyObject *)outline_34_var___class__);
        Py_DECREF(outline_34_var___class__);
        outline_34_var___class__ = NULL;

        goto outline_result_35;
        // Exception handler code:
        try_except_handler_105:;
        exception_keeper_type_102 = exception_type;
        exception_keeper_value_102 = exception_value;
        exception_keeper_tb_102 = exception_tb;
        exception_keeper_lineno_102 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_102;
        exception_value = exception_keeper_value_102;
        exception_tb = exception_keeper_tb_102;
        exception_lineno = exception_keeper_lineno_102;

        goto outline_exception_35;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_35:;
        exception_lineno = 321;
        goto try_except_handler_104;
        outline_result_35:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDialog, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;
            type_description_2 = "o";
            goto try_except_handler_104;
        }
        goto try_end_35;
        // Exception handler code:
        try_except_handler_104:;
        exception_keeper_type_103 = exception_type;
        exception_keeper_value_103 = exception_value;
        exception_keeper_tb_103 = exception_tb;
        exception_keeper_lineno_103 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_14__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_14__bases_orig);
        tmp_QtWidgets$class_creation_14__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_14__bases);
        tmp_QtWidgets$class_creation_14__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_14__class_decl_dict);
        tmp_QtWidgets$class_creation_14__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_14__metaclass);
        tmp_QtWidgets$class_creation_14__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_14__prepared);
        tmp_QtWidgets$class_creation_14__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_103;
        exception_value = exception_keeper_value_103;
        exception_tb = exception_keeper_tb_103;
        exception_lineno = exception_keeper_lineno_103;

        goto frame_exception_exit_12;
        // End of try:
        try_end_35:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_14__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_14__bases_orig);
        tmp_QtWidgets$class_creation_14__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_14__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_14__bases);
        tmp_QtWidgets$class_creation_14__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_14__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_14__class_decl_dict);
        tmp_QtWidgets$class_creation_14__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_14__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_14__metaclass);
        tmp_QtWidgets$class_creation_14__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_14__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_14__prepared);
        tmp_QtWidgets$class_creation_14__prepared = NULL;

        {
            PyObject *tmp_assign_source_273;
            PyObject *tmp_tuple_element_137;
            tmp_tuple_element_137 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDialog);

            if (tmp_tuple_element_137 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1620 ], 29, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 322;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_137 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_273 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_273, 0, tmp_tuple_element_137);
            assert(tmp_QtWidgets$class_creation_15__bases_orig == NULL);
            tmp_QtWidgets$class_creation_15__bases_orig = tmp_assign_source_273;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_274;
            PyObject *tmp_dircall_arg1_36;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases_orig);
            tmp_dircall_arg1_36 = tmp_QtWidgets$class_creation_15__bases_orig;
            Py_INCREF(tmp_dircall_arg1_36);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_36};
                tmp_assign_source_274 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_274 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            assert(tmp_QtWidgets$class_creation_15__bases == NULL);
            tmp_QtWidgets$class_creation_15__bases = tmp_assign_source_274;
        }
        {
            PyObject *tmp_assign_source_275;
            tmp_assign_source_275 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_15__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_15__class_decl_dict = tmp_assign_source_275;
        }
        {
            PyObject *tmp_assign_source_276;
            PyObject *tmp_metaclass_name_36;
            nuitka_bool tmp_condition_result_213;
            PyObject *tmp_key_name_106;
            PyObject *tmp_dict_name_106;
            PyObject *tmp_dict_name_107;
            PyObject *tmp_key_name_107;
            nuitka_bool tmp_condition_result_214;
            int tmp_truth_name_36;
            PyObject *tmp_type_arg_71;
            PyObject *tmp_subscribed_name_36;
            PyObject *tmp_subscript_name_36;
            PyObject *tmp_bases_name_36;
            tmp_key_name_106 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__class_decl_dict);
            tmp_dict_name_106 = tmp_QtWidgets$class_creation_15__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_106, tmp_key_name_106);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            tmp_condition_result_213 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_213 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_73;
            } else {
                goto condexpr_false_73;
            }
            condexpr_true_73:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__class_decl_dict);
            tmp_dict_name_107 = tmp_QtWidgets$class_creation_15__class_decl_dict;
            tmp_key_name_107 = const_str_plain_metaclass;
            tmp_metaclass_name_36 = DICT_GET_ITEM(tmp_dict_name_107, tmp_key_name_107);
            if (tmp_metaclass_name_36 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            goto condexpr_end_73;
            condexpr_false_73:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases);
            tmp_truth_name_36 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_15__bases);
            if (tmp_truth_name_36 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            tmp_condition_result_214 = tmp_truth_name_36 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_214 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_74;
            } else {
                goto condexpr_false_74;
            }
            condexpr_true_74:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases);
            tmp_subscribed_name_36 = tmp_QtWidgets$class_creation_15__bases;
            tmp_subscript_name_36 = const_int_0;
            tmp_type_arg_71 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_36, tmp_subscript_name_36, 0);
            if (tmp_type_arg_71 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            tmp_metaclass_name_36 = BUILTIN_TYPE1(tmp_type_arg_71);
            Py_DECREF(tmp_type_arg_71);
            if (tmp_metaclass_name_36 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            goto condexpr_end_74;
            condexpr_false_74:;
            tmp_metaclass_name_36 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_36);
            condexpr_end_74:;
            condexpr_end_73:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases);
            tmp_bases_name_36 = tmp_QtWidgets$class_creation_15__bases;
            tmp_assign_source_276 = SELECT_METACLASS(tmp_metaclass_name_36, tmp_bases_name_36);
            Py_DECREF(tmp_metaclass_name_36);
            if (tmp_assign_source_276 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            assert(tmp_QtWidgets$class_creation_15__metaclass == NULL);
            tmp_QtWidgets$class_creation_15__metaclass = tmp_assign_source_276;
        }
        {
            nuitka_bool tmp_condition_result_215;
            PyObject *tmp_key_name_108;
            PyObject *tmp_dict_name_108;
            tmp_key_name_108 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__class_decl_dict);
            tmp_dict_name_108 = tmp_QtWidgets$class_creation_15__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_108, tmp_key_name_108);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            tmp_condition_result_215 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_215 == NUITKA_BOOL_TRUE) {
                goto branch_yes_141;
            } else {
                goto branch_no_141;
            }
            branch_yes_141:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_15__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_107;
            }
            branch_no_141:;
        }
        {
            nuitka_bool tmp_condition_result_216;
            PyObject *tmp_source_name_148;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__metaclass);
            tmp_source_name_148 = tmp_QtWidgets$class_creation_15__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_148, const_str_plain___prepare__);
            tmp_condition_result_216 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_216 == NUITKA_BOOL_TRUE) {
                goto branch_yes_142;
            } else {
                goto branch_no_142;
            }
            branch_yes_142:;
            {
                PyObject *tmp_assign_source_277;
                PyObject *tmp_called_name_72;
                PyObject *tmp_source_name_149;
                PyObject *tmp_args_name_70;
                PyObject *tmp_tuple_element_138;
                PyObject *tmp_kw_name_70;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_15__metaclass);
                tmp_source_name_149 = tmp_QtWidgets$class_creation_15__metaclass;
                tmp_called_name_72 = LOOKUP_ATTRIBUTE(tmp_source_name_149, const_str_plain___prepare__);
                if (tmp_called_name_72 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 322;
                    type_description_2 = "o";
                    goto try_except_handler_107;
                }
                tmp_tuple_element_138 = const_str_plain_QColorDialog;
                tmp_args_name_70 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_138);
                PyTuple_SET_ITEM(tmp_args_name_70, 0, tmp_tuple_element_138);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases);
                tmp_tuple_element_138 = tmp_QtWidgets$class_creation_15__bases;
                Py_INCREF(tmp_tuple_element_138);
                PyTuple_SET_ITEM(tmp_args_name_70, 1, tmp_tuple_element_138);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_15__class_decl_dict);
                tmp_kw_name_70 = tmp_QtWidgets$class_creation_15__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 322;
                tmp_assign_source_277 = CALL_FUNCTION(tmp_called_name_72, tmp_args_name_70, tmp_kw_name_70);
                Py_DECREF(tmp_called_name_72);
                Py_DECREF(tmp_args_name_70);
                if (tmp_assign_source_277 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 322;
                    type_description_2 = "o";
                    goto try_except_handler_107;
                }
                assert(tmp_QtWidgets$class_creation_15__prepared == NULL);
                tmp_QtWidgets$class_creation_15__prepared = tmp_assign_source_277;
            }
            {
                nuitka_bool tmp_condition_result_217;
                PyObject *tmp_operand_name_36;
                PyObject *tmp_source_name_150;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_15__prepared);
                tmp_source_name_150 = tmp_QtWidgets$class_creation_15__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_150, const_str_plain___getitem__);
                tmp_operand_name_36 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_36);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 322;
                    type_description_2 = "o";
                    goto try_except_handler_107;
                }
                tmp_condition_result_217 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_217 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_143;
                } else {
                    goto branch_no_143;
                }
                branch_yes_143:;
                {
                    PyObject *tmp_raise_type_36;
                    PyObject *tmp_raise_value_36;
                    PyObject *tmp_left_name_36;
                    PyObject *tmp_right_name_36;
                    PyObject *tmp_tuple_element_139;
                    PyObject *tmp_getattr_target_36;
                    PyObject *tmp_getattr_attr_36;
                    PyObject *tmp_getattr_default_36;
                    PyObject *tmp_source_name_151;
                    PyObject *tmp_type_arg_72;
                    tmp_raise_type_36 = PyExc_TypeError;
                    tmp_left_name_36 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_15__metaclass);
                    tmp_getattr_target_36 = tmp_QtWidgets$class_creation_15__metaclass;
                    tmp_getattr_attr_36 = const_str_plain___name__;
                    tmp_getattr_default_36 = const_str_angle_metaclass;
                    tmp_tuple_element_139 = BUILTIN_GETATTR(tmp_getattr_target_36, tmp_getattr_attr_36, tmp_getattr_default_36);
                    if (tmp_tuple_element_139 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 322;
                        type_description_2 = "o";
                        goto try_except_handler_107;
                    }
                    tmp_right_name_36 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_36, 0, tmp_tuple_element_139);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_15__prepared);
                    tmp_type_arg_72 = tmp_QtWidgets$class_creation_15__prepared;
                    tmp_source_name_151 = BUILTIN_TYPE1(tmp_type_arg_72);
                    assert(!(tmp_source_name_151 == NULL));
                    tmp_tuple_element_139 = LOOKUP_ATTRIBUTE(tmp_source_name_151, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_151);
                    if (tmp_tuple_element_139 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_36);

                        exception_lineno = 322;
                        type_description_2 = "o";
                        goto try_except_handler_107;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_36, 1, tmp_tuple_element_139);
                    tmp_raise_value_36 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_36, tmp_right_name_36);
                    Py_DECREF(tmp_right_name_36);
                    if (tmp_raise_value_36 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 322;
                        type_description_2 = "o";
                        goto try_except_handler_107;
                    }
                    exception_type = tmp_raise_type_36;
                    Py_INCREF(tmp_raise_type_36);
                    exception_value = tmp_raise_value_36;
                    exception_lineno = 322;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_107;
                }
                branch_no_143:;
            }
            goto branch_end_142;
            branch_no_142:;
            {
                PyObject *tmp_assign_source_278;
                tmp_assign_source_278 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_15__prepared == NULL);
                tmp_QtWidgets$class_creation_15__prepared = tmp_assign_source_278;
            }
            branch_end_142:;
        }
        {
            PyObject *tmp_set_locals_36;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__prepared);
            tmp_set_locals_36 = tmp_QtWidgets$class_creation_15__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_322 = tmp_set_locals_36;
            Py_INCREF(tmp_set_locals_36);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_322, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 322;
            type_description_2 = "o";
            goto try_except_handler_109;
        }
        tmp_dictset_value = const_str_digest_c6d21499095ee65b6849b7017838b553;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_322, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 322;
            type_description_2 = "o";
            goto try_except_handler_109;
        }
        {
            nuitka_bool tmp_condition_result_218;
            PyObject *tmp_compexpr_left_36;
            PyObject *tmp_compexpr_right_36;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases);
            tmp_compexpr_left_36 = tmp_QtWidgets$class_creation_15__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases_orig);
            tmp_compexpr_right_36 = tmp_QtWidgets$class_creation_15__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_36, tmp_compexpr_right_36);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_109;
            }
            tmp_condition_result_218 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_218 == NUITKA_BOOL_TRUE) {
                goto branch_yes_144;
            } else {
                goto branch_no_144;
            }
            branch_yes_144:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_15__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_322, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_109;
            }
            branch_no_144:;
        }
        {
            PyObject *tmp_assign_source_279;
            PyObject *tmp_called_name_73;
            PyObject *tmp_args_name_71;
            PyObject *tmp_tuple_element_140;
            PyObject *tmp_kw_name_71;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__metaclass);
            tmp_called_name_73 = tmp_QtWidgets$class_creation_15__metaclass;
            tmp_tuple_element_140 = const_str_plain_QColorDialog;
            tmp_args_name_71 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_140);
            PyTuple_SET_ITEM(tmp_args_name_71, 0, tmp_tuple_element_140);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__bases);
            tmp_tuple_element_140 = tmp_QtWidgets$class_creation_15__bases;
            Py_INCREF(tmp_tuple_element_140);
            PyTuple_SET_ITEM(tmp_args_name_71, 1, tmp_tuple_element_140);
            tmp_tuple_element_140 = locals_PyQt5$uic$Compiler$qtproxies_322;
            Py_INCREF(tmp_tuple_element_140);
            PyTuple_SET_ITEM(tmp_args_name_71, 2, tmp_tuple_element_140);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_15__class_decl_dict);
            tmp_kw_name_71 = tmp_QtWidgets$class_creation_15__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 322;
            tmp_assign_source_279 = CALL_FUNCTION(tmp_called_name_73, tmp_args_name_71, tmp_kw_name_71);
            Py_DECREF(tmp_args_name_71);
            if (tmp_assign_source_279 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_2 = "o";
                goto try_except_handler_109;
            }
            assert(outline_35_var___class__ == NULL);
            outline_35_var___class__ = tmp_assign_source_279;
        }
        CHECK_OBJECT(outline_35_var___class__);
        tmp_dictset_value = outline_35_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_109;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_109:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_322);
        locals_PyQt5$uic$Compiler$qtproxies_322 = NULL;
        goto try_return_handler_108;
        // Exception handler code:
        try_except_handler_109:;
        exception_keeper_type_104 = exception_type;
        exception_keeper_value_104 = exception_value;
        exception_keeper_tb_104 = exception_tb;
        exception_keeper_lineno_104 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_322);
        locals_PyQt5$uic$Compiler$qtproxies_322 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_104;
        exception_value = exception_keeper_value_104;
        exception_tb = exception_keeper_tb_104;
        exception_lineno = exception_keeper_lineno_104;

        goto try_except_handler_108;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_108:;
        CHECK_OBJECT((PyObject *)outline_35_var___class__);
        Py_DECREF(outline_35_var___class__);
        outline_35_var___class__ = NULL;

        goto outline_result_36;
        // Exception handler code:
        try_except_handler_108:;
        exception_keeper_type_105 = exception_type;
        exception_keeper_value_105 = exception_value;
        exception_keeper_tb_105 = exception_tb;
        exception_keeper_lineno_105 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_105;
        exception_value = exception_keeper_value_105;
        exception_tb = exception_keeper_tb_105;
        exception_lineno = exception_keeper_lineno_105;

        goto outline_exception_36;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_36:;
        exception_lineno = 322;
        goto try_except_handler_107;
        outline_result_36:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QColorDialog, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 322;
            type_description_2 = "o";
            goto try_except_handler_107;
        }
        goto try_end_36;
        // Exception handler code:
        try_except_handler_107:;
        exception_keeper_type_106 = exception_type;
        exception_keeper_value_106 = exception_value;
        exception_keeper_tb_106 = exception_tb;
        exception_keeper_lineno_106 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_15__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_15__bases_orig);
        tmp_QtWidgets$class_creation_15__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_15__bases);
        tmp_QtWidgets$class_creation_15__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_15__class_decl_dict);
        tmp_QtWidgets$class_creation_15__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_15__metaclass);
        tmp_QtWidgets$class_creation_15__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_15__prepared);
        tmp_QtWidgets$class_creation_15__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_106;
        exception_value = exception_keeper_value_106;
        exception_tb = exception_keeper_tb_106;
        exception_lineno = exception_keeper_lineno_106;

        goto frame_exception_exit_12;
        // End of try:
        try_end_36:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_15__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_15__bases_orig);
        tmp_QtWidgets$class_creation_15__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_15__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_15__bases);
        tmp_QtWidgets$class_creation_15__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_15__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_15__class_decl_dict);
        tmp_QtWidgets$class_creation_15__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_15__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_15__metaclass);
        tmp_QtWidgets$class_creation_15__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_15__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_15__prepared);
        tmp_QtWidgets$class_creation_15__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_280;
            PyObject *tmp_tuple_element_141;
            PyObject *tmp_mvar_value_35;
            tmp_tuple_element_141 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDialog);

            if (tmp_tuple_element_141 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_35 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QDialog);

                    if (unlikely(tmp_mvar_value_35 == NULL)) {
                        tmp_mvar_value_35 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QDialog);
                    }

                    if (tmp_mvar_value_35 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1620 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 323;
                        type_description_2 = "o";
                        goto try_except_handler_110;
                    }

                    tmp_tuple_element_141 = tmp_mvar_value_35;
                    Py_INCREF(tmp_tuple_element_141);
                }
            }

            tmp_assign_source_280 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_280, 0, tmp_tuple_element_141);
            assert(tmp_QtWidgets$class_creation_16__bases_orig == NULL);
            tmp_QtWidgets$class_creation_16__bases_orig = tmp_assign_source_280;
        }
        {
            PyObject *tmp_assign_source_281;
            PyObject *tmp_dircall_arg1_37;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases_orig);
            tmp_dircall_arg1_37 = tmp_QtWidgets$class_creation_16__bases_orig;
            Py_INCREF(tmp_dircall_arg1_37);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_37};
                tmp_assign_source_281 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_281 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            assert(tmp_QtWidgets$class_creation_16__bases == NULL);
            tmp_QtWidgets$class_creation_16__bases = tmp_assign_source_281;
        }
        {
            PyObject *tmp_assign_source_282;
            tmp_assign_source_282 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_16__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_16__class_decl_dict = tmp_assign_source_282;
        }
        {
            PyObject *tmp_assign_source_283;
            PyObject *tmp_metaclass_name_37;
            nuitka_bool tmp_condition_result_219;
            PyObject *tmp_key_name_109;
            PyObject *tmp_dict_name_109;
            PyObject *tmp_dict_name_110;
            PyObject *tmp_key_name_110;
            nuitka_bool tmp_condition_result_220;
            int tmp_truth_name_37;
            PyObject *tmp_type_arg_73;
            PyObject *tmp_subscribed_name_37;
            PyObject *tmp_subscript_name_37;
            PyObject *tmp_bases_name_37;
            tmp_key_name_109 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__class_decl_dict);
            tmp_dict_name_109 = tmp_QtWidgets$class_creation_16__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_109, tmp_key_name_109);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            tmp_condition_result_219 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_219 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_75;
            } else {
                goto condexpr_false_75;
            }
            condexpr_true_75:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__class_decl_dict);
            tmp_dict_name_110 = tmp_QtWidgets$class_creation_16__class_decl_dict;
            tmp_key_name_110 = const_str_plain_metaclass;
            tmp_metaclass_name_37 = DICT_GET_ITEM(tmp_dict_name_110, tmp_key_name_110);
            if (tmp_metaclass_name_37 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            goto condexpr_end_75;
            condexpr_false_75:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases);
            tmp_truth_name_37 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_16__bases);
            if (tmp_truth_name_37 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            tmp_condition_result_220 = tmp_truth_name_37 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_220 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_76;
            } else {
                goto condexpr_false_76;
            }
            condexpr_true_76:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases);
            tmp_subscribed_name_37 = tmp_QtWidgets$class_creation_16__bases;
            tmp_subscript_name_37 = const_int_0;
            tmp_type_arg_73 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_37, tmp_subscript_name_37, 0);
            if (tmp_type_arg_73 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            tmp_metaclass_name_37 = BUILTIN_TYPE1(tmp_type_arg_73);
            Py_DECREF(tmp_type_arg_73);
            if (tmp_metaclass_name_37 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            goto condexpr_end_76;
            condexpr_false_76:;
            tmp_metaclass_name_37 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_37);
            condexpr_end_76:;
            condexpr_end_75:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases);
            tmp_bases_name_37 = tmp_QtWidgets$class_creation_16__bases;
            tmp_assign_source_283 = SELECT_METACLASS(tmp_metaclass_name_37, tmp_bases_name_37);
            Py_DECREF(tmp_metaclass_name_37);
            if (tmp_assign_source_283 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            assert(tmp_QtWidgets$class_creation_16__metaclass == NULL);
            tmp_QtWidgets$class_creation_16__metaclass = tmp_assign_source_283;
        }
        {
            nuitka_bool tmp_condition_result_221;
            PyObject *tmp_key_name_111;
            PyObject *tmp_dict_name_111;
            tmp_key_name_111 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__class_decl_dict);
            tmp_dict_name_111 = tmp_QtWidgets$class_creation_16__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_111, tmp_key_name_111);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            tmp_condition_result_221 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_221 == NUITKA_BOOL_TRUE) {
                goto branch_yes_145;
            } else {
                goto branch_no_145;
            }
            branch_yes_145:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_16__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_110;
            }
            branch_no_145:;
        }
        {
            nuitka_bool tmp_condition_result_222;
            PyObject *tmp_source_name_152;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__metaclass);
            tmp_source_name_152 = tmp_QtWidgets$class_creation_16__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_152, const_str_plain___prepare__);
            tmp_condition_result_222 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_222 == NUITKA_BOOL_TRUE) {
                goto branch_yes_146;
            } else {
                goto branch_no_146;
            }
            branch_yes_146:;
            {
                PyObject *tmp_assign_source_284;
                PyObject *tmp_called_name_74;
                PyObject *tmp_source_name_153;
                PyObject *tmp_args_name_72;
                PyObject *tmp_tuple_element_142;
                PyObject *tmp_kw_name_72;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_16__metaclass);
                tmp_source_name_153 = tmp_QtWidgets$class_creation_16__metaclass;
                tmp_called_name_74 = LOOKUP_ATTRIBUTE(tmp_source_name_153, const_str_plain___prepare__);
                if (tmp_called_name_74 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 323;
                    type_description_2 = "o";
                    goto try_except_handler_110;
                }
                tmp_tuple_element_142 = const_str_plain_QFileDialog;
                tmp_args_name_72 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_142);
                PyTuple_SET_ITEM(tmp_args_name_72, 0, tmp_tuple_element_142);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases);
                tmp_tuple_element_142 = tmp_QtWidgets$class_creation_16__bases;
                Py_INCREF(tmp_tuple_element_142);
                PyTuple_SET_ITEM(tmp_args_name_72, 1, tmp_tuple_element_142);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_16__class_decl_dict);
                tmp_kw_name_72 = tmp_QtWidgets$class_creation_16__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 323;
                tmp_assign_source_284 = CALL_FUNCTION(tmp_called_name_74, tmp_args_name_72, tmp_kw_name_72);
                Py_DECREF(tmp_called_name_74);
                Py_DECREF(tmp_args_name_72);
                if (tmp_assign_source_284 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 323;
                    type_description_2 = "o";
                    goto try_except_handler_110;
                }
                assert(tmp_QtWidgets$class_creation_16__prepared == NULL);
                tmp_QtWidgets$class_creation_16__prepared = tmp_assign_source_284;
            }
            {
                nuitka_bool tmp_condition_result_223;
                PyObject *tmp_operand_name_37;
                PyObject *tmp_source_name_154;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_16__prepared);
                tmp_source_name_154 = tmp_QtWidgets$class_creation_16__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_154, const_str_plain___getitem__);
                tmp_operand_name_37 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_37);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 323;
                    type_description_2 = "o";
                    goto try_except_handler_110;
                }
                tmp_condition_result_223 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_223 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_147;
                } else {
                    goto branch_no_147;
                }
                branch_yes_147:;
                {
                    PyObject *tmp_raise_type_37;
                    PyObject *tmp_raise_value_37;
                    PyObject *tmp_left_name_37;
                    PyObject *tmp_right_name_37;
                    PyObject *tmp_tuple_element_143;
                    PyObject *tmp_getattr_target_37;
                    PyObject *tmp_getattr_attr_37;
                    PyObject *tmp_getattr_default_37;
                    PyObject *tmp_source_name_155;
                    PyObject *tmp_type_arg_74;
                    tmp_raise_type_37 = PyExc_TypeError;
                    tmp_left_name_37 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_16__metaclass);
                    tmp_getattr_target_37 = tmp_QtWidgets$class_creation_16__metaclass;
                    tmp_getattr_attr_37 = const_str_plain___name__;
                    tmp_getattr_default_37 = const_str_angle_metaclass;
                    tmp_tuple_element_143 = BUILTIN_GETATTR(tmp_getattr_target_37, tmp_getattr_attr_37, tmp_getattr_default_37);
                    if (tmp_tuple_element_143 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 323;
                        type_description_2 = "o";
                        goto try_except_handler_110;
                    }
                    tmp_right_name_37 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_37, 0, tmp_tuple_element_143);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_16__prepared);
                    tmp_type_arg_74 = tmp_QtWidgets$class_creation_16__prepared;
                    tmp_source_name_155 = BUILTIN_TYPE1(tmp_type_arg_74);
                    assert(!(tmp_source_name_155 == NULL));
                    tmp_tuple_element_143 = LOOKUP_ATTRIBUTE(tmp_source_name_155, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_155);
                    if (tmp_tuple_element_143 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_37);

                        exception_lineno = 323;
                        type_description_2 = "o";
                        goto try_except_handler_110;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_37, 1, tmp_tuple_element_143);
                    tmp_raise_value_37 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_37, tmp_right_name_37);
                    Py_DECREF(tmp_right_name_37);
                    if (tmp_raise_value_37 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 323;
                        type_description_2 = "o";
                        goto try_except_handler_110;
                    }
                    exception_type = tmp_raise_type_37;
                    Py_INCREF(tmp_raise_type_37);
                    exception_value = tmp_raise_value_37;
                    exception_lineno = 323;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_110;
                }
                branch_no_147:;
            }
            goto branch_end_146;
            branch_no_146:;
            {
                PyObject *tmp_assign_source_285;
                tmp_assign_source_285 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_16__prepared == NULL);
                tmp_QtWidgets$class_creation_16__prepared = tmp_assign_source_285;
            }
            branch_end_146:;
        }
        {
            PyObject *tmp_set_locals_37;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__prepared);
            tmp_set_locals_37 = tmp_QtWidgets$class_creation_16__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_323 = tmp_set_locals_37;
            Py_INCREF(tmp_set_locals_37);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_323, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;
            type_description_2 = "o";
            goto try_except_handler_112;
        }
        tmp_dictset_value = const_str_digest_0b6cff004ab8e493637648d0dd878e92;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_323, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;
            type_description_2 = "o";
            goto try_except_handler_112;
        }
        {
            nuitka_bool tmp_condition_result_224;
            PyObject *tmp_compexpr_left_37;
            PyObject *tmp_compexpr_right_37;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases);
            tmp_compexpr_left_37 = tmp_QtWidgets$class_creation_16__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases_orig);
            tmp_compexpr_right_37 = tmp_QtWidgets$class_creation_16__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_37, tmp_compexpr_right_37);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_112;
            }
            tmp_condition_result_224 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_224 == NUITKA_BOOL_TRUE) {
                goto branch_yes_148;
            } else {
                goto branch_no_148;
            }
            branch_yes_148:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_16__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_323, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_112;
            }
            branch_no_148:;
        }
        {
            PyObject *tmp_assign_source_286;
            PyObject *tmp_called_name_75;
            PyObject *tmp_args_name_73;
            PyObject *tmp_tuple_element_144;
            PyObject *tmp_kw_name_73;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__metaclass);
            tmp_called_name_75 = tmp_QtWidgets$class_creation_16__metaclass;
            tmp_tuple_element_144 = const_str_plain_QFileDialog;
            tmp_args_name_73 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_144);
            PyTuple_SET_ITEM(tmp_args_name_73, 0, tmp_tuple_element_144);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__bases);
            tmp_tuple_element_144 = tmp_QtWidgets$class_creation_16__bases;
            Py_INCREF(tmp_tuple_element_144);
            PyTuple_SET_ITEM(tmp_args_name_73, 1, tmp_tuple_element_144);
            tmp_tuple_element_144 = locals_PyQt5$uic$Compiler$qtproxies_323;
            Py_INCREF(tmp_tuple_element_144);
            PyTuple_SET_ITEM(tmp_args_name_73, 2, tmp_tuple_element_144);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_16__class_decl_dict);
            tmp_kw_name_73 = tmp_QtWidgets$class_creation_16__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 323;
            tmp_assign_source_286 = CALL_FUNCTION(tmp_called_name_75, tmp_args_name_73, tmp_kw_name_73);
            Py_DECREF(tmp_args_name_73);
            if (tmp_assign_source_286 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_2 = "o";
                goto try_except_handler_112;
            }
            assert(outline_36_var___class__ == NULL);
            outline_36_var___class__ = tmp_assign_source_286;
        }
        CHECK_OBJECT(outline_36_var___class__);
        tmp_dictset_value = outline_36_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_112;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_112:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_323);
        locals_PyQt5$uic$Compiler$qtproxies_323 = NULL;
        goto try_return_handler_111;
        // Exception handler code:
        try_except_handler_112:;
        exception_keeper_type_107 = exception_type;
        exception_keeper_value_107 = exception_value;
        exception_keeper_tb_107 = exception_tb;
        exception_keeper_lineno_107 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_323);
        locals_PyQt5$uic$Compiler$qtproxies_323 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_107;
        exception_value = exception_keeper_value_107;
        exception_tb = exception_keeper_tb_107;
        exception_lineno = exception_keeper_lineno_107;

        goto try_except_handler_111;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_111:;
        CHECK_OBJECT((PyObject *)outline_36_var___class__);
        Py_DECREF(outline_36_var___class__);
        outline_36_var___class__ = NULL;

        goto outline_result_37;
        // Exception handler code:
        try_except_handler_111:;
        exception_keeper_type_108 = exception_type;
        exception_keeper_value_108 = exception_value;
        exception_keeper_tb_108 = exception_tb;
        exception_keeper_lineno_108 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_108;
        exception_value = exception_keeper_value_108;
        exception_tb = exception_keeper_tb_108;
        exception_lineno = exception_keeper_lineno_108;

        goto outline_exception_37;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_37:;
        exception_lineno = 323;
        goto try_except_handler_110;
        outline_result_37:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFileDialog, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;
            type_description_2 = "o";
            goto try_except_handler_110;
        }
        goto try_end_37;
        // Exception handler code:
        try_except_handler_110:;
        exception_keeper_type_109 = exception_type;
        exception_keeper_value_109 = exception_value;
        exception_keeper_tb_109 = exception_tb;
        exception_keeper_lineno_109 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_16__bases_orig);
        tmp_QtWidgets$class_creation_16__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_16__bases);
        tmp_QtWidgets$class_creation_16__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_16__class_decl_dict);
        tmp_QtWidgets$class_creation_16__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_16__metaclass);
        tmp_QtWidgets$class_creation_16__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_16__prepared);
        tmp_QtWidgets$class_creation_16__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_109;
        exception_value = exception_keeper_value_109;
        exception_tb = exception_keeper_tb_109;
        exception_lineno = exception_keeper_lineno_109;

        goto frame_exception_exit_12;
        // End of try:
        try_end_37:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_16__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_16__bases_orig);
        tmp_QtWidgets$class_creation_16__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_16__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_16__bases);
        tmp_QtWidgets$class_creation_16__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_16__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_16__class_decl_dict);
        tmp_QtWidgets$class_creation_16__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_16__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_16__metaclass);
        tmp_QtWidgets$class_creation_16__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_16__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_16__prepared);
        tmp_QtWidgets$class_creation_16__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_287;
            PyObject *tmp_tuple_element_145;
            PyObject *tmp_mvar_value_36;
            tmp_tuple_element_145 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDialog);

            if (tmp_tuple_element_145 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_36 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QDialog);

                    if (unlikely(tmp_mvar_value_36 == NULL)) {
                        tmp_mvar_value_36 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QDialog);
                    }

                    if (tmp_mvar_value_36 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1620 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 324;
                        type_description_2 = "o";
                        goto try_except_handler_113;
                    }

                    tmp_tuple_element_145 = tmp_mvar_value_36;
                    Py_INCREF(tmp_tuple_element_145);
                }
            }

            tmp_assign_source_287 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_287, 0, tmp_tuple_element_145);
            assert(tmp_QtWidgets$class_creation_17__bases_orig == NULL);
            tmp_QtWidgets$class_creation_17__bases_orig = tmp_assign_source_287;
        }
        {
            PyObject *tmp_assign_source_288;
            PyObject *tmp_dircall_arg1_38;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases_orig);
            tmp_dircall_arg1_38 = tmp_QtWidgets$class_creation_17__bases_orig;
            Py_INCREF(tmp_dircall_arg1_38);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_38};
                tmp_assign_source_288 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_288 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            assert(tmp_QtWidgets$class_creation_17__bases == NULL);
            tmp_QtWidgets$class_creation_17__bases = tmp_assign_source_288;
        }
        {
            PyObject *tmp_assign_source_289;
            tmp_assign_source_289 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_17__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_17__class_decl_dict = tmp_assign_source_289;
        }
        {
            PyObject *tmp_assign_source_290;
            PyObject *tmp_metaclass_name_38;
            nuitka_bool tmp_condition_result_225;
            PyObject *tmp_key_name_112;
            PyObject *tmp_dict_name_112;
            PyObject *tmp_dict_name_113;
            PyObject *tmp_key_name_113;
            nuitka_bool tmp_condition_result_226;
            int tmp_truth_name_38;
            PyObject *tmp_type_arg_75;
            PyObject *tmp_subscribed_name_38;
            PyObject *tmp_subscript_name_38;
            PyObject *tmp_bases_name_38;
            tmp_key_name_112 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__class_decl_dict);
            tmp_dict_name_112 = tmp_QtWidgets$class_creation_17__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_112, tmp_key_name_112);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            tmp_condition_result_225 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_225 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_77;
            } else {
                goto condexpr_false_77;
            }
            condexpr_true_77:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__class_decl_dict);
            tmp_dict_name_113 = tmp_QtWidgets$class_creation_17__class_decl_dict;
            tmp_key_name_113 = const_str_plain_metaclass;
            tmp_metaclass_name_38 = DICT_GET_ITEM(tmp_dict_name_113, tmp_key_name_113);
            if (tmp_metaclass_name_38 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            goto condexpr_end_77;
            condexpr_false_77:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases);
            tmp_truth_name_38 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_17__bases);
            if (tmp_truth_name_38 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            tmp_condition_result_226 = tmp_truth_name_38 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_226 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_78;
            } else {
                goto condexpr_false_78;
            }
            condexpr_true_78:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases);
            tmp_subscribed_name_38 = tmp_QtWidgets$class_creation_17__bases;
            tmp_subscript_name_38 = const_int_0;
            tmp_type_arg_75 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_38, tmp_subscript_name_38, 0);
            if (tmp_type_arg_75 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            tmp_metaclass_name_38 = BUILTIN_TYPE1(tmp_type_arg_75);
            Py_DECREF(tmp_type_arg_75);
            if (tmp_metaclass_name_38 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            goto condexpr_end_78;
            condexpr_false_78:;
            tmp_metaclass_name_38 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_38);
            condexpr_end_78:;
            condexpr_end_77:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases);
            tmp_bases_name_38 = tmp_QtWidgets$class_creation_17__bases;
            tmp_assign_source_290 = SELECT_METACLASS(tmp_metaclass_name_38, tmp_bases_name_38);
            Py_DECREF(tmp_metaclass_name_38);
            if (tmp_assign_source_290 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            assert(tmp_QtWidgets$class_creation_17__metaclass == NULL);
            tmp_QtWidgets$class_creation_17__metaclass = tmp_assign_source_290;
        }
        {
            nuitka_bool tmp_condition_result_227;
            PyObject *tmp_key_name_114;
            PyObject *tmp_dict_name_114;
            tmp_key_name_114 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__class_decl_dict);
            tmp_dict_name_114 = tmp_QtWidgets$class_creation_17__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_114, tmp_key_name_114);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            tmp_condition_result_227 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_227 == NUITKA_BOOL_TRUE) {
                goto branch_yes_149;
            } else {
                goto branch_no_149;
            }
            branch_yes_149:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_17__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_113;
            }
            branch_no_149:;
        }
        {
            nuitka_bool tmp_condition_result_228;
            PyObject *tmp_source_name_156;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__metaclass);
            tmp_source_name_156 = tmp_QtWidgets$class_creation_17__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_156, const_str_plain___prepare__);
            tmp_condition_result_228 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_228 == NUITKA_BOOL_TRUE) {
                goto branch_yes_150;
            } else {
                goto branch_no_150;
            }
            branch_yes_150:;
            {
                PyObject *tmp_assign_source_291;
                PyObject *tmp_called_name_76;
                PyObject *tmp_source_name_157;
                PyObject *tmp_args_name_74;
                PyObject *tmp_tuple_element_146;
                PyObject *tmp_kw_name_74;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_17__metaclass);
                tmp_source_name_157 = tmp_QtWidgets$class_creation_17__metaclass;
                tmp_called_name_76 = LOOKUP_ATTRIBUTE(tmp_source_name_157, const_str_plain___prepare__);
                if (tmp_called_name_76 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 324;
                    type_description_2 = "o";
                    goto try_except_handler_113;
                }
                tmp_tuple_element_146 = const_str_plain_QFontDialog;
                tmp_args_name_74 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_146);
                PyTuple_SET_ITEM(tmp_args_name_74, 0, tmp_tuple_element_146);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases);
                tmp_tuple_element_146 = tmp_QtWidgets$class_creation_17__bases;
                Py_INCREF(tmp_tuple_element_146);
                PyTuple_SET_ITEM(tmp_args_name_74, 1, tmp_tuple_element_146);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_17__class_decl_dict);
                tmp_kw_name_74 = tmp_QtWidgets$class_creation_17__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 324;
                tmp_assign_source_291 = CALL_FUNCTION(tmp_called_name_76, tmp_args_name_74, tmp_kw_name_74);
                Py_DECREF(tmp_called_name_76);
                Py_DECREF(tmp_args_name_74);
                if (tmp_assign_source_291 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 324;
                    type_description_2 = "o";
                    goto try_except_handler_113;
                }
                assert(tmp_QtWidgets$class_creation_17__prepared == NULL);
                tmp_QtWidgets$class_creation_17__prepared = tmp_assign_source_291;
            }
            {
                nuitka_bool tmp_condition_result_229;
                PyObject *tmp_operand_name_38;
                PyObject *tmp_source_name_158;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_17__prepared);
                tmp_source_name_158 = tmp_QtWidgets$class_creation_17__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_158, const_str_plain___getitem__);
                tmp_operand_name_38 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_38);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 324;
                    type_description_2 = "o";
                    goto try_except_handler_113;
                }
                tmp_condition_result_229 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_229 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_151;
                } else {
                    goto branch_no_151;
                }
                branch_yes_151:;
                {
                    PyObject *tmp_raise_type_38;
                    PyObject *tmp_raise_value_38;
                    PyObject *tmp_left_name_38;
                    PyObject *tmp_right_name_38;
                    PyObject *tmp_tuple_element_147;
                    PyObject *tmp_getattr_target_38;
                    PyObject *tmp_getattr_attr_38;
                    PyObject *tmp_getattr_default_38;
                    PyObject *tmp_source_name_159;
                    PyObject *tmp_type_arg_76;
                    tmp_raise_type_38 = PyExc_TypeError;
                    tmp_left_name_38 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_17__metaclass);
                    tmp_getattr_target_38 = tmp_QtWidgets$class_creation_17__metaclass;
                    tmp_getattr_attr_38 = const_str_plain___name__;
                    tmp_getattr_default_38 = const_str_angle_metaclass;
                    tmp_tuple_element_147 = BUILTIN_GETATTR(tmp_getattr_target_38, tmp_getattr_attr_38, tmp_getattr_default_38);
                    if (tmp_tuple_element_147 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 324;
                        type_description_2 = "o";
                        goto try_except_handler_113;
                    }
                    tmp_right_name_38 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_38, 0, tmp_tuple_element_147);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_17__prepared);
                    tmp_type_arg_76 = tmp_QtWidgets$class_creation_17__prepared;
                    tmp_source_name_159 = BUILTIN_TYPE1(tmp_type_arg_76);
                    assert(!(tmp_source_name_159 == NULL));
                    tmp_tuple_element_147 = LOOKUP_ATTRIBUTE(tmp_source_name_159, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_159);
                    if (tmp_tuple_element_147 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_38);

                        exception_lineno = 324;
                        type_description_2 = "o";
                        goto try_except_handler_113;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_38, 1, tmp_tuple_element_147);
                    tmp_raise_value_38 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_38, tmp_right_name_38);
                    Py_DECREF(tmp_right_name_38);
                    if (tmp_raise_value_38 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 324;
                        type_description_2 = "o";
                        goto try_except_handler_113;
                    }
                    exception_type = tmp_raise_type_38;
                    Py_INCREF(tmp_raise_type_38);
                    exception_value = tmp_raise_value_38;
                    exception_lineno = 324;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_113;
                }
                branch_no_151:;
            }
            goto branch_end_150;
            branch_no_150:;
            {
                PyObject *tmp_assign_source_292;
                tmp_assign_source_292 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_17__prepared == NULL);
                tmp_QtWidgets$class_creation_17__prepared = tmp_assign_source_292;
            }
            branch_end_150:;
        }
        {
            PyObject *tmp_set_locals_38;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__prepared);
            tmp_set_locals_38 = tmp_QtWidgets$class_creation_17__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_324 = tmp_set_locals_38;
            Py_INCREF(tmp_set_locals_38);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_324, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_2 = "o";
            goto try_except_handler_115;
        }
        tmp_dictset_value = const_str_digest_65fcb0c1d7d114cb0d0138ca4561a77f;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_324, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_2 = "o";
            goto try_except_handler_115;
        }
        {
            nuitka_bool tmp_condition_result_230;
            PyObject *tmp_compexpr_left_38;
            PyObject *tmp_compexpr_right_38;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases);
            tmp_compexpr_left_38 = tmp_QtWidgets$class_creation_17__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases_orig);
            tmp_compexpr_right_38 = tmp_QtWidgets$class_creation_17__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_38, tmp_compexpr_right_38);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_115;
            }
            tmp_condition_result_230 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_230 == NUITKA_BOOL_TRUE) {
                goto branch_yes_152;
            } else {
                goto branch_no_152;
            }
            branch_yes_152:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_17__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_324, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_115;
            }
            branch_no_152:;
        }
        {
            PyObject *tmp_assign_source_293;
            PyObject *tmp_called_name_77;
            PyObject *tmp_args_name_75;
            PyObject *tmp_tuple_element_148;
            PyObject *tmp_kw_name_75;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__metaclass);
            tmp_called_name_77 = tmp_QtWidgets$class_creation_17__metaclass;
            tmp_tuple_element_148 = const_str_plain_QFontDialog;
            tmp_args_name_75 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_148);
            PyTuple_SET_ITEM(tmp_args_name_75, 0, tmp_tuple_element_148);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__bases);
            tmp_tuple_element_148 = tmp_QtWidgets$class_creation_17__bases;
            Py_INCREF(tmp_tuple_element_148);
            PyTuple_SET_ITEM(tmp_args_name_75, 1, tmp_tuple_element_148);
            tmp_tuple_element_148 = locals_PyQt5$uic$Compiler$qtproxies_324;
            Py_INCREF(tmp_tuple_element_148);
            PyTuple_SET_ITEM(tmp_args_name_75, 2, tmp_tuple_element_148);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_17__class_decl_dict);
            tmp_kw_name_75 = tmp_QtWidgets$class_creation_17__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 324;
            tmp_assign_source_293 = CALL_FUNCTION(tmp_called_name_77, tmp_args_name_75, tmp_kw_name_75);
            Py_DECREF(tmp_args_name_75);
            if (tmp_assign_source_293 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_2 = "o";
                goto try_except_handler_115;
            }
            assert(outline_37_var___class__ == NULL);
            outline_37_var___class__ = tmp_assign_source_293;
        }
        CHECK_OBJECT(outline_37_var___class__);
        tmp_dictset_value = outline_37_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_115;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_115:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_324);
        locals_PyQt5$uic$Compiler$qtproxies_324 = NULL;
        goto try_return_handler_114;
        // Exception handler code:
        try_except_handler_115:;
        exception_keeper_type_110 = exception_type;
        exception_keeper_value_110 = exception_value;
        exception_keeper_tb_110 = exception_tb;
        exception_keeper_lineno_110 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_324);
        locals_PyQt5$uic$Compiler$qtproxies_324 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_110;
        exception_value = exception_keeper_value_110;
        exception_tb = exception_keeper_tb_110;
        exception_lineno = exception_keeper_lineno_110;

        goto try_except_handler_114;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_114:;
        CHECK_OBJECT((PyObject *)outline_37_var___class__);
        Py_DECREF(outline_37_var___class__);
        outline_37_var___class__ = NULL;

        goto outline_result_38;
        // Exception handler code:
        try_except_handler_114:;
        exception_keeper_type_111 = exception_type;
        exception_keeper_value_111 = exception_value;
        exception_keeper_tb_111 = exception_tb;
        exception_keeper_lineno_111 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_111;
        exception_value = exception_keeper_value_111;
        exception_tb = exception_keeper_tb_111;
        exception_lineno = exception_keeper_lineno_111;

        goto outline_exception_38;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_38:;
        exception_lineno = 324;
        goto try_except_handler_113;
        outline_result_38:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFontDialog, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_2 = "o";
            goto try_except_handler_113;
        }
        goto try_end_38;
        // Exception handler code:
        try_except_handler_113:;
        exception_keeper_type_112 = exception_type;
        exception_keeper_value_112 = exception_value;
        exception_keeper_tb_112 = exception_tb;
        exception_keeper_lineno_112 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_17__bases_orig);
        tmp_QtWidgets$class_creation_17__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_17__bases);
        tmp_QtWidgets$class_creation_17__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_17__class_decl_dict);
        tmp_QtWidgets$class_creation_17__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_17__metaclass);
        tmp_QtWidgets$class_creation_17__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_17__prepared);
        tmp_QtWidgets$class_creation_17__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_112;
        exception_value = exception_keeper_value_112;
        exception_tb = exception_keeper_tb_112;
        exception_lineno = exception_keeper_lineno_112;

        goto frame_exception_exit_12;
        // End of try:
        try_end_38:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_17__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_17__bases_orig);
        tmp_QtWidgets$class_creation_17__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_17__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_17__bases);
        tmp_QtWidgets$class_creation_17__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_17__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_17__class_decl_dict);
        tmp_QtWidgets$class_creation_17__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_17__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_17__metaclass);
        tmp_QtWidgets$class_creation_17__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_17__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_17__prepared);
        tmp_QtWidgets$class_creation_17__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_294;
            PyObject *tmp_tuple_element_149;
            PyObject *tmp_mvar_value_37;
            tmp_tuple_element_149 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDialog);

            if (tmp_tuple_element_149 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_37 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QDialog);

                    if (unlikely(tmp_mvar_value_37 == NULL)) {
                        tmp_mvar_value_37 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QDialog);
                    }

                    if (tmp_mvar_value_37 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1620 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 325;
                        type_description_2 = "o";
                        goto try_except_handler_116;
                    }

                    tmp_tuple_element_149 = tmp_mvar_value_37;
                    Py_INCREF(tmp_tuple_element_149);
                }
            }

            tmp_assign_source_294 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_294, 0, tmp_tuple_element_149);
            assert(tmp_QtWidgets$class_creation_18__bases_orig == NULL);
            tmp_QtWidgets$class_creation_18__bases_orig = tmp_assign_source_294;
        }
        {
            PyObject *tmp_assign_source_295;
            PyObject *tmp_dircall_arg1_39;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases_orig);
            tmp_dircall_arg1_39 = tmp_QtWidgets$class_creation_18__bases_orig;
            Py_INCREF(tmp_dircall_arg1_39);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_39};
                tmp_assign_source_295 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_295 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            assert(tmp_QtWidgets$class_creation_18__bases == NULL);
            tmp_QtWidgets$class_creation_18__bases = tmp_assign_source_295;
        }
        {
            PyObject *tmp_assign_source_296;
            tmp_assign_source_296 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_18__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_18__class_decl_dict = tmp_assign_source_296;
        }
        {
            PyObject *tmp_assign_source_297;
            PyObject *tmp_metaclass_name_39;
            nuitka_bool tmp_condition_result_231;
            PyObject *tmp_key_name_115;
            PyObject *tmp_dict_name_115;
            PyObject *tmp_dict_name_116;
            PyObject *tmp_key_name_116;
            nuitka_bool tmp_condition_result_232;
            int tmp_truth_name_39;
            PyObject *tmp_type_arg_77;
            PyObject *tmp_subscribed_name_39;
            PyObject *tmp_subscript_name_39;
            PyObject *tmp_bases_name_39;
            tmp_key_name_115 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__class_decl_dict);
            tmp_dict_name_115 = tmp_QtWidgets$class_creation_18__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_115, tmp_key_name_115);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            tmp_condition_result_231 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_231 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_79;
            } else {
                goto condexpr_false_79;
            }
            condexpr_true_79:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__class_decl_dict);
            tmp_dict_name_116 = tmp_QtWidgets$class_creation_18__class_decl_dict;
            tmp_key_name_116 = const_str_plain_metaclass;
            tmp_metaclass_name_39 = DICT_GET_ITEM(tmp_dict_name_116, tmp_key_name_116);
            if (tmp_metaclass_name_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            goto condexpr_end_79;
            condexpr_false_79:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases);
            tmp_truth_name_39 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_18__bases);
            if (tmp_truth_name_39 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            tmp_condition_result_232 = tmp_truth_name_39 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_232 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_80;
            } else {
                goto condexpr_false_80;
            }
            condexpr_true_80:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases);
            tmp_subscribed_name_39 = tmp_QtWidgets$class_creation_18__bases;
            tmp_subscript_name_39 = const_int_0;
            tmp_type_arg_77 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_39, tmp_subscript_name_39, 0);
            if (tmp_type_arg_77 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            tmp_metaclass_name_39 = BUILTIN_TYPE1(tmp_type_arg_77);
            Py_DECREF(tmp_type_arg_77);
            if (tmp_metaclass_name_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            goto condexpr_end_80;
            condexpr_false_80:;
            tmp_metaclass_name_39 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_39);
            condexpr_end_80:;
            condexpr_end_79:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases);
            tmp_bases_name_39 = tmp_QtWidgets$class_creation_18__bases;
            tmp_assign_source_297 = SELECT_METACLASS(tmp_metaclass_name_39, tmp_bases_name_39);
            Py_DECREF(tmp_metaclass_name_39);
            if (tmp_assign_source_297 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            assert(tmp_QtWidgets$class_creation_18__metaclass == NULL);
            tmp_QtWidgets$class_creation_18__metaclass = tmp_assign_source_297;
        }
        {
            nuitka_bool tmp_condition_result_233;
            PyObject *tmp_key_name_117;
            PyObject *tmp_dict_name_117;
            tmp_key_name_117 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__class_decl_dict);
            tmp_dict_name_117 = tmp_QtWidgets$class_creation_18__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_117, tmp_key_name_117);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            tmp_condition_result_233 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_233 == NUITKA_BOOL_TRUE) {
                goto branch_yes_153;
            } else {
                goto branch_no_153;
            }
            branch_yes_153:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_18__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_116;
            }
            branch_no_153:;
        }
        {
            nuitka_bool tmp_condition_result_234;
            PyObject *tmp_source_name_160;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__metaclass);
            tmp_source_name_160 = tmp_QtWidgets$class_creation_18__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_160, const_str_plain___prepare__);
            tmp_condition_result_234 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_234 == NUITKA_BOOL_TRUE) {
                goto branch_yes_154;
            } else {
                goto branch_no_154;
            }
            branch_yes_154:;
            {
                PyObject *tmp_assign_source_298;
                PyObject *tmp_called_name_78;
                PyObject *tmp_source_name_161;
                PyObject *tmp_args_name_76;
                PyObject *tmp_tuple_element_150;
                PyObject *tmp_kw_name_76;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_18__metaclass);
                tmp_source_name_161 = tmp_QtWidgets$class_creation_18__metaclass;
                tmp_called_name_78 = LOOKUP_ATTRIBUTE(tmp_source_name_161, const_str_plain___prepare__);
                if (tmp_called_name_78 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 325;
                    type_description_2 = "o";
                    goto try_except_handler_116;
                }
                tmp_tuple_element_150 = const_str_plain_QInputDialog;
                tmp_args_name_76 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_150);
                PyTuple_SET_ITEM(tmp_args_name_76, 0, tmp_tuple_element_150);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases);
                tmp_tuple_element_150 = tmp_QtWidgets$class_creation_18__bases;
                Py_INCREF(tmp_tuple_element_150);
                PyTuple_SET_ITEM(tmp_args_name_76, 1, tmp_tuple_element_150);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_18__class_decl_dict);
                tmp_kw_name_76 = tmp_QtWidgets$class_creation_18__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 325;
                tmp_assign_source_298 = CALL_FUNCTION(tmp_called_name_78, tmp_args_name_76, tmp_kw_name_76);
                Py_DECREF(tmp_called_name_78);
                Py_DECREF(tmp_args_name_76);
                if (tmp_assign_source_298 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 325;
                    type_description_2 = "o";
                    goto try_except_handler_116;
                }
                assert(tmp_QtWidgets$class_creation_18__prepared == NULL);
                tmp_QtWidgets$class_creation_18__prepared = tmp_assign_source_298;
            }
            {
                nuitka_bool tmp_condition_result_235;
                PyObject *tmp_operand_name_39;
                PyObject *tmp_source_name_162;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_18__prepared);
                tmp_source_name_162 = tmp_QtWidgets$class_creation_18__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_162, const_str_plain___getitem__);
                tmp_operand_name_39 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_39);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 325;
                    type_description_2 = "o";
                    goto try_except_handler_116;
                }
                tmp_condition_result_235 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_235 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_155;
                } else {
                    goto branch_no_155;
                }
                branch_yes_155:;
                {
                    PyObject *tmp_raise_type_39;
                    PyObject *tmp_raise_value_39;
                    PyObject *tmp_left_name_39;
                    PyObject *tmp_right_name_39;
                    PyObject *tmp_tuple_element_151;
                    PyObject *tmp_getattr_target_39;
                    PyObject *tmp_getattr_attr_39;
                    PyObject *tmp_getattr_default_39;
                    PyObject *tmp_source_name_163;
                    PyObject *tmp_type_arg_78;
                    tmp_raise_type_39 = PyExc_TypeError;
                    tmp_left_name_39 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_18__metaclass);
                    tmp_getattr_target_39 = tmp_QtWidgets$class_creation_18__metaclass;
                    tmp_getattr_attr_39 = const_str_plain___name__;
                    tmp_getattr_default_39 = const_str_angle_metaclass;
                    tmp_tuple_element_151 = BUILTIN_GETATTR(tmp_getattr_target_39, tmp_getattr_attr_39, tmp_getattr_default_39);
                    if (tmp_tuple_element_151 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 325;
                        type_description_2 = "o";
                        goto try_except_handler_116;
                    }
                    tmp_right_name_39 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_39, 0, tmp_tuple_element_151);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_18__prepared);
                    tmp_type_arg_78 = tmp_QtWidgets$class_creation_18__prepared;
                    tmp_source_name_163 = BUILTIN_TYPE1(tmp_type_arg_78);
                    assert(!(tmp_source_name_163 == NULL));
                    tmp_tuple_element_151 = LOOKUP_ATTRIBUTE(tmp_source_name_163, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_163);
                    if (tmp_tuple_element_151 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_39);

                        exception_lineno = 325;
                        type_description_2 = "o";
                        goto try_except_handler_116;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_39, 1, tmp_tuple_element_151);
                    tmp_raise_value_39 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_39, tmp_right_name_39);
                    Py_DECREF(tmp_right_name_39);
                    if (tmp_raise_value_39 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 325;
                        type_description_2 = "o";
                        goto try_except_handler_116;
                    }
                    exception_type = tmp_raise_type_39;
                    Py_INCREF(tmp_raise_type_39);
                    exception_value = tmp_raise_value_39;
                    exception_lineno = 325;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_116;
                }
                branch_no_155:;
            }
            goto branch_end_154;
            branch_no_154:;
            {
                PyObject *tmp_assign_source_299;
                tmp_assign_source_299 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_18__prepared == NULL);
                tmp_QtWidgets$class_creation_18__prepared = tmp_assign_source_299;
            }
            branch_end_154:;
        }
        {
            PyObject *tmp_set_locals_39;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__prepared);
            tmp_set_locals_39 = tmp_QtWidgets$class_creation_18__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_325 = tmp_set_locals_39;
            Py_INCREF(tmp_set_locals_39);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_325, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 325;
            type_description_2 = "o";
            goto try_except_handler_118;
        }
        tmp_dictset_value = const_str_digest_fb38d371e7c507a7a9fd52d923345989;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_325, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 325;
            type_description_2 = "o";
            goto try_except_handler_118;
        }
        {
            nuitka_bool tmp_condition_result_236;
            PyObject *tmp_compexpr_left_39;
            PyObject *tmp_compexpr_right_39;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases);
            tmp_compexpr_left_39 = tmp_QtWidgets$class_creation_18__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases_orig);
            tmp_compexpr_right_39 = tmp_QtWidgets$class_creation_18__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_39, tmp_compexpr_right_39);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_118;
            }
            tmp_condition_result_236 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_236 == NUITKA_BOOL_TRUE) {
                goto branch_yes_156;
            } else {
                goto branch_no_156;
            }
            branch_yes_156:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_18__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_325, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_118;
            }
            branch_no_156:;
        }
        {
            PyObject *tmp_assign_source_300;
            PyObject *tmp_called_name_79;
            PyObject *tmp_args_name_77;
            PyObject *tmp_tuple_element_152;
            PyObject *tmp_kw_name_77;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__metaclass);
            tmp_called_name_79 = tmp_QtWidgets$class_creation_18__metaclass;
            tmp_tuple_element_152 = const_str_plain_QInputDialog;
            tmp_args_name_77 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_152);
            PyTuple_SET_ITEM(tmp_args_name_77, 0, tmp_tuple_element_152);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__bases);
            tmp_tuple_element_152 = tmp_QtWidgets$class_creation_18__bases;
            Py_INCREF(tmp_tuple_element_152);
            PyTuple_SET_ITEM(tmp_args_name_77, 1, tmp_tuple_element_152);
            tmp_tuple_element_152 = locals_PyQt5$uic$Compiler$qtproxies_325;
            Py_INCREF(tmp_tuple_element_152);
            PyTuple_SET_ITEM(tmp_args_name_77, 2, tmp_tuple_element_152);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_18__class_decl_dict);
            tmp_kw_name_77 = tmp_QtWidgets$class_creation_18__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 325;
            tmp_assign_source_300 = CALL_FUNCTION(tmp_called_name_79, tmp_args_name_77, tmp_kw_name_77);
            Py_DECREF(tmp_args_name_77);
            if (tmp_assign_source_300 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_2 = "o";
                goto try_except_handler_118;
            }
            assert(outline_38_var___class__ == NULL);
            outline_38_var___class__ = tmp_assign_source_300;
        }
        CHECK_OBJECT(outline_38_var___class__);
        tmp_dictset_value = outline_38_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_118;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_118:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_325);
        locals_PyQt5$uic$Compiler$qtproxies_325 = NULL;
        goto try_return_handler_117;
        // Exception handler code:
        try_except_handler_118:;
        exception_keeper_type_113 = exception_type;
        exception_keeper_value_113 = exception_value;
        exception_keeper_tb_113 = exception_tb;
        exception_keeper_lineno_113 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_325);
        locals_PyQt5$uic$Compiler$qtproxies_325 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_113;
        exception_value = exception_keeper_value_113;
        exception_tb = exception_keeper_tb_113;
        exception_lineno = exception_keeper_lineno_113;

        goto try_except_handler_117;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_117:;
        CHECK_OBJECT((PyObject *)outline_38_var___class__);
        Py_DECREF(outline_38_var___class__);
        outline_38_var___class__ = NULL;

        goto outline_result_39;
        // Exception handler code:
        try_except_handler_117:;
        exception_keeper_type_114 = exception_type;
        exception_keeper_value_114 = exception_value;
        exception_keeper_tb_114 = exception_tb;
        exception_keeper_lineno_114 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_114;
        exception_value = exception_keeper_value_114;
        exception_tb = exception_keeper_tb_114;
        exception_lineno = exception_keeper_lineno_114;

        goto outline_exception_39;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_39:;
        exception_lineno = 325;
        goto try_except_handler_116;
        outline_result_39:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QInputDialog, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 325;
            type_description_2 = "o";
            goto try_except_handler_116;
        }
        goto try_end_39;
        // Exception handler code:
        try_except_handler_116:;
        exception_keeper_type_115 = exception_type;
        exception_keeper_value_115 = exception_value;
        exception_keeper_tb_115 = exception_tb;
        exception_keeper_lineno_115 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_18__bases_orig);
        tmp_QtWidgets$class_creation_18__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_18__bases);
        tmp_QtWidgets$class_creation_18__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_18__class_decl_dict);
        tmp_QtWidgets$class_creation_18__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_18__metaclass);
        tmp_QtWidgets$class_creation_18__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_18__prepared);
        tmp_QtWidgets$class_creation_18__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_115;
        exception_value = exception_keeper_value_115;
        exception_tb = exception_keeper_tb_115;
        exception_lineno = exception_keeper_lineno_115;

        goto frame_exception_exit_12;
        // End of try:
        try_end_39:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_18__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_18__bases_orig);
        tmp_QtWidgets$class_creation_18__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_18__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_18__bases);
        tmp_QtWidgets$class_creation_18__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_18__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_18__class_decl_dict);
        tmp_QtWidgets$class_creation_18__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_18__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_18__metaclass);
        tmp_QtWidgets$class_creation_18__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_18__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_18__prepared);
        tmp_QtWidgets$class_creation_18__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_301;
            PyObject *tmp_tuple_element_153;
            PyObject *tmp_mvar_value_38;
            tmp_tuple_element_153 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDialog);

            if (tmp_tuple_element_153 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_38 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QDialog);

                    if (unlikely(tmp_mvar_value_38 == NULL)) {
                        tmp_mvar_value_38 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QDialog);
                    }

                    if (tmp_mvar_value_38 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1620 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 326;
                        type_description_2 = "o";
                        goto try_except_handler_119;
                    }

                    tmp_tuple_element_153 = tmp_mvar_value_38;
                    Py_INCREF(tmp_tuple_element_153);
                }
            }

            tmp_assign_source_301 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_301, 0, tmp_tuple_element_153);
            assert(tmp_QtWidgets$class_creation_19__bases_orig == NULL);
            tmp_QtWidgets$class_creation_19__bases_orig = tmp_assign_source_301;
        }
        {
            PyObject *tmp_assign_source_302;
            PyObject *tmp_dircall_arg1_40;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases_orig);
            tmp_dircall_arg1_40 = tmp_QtWidgets$class_creation_19__bases_orig;
            Py_INCREF(tmp_dircall_arg1_40);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_40};
                tmp_assign_source_302 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_302 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            assert(tmp_QtWidgets$class_creation_19__bases == NULL);
            tmp_QtWidgets$class_creation_19__bases = tmp_assign_source_302;
        }
        {
            PyObject *tmp_assign_source_303;
            tmp_assign_source_303 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_19__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_19__class_decl_dict = tmp_assign_source_303;
        }
        {
            PyObject *tmp_assign_source_304;
            PyObject *tmp_metaclass_name_40;
            nuitka_bool tmp_condition_result_237;
            PyObject *tmp_key_name_118;
            PyObject *tmp_dict_name_118;
            PyObject *tmp_dict_name_119;
            PyObject *tmp_key_name_119;
            nuitka_bool tmp_condition_result_238;
            int tmp_truth_name_40;
            PyObject *tmp_type_arg_79;
            PyObject *tmp_subscribed_name_40;
            PyObject *tmp_subscript_name_40;
            PyObject *tmp_bases_name_40;
            tmp_key_name_118 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__class_decl_dict);
            tmp_dict_name_118 = tmp_QtWidgets$class_creation_19__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_118, tmp_key_name_118);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            tmp_condition_result_237 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_237 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_81;
            } else {
                goto condexpr_false_81;
            }
            condexpr_true_81:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__class_decl_dict);
            tmp_dict_name_119 = tmp_QtWidgets$class_creation_19__class_decl_dict;
            tmp_key_name_119 = const_str_plain_metaclass;
            tmp_metaclass_name_40 = DICT_GET_ITEM(tmp_dict_name_119, tmp_key_name_119);
            if (tmp_metaclass_name_40 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            goto condexpr_end_81;
            condexpr_false_81:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases);
            tmp_truth_name_40 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_19__bases);
            if (tmp_truth_name_40 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            tmp_condition_result_238 = tmp_truth_name_40 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_238 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_82;
            } else {
                goto condexpr_false_82;
            }
            condexpr_true_82:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases);
            tmp_subscribed_name_40 = tmp_QtWidgets$class_creation_19__bases;
            tmp_subscript_name_40 = const_int_0;
            tmp_type_arg_79 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_40, tmp_subscript_name_40, 0);
            if (tmp_type_arg_79 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            tmp_metaclass_name_40 = BUILTIN_TYPE1(tmp_type_arg_79);
            Py_DECREF(tmp_type_arg_79);
            if (tmp_metaclass_name_40 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            goto condexpr_end_82;
            condexpr_false_82:;
            tmp_metaclass_name_40 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_40);
            condexpr_end_82:;
            condexpr_end_81:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases);
            tmp_bases_name_40 = tmp_QtWidgets$class_creation_19__bases;
            tmp_assign_source_304 = SELECT_METACLASS(tmp_metaclass_name_40, tmp_bases_name_40);
            Py_DECREF(tmp_metaclass_name_40);
            if (tmp_assign_source_304 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            assert(tmp_QtWidgets$class_creation_19__metaclass == NULL);
            tmp_QtWidgets$class_creation_19__metaclass = tmp_assign_source_304;
        }
        {
            nuitka_bool tmp_condition_result_239;
            PyObject *tmp_key_name_120;
            PyObject *tmp_dict_name_120;
            tmp_key_name_120 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__class_decl_dict);
            tmp_dict_name_120 = tmp_QtWidgets$class_creation_19__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_120, tmp_key_name_120);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            tmp_condition_result_239 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_239 == NUITKA_BOOL_TRUE) {
                goto branch_yes_157;
            } else {
                goto branch_no_157;
            }
            branch_yes_157:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_19__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_119;
            }
            branch_no_157:;
        }
        {
            nuitka_bool tmp_condition_result_240;
            PyObject *tmp_source_name_164;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__metaclass);
            tmp_source_name_164 = tmp_QtWidgets$class_creation_19__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_164, const_str_plain___prepare__);
            tmp_condition_result_240 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_240 == NUITKA_BOOL_TRUE) {
                goto branch_yes_158;
            } else {
                goto branch_no_158;
            }
            branch_yes_158:;
            {
                PyObject *tmp_assign_source_305;
                PyObject *tmp_called_name_80;
                PyObject *tmp_source_name_165;
                PyObject *tmp_args_name_78;
                PyObject *tmp_tuple_element_154;
                PyObject *tmp_kw_name_78;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_19__metaclass);
                tmp_source_name_165 = tmp_QtWidgets$class_creation_19__metaclass;
                tmp_called_name_80 = LOOKUP_ATTRIBUTE(tmp_source_name_165, const_str_plain___prepare__);
                if (tmp_called_name_80 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 326;
                    type_description_2 = "o";
                    goto try_except_handler_119;
                }
                tmp_tuple_element_154 = const_str_plain_QMessageBox;
                tmp_args_name_78 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_154);
                PyTuple_SET_ITEM(tmp_args_name_78, 0, tmp_tuple_element_154);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases);
                tmp_tuple_element_154 = tmp_QtWidgets$class_creation_19__bases;
                Py_INCREF(tmp_tuple_element_154);
                PyTuple_SET_ITEM(tmp_args_name_78, 1, tmp_tuple_element_154);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_19__class_decl_dict);
                tmp_kw_name_78 = tmp_QtWidgets$class_creation_19__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 326;
                tmp_assign_source_305 = CALL_FUNCTION(tmp_called_name_80, tmp_args_name_78, tmp_kw_name_78);
                Py_DECREF(tmp_called_name_80);
                Py_DECREF(tmp_args_name_78);
                if (tmp_assign_source_305 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 326;
                    type_description_2 = "o";
                    goto try_except_handler_119;
                }
                assert(tmp_QtWidgets$class_creation_19__prepared == NULL);
                tmp_QtWidgets$class_creation_19__prepared = tmp_assign_source_305;
            }
            {
                nuitka_bool tmp_condition_result_241;
                PyObject *tmp_operand_name_40;
                PyObject *tmp_source_name_166;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_19__prepared);
                tmp_source_name_166 = tmp_QtWidgets$class_creation_19__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_166, const_str_plain___getitem__);
                tmp_operand_name_40 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_40);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 326;
                    type_description_2 = "o";
                    goto try_except_handler_119;
                }
                tmp_condition_result_241 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_241 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_159;
                } else {
                    goto branch_no_159;
                }
                branch_yes_159:;
                {
                    PyObject *tmp_raise_type_40;
                    PyObject *tmp_raise_value_40;
                    PyObject *tmp_left_name_40;
                    PyObject *tmp_right_name_40;
                    PyObject *tmp_tuple_element_155;
                    PyObject *tmp_getattr_target_40;
                    PyObject *tmp_getattr_attr_40;
                    PyObject *tmp_getattr_default_40;
                    PyObject *tmp_source_name_167;
                    PyObject *tmp_type_arg_80;
                    tmp_raise_type_40 = PyExc_TypeError;
                    tmp_left_name_40 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_19__metaclass);
                    tmp_getattr_target_40 = tmp_QtWidgets$class_creation_19__metaclass;
                    tmp_getattr_attr_40 = const_str_plain___name__;
                    tmp_getattr_default_40 = const_str_angle_metaclass;
                    tmp_tuple_element_155 = BUILTIN_GETATTR(tmp_getattr_target_40, tmp_getattr_attr_40, tmp_getattr_default_40);
                    if (tmp_tuple_element_155 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 326;
                        type_description_2 = "o";
                        goto try_except_handler_119;
                    }
                    tmp_right_name_40 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_40, 0, tmp_tuple_element_155);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_19__prepared);
                    tmp_type_arg_80 = tmp_QtWidgets$class_creation_19__prepared;
                    tmp_source_name_167 = BUILTIN_TYPE1(tmp_type_arg_80);
                    assert(!(tmp_source_name_167 == NULL));
                    tmp_tuple_element_155 = LOOKUP_ATTRIBUTE(tmp_source_name_167, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_167);
                    if (tmp_tuple_element_155 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_40);

                        exception_lineno = 326;
                        type_description_2 = "o";
                        goto try_except_handler_119;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_40, 1, tmp_tuple_element_155);
                    tmp_raise_value_40 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_40, tmp_right_name_40);
                    Py_DECREF(tmp_right_name_40);
                    if (tmp_raise_value_40 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 326;
                        type_description_2 = "o";
                        goto try_except_handler_119;
                    }
                    exception_type = tmp_raise_type_40;
                    Py_INCREF(tmp_raise_type_40);
                    exception_value = tmp_raise_value_40;
                    exception_lineno = 326;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_119;
                }
                branch_no_159:;
            }
            goto branch_end_158;
            branch_no_158:;
            {
                PyObject *tmp_assign_source_306;
                tmp_assign_source_306 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_19__prepared == NULL);
                tmp_QtWidgets$class_creation_19__prepared = tmp_assign_source_306;
            }
            branch_end_158:;
        }
        {
            PyObject *tmp_set_locals_40;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__prepared);
            tmp_set_locals_40 = tmp_QtWidgets$class_creation_19__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_326 = tmp_set_locals_40;
            Py_INCREF(tmp_set_locals_40);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_326, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 326;
            type_description_2 = "o";
            goto try_except_handler_121;
        }
        tmp_dictset_value = const_str_digest_85b731fa2761c6bc50e2a4f6b46a4ecb;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_326, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 326;
            type_description_2 = "o";
            goto try_except_handler_121;
        }
        {
            nuitka_bool tmp_condition_result_242;
            PyObject *tmp_compexpr_left_40;
            PyObject *tmp_compexpr_right_40;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases);
            tmp_compexpr_left_40 = tmp_QtWidgets$class_creation_19__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases_orig);
            tmp_compexpr_right_40 = tmp_QtWidgets$class_creation_19__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_40, tmp_compexpr_right_40);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_121;
            }
            tmp_condition_result_242 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_242 == NUITKA_BOOL_TRUE) {
                goto branch_yes_160;
            } else {
                goto branch_no_160;
            }
            branch_yes_160:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_19__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_326, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_121;
            }
            branch_no_160:;
        }
        {
            PyObject *tmp_assign_source_307;
            PyObject *tmp_called_name_81;
            PyObject *tmp_args_name_79;
            PyObject *tmp_tuple_element_156;
            PyObject *tmp_kw_name_79;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__metaclass);
            tmp_called_name_81 = tmp_QtWidgets$class_creation_19__metaclass;
            tmp_tuple_element_156 = const_str_plain_QMessageBox;
            tmp_args_name_79 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_156);
            PyTuple_SET_ITEM(tmp_args_name_79, 0, tmp_tuple_element_156);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__bases);
            tmp_tuple_element_156 = tmp_QtWidgets$class_creation_19__bases;
            Py_INCREF(tmp_tuple_element_156);
            PyTuple_SET_ITEM(tmp_args_name_79, 1, tmp_tuple_element_156);
            tmp_tuple_element_156 = locals_PyQt5$uic$Compiler$qtproxies_326;
            Py_INCREF(tmp_tuple_element_156);
            PyTuple_SET_ITEM(tmp_args_name_79, 2, tmp_tuple_element_156);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_19__class_decl_dict);
            tmp_kw_name_79 = tmp_QtWidgets$class_creation_19__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 326;
            tmp_assign_source_307 = CALL_FUNCTION(tmp_called_name_81, tmp_args_name_79, tmp_kw_name_79);
            Py_DECREF(tmp_args_name_79);
            if (tmp_assign_source_307 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_2 = "o";
                goto try_except_handler_121;
            }
            assert(outline_39_var___class__ == NULL);
            outline_39_var___class__ = tmp_assign_source_307;
        }
        CHECK_OBJECT(outline_39_var___class__);
        tmp_dictset_value = outline_39_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_121;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_121:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_326);
        locals_PyQt5$uic$Compiler$qtproxies_326 = NULL;
        goto try_return_handler_120;
        // Exception handler code:
        try_except_handler_121:;
        exception_keeper_type_116 = exception_type;
        exception_keeper_value_116 = exception_value;
        exception_keeper_tb_116 = exception_tb;
        exception_keeper_lineno_116 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_326);
        locals_PyQt5$uic$Compiler$qtproxies_326 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_116;
        exception_value = exception_keeper_value_116;
        exception_tb = exception_keeper_tb_116;
        exception_lineno = exception_keeper_lineno_116;

        goto try_except_handler_120;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_120:;
        CHECK_OBJECT((PyObject *)outline_39_var___class__);
        Py_DECREF(outline_39_var___class__);
        outline_39_var___class__ = NULL;

        goto outline_result_40;
        // Exception handler code:
        try_except_handler_120:;
        exception_keeper_type_117 = exception_type;
        exception_keeper_value_117 = exception_value;
        exception_keeper_tb_117 = exception_tb;
        exception_keeper_lineno_117 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_117;
        exception_value = exception_keeper_value_117;
        exception_tb = exception_keeper_tb_117;
        exception_lineno = exception_keeper_lineno_117;

        goto outline_exception_40;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_40:;
        exception_lineno = 326;
        goto try_except_handler_119;
        outline_result_40:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QMessageBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 326;
            type_description_2 = "o";
            goto try_except_handler_119;
        }
        goto try_end_40;
        // Exception handler code:
        try_except_handler_119:;
        exception_keeper_type_118 = exception_type;
        exception_keeper_value_118 = exception_value;
        exception_keeper_tb_118 = exception_tb;
        exception_keeper_lineno_118 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_19__bases_orig);
        tmp_QtWidgets$class_creation_19__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_19__bases);
        tmp_QtWidgets$class_creation_19__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_19__class_decl_dict);
        tmp_QtWidgets$class_creation_19__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_19__metaclass);
        tmp_QtWidgets$class_creation_19__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_19__prepared);
        tmp_QtWidgets$class_creation_19__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_118;
        exception_value = exception_keeper_value_118;
        exception_tb = exception_keeper_tb_118;
        exception_lineno = exception_keeper_lineno_118;

        goto frame_exception_exit_12;
        // End of try:
        try_end_40:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_19__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_19__bases_orig);
        tmp_QtWidgets$class_creation_19__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_19__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_19__bases);
        tmp_QtWidgets$class_creation_19__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_19__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_19__class_decl_dict);
        tmp_QtWidgets$class_creation_19__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_19__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_19__metaclass);
        tmp_QtWidgets$class_creation_19__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_19__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_19__prepared);
        tmp_QtWidgets$class_creation_19__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_308;
            PyObject *tmp_tuple_element_157;
            PyObject *tmp_mvar_value_39;
            tmp_tuple_element_157 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDialog);

            if (tmp_tuple_element_157 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_39 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QDialog);

                    if (unlikely(tmp_mvar_value_39 == NULL)) {
                        tmp_mvar_value_39 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QDialog);
                    }

                    if (tmp_mvar_value_39 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1620 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 327;
                        type_description_2 = "o";
                        goto try_except_handler_122;
                    }

                    tmp_tuple_element_157 = tmp_mvar_value_39;
                    Py_INCREF(tmp_tuple_element_157);
                }
            }

            tmp_assign_source_308 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_308, 0, tmp_tuple_element_157);
            assert(tmp_QtWidgets$class_creation_20__bases_orig == NULL);
            tmp_QtWidgets$class_creation_20__bases_orig = tmp_assign_source_308;
        }
        {
            PyObject *tmp_assign_source_309;
            PyObject *tmp_dircall_arg1_41;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases_orig);
            tmp_dircall_arg1_41 = tmp_QtWidgets$class_creation_20__bases_orig;
            Py_INCREF(tmp_dircall_arg1_41);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_41};
                tmp_assign_source_309 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_309 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            assert(tmp_QtWidgets$class_creation_20__bases == NULL);
            tmp_QtWidgets$class_creation_20__bases = tmp_assign_source_309;
        }
        {
            PyObject *tmp_assign_source_310;
            tmp_assign_source_310 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_20__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_20__class_decl_dict = tmp_assign_source_310;
        }
        {
            PyObject *tmp_assign_source_311;
            PyObject *tmp_metaclass_name_41;
            nuitka_bool tmp_condition_result_243;
            PyObject *tmp_key_name_121;
            PyObject *tmp_dict_name_121;
            PyObject *tmp_dict_name_122;
            PyObject *tmp_key_name_122;
            nuitka_bool tmp_condition_result_244;
            int tmp_truth_name_41;
            PyObject *tmp_type_arg_81;
            PyObject *tmp_subscribed_name_41;
            PyObject *tmp_subscript_name_41;
            PyObject *tmp_bases_name_41;
            tmp_key_name_121 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__class_decl_dict);
            tmp_dict_name_121 = tmp_QtWidgets$class_creation_20__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_121, tmp_key_name_121);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            tmp_condition_result_243 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_243 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_83;
            } else {
                goto condexpr_false_83;
            }
            condexpr_true_83:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__class_decl_dict);
            tmp_dict_name_122 = tmp_QtWidgets$class_creation_20__class_decl_dict;
            tmp_key_name_122 = const_str_plain_metaclass;
            tmp_metaclass_name_41 = DICT_GET_ITEM(tmp_dict_name_122, tmp_key_name_122);
            if (tmp_metaclass_name_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            goto condexpr_end_83;
            condexpr_false_83:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases);
            tmp_truth_name_41 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_20__bases);
            if (tmp_truth_name_41 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            tmp_condition_result_244 = tmp_truth_name_41 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_244 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_84;
            } else {
                goto condexpr_false_84;
            }
            condexpr_true_84:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases);
            tmp_subscribed_name_41 = tmp_QtWidgets$class_creation_20__bases;
            tmp_subscript_name_41 = const_int_0;
            tmp_type_arg_81 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_41, tmp_subscript_name_41, 0);
            if (tmp_type_arg_81 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            tmp_metaclass_name_41 = BUILTIN_TYPE1(tmp_type_arg_81);
            Py_DECREF(tmp_type_arg_81);
            if (tmp_metaclass_name_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            goto condexpr_end_84;
            condexpr_false_84:;
            tmp_metaclass_name_41 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_41);
            condexpr_end_84:;
            condexpr_end_83:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases);
            tmp_bases_name_41 = tmp_QtWidgets$class_creation_20__bases;
            tmp_assign_source_311 = SELECT_METACLASS(tmp_metaclass_name_41, tmp_bases_name_41);
            Py_DECREF(tmp_metaclass_name_41);
            if (tmp_assign_source_311 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            assert(tmp_QtWidgets$class_creation_20__metaclass == NULL);
            tmp_QtWidgets$class_creation_20__metaclass = tmp_assign_source_311;
        }
        {
            nuitka_bool tmp_condition_result_245;
            PyObject *tmp_key_name_123;
            PyObject *tmp_dict_name_123;
            tmp_key_name_123 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__class_decl_dict);
            tmp_dict_name_123 = tmp_QtWidgets$class_creation_20__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_123, tmp_key_name_123);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            tmp_condition_result_245 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_245 == NUITKA_BOOL_TRUE) {
                goto branch_yes_161;
            } else {
                goto branch_no_161;
            }
            branch_yes_161:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_20__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_122;
            }
            branch_no_161:;
        }
        {
            nuitka_bool tmp_condition_result_246;
            PyObject *tmp_source_name_168;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__metaclass);
            tmp_source_name_168 = tmp_QtWidgets$class_creation_20__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_168, const_str_plain___prepare__);
            tmp_condition_result_246 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_246 == NUITKA_BOOL_TRUE) {
                goto branch_yes_162;
            } else {
                goto branch_no_162;
            }
            branch_yes_162:;
            {
                PyObject *tmp_assign_source_312;
                PyObject *tmp_called_name_82;
                PyObject *tmp_source_name_169;
                PyObject *tmp_args_name_80;
                PyObject *tmp_tuple_element_158;
                PyObject *tmp_kw_name_80;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_20__metaclass);
                tmp_source_name_169 = tmp_QtWidgets$class_creation_20__metaclass;
                tmp_called_name_82 = LOOKUP_ATTRIBUTE(tmp_source_name_169, const_str_plain___prepare__);
                if (tmp_called_name_82 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 327;
                    type_description_2 = "o";
                    goto try_except_handler_122;
                }
                tmp_tuple_element_158 = const_str_plain_QWizard;
                tmp_args_name_80 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_158);
                PyTuple_SET_ITEM(tmp_args_name_80, 0, tmp_tuple_element_158);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases);
                tmp_tuple_element_158 = tmp_QtWidgets$class_creation_20__bases;
                Py_INCREF(tmp_tuple_element_158);
                PyTuple_SET_ITEM(tmp_args_name_80, 1, tmp_tuple_element_158);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_20__class_decl_dict);
                tmp_kw_name_80 = tmp_QtWidgets$class_creation_20__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 327;
                tmp_assign_source_312 = CALL_FUNCTION(tmp_called_name_82, tmp_args_name_80, tmp_kw_name_80);
                Py_DECREF(tmp_called_name_82);
                Py_DECREF(tmp_args_name_80);
                if (tmp_assign_source_312 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 327;
                    type_description_2 = "o";
                    goto try_except_handler_122;
                }
                assert(tmp_QtWidgets$class_creation_20__prepared == NULL);
                tmp_QtWidgets$class_creation_20__prepared = tmp_assign_source_312;
            }
            {
                nuitka_bool tmp_condition_result_247;
                PyObject *tmp_operand_name_41;
                PyObject *tmp_source_name_170;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_20__prepared);
                tmp_source_name_170 = tmp_QtWidgets$class_creation_20__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_170, const_str_plain___getitem__);
                tmp_operand_name_41 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_41);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 327;
                    type_description_2 = "o";
                    goto try_except_handler_122;
                }
                tmp_condition_result_247 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_247 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_163;
                } else {
                    goto branch_no_163;
                }
                branch_yes_163:;
                {
                    PyObject *tmp_raise_type_41;
                    PyObject *tmp_raise_value_41;
                    PyObject *tmp_left_name_41;
                    PyObject *tmp_right_name_41;
                    PyObject *tmp_tuple_element_159;
                    PyObject *tmp_getattr_target_41;
                    PyObject *tmp_getattr_attr_41;
                    PyObject *tmp_getattr_default_41;
                    PyObject *tmp_source_name_171;
                    PyObject *tmp_type_arg_82;
                    tmp_raise_type_41 = PyExc_TypeError;
                    tmp_left_name_41 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_20__metaclass);
                    tmp_getattr_target_41 = tmp_QtWidgets$class_creation_20__metaclass;
                    tmp_getattr_attr_41 = const_str_plain___name__;
                    tmp_getattr_default_41 = const_str_angle_metaclass;
                    tmp_tuple_element_159 = BUILTIN_GETATTR(tmp_getattr_target_41, tmp_getattr_attr_41, tmp_getattr_default_41);
                    if (tmp_tuple_element_159 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 327;
                        type_description_2 = "o";
                        goto try_except_handler_122;
                    }
                    tmp_right_name_41 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_41, 0, tmp_tuple_element_159);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_20__prepared);
                    tmp_type_arg_82 = tmp_QtWidgets$class_creation_20__prepared;
                    tmp_source_name_171 = BUILTIN_TYPE1(tmp_type_arg_82);
                    assert(!(tmp_source_name_171 == NULL));
                    tmp_tuple_element_159 = LOOKUP_ATTRIBUTE(tmp_source_name_171, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_171);
                    if (tmp_tuple_element_159 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_41);

                        exception_lineno = 327;
                        type_description_2 = "o";
                        goto try_except_handler_122;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_41, 1, tmp_tuple_element_159);
                    tmp_raise_value_41 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_41, tmp_right_name_41);
                    Py_DECREF(tmp_right_name_41);
                    if (tmp_raise_value_41 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 327;
                        type_description_2 = "o";
                        goto try_except_handler_122;
                    }
                    exception_type = tmp_raise_type_41;
                    Py_INCREF(tmp_raise_type_41);
                    exception_value = tmp_raise_value_41;
                    exception_lineno = 327;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_122;
                }
                branch_no_163:;
            }
            goto branch_end_162;
            branch_no_162:;
            {
                PyObject *tmp_assign_source_313;
                tmp_assign_source_313 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_20__prepared == NULL);
                tmp_QtWidgets$class_creation_20__prepared = tmp_assign_source_313;
            }
            branch_end_162:;
        }
        {
            PyObject *tmp_set_locals_41;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__prepared);
            tmp_set_locals_41 = tmp_QtWidgets$class_creation_20__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_327 = tmp_set_locals_41;
            Py_INCREF(tmp_set_locals_41);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_327, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 327;
            type_description_2 = "o";
            goto try_except_handler_124;
        }
        tmp_dictset_value = const_str_digest_5fc15d61a5340199c2e50eee206bb40e;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_327, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 327;
            type_description_2 = "o";
            goto try_except_handler_124;
        }
        {
            nuitka_bool tmp_condition_result_248;
            PyObject *tmp_compexpr_left_41;
            PyObject *tmp_compexpr_right_41;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases);
            tmp_compexpr_left_41 = tmp_QtWidgets$class_creation_20__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases_orig);
            tmp_compexpr_right_41 = tmp_QtWidgets$class_creation_20__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_41, tmp_compexpr_right_41);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_124;
            }
            tmp_condition_result_248 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_248 == NUITKA_BOOL_TRUE) {
                goto branch_yes_164;
            } else {
                goto branch_no_164;
            }
            branch_yes_164:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_20__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_327, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_124;
            }
            branch_no_164:;
        }
        {
            PyObject *tmp_assign_source_314;
            PyObject *tmp_called_name_83;
            PyObject *tmp_args_name_81;
            PyObject *tmp_tuple_element_160;
            PyObject *tmp_kw_name_81;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__metaclass);
            tmp_called_name_83 = tmp_QtWidgets$class_creation_20__metaclass;
            tmp_tuple_element_160 = const_str_plain_QWizard;
            tmp_args_name_81 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_160);
            PyTuple_SET_ITEM(tmp_args_name_81, 0, tmp_tuple_element_160);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__bases);
            tmp_tuple_element_160 = tmp_QtWidgets$class_creation_20__bases;
            Py_INCREF(tmp_tuple_element_160);
            PyTuple_SET_ITEM(tmp_args_name_81, 1, tmp_tuple_element_160);
            tmp_tuple_element_160 = locals_PyQt5$uic$Compiler$qtproxies_327;
            Py_INCREF(tmp_tuple_element_160);
            PyTuple_SET_ITEM(tmp_args_name_81, 2, tmp_tuple_element_160);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_20__class_decl_dict);
            tmp_kw_name_81 = tmp_QtWidgets$class_creation_20__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 327;
            tmp_assign_source_314 = CALL_FUNCTION(tmp_called_name_83, tmp_args_name_81, tmp_kw_name_81);
            Py_DECREF(tmp_args_name_81);
            if (tmp_assign_source_314 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_2 = "o";
                goto try_except_handler_124;
            }
            assert(outline_40_var___class__ == NULL);
            outline_40_var___class__ = tmp_assign_source_314;
        }
        CHECK_OBJECT(outline_40_var___class__);
        tmp_dictset_value = outline_40_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_124;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_124:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_327);
        locals_PyQt5$uic$Compiler$qtproxies_327 = NULL;
        goto try_return_handler_123;
        // Exception handler code:
        try_except_handler_124:;
        exception_keeper_type_119 = exception_type;
        exception_keeper_value_119 = exception_value;
        exception_keeper_tb_119 = exception_tb;
        exception_keeper_lineno_119 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_327);
        locals_PyQt5$uic$Compiler$qtproxies_327 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_119;
        exception_value = exception_keeper_value_119;
        exception_tb = exception_keeper_tb_119;
        exception_lineno = exception_keeper_lineno_119;

        goto try_except_handler_123;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_123:;
        CHECK_OBJECT((PyObject *)outline_40_var___class__);
        Py_DECREF(outline_40_var___class__);
        outline_40_var___class__ = NULL;

        goto outline_result_41;
        // Exception handler code:
        try_except_handler_123:;
        exception_keeper_type_120 = exception_type;
        exception_keeper_value_120 = exception_value;
        exception_keeper_tb_120 = exception_tb;
        exception_keeper_lineno_120 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_120;
        exception_value = exception_keeper_value_120;
        exception_tb = exception_keeper_tb_120;
        exception_lineno = exception_keeper_lineno_120;

        goto outline_exception_41;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_41:;
        exception_lineno = 327;
        goto try_except_handler_122;
        outline_result_41:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWizard, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 327;
            type_description_2 = "o";
            goto try_except_handler_122;
        }
        goto try_end_41;
        // Exception handler code:
        try_except_handler_122:;
        exception_keeper_type_121 = exception_type;
        exception_keeper_value_121 = exception_value;
        exception_keeper_tb_121 = exception_tb;
        exception_keeper_lineno_121 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_20__bases_orig);
        tmp_QtWidgets$class_creation_20__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_20__bases);
        tmp_QtWidgets$class_creation_20__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_20__class_decl_dict);
        tmp_QtWidgets$class_creation_20__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_20__metaclass);
        tmp_QtWidgets$class_creation_20__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_20__prepared);
        tmp_QtWidgets$class_creation_20__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_121;
        exception_value = exception_keeper_value_121;
        exception_tb = exception_keeper_tb_121;
        exception_lineno = exception_keeper_lineno_121;

        goto frame_exception_exit_12;
        // End of try:
        try_end_41:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_20__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_20__bases_orig);
        tmp_QtWidgets$class_creation_20__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_20__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_20__bases);
        tmp_QtWidgets$class_creation_20__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_20__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_20__class_decl_dict);
        tmp_QtWidgets$class_creation_20__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_20__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_20__metaclass);
        tmp_QtWidgets$class_creation_20__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_20__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_20__prepared);
        tmp_QtWidgets$class_creation_20__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_315;
            PyObject *tmp_tuple_element_161;
            PyObject *tmp_mvar_value_40;
            tmp_tuple_element_161 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_161 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_40 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_40 == NULL)) {
                        tmp_mvar_value_40 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_40 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 329;
                        type_description_2 = "o";
                        goto try_except_handler_125;
                    }

                    tmp_tuple_element_161 = tmp_mvar_value_40;
                    Py_INCREF(tmp_tuple_element_161);
                }
            }

            tmp_assign_source_315 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_315, 0, tmp_tuple_element_161);
            assert(tmp_QtWidgets$class_creation_21__bases_orig == NULL);
            tmp_QtWidgets$class_creation_21__bases_orig = tmp_assign_source_315;
        }
        {
            PyObject *tmp_assign_source_316;
            PyObject *tmp_dircall_arg1_42;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases_orig);
            tmp_dircall_arg1_42 = tmp_QtWidgets$class_creation_21__bases_orig;
            Py_INCREF(tmp_dircall_arg1_42);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_42};
                tmp_assign_source_316 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_316 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            assert(tmp_QtWidgets$class_creation_21__bases == NULL);
            tmp_QtWidgets$class_creation_21__bases = tmp_assign_source_316;
        }
        {
            PyObject *tmp_assign_source_317;
            tmp_assign_source_317 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_21__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_21__class_decl_dict = tmp_assign_source_317;
        }
        {
            PyObject *tmp_assign_source_318;
            PyObject *tmp_metaclass_name_42;
            nuitka_bool tmp_condition_result_249;
            PyObject *tmp_key_name_124;
            PyObject *tmp_dict_name_124;
            PyObject *tmp_dict_name_125;
            PyObject *tmp_key_name_125;
            nuitka_bool tmp_condition_result_250;
            int tmp_truth_name_42;
            PyObject *tmp_type_arg_83;
            PyObject *tmp_subscribed_name_42;
            PyObject *tmp_subscript_name_42;
            PyObject *tmp_bases_name_42;
            tmp_key_name_124 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__class_decl_dict);
            tmp_dict_name_124 = tmp_QtWidgets$class_creation_21__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_124, tmp_key_name_124);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            tmp_condition_result_249 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_249 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_85;
            } else {
                goto condexpr_false_85;
            }
            condexpr_true_85:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__class_decl_dict);
            tmp_dict_name_125 = tmp_QtWidgets$class_creation_21__class_decl_dict;
            tmp_key_name_125 = const_str_plain_metaclass;
            tmp_metaclass_name_42 = DICT_GET_ITEM(tmp_dict_name_125, tmp_key_name_125);
            if (tmp_metaclass_name_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            goto condexpr_end_85;
            condexpr_false_85:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases);
            tmp_truth_name_42 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_21__bases);
            if (tmp_truth_name_42 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            tmp_condition_result_250 = tmp_truth_name_42 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_250 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_86;
            } else {
                goto condexpr_false_86;
            }
            condexpr_true_86:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases);
            tmp_subscribed_name_42 = tmp_QtWidgets$class_creation_21__bases;
            tmp_subscript_name_42 = const_int_0;
            tmp_type_arg_83 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_42, tmp_subscript_name_42, 0);
            if (tmp_type_arg_83 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            tmp_metaclass_name_42 = BUILTIN_TYPE1(tmp_type_arg_83);
            Py_DECREF(tmp_type_arg_83);
            if (tmp_metaclass_name_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            goto condexpr_end_86;
            condexpr_false_86:;
            tmp_metaclass_name_42 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_42);
            condexpr_end_86:;
            condexpr_end_85:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases);
            tmp_bases_name_42 = tmp_QtWidgets$class_creation_21__bases;
            tmp_assign_source_318 = SELECT_METACLASS(tmp_metaclass_name_42, tmp_bases_name_42);
            Py_DECREF(tmp_metaclass_name_42);
            if (tmp_assign_source_318 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            assert(tmp_QtWidgets$class_creation_21__metaclass == NULL);
            tmp_QtWidgets$class_creation_21__metaclass = tmp_assign_source_318;
        }
        {
            nuitka_bool tmp_condition_result_251;
            PyObject *tmp_key_name_126;
            PyObject *tmp_dict_name_126;
            tmp_key_name_126 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__class_decl_dict);
            tmp_dict_name_126 = tmp_QtWidgets$class_creation_21__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_126, tmp_key_name_126);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            tmp_condition_result_251 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_251 == NUITKA_BOOL_TRUE) {
                goto branch_yes_165;
            } else {
                goto branch_no_165;
            }
            branch_yes_165:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_21__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_125;
            }
            branch_no_165:;
        }
        {
            nuitka_bool tmp_condition_result_252;
            PyObject *tmp_source_name_172;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__metaclass);
            tmp_source_name_172 = tmp_QtWidgets$class_creation_21__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_172, const_str_plain___prepare__);
            tmp_condition_result_252 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_252 == NUITKA_BOOL_TRUE) {
                goto branch_yes_166;
            } else {
                goto branch_no_166;
            }
            branch_yes_166:;
            {
                PyObject *tmp_assign_source_319;
                PyObject *tmp_called_name_84;
                PyObject *tmp_source_name_173;
                PyObject *tmp_args_name_82;
                PyObject *tmp_tuple_element_162;
                PyObject *tmp_kw_name_82;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_21__metaclass);
                tmp_source_name_173 = tmp_QtWidgets$class_creation_21__metaclass;
                tmp_called_name_84 = LOOKUP_ATTRIBUTE(tmp_source_name_173, const_str_plain___prepare__);
                if (tmp_called_name_84 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 329;
                    type_description_2 = "o";
                    goto try_except_handler_125;
                }
                tmp_tuple_element_162 = const_str_plain_QAbstractSlider;
                tmp_args_name_82 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_162);
                PyTuple_SET_ITEM(tmp_args_name_82, 0, tmp_tuple_element_162);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases);
                tmp_tuple_element_162 = tmp_QtWidgets$class_creation_21__bases;
                Py_INCREF(tmp_tuple_element_162);
                PyTuple_SET_ITEM(tmp_args_name_82, 1, tmp_tuple_element_162);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_21__class_decl_dict);
                tmp_kw_name_82 = tmp_QtWidgets$class_creation_21__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 329;
                tmp_assign_source_319 = CALL_FUNCTION(tmp_called_name_84, tmp_args_name_82, tmp_kw_name_82);
                Py_DECREF(tmp_called_name_84);
                Py_DECREF(tmp_args_name_82);
                if (tmp_assign_source_319 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 329;
                    type_description_2 = "o";
                    goto try_except_handler_125;
                }
                assert(tmp_QtWidgets$class_creation_21__prepared == NULL);
                tmp_QtWidgets$class_creation_21__prepared = tmp_assign_source_319;
            }
            {
                nuitka_bool tmp_condition_result_253;
                PyObject *tmp_operand_name_42;
                PyObject *tmp_source_name_174;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_21__prepared);
                tmp_source_name_174 = tmp_QtWidgets$class_creation_21__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_174, const_str_plain___getitem__);
                tmp_operand_name_42 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_42);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 329;
                    type_description_2 = "o";
                    goto try_except_handler_125;
                }
                tmp_condition_result_253 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_253 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_167;
                } else {
                    goto branch_no_167;
                }
                branch_yes_167:;
                {
                    PyObject *tmp_raise_type_42;
                    PyObject *tmp_raise_value_42;
                    PyObject *tmp_left_name_42;
                    PyObject *tmp_right_name_42;
                    PyObject *tmp_tuple_element_163;
                    PyObject *tmp_getattr_target_42;
                    PyObject *tmp_getattr_attr_42;
                    PyObject *tmp_getattr_default_42;
                    PyObject *tmp_source_name_175;
                    PyObject *tmp_type_arg_84;
                    tmp_raise_type_42 = PyExc_TypeError;
                    tmp_left_name_42 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_21__metaclass);
                    tmp_getattr_target_42 = tmp_QtWidgets$class_creation_21__metaclass;
                    tmp_getattr_attr_42 = const_str_plain___name__;
                    tmp_getattr_default_42 = const_str_angle_metaclass;
                    tmp_tuple_element_163 = BUILTIN_GETATTR(tmp_getattr_target_42, tmp_getattr_attr_42, tmp_getattr_default_42);
                    if (tmp_tuple_element_163 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 329;
                        type_description_2 = "o";
                        goto try_except_handler_125;
                    }
                    tmp_right_name_42 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_42, 0, tmp_tuple_element_163);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_21__prepared);
                    tmp_type_arg_84 = tmp_QtWidgets$class_creation_21__prepared;
                    tmp_source_name_175 = BUILTIN_TYPE1(tmp_type_arg_84);
                    assert(!(tmp_source_name_175 == NULL));
                    tmp_tuple_element_163 = LOOKUP_ATTRIBUTE(tmp_source_name_175, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_175);
                    if (tmp_tuple_element_163 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_42);

                        exception_lineno = 329;
                        type_description_2 = "o";
                        goto try_except_handler_125;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_42, 1, tmp_tuple_element_163);
                    tmp_raise_value_42 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_42, tmp_right_name_42);
                    Py_DECREF(tmp_right_name_42);
                    if (tmp_raise_value_42 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 329;
                        type_description_2 = "o";
                        goto try_except_handler_125;
                    }
                    exception_type = tmp_raise_type_42;
                    Py_INCREF(tmp_raise_type_42);
                    exception_value = tmp_raise_value_42;
                    exception_lineno = 329;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_125;
                }
                branch_no_167:;
            }
            goto branch_end_166;
            branch_no_166:;
            {
                PyObject *tmp_assign_source_320;
                tmp_assign_source_320 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_21__prepared == NULL);
                tmp_QtWidgets$class_creation_21__prepared = tmp_assign_source_320;
            }
            branch_end_166:;
        }
        {
            PyObject *tmp_set_locals_42;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__prepared);
            tmp_set_locals_42 = tmp_QtWidgets$class_creation_21__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_329 = tmp_set_locals_42;
            Py_INCREF(tmp_set_locals_42);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_329, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 329;
            type_description_2 = "o";
            goto try_except_handler_127;
        }
        tmp_dictset_value = const_str_digest_95bba529d11e64d9d782a2d09977c6aa;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_329, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 329;
            type_description_2 = "o";
            goto try_except_handler_127;
        }
        {
            nuitka_bool tmp_condition_result_254;
            PyObject *tmp_compexpr_left_42;
            PyObject *tmp_compexpr_right_42;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases);
            tmp_compexpr_left_42 = tmp_QtWidgets$class_creation_21__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases_orig);
            tmp_compexpr_right_42 = tmp_QtWidgets$class_creation_21__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_42, tmp_compexpr_right_42);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_127;
            }
            tmp_condition_result_254 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_254 == NUITKA_BOOL_TRUE) {
                goto branch_yes_168;
            } else {
                goto branch_no_168;
            }
            branch_yes_168:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_21__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_329, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_127;
            }
            branch_no_168:;
        }
        {
            PyObject *tmp_assign_source_321;
            PyObject *tmp_called_name_85;
            PyObject *tmp_args_name_83;
            PyObject *tmp_tuple_element_164;
            PyObject *tmp_kw_name_83;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__metaclass);
            tmp_called_name_85 = tmp_QtWidgets$class_creation_21__metaclass;
            tmp_tuple_element_164 = const_str_plain_QAbstractSlider;
            tmp_args_name_83 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_164);
            PyTuple_SET_ITEM(tmp_args_name_83, 0, tmp_tuple_element_164);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__bases);
            tmp_tuple_element_164 = tmp_QtWidgets$class_creation_21__bases;
            Py_INCREF(tmp_tuple_element_164);
            PyTuple_SET_ITEM(tmp_args_name_83, 1, tmp_tuple_element_164);
            tmp_tuple_element_164 = locals_PyQt5$uic$Compiler$qtproxies_329;
            Py_INCREF(tmp_tuple_element_164);
            PyTuple_SET_ITEM(tmp_args_name_83, 2, tmp_tuple_element_164);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_21__class_decl_dict);
            tmp_kw_name_83 = tmp_QtWidgets$class_creation_21__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 329;
            tmp_assign_source_321 = CALL_FUNCTION(tmp_called_name_85, tmp_args_name_83, tmp_kw_name_83);
            Py_DECREF(tmp_args_name_83);
            if (tmp_assign_source_321 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_2 = "o";
                goto try_except_handler_127;
            }
            assert(outline_41_var___class__ == NULL);
            outline_41_var___class__ = tmp_assign_source_321;
        }
        CHECK_OBJECT(outline_41_var___class__);
        tmp_dictset_value = outline_41_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_127;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_127:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_329);
        locals_PyQt5$uic$Compiler$qtproxies_329 = NULL;
        goto try_return_handler_126;
        // Exception handler code:
        try_except_handler_127:;
        exception_keeper_type_122 = exception_type;
        exception_keeper_value_122 = exception_value;
        exception_keeper_tb_122 = exception_tb;
        exception_keeper_lineno_122 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_329);
        locals_PyQt5$uic$Compiler$qtproxies_329 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_122;
        exception_value = exception_keeper_value_122;
        exception_tb = exception_keeper_tb_122;
        exception_lineno = exception_keeper_lineno_122;

        goto try_except_handler_126;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_126:;
        CHECK_OBJECT((PyObject *)outline_41_var___class__);
        Py_DECREF(outline_41_var___class__);
        outline_41_var___class__ = NULL;

        goto outline_result_42;
        // Exception handler code:
        try_except_handler_126:;
        exception_keeper_type_123 = exception_type;
        exception_keeper_value_123 = exception_value;
        exception_keeper_tb_123 = exception_tb;
        exception_keeper_lineno_123 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_123;
        exception_value = exception_keeper_value_123;
        exception_tb = exception_keeper_tb_123;
        exception_lineno = exception_keeper_lineno_123;

        goto outline_exception_42;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_42:;
        exception_lineno = 329;
        goto try_except_handler_125;
        outline_result_42:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSlider, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 329;
            type_description_2 = "o";
            goto try_except_handler_125;
        }
        goto try_end_42;
        // Exception handler code:
        try_except_handler_125:;
        exception_keeper_type_124 = exception_type;
        exception_keeper_value_124 = exception_value;
        exception_keeper_tb_124 = exception_tb;
        exception_keeper_lineno_124 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_21__bases_orig);
        tmp_QtWidgets$class_creation_21__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_21__bases);
        tmp_QtWidgets$class_creation_21__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_21__class_decl_dict);
        tmp_QtWidgets$class_creation_21__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_21__metaclass);
        tmp_QtWidgets$class_creation_21__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_21__prepared);
        tmp_QtWidgets$class_creation_21__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_124;
        exception_value = exception_keeper_value_124;
        exception_tb = exception_keeper_tb_124;
        exception_lineno = exception_keeper_lineno_124;

        goto frame_exception_exit_12;
        // End of try:
        try_end_42:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_21__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_21__bases_orig);
        tmp_QtWidgets$class_creation_21__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_21__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_21__bases);
        tmp_QtWidgets$class_creation_21__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_21__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_21__class_decl_dict);
        tmp_QtWidgets$class_creation_21__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_21__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_21__metaclass);
        tmp_QtWidgets$class_creation_21__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_21__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_21__prepared);
        tmp_QtWidgets$class_creation_21__prepared = NULL;

        {
            PyObject *tmp_assign_source_322;
            PyObject *tmp_tuple_element_165;
            tmp_tuple_element_165 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSlider);

            if (tmp_tuple_element_165 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1649 ], 37, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 330;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_165 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_322 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_322, 0, tmp_tuple_element_165);
            assert(tmp_QtWidgets$class_creation_22__bases_orig == NULL);
            tmp_QtWidgets$class_creation_22__bases_orig = tmp_assign_source_322;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_323;
            PyObject *tmp_dircall_arg1_43;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases_orig);
            tmp_dircall_arg1_43 = tmp_QtWidgets$class_creation_22__bases_orig;
            Py_INCREF(tmp_dircall_arg1_43);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_43};
                tmp_assign_source_323 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_323 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            assert(tmp_QtWidgets$class_creation_22__bases == NULL);
            tmp_QtWidgets$class_creation_22__bases = tmp_assign_source_323;
        }
        {
            PyObject *tmp_assign_source_324;
            tmp_assign_source_324 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_22__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_22__class_decl_dict = tmp_assign_source_324;
        }
        {
            PyObject *tmp_assign_source_325;
            PyObject *tmp_metaclass_name_43;
            nuitka_bool tmp_condition_result_255;
            PyObject *tmp_key_name_127;
            PyObject *tmp_dict_name_127;
            PyObject *tmp_dict_name_128;
            PyObject *tmp_key_name_128;
            nuitka_bool tmp_condition_result_256;
            int tmp_truth_name_43;
            PyObject *tmp_type_arg_85;
            PyObject *tmp_subscribed_name_43;
            PyObject *tmp_subscript_name_43;
            PyObject *tmp_bases_name_43;
            tmp_key_name_127 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__class_decl_dict);
            tmp_dict_name_127 = tmp_QtWidgets$class_creation_22__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_127, tmp_key_name_127);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            tmp_condition_result_255 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_255 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_87;
            } else {
                goto condexpr_false_87;
            }
            condexpr_true_87:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__class_decl_dict);
            tmp_dict_name_128 = tmp_QtWidgets$class_creation_22__class_decl_dict;
            tmp_key_name_128 = const_str_plain_metaclass;
            tmp_metaclass_name_43 = DICT_GET_ITEM(tmp_dict_name_128, tmp_key_name_128);
            if (tmp_metaclass_name_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            goto condexpr_end_87;
            condexpr_false_87:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases);
            tmp_truth_name_43 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_22__bases);
            if (tmp_truth_name_43 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            tmp_condition_result_256 = tmp_truth_name_43 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_256 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_88;
            } else {
                goto condexpr_false_88;
            }
            condexpr_true_88:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases);
            tmp_subscribed_name_43 = tmp_QtWidgets$class_creation_22__bases;
            tmp_subscript_name_43 = const_int_0;
            tmp_type_arg_85 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_43, tmp_subscript_name_43, 0);
            if (tmp_type_arg_85 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            tmp_metaclass_name_43 = BUILTIN_TYPE1(tmp_type_arg_85);
            Py_DECREF(tmp_type_arg_85);
            if (tmp_metaclass_name_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            goto condexpr_end_88;
            condexpr_false_88:;
            tmp_metaclass_name_43 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_43);
            condexpr_end_88:;
            condexpr_end_87:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases);
            tmp_bases_name_43 = tmp_QtWidgets$class_creation_22__bases;
            tmp_assign_source_325 = SELECT_METACLASS(tmp_metaclass_name_43, tmp_bases_name_43);
            Py_DECREF(tmp_metaclass_name_43);
            if (tmp_assign_source_325 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            assert(tmp_QtWidgets$class_creation_22__metaclass == NULL);
            tmp_QtWidgets$class_creation_22__metaclass = tmp_assign_source_325;
        }
        {
            nuitka_bool tmp_condition_result_257;
            PyObject *tmp_key_name_129;
            PyObject *tmp_dict_name_129;
            tmp_key_name_129 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__class_decl_dict);
            tmp_dict_name_129 = tmp_QtWidgets$class_creation_22__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_129, tmp_key_name_129);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            tmp_condition_result_257 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_257 == NUITKA_BOOL_TRUE) {
                goto branch_yes_169;
            } else {
                goto branch_no_169;
            }
            branch_yes_169:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_22__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_128;
            }
            branch_no_169:;
        }
        {
            nuitka_bool tmp_condition_result_258;
            PyObject *tmp_source_name_176;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__metaclass);
            tmp_source_name_176 = tmp_QtWidgets$class_creation_22__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_176, const_str_plain___prepare__);
            tmp_condition_result_258 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_258 == NUITKA_BOOL_TRUE) {
                goto branch_yes_170;
            } else {
                goto branch_no_170;
            }
            branch_yes_170:;
            {
                PyObject *tmp_assign_source_326;
                PyObject *tmp_called_name_86;
                PyObject *tmp_source_name_177;
                PyObject *tmp_args_name_84;
                PyObject *tmp_tuple_element_166;
                PyObject *tmp_kw_name_84;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_22__metaclass);
                tmp_source_name_177 = tmp_QtWidgets$class_creation_22__metaclass;
                tmp_called_name_86 = LOOKUP_ATTRIBUTE(tmp_source_name_177, const_str_plain___prepare__);
                if (tmp_called_name_86 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 330;
                    type_description_2 = "o";
                    goto try_except_handler_128;
                }
                tmp_tuple_element_166 = const_str_plain_QDial;
                tmp_args_name_84 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_166);
                PyTuple_SET_ITEM(tmp_args_name_84, 0, tmp_tuple_element_166);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases);
                tmp_tuple_element_166 = tmp_QtWidgets$class_creation_22__bases;
                Py_INCREF(tmp_tuple_element_166);
                PyTuple_SET_ITEM(tmp_args_name_84, 1, tmp_tuple_element_166);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_22__class_decl_dict);
                tmp_kw_name_84 = tmp_QtWidgets$class_creation_22__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 330;
                tmp_assign_source_326 = CALL_FUNCTION(tmp_called_name_86, tmp_args_name_84, tmp_kw_name_84);
                Py_DECREF(tmp_called_name_86);
                Py_DECREF(tmp_args_name_84);
                if (tmp_assign_source_326 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 330;
                    type_description_2 = "o";
                    goto try_except_handler_128;
                }
                assert(tmp_QtWidgets$class_creation_22__prepared == NULL);
                tmp_QtWidgets$class_creation_22__prepared = tmp_assign_source_326;
            }
            {
                nuitka_bool tmp_condition_result_259;
                PyObject *tmp_operand_name_43;
                PyObject *tmp_source_name_178;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_22__prepared);
                tmp_source_name_178 = tmp_QtWidgets$class_creation_22__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_178, const_str_plain___getitem__);
                tmp_operand_name_43 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_43);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 330;
                    type_description_2 = "o";
                    goto try_except_handler_128;
                }
                tmp_condition_result_259 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_259 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_171;
                } else {
                    goto branch_no_171;
                }
                branch_yes_171:;
                {
                    PyObject *tmp_raise_type_43;
                    PyObject *tmp_raise_value_43;
                    PyObject *tmp_left_name_43;
                    PyObject *tmp_right_name_43;
                    PyObject *tmp_tuple_element_167;
                    PyObject *tmp_getattr_target_43;
                    PyObject *tmp_getattr_attr_43;
                    PyObject *tmp_getattr_default_43;
                    PyObject *tmp_source_name_179;
                    PyObject *tmp_type_arg_86;
                    tmp_raise_type_43 = PyExc_TypeError;
                    tmp_left_name_43 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_22__metaclass);
                    tmp_getattr_target_43 = tmp_QtWidgets$class_creation_22__metaclass;
                    tmp_getattr_attr_43 = const_str_plain___name__;
                    tmp_getattr_default_43 = const_str_angle_metaclass;
                    tmp_tuple_element_167 = BUILTIN_GETATTR(tmp_getattr_target_43, tmp_getattr_attr_43, tmp_getattr_default_43);
                    if (tmp_tuple_element_167 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 330;
                        type_description_2 = "o";
                        goto try_except_handler_128;
                    }
                    tmp_right_name_43 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_43, 0, tmp_tuple_element_167);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_22__prepared);
                    tmp_type_arg_86 = tmp_QtWidgets$class_creation_22__prepared;
                    tmp_source_name_179 = BUILTIN_TYPE1(tmp_type_arg_86);
                    assert(!(tmp_source_name_179 == NULL));
                    tmp_tuple_element_167 = LOOKUP_ATTRIBUTE(tmp_source_name_179, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_179);
                    if (tmp_tuple_element_167 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_43);

                        exception_lineno = 330;
                        type_description_2 = "o";
                        goto try_except_handler_128;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_43, 1, tmp_tuple_element_167);
                    tmp_raise_value_43 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_43, tmp_right_name_43);
                    Py_DECREF(tmp_right_name_43);
                    if (tmp_raise_value_43 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 330;
                        type_description_2 = "o";
                        goto try_except_handler_128;
                    }
                    exception_type = tmp_raise_type_43;
                    Py_INCREF(tmp_raise_type_43);
                    exception_value = tmp_raise_value_43;
                    exception_lineno = 330;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_128;
                }
                branch_no_171:;
            }
            goto branch_end_170;
            branch_no_170:;
            {
                PyObject *tmp_assign_source_327;
                tmp_assign_source_327 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_22__prepared == NULL);
                tmp_QtWidgets$class_creation_22__prepared = tmp_assign_source_327;
            }
            branch_end_170:;
        }
        {
            PyObject *tmp_set_locals_43;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__prepared);
            tmp_set_locals_43 = tmp_QtWidgets$class_creation_22__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_330 = tmp_set_locals_43;
            Py_INCREF(tmp_set_locals_43);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_330, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;
            type_description_2 = "o";
            goto try_except_handler_130;
        }
        tmp_dictset_value = const_str_digest_aef66aa48a399f74b516a121b227c11b;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_330, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;
            type_description_2 = "o";
            goto try_except_handler_130;
        }
        {
            nuitka_bool tmp_condition_result_260;
            PyObject *tmp_compexpr_left_43;
            PyObject *tmp_compexpr_right_43;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases);
            tmp_compexpr_left_43 = tmp_QtWidgets$class_creation_22__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases_orig);
            tmp_compexpr_right_43 = tmp_QtWidgets$class_creation_22__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_43, tmp_compexpr_right_43);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_130;
            }
            tmp_condition_result_260 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_260 == NUITKA_BOOL_TRUE) {
                goto branch_yes_172;
            } else {
                goto branch_no_172;
            }
            branch_yes_172:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_22__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_330, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_130;
            }
            branch_no_172:;
        }
        {
            PyObject *tmp_assign_source_328;
            PyObject *tmp_called_name_87;
            PyObject *tmp_args_name_85;
            PyObject *tmp_tuple_element_168;
            PyObject *tmp_kw_name_85;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__metaclass);
            tmp_called_name_87 = tmp_QtWidgets$class_creation_22__metaclass;
            tmp_tuple_element_168 = const_str_plain_QDial;
            tmp_args_name_85 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_168);
            PyTuple_SET_ITEM(tmp_args_name_85, 0, tmp_tuple_element_168);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__bases);
            tmp_tuple_element_168 = tmp_QtWidgets$class_creation_22__bases;
            Py_INCREF(tmp_tuple_element_168);
            PyTuple_SET_ITEM(tmp_args_name_85, 1, tmp_tuple_element_168);
            tmp_tuple_element_168 = locals_PyQt5$uic$Compiler$qtproxies_330;
            Py_INCREF(tmp_tuple_element_168);
            PyTuple_SET_ITEM(tmp_args_name_85, 2, tmp_tuple_element_168);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_22__class_decl_dict);
            tmp_kw_name_85 = tmp_QtWidgets$class_creation_22__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 330;
            tmp_assign_source_328 = CALL_FUNCTION(tmp_called_name_87, tmp_args_name_85, tmp_kw_name_85);
            Py_DECREF(tmp_args_name_85);
            if (tmp_assign_source_328 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_2 = "o";
                goto try_except_handler_130;
            }
            assert(outline_42_var___class__ == NULL);
            outline_42_var___class__ = tmp_assign_source_328;
        }
        CHECK_OBJECT(outline_42_var___class__);
        tmp_dictset_value = outline_42_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_130;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_130:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_330);
        locals_PyQt5$uic$Compiler$qtproxies_330 = NULL;
        goto try_return_handler_129;
        // Exception handler code:
        try_except_handler_130:;
        exception_keeper_type_125 = exception_type;
        exception_keeper_value_125 = exception_value;
        exception_keeper_tb_125 = exception_tb;
        exception_keeper_lineno_125 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_330);
        locals_PyQt5$uic$Compiler$qtproxies_330 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_125;
        exception_value = exception_keeper_value_125;
        exception_tb = exception_keeper_tb_125;
        exception_lineno = exception_keeper_lineno_125;

        goto try_except_handler_129;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_129:;
        CHECK_OBJECT((PyObject *)outline_42_var___class__);
        Py_DECREF(outline_42_var___class__);
        outline_42_var___class__ = NULL;

        goto outline_result_43;
        // Exception handler code:
        try_except_handler_129:;
        exception_keeper_type_126 = exception_type;
        exception_keeper_value_126 = exception_value;
        exception_keeper_tb_126 = exception_tb;
        exception_keeper_lineno_126 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_126;
        exception_value = exception_keeper_value_126;
        exception_tb = exception_keeper_tb_126;
        exception_lineno = exception_keeper_lineno_126;

        goto outline_exception_43;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_43:;
        exception_lineno = 330;
        goto try_except_handler_128;
        outline_result_43:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDial, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;
            type_description_2 = "o";
            goto try_except_handler_128;
        }
        goto try_end_43;
        // Exception handler code:
        try_except_handler_128:;
        exception_keeper_type_127 = exception_type;
        exception_keeper_value_127 = exception_value;
        exception_keeper_tb_127 = exception_tb;
        exception_keeper_lineno_127 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_22__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_22__bases_orig);
        tmp_QtWidgets$class_creation_22__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_22__bases);
        tmp_QtWidgets$class_creation_22__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_22__class_decl_dict);
        tmp_QtWidgets$class_creation_22__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_22__metaclass);
        tmp_QtWidgets$class_creation_22__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_22__prepared);
        tmp_QtWidgets$class_creation_22__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_127;
        exception_value = exception_keeper_value_127;
        exception_tb = exception_keeper_tb_127;
        exception_lineno = exception_keeper_lineno_127;

        goto frame_exception_exit_12;
        // End of try:
        try_end_43:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_22__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_22__bases_orig);
        tmp_QtWidgets$class_creation_22__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_22__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_22__bases);
        tmp_QtWidgets$class_creation_22__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_22__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_22__class_decl_dict);
        tmp_QtWidgets$class_creation_22__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_22__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_22__metaclass);
        tmp_QtWidgets$class_creation_22__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_22__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_22__prepared);
        tmp_QtWidgets$class_creation_22__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_329;
            PyObject *tmp_tuple_element_169;
            PyObject *tmp_mvar_value_41;
            tmp_tuple_element_169 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSlider);

            if (tmp_tuple_element_169 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_41 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractSlider);

                    if (unlikely(tmp_mvar_value_41 == NULL)) {
                        tmp_mvar_value_41 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractSlider);
                    }

                    if (tmp_mvar_value_41 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1649 ], 37, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 331;
                        type_description_2 = "o";
                        goto try_except_handler_131;
                    }

                    tmp_tuple_element_169 = tmp_mvar_value_41;
                    Py_INCREF(tmp_tuple_element_169);
                }
            }

            tmp_assign_source_329 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_329, 0, tmp_tuple_element_169);
            assert(tmp_QtWidgets$class_creation_23__bases_orig == NULL);
            tmp_QtWidgets$class_creation_23__bases_orig = tmp_assign_source_329;
        }
        {
            PyObject *tmp_assign_source_330;
            PyObject *tmp_dircall_arg1_44;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases_orig);
            tmp_dircall_arg1_44 = tmp_QtWidgets$class_creation_23__bases_orig;
            Py_INCREF(tmp_dircall_arg1_44);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_44};
                tmp_assign_source_330 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_330 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            assert(tmp_QtWidgets$class_creation_23__bases == NULL);
            tmp_QtWidgets$class_creation_23__bases = tmp_assign_source_330;
        }
        {
            PyObject *tmp_assign_source_331;
            tmp_assign_source_331 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_23__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_23__class_decl_dict = tmp_assign_source_331;
        }
        {
            PyObject *tmp_assign_source_332;
            PyObject *tmp_metaclass_name_44;
            nuitka_bool tmp_condition_result_261;
            PyObject *tmp_key_name_130;
            PyObject *tmp_dict_name_130;
            PyObject *tmp_dict_name_131;
            PyObject *tmp_key_name_131;
            nuitka_bool tmp_condition_result_262;
            int tmp_truth_name_44;
            PyObject *tmp_type_arg_87;
            PyObject *tmp_subscribed_name_44;
            PyObject *tmp_subscript_name_44;
            PyObject *tmp_bases_name_44;
            tmp_key_name_130 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__class_decl_dict);
            tmp_dict_name_130 = tmp_QtWidgets$class_creation_23__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_130, tmp_key_name_130);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            tmp_condition_result_261 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_261 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_89;
            } else {
                goto condexpr_false_89;
            }
            condexpr_true_89:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__class_decl_dict);
            tmp_dict_name_131 = tmp_QtWidgets$class_creation_23__class_decl_dict;
            tmp_key_name_131 = const_str_plain_metaclass;
            tmp_metaclass_name_44 = DICT_GET_ITEM(tmp_dict_name_131, tmp_key_name_131);
            if (tmp_metaclass_name_44 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            goto condexpr_end_89;
            condexpr_false_89:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases);
            tmp_truth_name_44 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_23__bases);
            if (tmp_truth_name_44 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            tmp_condition_result_262 = tmp_truth_name_44 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_262 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_90;
            } else {
                goto condexpr_false_90;
            }
            condexpr_true_90:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases);
            tmp_subscribed_name_44 = tmp_QtWidgets$class_creation_23__bases;
            tmp_subscript_name_44 = const_int_0;
            tmp_type_arg_87 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_44, tmp_subscript_name_44, 0);
            if (tmp_type_arg_87 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            tmp_metaclass_name_44 = BUILTIN_TYPE1(tmp_type_arg_87);
            Py_DECREF(tmp_type_arg_87);
            if (tmp_metaclass_name_44 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            goto condexpr_end_90;
            condexpr_false_90:;
            tmp_metaclass_name_44 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_44);
            condexpr_end_90:;
            condexpr_end_89:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases);
            tmp_bases_name_44 = tmp_QtWidgets$class_creation_23__bases;
            tmp_assign_source_332 = SELECT_METACLASS(tmp_metaclass_name_44, tmp_bases_name_44);
            Py_DECREF(tmp_metaclass_name_44);
            if (tmp_assign_source_332 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            assert(tmp_QtWidgets$class_creation_23__metaclass == NULL);
            tmp_QtWidgets$class_creation_23__metaclass = tmp_assign_source_332;
        }
        {
            nuitka_bool tmp_condition_result_263;
            PyObject *tmp_key_name_132;
            PyObject *tmp_dict_name_132;
            tmp_key_name_132 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__class_decl_dict);
            tmp_dict_name_132 = tmp_QtWidgets$class_creation_23__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_132, tmp_key_name_132);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            tmp_condition_result_263 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_263 == NUITKA_BOOL_TRUE) {
                goto branch_yes_173;
            } else {
                goto branch_no_173;
            }
            branch_yes_173:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_23__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_131;
            }
            branch_no_173:;
        }
        {
            nuitka_bool tmp_condition_result_264;
            PyObject *tmp_source_name_180;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__metaclass);
            tmp_source_name_180 = tmp_QtWidgets$class_creation_23__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_180, const_str_plain___prepare__);
            tmp_condition_result_264 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_264 == NUITKA_BOOL_TRUE) {
                goto branch_yes_174;
            } else {
                goto branch_no_174;
            }
            branch_yes_174:;
            {
                PyObject *tmp_assign_source_333;
                PyObject *tmp_called_name_88;
                PyObject *tmp_source_name_181;
                PyObject *tmp_args_name_86;
                PyObject *tmp_tuple_element_170;
                PyObject *tmp_kw_name_86;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_23__metaclass);
                tmp_source_name_181 = tmp_QtWidgets$class_creation_23__metaclass;
                tmp_called_name_88 = LOOKUP_ATTRIBUTE(tmp_source_name_181, const_str_plain___prepare__);
                if (tmp_called_name_88 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 331;
                    type_description_2 = "o";
                    goto try_except_handler_131;
                }
                tmp_tuple_element_170 = const_str_plain_QScrollBar;
                tmp_args_name_86 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_170);
                PyTuple_SET_ITEM(tmp_args_name_86, 0, tmp_tuple_element_170);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases);
                tmp_tuple_element_170 = tmp_QtWidgets$class_creation_23__bases;
                Py_INCREF(tmp_tuple_element_170);
                PyTuple_SET_ITEM(tmp_args_name_86, 1, tmp_tuple_element_170);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_23__class_decl_dict);
                tmp_kw_name_86 = tmp_QtWidgets$class_creation_23__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 331;
                tmp_assign_source_333 = CALL_FUNCTION(tmp_called_name_88, tmp_args_name_86, tmp_kw_name_86);
                Py_DECREF(tmp_called_name_88);
                Py_DECREF(tmp_args_name_86);
                if (tmp_assign_source_333 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 331;
                    type_description_2 = "o";
                    goto try_except_handler_131;
                }
                assert(tmp_QtWidgets$class_creation_23__prepared == NULL);
                tmp_QtWidgets$class_creation_23__prepared = tmp_assign_source_333;
            }
            {
                nuitka_bool tmp_condition_result_265;
                PyObject *tmp_operand_name_44;
                PyObject *tmp_source_name_182;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_23__prepared);
                tmp_source_name_182 = tmp_QtWidgets$class_creation_23__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_182, const_str_plain___getitem__);
                tmp_operand_name_44 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_44);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 331;
                    type_description_2 = "o";
                    goto try_except_handler_131;
                }
                tmp_condition_result_265 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_265 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_175;
                } else {
                    goto branch_no_175;
                }
                branch_yes_175:;
                {
                    PyObject *tmp_raise_type_44;
                    PyObject *tmp_raise_value_44;
                    PyObject *tmp_left_name_44;
                    PyObject *tmp_right_name_44;
                    PyObject *tmp_tuple_element_171;
                    PyObject *tmp_getattr_target_44;
                    PyObject *tmp_getattr_attr_44;
                    PyObject *tmp_getattr_default_44;
                    PyObject *tmp_source_name_183;
                    PyObject *tmp_type_arg_88;
                    tmp_raise_type_44 = PyExc_TypeError;
                    tmp_left_name_44 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_23__metaclass);
                    tmp_getattr_target_44 = tmp_QtWidgets$class_creation_23__metaclass;
                    tmp_getattr_attr_44 = const_str_plain___name__;
                    tmp_getattr_default_44 = const_str_angle_metaclass;
                    tmp_tuple_element_171 = BUILTIN_GETATTR(tmp_getattr_target_44, tmp_getattr_attr_44, tmp_getattr_default_44);
                    if (tmp_tuple_element_171 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 331;
                        type_description_2 = "o";
                        goto try_except_handler_131;
                    }
                    tmp_right_name_44 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_44, 0, tmp_tuple_element_171);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_23__prepared);
                    tmp_type_arg_88 = tmp_QtWidgets$class_creation_23__prepared;
                    tmp_source_name_183 = BUILTIN_TYPE1(tmp_type_arg_88);
                    assert(!(tmp_source_name_183 == NULL));
                    tmp_tuple_element_171 = LOOKUP_ATTRIBUTE(tmp_source_name_183, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_183);
                    if (tmp_tuple_element_171 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_44);

                        exception_lineno = 331;
                        type_description_2 = "o";
                        goto try_except_handler_131;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_44, 1, tmp_tuple_element_171);
                    tmp_raise_value_44 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_44, tmp_right_name_44);
                    Py_DECREF(tmp_right_name_44);
                    if (tmp_raise_value_44 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 331;
                        type_description_2 = "o";
                        goto try_except_handler_131;
                    }
                    exception_type = tmp_raise_type_44;
                    Py_INCREF(tmp_raise_type_44);
                    exception_value = tmp_raise_value_44;
                    exception_lineno = 331;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_131;
                }
                branch_no_175:;
            }
            goto branch_end_174;
            branch_no_174:;
            {
                PyObject *tmp_assign_source_334;
                tmp_assign_source_334 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_23__prepared == NULL);
                tmp_QtWidgets$class_creation_23__prepared = tmp_assign_source_334;
            }
            branch_end_174:;
        }
        {
            PyObject *tmp_set_locals_44;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__prepared);
            tmp_set_locals_44 = tmp_QtWidgets$class_creation_23__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_331 = tmp_set_locals_44;
            Py_INCREF(tmp_set_locals_44);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_331, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 331;
            type_description_2 = "o";
            goto try_except_handler_133;
        }
        tmp_dictset_value = const_str_digest_46c5a773d646b350d46d185eb97ec319;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_331, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 331;
            type_description_2 = "o";
            goto try_except_handler_133;
        }
        {
            nuitka_bool tmp_condition_result_266;
            PyObject *tmp_compexpr_left_44;
            PyObject *tmp_compexpr_right_44;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases);
            tmp_compexpr_left_44 = tmp_QtWidgets$class_creation_23__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases_orig);
            tmp_compexpr_right_44 = tmp_QtWidgets$class_creation_23__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_44, tmp_compexpr_right_44);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_133;
            }
            tmp_condition_result_266 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_266 == NUITKA_BOOL_TRUE) {
                goto branch_yes_176;
            } else {
                goto branch_no_176;
            }
            branch_yes_176:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_23__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_331, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_133;
            }
            branch_no_176:;
        }
        {
            PyObject *tmp_assign_source_335;
            PyObject *tmp_called_name_89;
            PyObject *tmp_args_name_87;
            PyObject *tmp_tuple_element_172;
            PyObject *tmp_kw_name_87;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__metaclass);
            tmp_called_name_89 = tmp_QtWidgets$class_creation_23__metaclass;
            tmp_tuple_element_172 = const_str_plain_QScrollBar;
            tmp_args_name_87 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_172);
            PyTuple_SET_ITEM(tmp_args_name_87, 0, tmp_tuple_element_172);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__bases);
            tmp_tuple_element_172 = tmp_QtWidgets$class_creation_23__bases;
            Py_INCREF(tmp_tuple_element_172);
            PyTuple_SET_ITEM(tmp_args_name_87, 1, tmp_tuple_element_172);
            tmp_tuple_element_172 = locals_PyQt5$uic$Compiler$qtproxies_331;
            Py_INCREF(tmp_tuple_element_172);
            PyTuple_SET_ITEM(tmp_args_name_87, 2, tmp_tuple_element_172);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_23__class_decl_dict);
            tmp_kw_name_87 = tmp_QtWidgets$class_creation_23__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 331;
            tmp_assign_source_335 = CALL_FUNCTION(tmp_called_name_89, tmp_args_name_87, tmp_kw_name_87);
            Py_DECREF(tmp_args_name_87);
            if (tmp_assign_source_335 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_2 = "o";
                goto try_except_handler_133;
            }
            assert(outline_43_var___class__ == NULL);
            outline_43_var___class__ = tmp_assign_source_335;
        }
        CHECK_OBJECT(outline_43_var___class__);
        tmp_dictset_value = outline_43_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_133;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_133:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_331);
        locals_PyQt5$uic$Compiler$qtproxies_331 = NULL;
        goto try_return_handler_132;
        // Exception handler code:
        try_except_handler_133:;
        exception_keeper_type_128 = exception_type;
        exception_keeper_value_128 = exception_value;
        exception_keeper_tb_128 = exception_tb;
        exception_keeper_lineno_128 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_331);
        locals_PyQt5$uic$Compiler$qtproxies_331 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_128;
        exception_value = exception_keeper_value_128;
        exception_tb = exception_keeper_tb_128;
        exception_lineno = exception_keeper_lineno_128;

        goto try_except_handler_132;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_132:;
        CHECK_OBJECT((PyObject *)outline_43_var___class__);
        Py_DECREF(outline_43_var___class__);
        outline_43_var___class__ = NULL;

        goto outline_result_44;
        // Exception handler code:
        try_except_handler_132:;
        exception_keeper_type_129 = exception_type;
        exception_keeper_value_129 = exception_value;
        exception_keeper_tb_129 = exception_tb;
        exception_keeper_lineno_129 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_129;
        exception_value = exception_keeper_value_129;
        exception_tb = exception_keeper_tb_129;
        exception_lineno = exception_keeper_lineno_129;

        goto outline_exception_44;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_44:;
        exception_lineno = 331;
        goto try_except_handler_131;
        outline_result_44:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QScrollBar, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 331;
            type_description_2 = "o";
            goto try_except_handler_131;
        }
        goto try_end_44;
        // Exception handler code:
        try_except_handler_131:;
        exception_keeper_type_130 = exception_type;
        exception_keeper_value_130 = exception_value;
        exception_keeper_tb_130 = exception_tb;
        exception_keeper_lineno_130 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_23__bases_orig);
        tmp_QtWidgets$class_creation_23__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_23__bases);
        tmp_QtWidgets$class_creation_23__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_23__class_decl_dict);
        tmp_QtWidgets$class_creation_23__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_23__metaclass);
        tmp_QtWidgets$class_creation_23__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_23__prepared);
        tmp_QtWidgets$class_creation_23__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_130;
        exception_value = exception_keeper_value_130;
        exception_tb = exception_keeper_tb_130;
        exception_lineno = exception_keeper_lineno_130;

        goto frame_exception_exit_12;
        // End of try:
        try_end_44:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_23__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_23__bases_orig);
        tmp_QtWidgets$class_creation_23__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_23__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_23__bases);
        tmp_QtWidgets$class_creation_23__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_23__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_23__class_decl_dict);
        tmp_QtWidgets$class_creation_23__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_23__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_23__metaclass);
        tmp_QtWidgets$class_creation_23__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_23__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_23__prepared);
        tmp_QtWidgets$class_creation_23__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_336;
            PyObject *tmp_tuple_element_173;
            PyObject *tmp_mvar_value_42;
            tmp_tuple_element_173 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSlider);

            if (tmp_tuple_element_173 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_42 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractSlider);

                    if (unlikely(tmp_mvar_value_42 == NULL)) {
                        tmp_mvar_value_42 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractSlider);
                    }

                    if (tmp_mvar_value_42 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1649 ], 37, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 332;
                        type_description_2 = "o";
                        goto try_except_handler_134;
                    }

                    tmp_tuple_element_173 = tmp_mvar_value_42;
                    Py_INCREF(tmp_tuple_element_173);
                }
            }

            tmp_assign_source_336 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_336, 0, tmp_tuple_element_173);
            assert(tmp_QtWidgets$class_creation_24__bases_orig == NULL);
            tmp_QtWidgets$class_creation_24__bases_orig = tmp_assign_source_336;
        }
        {
            PyObject *tmp_assign_source_337;
            PyObject *tmp_dircall_arg1_45;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases_orig);
            tmp_dircall_arg1_45 = tmp_QtWidgets$class_creation_24__bases_orig;
            Py_INCREF(tmp_dircall_arg1_45);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_45};
                tmp_assign_source_337 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_337 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            assert(tmp_QtWidgets$class_creation_24__bases == NULL);
            tmp_QtWidgets$class_creation_24__bases = tmp_assign_source_337;
        }
        {
            PyObject *tmp_assign_source_338;
            tmp_assign_source_338 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_24__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_24__class_decl_dict = tmp_assign_source_338;
        }
        {
            PyObject *tmp_assign_source_339;
            PyObject *tmp_metaclass_name_45;
            nuitka_bool tmp_condition_result_267;
            PyObject *tmp_key_name_133;
            PyObject *tmp_dict_name_133;
            PyObject *tmp_dict_name_134;
            PyObject *tmp_key_name_134;
            nuitka_bool tmp_condition_result_268;
            int tmp_truth_name_45;
            PyObject *tmp_type_arg_89;
            PyObject *tmp_subscribed_name_45;
            PyObject *tmp_subscript_name_45;
            PyObject *tmp_bases_name_45;
            tmp_key_name_133 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__class_decl_dict);
            tmp_dict_name_133 = tmp_QtWidgets$class_creation_24__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_133, tmp_key_name_133);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            tmp_condition_result_267 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_267 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_91;
            } else {
                goto condexpr_false_91;
            }
            condexpr_true_91:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__class_decl_dict);
            tmp_dict_name_134 = tmp_QtWidgets$class_creation_24__class_decl_dict;
            tmp_key_name_134 = const_str_plain_metaclass;
            tmp_metaclass_name_45 = DICT_GET_ITEM(tmp_dict_name_134, tmp_key_name_134);
            if (tmp_metaclass_name_45 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            goto condexpr_end_91;
            condexpr_false_91:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases);
            tmp_truth_name_45 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_24__bases);
            if (tmp_truth_name_45 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            tmp_condition_result_268 = tmp_truth_name_45 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_268 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_92;
            } else {
                goto condexpr_false_92;
            }
            condexpr_true_92:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases);
            tmp_subscribed_name_45 = tmp_QtWidgets$class_creation_24__bases;
            tmp_subscript_name_45 = const_int_0;
            tmp_type_arg_89 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_45, tmp_subscript_name_45, 0);
            if (tmp_type_arg_89 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            tmp_metaclass_name_45 = BUILTIN_TYPE1(tmp_type_arg_89);
            Py_DECREF(tmp_type_arg_89);
            if (tmp_metaclass_name_45 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            goto condexpr_end_92;
            condexpr_false_92:;
            tmp_metaclass_name_45 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_45);
            condexpr_end_92:;
            condexpr_end_91:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases);
            tmp_bases_name_45 = tmp_QtWidgets$class_creation_24__bases;
            tmp_assign_source_339 = SELECT_METACLASS(tmp_metaclass_name_45, tmp_bases_name_45);
            Py_DECREF(tmp_metaclass_name_45);
            if (tmp_assign_source_339 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            assert(tmp_QtWidgets$class_creation_24__metaclass == NULL);
            tmp_QtWidgets$class_creation_24__metaclass = tmp_assign_source_339;
        }
        {
            nuitka_bool tmp_condition_result_269;
            PyObject *tmp_key_name_135;
            PyObject *tmp_dict_name_135;
            tmp_key_name_135 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__class_decl_dict);
            tmp_dict_name_135 = tmp_QtWidgets$class_creation_24__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_135, tmp_key_name_135);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            tmp_condition_result_269 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_269 == NUITKA_BOOL_TRUE) {
                goto branch_yes_177;
            } else {
                goto branch_no_177;
            }
            branch_yes_177:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_24__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_134;
            }
            branch_no_177:;
        }
        {
            nuitka_bool tmp_condition_result_270;
            PyObject *tmp_source_name_184;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__metaclass);
            tmp_source_name_184 = tmp_QtWidgets$class_creation_24__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_184, const_str_plain___prepare__);
            tmp_condition_result_270 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_270 == NUITKA_BOOL_TRUE) {
                goto branch_yes_178;
            } else {
                goto branch_no_178;
            }
            branch_yes_178:;
            {
                PyObject *tmp_assign_source_340;
                PyObject *tmp_called_name_90;
                PyObject *tmp_source_name_185;
                PyObject *tmp_args_name_88;
                PyObject *tmp_tuple_element_174;
                PyObject *tmp_kw_name_88;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_24__metaclass);
                tmp_source_name_185 = tmp_QtWidgets$class_creation_24__metaclass;
                tmp_called_name_90 = LOOKUP_ATTRIBUTE(tmp_source_name_185, const_str_plain___prepare__);
                if (tmp_called_name_90 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 332;
                    type_description_2 = "o";
                    goto try_except_handler_134;
                }
                tmp_tuple_element_174 = const_str_plain_QSlider;
                tmp_args_name_88 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_174);
                PyTuple_SET_ITEM(tmp_args_name_88, 0, tmp_tuple_element_174);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases);
                tmp_tuple_element_174 = tmp_QtWidgets$class_creation_24__bases;
                Py_INCREF(tmp_tuple_element_174);
                PyTuple_SET_ITEM(tmp_args_name_88, 1, tmp_tuple_element_174);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_24__class_decl_dict);
                tmp_kw_name_88 = tmp_QtWidgets$class_creation_24__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 332;
                tmp_assign_source_340 = CALL_FUNCTION(tmp_called_name_90, tmp_args_name_88, tmp_kw_name_88);
                Py_DECREF(tmp_called_name_90);
                Py_DECREF(tmp_args_name_88);
                if (tmp_assign_source_340 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 332;
                    type_description_2 = "o";
                    goto try_except_handler_134;
                }
                assert(tmp_QtWidgets$class_creation_24__prepared == NULL);
                tmp_QtWidgets$class_creation_24__prepared = tmp_assign_source_340;
            }
            {
                nuitka_bool tmp_condition_result_271;
                PyObject *tmp_operand_name_45;
                PyObject *tmp_source_name_186;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_24__prepared);
                tmp_source_name_186 = tmp_QtWidgets$class_creation_24__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_186, const_str_plain___getitem__);
                tmp_operand_name_45 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_45);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 332;
                    type_description_2 = "o";
                    goto try_except_handler_134;
                }
                tmp_condition_result_271 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_271 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_179;
                } else {
                    goto branch_no_179;
                }
                branch_yes_179:;
                {
                    PyObject *tmp_raise_type_45;
                    PyObject *tmp_raise_value_45;
                    PyObject *tmp_left_name_45;
                    PyObject *tmp_right_name_45;
                    PyObject *tmp_tuple_element_175;
                    PyObject *tmp_getattr_target_45;
                    PyObject *tmp_getattr_attr_45;
                    PyObject *tmp_getattr_default_45;
                    PyObject *tmp_source_name_187;
                    PyObject *tmp_type_arg_90;
                    tmp_raise_type_45 = PyExc_TypeError;
                    tmp_left_name_45 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_24__metaclass);
                    tmp_getattr_target_45 = tmp_QtWidgets$class_creation_24__metaclass;
                    tmp_getattr_attr_45 = const_str_plain___name__;
                    tmp_getattr_default_45 = const_str_angle_metaclass;
                    tmp_tuple_element_175 = BUILTIN_GETATTR(tmp_getattr_target_45, tmp_getattr_attr_45, tmp_getattr_default_45);
                    if (tmp_tuple_element_175 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 332;
                        type_description_2 = "o";
                        goto try_except_handler_134;
                    }
                    tmp_right_name_45 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_45, 0, tmp_tuple_element_175);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_24__prepared);
                    tmp_type_arg_90 = tmp_QtWidgets$class_creation_24__prepared;
                    tmp_source_name_187 = BUILTIN_TYPE1(tmp_type_arg_90);
                    assert(!(tmp_source_name_187 == NULL));
                    tmp_tuple_element_175 = LOOKUP_ATTRIBUTE(tmp_source_name_187, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_187);
                    if (tmp_tuple_element_175 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_45);

                        exception_lineno = 332;
                        type_description_2 = "o";
                        goto try_except_handler_134;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_45, 1, tmp_tuple_element_175);
                    tmp_raise_value_45 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_45, tmp_right_name_45);
                    Py_DECREF(tmp_right_name_45);
                    if (tmp_raise_value_45 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 332;
                        type_description_2 = "o";
                        goto try_except_handler_134;
                    }
                    exception_type = tmp_raise_type_45;
                    Py_INCREF(tmp_raise_type_45);
                    exception_value = tmp_raise_value_45;
                    exception_lineno = 332;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_134;
                }
                branch_no_179:;
            }
            goto branch_end_178;
            branch_no_178:;
            {
                PyObject *tmp_assign_source_341;
                tmp_assign_source_341 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_24__prepared == NULL);
                tmp_QtWidgets$class_creation_24__prepared = tmp_assign_source_341;
            }
            branch_end_178:;
        }
        {
            PyObject *tmp_set_locals_45;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__prepared);
            tmp_set_locals_45 = tmp_QtWidgets$class_creation_24__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_332 = tmp_set_locals_45;
            Py_INCREF(tmp_set_locals_45);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_332, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 332;
            type_description_2 = "o";
            goto try_except_handler_136;
        }
        tmp_dictset_value = const_str_digest_a1eb9e592f7a093cdedcbaf3ea6c3e9f;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_332, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 332;
            type_description_2 = "o";
            goto try_except_handler_136;
        }
        {
            nuitka_bool tmp_condition_result_272;
            PyObject *tmp_compexpr_left_45;
            PyObject *tmp_compexpr_right_45;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases);
            tmp_compexpr_left_45 = tmp_QtWidgets$class_creation_24__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases_orig);
            tmp_compexpr_right_45 = tmp_QtWidgets$class_creation_24__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_45, tmp_compexpr_right_45);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_136;
            }
            tmp_condition_result_272 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_272 == NUITKA_BOOL_TRUE) {
                goto branch_yes_180;
            } else {
                goto branch_no_180;
            }
            branch_yes_180:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_24__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_332, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_136;
            }
            branch_no_180:;
        }
        {
            PyObject *tmp_assign_source_342;
            PyObject *tmp_called_name_91;
            PyObject *tmp_args_name_89;
            PyObject *tmp_tuple_element_176;
            PyObject *tmp_kw_name_89;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__metaclass);
            tmp_called_name_91 = tmp_QtWidgets$class_creation_24__metaclass;
            tmp_tuple_element_176 = const_str_plain_QSlider;
            tmp_args_name_89 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_176);
            PyTuple_SET_ITEM(tmp_args_name_89, 0, tmp_tuple_element_176);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__bases);
            tmp_tuple_element_176 = tmp_QtWidgets$class_creation_24__bases;
            Py_INCREF(tmp_tuple_element_176);
            PyTuple_SET_ITEM(tmp_args_name_89, 1, tmp_tuple_element_176);
            tmp_tuple_element_176 = locals_PyQt5$uic$Compiler$qtproxies_332;
            Py_INCREF(tmp_tuple_element_176);
            PyTuple_SET_ITEM(tmp_args_name_89, 2, tmp_tuple_element_176);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_24__class_decl_dict);
            tmp_kw_name_89 = tmp_QtWidgets$class_creation_24__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 332;
            tmp_assign_source_342 = CALL_FUNCTION(tmp_called_name_91, tmp_args_name_89, tmp_kw_name_89);
            Py_DECREF(tmp_args_name_89);
            if (tmp_assign_source_342 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_2 = "o";
                goto try_except_handler_136;
            }
            assert(outline_44_var___class__ == NULL);
            outline_44_var___class__ = tmp_assign_source_342;
        }
        CHECK_OBJECT(outline_44_var___class__);
        tmp_dictset_value = outline_44_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_136;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_136:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_332);
        locals_PyQt5$uic$Compiler$qtproxies_332 = NULL;
        goto try_return_handler_135;
        // Exception handler code:
        try_except_handler_136:;
        exception_keeper_type_131 = exception_type;
        exception_keeper_value_131 = exception_value;
        exception_keeper_tb_131 = exception_tb;
        exception_keeper_lineno_131 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_332);
        locals_PyQt5$uic$Compiler$qtproxies_332 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_131;
        exception_value = exception_keeper_value_131;
        exception_tb = exception_keeper_tb_131;
        exception_lineno = exception_keeper_lineno_131;

        goto try_except_handler_135;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_135:;
        CHECK_OBJECT((PyObject *)outline_44_var___class__);
        Py_DECREF(outline_44_var___class__);
        outline_44_var___class__ = NULL;

        goto outline_result_45;
        // Exception handler code:
        try_except_handler_135:;
        exception_keeper_type_132 = exception_type;
        exception_keeper_value_132 = exception_value;
        exception_keeper_tb_132 = exception_tb;
        exception_keeper_lineno_132 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_132;
        exception_value = exception_keeper_value_132;
        exception_tb = exception_keeper_tb_132;
        exception_lineno = exception_keeper_lineno_132;

        goto outline_exception_45;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_45:;
        exception_lineno = 332;
        goto try_except_handler_134;
        outline_result_45:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QSlider, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 332;
            type_description_2 = "o";
            goto try_except_handler_134;
        }
        goto try_end_45;
        // Exception handler code:
        try_except_handler_134:;
        exception_keeper_type_133 = exception_type;
        exception_keeper_value_133 = exception_value;
        exception_keeper_tb_133 = exception_tb;
        exception_keeper_lineno_133 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_24__bases_orig);
        tmp_QtWidgets$class_creation_24__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_24__bases);
        tmp_QtWidgets$class_creation_24__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_24__class_decl_dict);
        tmp_QtWidgets$class_creation_24__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_24__metaclass);
        tmp_QtWidgets$class_creation_24__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_24__prepared);
        tmp_QtWidgets$class_creation_24__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_133;
        exception_value = exception_keeper_value_133;
        exception_tb = exception_keeper_tb_133;
        exception_lineno = exception_keeper_lineno_133;

        goto frame_exception_exit_12;
        // End of try:
        try_end_45:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_24__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_24__bases_orig);
        tmp_QtWidgets$class_creation_24__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_24__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_24__bases);
        tmp_QtWidgets$class_creation_24__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_24__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_24__class_decl_dict);
        tmp_QtWidgets$class_creation_24__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_24__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_24__metaclass);
        tmp_QtWidgets$class_creation_24__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_24__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_24__prepared);
        tmp_QtWidgets$class_creation_24__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_343;
            PyObject *tmp_tuple_element_177;
            PyObject *tmp_mvar_value_43;
            tmp_tuple_element_177 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_177 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_43 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_43 == NULL)) {
                        tmp_mvar_value_43 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_43 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 334;
                        type_description_2 = "o";
                        goto try_except_handler_137;
                    }

                    tmp_tuple_element_177 = tmp_mvar_value_43;
                    Py_INCREF(tmp_tuple_element_177);
                }
            }

            tmp_assign_source_343 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_343, 0, tmp_tuple_element_177);
            assert(tmp_QtWidgets$class_creation_25__bases_orig == NULL);
            tmp_QtWidgets$class_creation_25__bases_orig = tmp_assign_source_343;
        }
        {
            PyObject *tmp_assign_source_344;
            PyObject *tmp_dircall_arg1_46;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases_orig);
            tmp_dircall_arg1_46 = tmp_QtWidgets$class_creation_25__bases_orig;
            Py_INCREF(tmp_dircall_arg1_46);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_46};
                tmp_assign_source_344 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_344 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            assert(tmp_QtWidgets$class_creation_25__bases == NULL);
            tmp_QtWidgets$class_creation_25__bases = tmp_assign_source_344;
        }
        {
            PyObject *tmp_assign_source_345;
            tmp_assign_source_345 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_25__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_25__class_decl_dict = tmp_assign_source_345;
        }
        {
            PyObject *tmp_assign_source_346;
            PyObject *tmp_metaclass_name_46;
            nuitka_bool tmp_condition_result_273;
            PyObject *tmp_key_name_136;
            PyObject *tmp_dict_name_136;
            PyObject *tmp_dict_name_137;
            PyObject *tmp_key_name_137;
            nuitka_bool tmp_condition_result_274;
            int tmp_truth_name_46;
            PyObject *tmp_type_arg_91;
            PyObject *tmp_subscribed_name_46;
            PyObject *tmp_subscript_name_46;
            PyObject *tmp_bases_name_46;
            tmp_key_name_136 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__class_decl_dict);
            tmp_dict_name_136 = tmp_QtWidgets$class_creation_25__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_136, tmp_key_name_136);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            tmp_condition_result_273 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_273 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_93;
            } else {
                goto condexpr_false_93;
            }
            condexpr_true_93:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__class_decl_dict);
            tmp_dict_name_137 = tmp_QtWidgets$class_creation_25__class_decl_dict;
            tmp_key_name_137 = const_str_plain_metaclass;
            tmp_metaclass_name_46 = DICT_GET_ITEM(tmp_dict_name_137, tmp_key_name_137);
            if (tmp_metaclass_name_46 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            goto condexpr_end_93;
            condexpr_false_93:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases);
            tmp_truth_name_46 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_25__bases);
            if (tmp_truth_name_46 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            tmp_condition_result_274 = tmp_truth_name_46 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_274 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_94;
            } else {
                goto condexpr_false_94;
            }
            condexpr_true_94:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases);
            tmp_subscribed_name_46 = tmp_QtWidgets$class_creation_25__bases;
            tmp_subscript_name_46 = const_int_0;
            tmp_type_arg_91 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_46, tmp_subscript_name_46, 0);
            if (tmp_type_arg_91 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            tmp_metaclass_name_46 = BUILTIN_TYPE1(tmp_type_arg_91);
            Py_DECREF(tmp_type_arg_91);
            if (tmp_metaclass_name_46 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            goto condexpr_end_94;
            condexpr_false_94:;
            tmp_metaclass_name_46 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_46);
            condexpr_end_94:;
            condexpr_end_93:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases);
            tmp_bases_name_46 = tmp_QtWidgets$class_creation_25__bases;
            tmp_assign_source_346 = SELECT_METACLASS(tmp_metaclass_name_46, tmp_bases_name_46);
            Py_DECREF(tmp_metaclass_name_46);
            if (tmp_assign_source_346 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            assert(tmp_QtWidgets$class_creation_25__metaclass == NULL);
            tmp_QtWidgets$class_creation_25__metaclass = tmp_assign_source_346;
        }
        {
            nuitka_bool tmp_condition_result_275;
            PyObject *tmp_key_name_138;
            PyObject *tmp_dict_name_138;
            tmp_key_name_138 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__class_decl_dict);
            tmp_dict_name_138 = tmp_QtWidgets$class_creation_25__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_138, tmp_key_name_138);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            tmp_condition_result_275 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_275 == NUITKA_BOOL_TRUE) {
                goto branch_yes_181;
            } else {
                goto branch_no_181;
            }
            branch_yes_181:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_25__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_137;
            }
            branch_no_181:;
        }
        {
            nuitka_bool tmp_condition_result_276;
            PyObject *tmp_source_name_188;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__metaclass);
            tmp_source_name_188 = tmp_QtWidgets$class_creation_25__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_188, const_str_plain___prepare__);
            tmp_condition_result_276 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_276 == NUITKA_BOOL_TRUE) {
                goto branch_yes_182;
            } else {
                goto branch_no_182;
            }
            branch_yes_182:;
            {
                PyObject *tmp_assign_source_347;
                PyObject *tmp_called_name_92;
                PyObject *tmp_source_name_189;
                PyObject *tmp_args_name_90;
                PyObject *tmp_tuple_element_178;
                PyObject *tmp_kw_name_90;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_25__metaclass);
                tmp_source_name_189 = tmp_QtWidgets$class_creation_25__metaclass;
                tmp_called_name_92 = LOOKUP_ATTRIBUTE(tmp_source_name_189, const_str_plain___prepare__);
                if (tmp_called_name_92 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 334;
                    type_description_2 = "o";
                    goto try_except_handler_137;
                }
                tmp_tuple_element_178 = const_str_plain_QMenu;
                tmp_args_name_90 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_178);
                PyTuple_SET_ITEM(tmp_args_name_90, 0, tmp_tuple_element_178);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases);
                tmp_tuple_element_178 = tmp_QtWidgets$class_creation_25__bases;
                Py_INCREF(tmp_tuple_element_178);
                PyTuple_SET_ITEM(tmp_args_name_90, 1, tmp_tuple_element_178);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_25__class_decl_dict);
                tmp_kw_name_90 = tmp_QtWidgets$class_creation_25__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 334;
                tmp_assign_source_347 = CALL_FUNCTION(tmp_called_name_92, tmp_args_name_90, tmp_kw_name_90);
                Py_DECREF(tmp_called_name_92);
                Py_DECREF(tmp_args_name_90);
                if (tmp_assign_source_347 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 334;
                    type_description_2 = "o";
                    goto try_except_handler_137;
                }
                assert(tmp_QtWidgets$class_creation_25__prepared == NULL);
                tmp_QtWidgets$class_creation_25__prepared = tmp_assign_source_347;
            }
            {
                nuitka_bool tmp_condition_result_277;
                PyObject *tmp_operand_name_46;
                PyObject *tmp_source_name_190;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_25__prepared);
                tmp_source_name_190 = tmp_QtWidgets$class_creation_25__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_190, const_str_plain___getitem__);
                tmp_operand_name_46 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_46);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 334;
                    type_description_2 = "o";
                    goto try_except_handler_137;
                }
                tmp_condition_result_277 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_277 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_183;
                } else {
                    goto branch_no_183;
                }
                branch_yes_183:;
                {
                    PyObject *tmp_raise_type_46;
                    PyObject *tmp_raise_value_46;
                    PyObject *tmp_left_name_46;
                    PyObject *tmp_right_name_46;
                    PyObject *tmp_tuple_element_179;
                    PyObject *tmp_getattr_target_46;
                    PyObject *tmp_getattr_attr_46;
                    PyObject *tmp_getattr_default_46;
                    PyObject *tmp_source_name_191;
                    PyObject *tmp_type_arg_92;
                    tmp_raise_type_46 = PyExc_TypeError;
                    tmp_left_name_46 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_25__metaclass);
                    tmp_getattr_target_46 = tmp_QtWidgets$class_creation_25__metaclass;
                    tmp_getattr_attr_46 = const_str_plain___name__;
                    tmp_getattr_default_46 = const_str_angle_metaclass;
                    tmp_tuple_element_179 = BUILTIN_GETATTR(tmp_getattr_target_46, tmp_getattr_attr_46, tmp_getattr_default_46);
                    if (tmp_tuple_element_179 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 334;
                        type_description_2 = "o";
                        goto try_except_handler_137;
                    }
                    tmp_right_name_46 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_46, 0, tmp_tuple_element_179);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_25__prepared);
                    tmp_type_arg_92 = tmp_QtWidgets$class_creation_25__prepared;
                    tmp_source_name_191 = BUILTIN_TYPE1(tmp_type_arg_92);
                    assert(!(tmp_source_name_191 == NULL));
                    tmp_tuple_element_179 = LOOKUP_ATTRIBUTE(tmp_source_name_191, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_191);
                    if (tmp_tuple_element_179 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_46);

                        exception_lineno = 334;
                        type_description_2 = "o";
                        goto try_except_handler_137;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_46, 1, tmp_tuple_element_179);
                    tmp_raise_value_46 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_46, tmp_right_name_46);
                    Py_DECREF(tmp_right_name_46);
                    if (tmp_raise_value_46 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 334;
                        type_description_2 = "o";
                        goto try_except_handler_137;
                    }
                    exception_type = tmp_raise_type_46;
                    Py_INCREF(tmp_raise_type_46);
                    exception_value = tmp_raise_value_46;
                    exception_lineno = 334;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_137;
                }
                branch_no_183:;
            }
            goto branch_end_182;
            branch_no_182:;
            {
                PyObject *tmp_assign_source_348;
                tmp_assign_source_348 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_25__prepared == NULL);
                tmp_QtWidgets$class_creation_25__prepared = tmp_assign_source_348;
            }
            branch_end_182:;
        }
        {
            PyObject *tmp_set_locals_46;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__prepared);
            tmp_set_locals_46 = tmp_QtWidgets$class_creation_25__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_334 = tmp_set_locals_46;
            Py_INCREF(tmp_set_locals_46);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_334, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;
            type_description_2 = "o";
            goto try_except_handler_139;
        }
        tmp_dictset_value = const_str_digest_109e8aab7b60bf26f70d7308849b5aa4;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_334, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;
            type_description_2 = "o";
            goto try_except_handler_139;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_02387612e1579a729119b86a0e26e9e5_15, codeobj_02387612e1579a729119b86a0e26e9e5, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_02387612e1579a729119b86a0e26e9e5_15 = cache_frame_02387612e1579a729119b86a0e26e9e5_15;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_02387612e1579a729119b86a0e26e9e5_15);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_02387612e1579a729119b86a0e26e9e5_15) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_25_menuAction();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_334, const_str_plain_menuAction, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 335;
            type_description_3 = "o";
            goto frame_exception_exit_15;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_02387612e1579a729119b86a0e26e9e5_15);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_13;

        frame_exception_exit_15:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_02387612e1579a729119b86a0e26e9e5_15);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_02387612e1579a729119b86a0e26e9e5_15, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_02387612e1579a729119b86a0e26e9e5_15->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_02387612e1579a729119b86a0e26e9e5_15, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_02387612e1579a729119b86a0e26e9e5_15,
            type_description_3,
            outline_45_var___class__
        );


        // Release cached frame.
        if (frame_02387612e1579a729119b86a0e26e9e5_15 == cache_frame_02387612e1579a729119b86a0e26e9e5_15) {
            Py_DECREF(frame_02387612e1579a729119b86a0e26e9e5_15);
        }
        cache_frame_02387612e1579a729119b86a0e26e9e5_15 = NULL;

        assertFrameObject(frame_02387612e1579a729119b86a0e26e9e5_15);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_14;

        frame_no_exception_13:;
        goto skip_nested_handling_13;
        nested_frame_exit_14:;
        type_description_2 = "o";
        goto try_except_handler_139;
        skip_nested_handling_13:;
        {
            nuitka_bool tmp_condition_result_278;
            PyObject *tmp_compexpr_left_46;
            PyObject *tmp_compexpr_right_46;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases);
            tmp_compexpr_left_46 = tmp_QtWidgets$class_creation_25__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases_orig);
            tmp_compexpr_right_46 = tmp_QtWidgets$class_creation_25__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_46, tmp_compexpr_right_46);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_139;
            }
            tmp_condition_result_278 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_278 == NUITKA_BOOL_TRUE) {
                goto branch_yes_184;
            } else {
                goto branch_no_184;
            }
            branch_yes_184:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_25__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_334, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_139;
            }
            branch_no_184:;
        }
        {
            PyObject *tmp_assign_source_349;
            PyObject *tmp_called_name_93;
            PyObject *tmp_args_name_91;
            PyObject *tmp_tuple_element_180;
            PyObject *tmp_kw_name_91;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__metaclass);
            tmp_called_name_93 = tmp_QtWidgets$class_creation_25__metaclass;
            tmp_tuple_element_180 = const_str_plain_QMenu;
            tmp_args_name_91 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_180);
            PyTuple_SET_ITEM(tmp_args_name_91, 0, tmp_tuple_element_180);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__bases);
            tmp_tuple_element_180 = tmp_QtWidgets$class_creation_25__bases;
            Py_INCREF(tmp_tuple_element_180);
            PyTuple_SET_ITEM(tmp_args_name_91, 1, tmp_tuple_element_180);
            tmp_tuple_element_180 = locals_PyQt5$uic$Compiler$qtproxies_334;
            Py_INCREF(tmp_tuple_element_180);
            PyTuple_SET_ITEM(tmp_args_name_91, 2, tmp_tuple_element_180);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_25__class_decl_dict);
            tmp_kw_name_91 = tmp_QtWidgets$class_creation_25__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 334;
            tmp_assign_source_349 = CALL_FUNCTION(tmp_called_name_93, tmp_args_name_91, tmp_kw_name_91);
            Py_DECREF(tmp_args_name_91);
            if (tmp_assign_source_349 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_2 = "o";
                goto try_except_handler_139;
            }
            assert(outline_45_var___class__ == NULL);
            outline_45_var___class__ = tmp_assign_source_349;
        }
        CHECK_OBJECT(outline_45_var___class__);
        tmp_dictset_value = outline_45_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_139;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_139:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_334);
        locals_PyQt5$uic$Compiler$qtproxies_334 = NULL;
        goto try_return_handler_138;
        // Exception handler code:
        try_except_handler_139:;
        exception_keeper_type_134 = exception_type;
        exception_keeper_value_134 = exception_value;
        exception_keeper_tb_134 = exception_tb;
        exception_keeper_lineno_134 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_334);
        locals_PyQt5$uic$Compiler$qtproxies_334 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_134;
        exception_value = exception_keeper_value_134;
        exception_tb = exception_keeper_tb_134;
        exception_lineno = exception_keeper_lineno_134;

        goto try_except_handler_138;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_138:;
        CHECK_OBJECT((PyObject *)outline_45_var___class__);
        Py_DECREF(outline_45_var___class__);
        outline_45_var___class__ = NULL;

        goto outline_result_46;
        // Exception handler code:
        try_except_handler_138:;
        exception_keeper_type_135 = exception_type;
        exception_keeper_value_135 = exception_value;
        exception_keeper_tb_135 = exception_tb;
        exception_keeper_lineno_135 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_135;
        exception_value = exception_keeper_value_135;
        exception_tb = exception_keeper_tb_135;
        exception_lineno = exception_keeper_lineno_135;

        goto outline_exception_46;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_46:;
        exception_lineno = 334;
        goto try_except_handler_137;
        outline_result_46:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QMenu, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;
            type_description_2 = "o";
            goto try_except_handler_137;
        }
        goto try_end_46;
        // Exception handler code:
        try_except_handler_137:;
        exception_keeper_type_136 = exception_type;
        exception_keeper_value_136 = exception_value;
        exception_keeper_tb_136 = exception_tb;
        exception_keeper_lineno_136 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_25__bases_orig);
        tmp_QtWidgets$class_creation_25__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_25__bases);
        tmp_QtWidgets$class_creation_25__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_25__class_decl_dict);
        tmp_QtWidgets$class_creation_25__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_25__metaclass);
        tmp_QtWidgets$class_creation_25__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_25__prepared);
        tmp_QtWidgets$class_creation_25__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_136;
        exception_value = exception_keeper_value_136;
        exception_tb = exception_keeper_tb_136;
        exception_lineno = exception_keeper_lineno_136;

        goto frame_exception_exit_12;
        // End of try:
        try_end_46:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_25__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_25__bases_orig);
        tmp_QtWidgets$class_creation_25__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_25__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_25__bases);
        tmp_QtWidgets$class_creation_25__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_25__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_25__class_decl_dict);
        tmp_QtWidgets$class_creation_25__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_25__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_25__metaclass);
        tmp_QtWidgets$class_creation_25__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_25__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_25__prepared);
        tmp_QtWidgets$class_creation_25__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_350;
            PyObject *tmp_tuple_element_181;
            PyObject *tmp_mvar_value_44;
            tmp_tuple_element_181 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_181 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_44 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_44 == NULL)) {
                        tmp_mvar_value_44 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_44 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 338;
                        type_description_2 = "o";
                        goto try_except_handler_140;
                    }

                    tmp_tuple_element_181 = tmp_mvar_value_44;
                    Py_INCREF(tmp_tuple_element_181);
                }
            }

            tmp_assign_source_350 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_350, 0, tmp_tuple_element_181);
            assert(tmp_QtWidgets$class_creation_26__bases_orig == NULL);
            tmp_QtWidgets$class_creation_26__bases_orig = tmp_assign_source_350;
        }
        {
            PyObject *tmp_assign_source_351;
            PyObject *tmp_dircall_arg1_47;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases_orig);
            tmp_dircall_arg1_47 = tmp_QtWidgets$class_creation_26__bases_orig;
            Py_INCREF(tmp_dircall_arg1_47);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_47};
                tmp_assign_source_351 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_351 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            assert(tmp_QtWidgets$class_creation_26__bases == NULL);
            tmp_QtWidgets$class_creation_26__bases = tmp_assign_source_351;
        }
        {
            PyObject *tmp_assign_source_352;
            tmp_assign_source_352 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_26__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_26__class_decl_dict = tmp_assign_source_352;
        }
        {
            PyObject *tmp_assign_source_353;
            PyObject *tmp_metaclass_name_47;
            nuitka_bool tmp_condition_result_279;
            PyObject *tmp_key_name_139;
            PyObject *tmp_dict_name_139;
            PyObject *tmp_dict_name_140;
            PyObject *tmp_key_name_140;
            nuitka_bool tmp_condition_result_280;
            int tmp_truth_name_47;
            PyObject *tmp_type_arg_93;
            PyObject *tmp_subscribed_name_47;
            PyObject *tmp_subscript_name_47;
            PyObject *tmp_bases_name_47;
            tmp_key_name_139 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__class_decl_dict);
            tmp_dict_name_139 = tmp_QtWidgets$class_creation_26__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_139, tmp_key_name_139);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            tmp_condition_result_279 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_279 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_95;
            } else {
                goto condexpr_false_95;
            }
            condexpr_true_95:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__class_decl_dict);
            tmp_dict_name_140 = tmp_QtWidgets$class_creation_26__class_decl_dict;
            tmp_key_name_140 = const_str_plain_metaclass;
            tmp_metaclass_name_47 = DICT_GET_ITEM(tmp_dict_name_140, tmp_key_name_140);
            if (tmp_metaclass_name_47 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            goto condexpr_end_95;
            condexpr_false_95:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases);
            tmp_truth_name_47 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_26__bases);
            if (tmp_truth_name_47 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            tmp_condition_result_280 = tmp_truth_name_47 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_280 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_96;
            } else {
                goto condexpr_false_96;
            }
            condexpr_true_96:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases);
            tmp_subscribed_name_47 = tmp_QtWidgets$class_creation_26__bases;
            tmp_subscript_name_47 = const_int_0;
            tmp_type_arg_93 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_47, tmp_subscript_name_47, 0);
            if (tmp_type_arg_93 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            tmp_metaclass_name_47 = BUILTIN_TYPE1(tmp_type_arg_93);
            Py_DECREF(tmp_type_arg_93);
            if (tmp_metaclass_name_47 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            goto condexpr_end_96;
            condexpr_false_96:;
            tmp_metaclass_name_47 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_47);
            condexpr_end_96:;
            condexpr_end_95:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases);
            tmp_bases_name_47 = tmp_QtWidgets$class_creation_26__bases;
            tmp_assign_source_353 = SELECT_METACLASS(tmp_metaclass_name_47, tmp_bases_name_47);
            Py_DECREF(tmp_metaclass_name_47);
            if (tmp_assign_source_353 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            assert(tmp_QtWidgets$class_creation_26__metaclass == NULL);
            tmp_QtWidgets$class_creation_26__metaclass = tmp_assign_source_353;
        }
        {
            nuitka_bool tmp_condition_result_281;
            PyObject *tmp_key_name_141;
            PyObject *tmp_dict_name_141;
            tmp_key_name_141 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__class_decl_dict);
            tmp_dict_name_141 = tmp_QtWidgets$class_creation_26__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_141, tmp_key_name_141);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            tmp_condition_result_281 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_281 == NUITKA_BOOL_TRUE) {
                goto branch_yes_185;
            } else {
                goto branch_no_185;
            }
            branch_yes_185:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_26__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_140;
            }
            branch_no_185:;
        }
        {
            nuitka_bool tmp_condition_result_282;
            PyObject *tmp_source_name_192;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__metaclass);
            tmp_source_name_192 = tmp_QtWidgets$class_creation_26__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_192, const_str_plain___prepare__);
            tmp_condition_result_282 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_282 == NUITKA_BOOL_TRUE) {
                goto branch_yes_186;
            } else {
                goto branch_no_186;
            }
            branch_yes_186:;
            {
                PyObject *tmp_assign_source_354;
                PyObject *tmp_called_name_94;
                PyObject *tmp_source_name_193;
                PyObject *tmp_args_name_92;
                PyObject *tmp_tuple_element_182;
                PyObject *tmp_kw_name_92;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_26__metaclass);
                tmp_source_name_193 = tmp_QtWidgets$class_creation_26__metaclass;
                tmp_called_name_94 = LOOKUP_ATTRIBUTE(tmp_source_name_193, const_str_plain___prepare__);
                if (tmp_called_name_94 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 338;
                    type_description_2 = "o";
                    goto try_except_handler_140;
                }
                tmp_tuple_element_182 = const_str_plain_QTabWidget;
                tmp_args_name_92 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_182);
                PyTuple_SET_ITEM(tmp_args_name_92, 0, tmp_tuple_element_182);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases);
                tmp_tuple_element_182 = tmp_QtWidgets$class_creation_26__bases;
                Py_INCREF(tmp_tuple_element_182);
                PyTuple_SET_ITEM(tmp_args_name_92, 1, tmp_tuple_element_182);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_26__class_decl_dict);
                tmp_kw_name_92 = tmp_QtWidgets$class_creation_26__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 338;
                tmp_assign_source_354 = CALL_FUNCTION(tmp_called_name_94, tmp_args_name_92, tmp_kw_name_92);
                Py_DECREF(tmp_called_name_94);
                Py_DECREF(tmp_args_name_92);
                if (tmp_assign_source_354 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 338;
                    type_description_2 = "o";
                    goto try_except_handler_140;
                }
                assert(tmp_QtWidgets$class_creation_26__prepared == NULL);
                tmp_QtWidgets$class_creation_26__prepared = tmp_assign_source_354;
            }
            {
                nuitka_bool tmp_condition_result_283;
                PyObject *tmp_operand_name_47;
                PyObject *tmp_source_name_194;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_26__prepared);
                tmp_source_name_194 = tmp_QtWidgets$class_creation_26__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_194, const_str_plain___getitem__);
                tmp_operand_name_47 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_47);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 338;
                    type_description_2 = "o";
                    goto try_except_handler_140;
                }
                tmp_condition_result_283 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_283 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_187;
                } else {
                    goto branch_no_187;
                }
                branch_yes_187:;
                {
                    PyObject *tmp_raise_type_47;
                    PyObject *tmp_raise_value_47;
                    PyObject *tmp_left_name_47;
                    PyObject *tmp_right_name_47;
                    PyObject *tmp_tuple_element_183;
                    PyObject *tmp_getattr_target_47;
                    PyObject *tmp_getattr_attr_47;
                    PyObject *tmp_getattr_default_47;
                    PyObject *tmp_source_name_195;
                    PyObject *tmp_type_arg_94;
                    tmp_raise_type_47 = PyExc_TypeError;
                    tmp_left_name_47 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_26__metaclass);
                    tmp_getattr_target_47 = tmp_QtWidgets$class_creation_26__metaclass;
                    tmp_getattr_attr_47 = const_str_plain___name__;
                    tmp_getattr_default_47 = const_str_angle_metaclass;
                    tmp_tuple_element_183 = BUILTIN_GETATTR(tmp_getattr_target_47, tmp_getattr_attr_47, tmp_getattr_default_47);
                    if (tmp_tuple_element_183 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 338;
                        type_description_2 = "o";
                        goto try_except_handler_140;
                    }
                    tmp_right_name_47 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_47, 0, tmp_tuple_element_183);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_26__prepared);
                    tmp_type_arg_94 = tmp_QtWidgets$class_creation_26__prepared;
                    tmp_source_name_195 = BUILTIN_TYPE1(tmp_type_arg_94);
                    assert(!(tmp_source_name_195 == NULL));
                    tmp_tuple_element_183 = LOOKUP_ATTRIBUTE(tmp_source_name_195, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_195);
                    if (tmp_tuple_element_183 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_47);

                        exception_lineno = 338;
                        type_description_2 = "o";
                        goto try_except_handler_140;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_47, 1, tmp_tuple_element_183);
                    tmp_raise_value_47 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_47, tmp_right_name_47);
                    Py_DECREF(tmp_right_name_47);
                    if (tmp_raise_value_47 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 338;
                        type_description_2 = "o";
                        goto try_except_handler_140;
                    }
                    exception_type = tmp_raise_type_47;
                    Py_INCREF(tmp_raise_type_47);
                    exception_value = tmp_raise_value_47;
                    exception_lineno = 338;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_140;
                }
                branch_no_187:;
            }
            goto branch_end_186;
            branch_no_186:;
            {
                PyObject *tmp_assign_source_355;
                tmp_assign_source_355 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_26__prepared == NULL);
                tmp_QtWidgets$class_creation_26__prepared = tmp_assign_source_355;
            }
            branch_end_186:;
        }
        {
            PyObject *tmp_set_locals_47;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__prepared);
            tmp_set_locals_47 = tmp_QtWidgets$class_creation_26__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_338 = tmp_set_locals_47;
            Py_INCREF(tmp_set_locals_47);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_338, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 338;
            type_description_2 = "o";
            goto try_except_handler_142;
        }
        tmp_dictset_value = const_str_digest_eac477c54d6d014c7d44d64755d332df;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_338, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 338;
            type_description_2 = "o";
            goto try_except_handler_142;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_ae620f7e43f56488ccde52f5336808c1_16, codeobj_ae620f7e43f56488ccde52f5336808c1, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_ae620f7e43f56488ccde52f5336808c1_16 = cache_frame_ae620f7e43f56488ccde52f5336808c1_16;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_ae620f7e43f56488ccde52f5336808c1_16);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_ae620f7e43f56488ccde52f5336808c1_16) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_26_addTab();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_338, const_str_plain_addTab, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 339;
            type_description_3 = "o";
            goto frame_exception_exit_16;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_27_indexOf();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_338, const_str_plain_indexOf, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;
            type_description_3 = "o";
            goto frame_exception_exit_16;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_ae620f7e43f56488ccde52f5336808c1_16);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_14;

        frame_exception_exit_16:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_ae620f7e43f56488ccde52f5336808c1_16);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_ae620f7e43f56488ccde52f5336808c1_16, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_ae620f7e43f56488ccde52f5336808c1_16->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_ae620f7e43f56488ccde52f5336808c1_16, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_ae620f7e43f56488ccde52f5336808c1_16,
            type_description_3,
            outline_46_var___class__
        );


        // Release cached frame.
        if (frame_ae620f7e43f56488ccde52f5336808c1_16 == cache_frame_ae620f7e43f56488ccde52f5336808c1_16) {
            Py_DECREF(frame_ae620f7e43f56488ccde52f5336808c1_16);
        }
        cache_frame_ae620f7e43f56488ccde52f5336808c1_16 = NULL;

        assertFrameObject(frame_ae620f7e43f56488ccde52f5336808c1_16);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_15;

        frame_no_exception_14:;
        goto skip_nested_handling_14;
        nested_frame_exit_15:;
        type_description_2 = "o";
        goto try_except_handler_142;
        skip_nested_handling_14:;
        {
            nuitka_bool tmp_condition_result_284;
            PyObject *tmp_compexpr_left_47;
            PyObject *tmp_compexpr_right_47;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases);
            tmp_compexpr_left_47 = tmp_QtWidgets$class_creation_26__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases_orig);
            tmp_compexpr_right_47 = tmp_QtWidgets$class_creation_26__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_47, tmp_compexpr_right_47);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_142;
            }
            tmp_condition_result_284 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_284 == NUITKA_BOOL_TRUE) {
                goto branch_yes_188;
            } else {
                goto branch_no_188;
            }
            branch_yes_188:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_26__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_338, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_142;
            }
            branch_no_188:;
        }
        {
            PyObject *tmp_assign_source_356;
            PyObject *tmp_called_name_95;
            PyObject *tmp_args_name_93;
            PyObject *tmp_tuple_element_184;
            PyObject *tmp_kw_name_93;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__metaclass);
            tmp_called_name_95 = tmp_QtWidgets$class_creation_26__metaclass;
            tmp_tuple_element_184 = const_str_plain_QTabWidget;
            tmp_args_name_93 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_184);
            PyTuple_SET_ITEM(tmp_args_name_93, 0, tmp_tuple_element_184);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__bases);
            tmp_tuple_element_184 = tmp_QtWidgets$class_creation_26__bases;
            Py_INCREF(tmp_tuple_element_184);
            PyTuple_SET_ITEM(tmp_args_name_93, 1, tmp_tuple_element_184);
            tmp_tuple_element_184 = locals_PyQt5$uic$Compiler$qtproxies_338;
            Py_INCREF(tmp_tuple_element_184);
            PyTuple_SET_ITEM(tmp_args_name_93, 2, tmp_tuple_element_184);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_26__class_decl_dict);
            tmp_kw_name_93 = tmp_QtWidgets$class_creation_26__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 338;
            tmp_assign_source_356 = CALL_FUNCTION(tmp_called_name_95, tmp_args_name_93, tmp_kw_name_93);
            Py_DECREF(tmp_args_name_93);
            if (tmp_assign_source_356 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_2 = "o";
                goto try_except_handler_142;
            }
            assert(outline_46_var___class__ == NULL);
            outline_46_var___class__ = tmp_assign_source_356;
        }
        CHECK_OBJECT(outline_46_var___class__);
        tmp_dictset_value = outline_46_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_142;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_142:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_338);
        locals_PyQt5$uic$Compiler$qtproxies_338 = NULL;
        goto try_return_handler_141;
        // Exception handler code:
        try_except_handler_142:;
        exception_keeper_type_137 = exception_type;
        exception_keeper_value_137 = exception_value;
        exception_keeper_tb_137 = exception_tb;
        exception_keeper_lineno_137 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_338);
        locals_PyQt5$uic$Compiler$qtproxies_338 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_137;
        exception_value = exception_keeper_value_137;
        exception_tb = exception_keeper_tb_137;
        exception_lineno = exception_keeper_lineno_137;

        goto try_except_handler_141;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_141:;
        CHECK_OBJECT((PyObject *)outline_46_var___class__);
        Py_DECREF(outline_46_var___class__);
        outline_46_var___class__ = NULL;

        goto outline_result_47;
        // Exception handler code:
        try_except_handler_141:;
        exception_keeper_type_138 = exception_type;
        exception_keeper_value_138 = exception_value;
        exception_keeper_tb_138 = exception_tb;
        exception_keeper_lineno_138 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_138;
        exception_value = exception_keeper_value_138;
        exception_tb = exception_keeper_tb_138;
        exception_lineno = exception_keeper_lineno_138;

        goto outline_exception_47;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_47:;
        exception_lineno = 338;
        goto try_except_handler_140;
        outline_result_47:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTabWidget, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 338;
            type_description_2 = "o";
            goto try_except_handler_140;
        }
        goto try_end_47;
        // Exception handler code:
        try_except_handler_140:;
        exception_keeper_type_139 = exception_type;
        exception_keeper_value_139 = exception_value;
        exception_keeper_tb_139 = exception_tb;
        exception_keeper_lineno_139 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_26__bases_orig);
        tmp_QtWidgets$class_creation_26__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_26__bases);
        tmp_QtWidgets$class_creation_26__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_26__class_decl_dict);
        tmp_QtWidgets$class_creation_26__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_26__metaclass);
        tmp_QtWidgets$class_creation_26__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_26__prepared);
        tmp_QtWidgets$class_creation_26__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_139;
        exception_value = exception_keeper_value_139;
        exception_tb = exception_keeper_tb_139;
        exception_lineno = exception_keeper_lineno_139;

        goto frame_exception_exit_12;
        // End of try:
        try_end_47:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_26__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_26__bases_orig);
        tmp_QtWidgets$class_creation_26__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_26__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_26__bases);
        tmp_QtWidgets$class_creation_26__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_26__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_26__class_decl_dict);
        tmp_QtWidgets$class_creation_26__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_26__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_26__metaclass);
        tmp_QtWidgets$class_creation_26__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_26__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_26__prepared);
        tmp_QtWidgets$class_creation_26__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_357;
            PyObject *tmp_tuple_element_185;
            PyObject *tmp_mvar_value_45;
            tmp_tuple_element_185 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_185 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_45 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_45 == NULL)) {
                        tmp_mvar_value_45 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_45 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 352;
                        type_description_2 = "o";
                        goto try_except_handler_143;
                    }

                    tmp_tuple_element_185 = tmp_mvar_value_45;
                    Py_INCREF(tmp_tuple_element_185);
                }
            }

            tmp_assign_source_357 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_357, 0, tmp_tuple_element_185);
            assert(tmp_QtWidgets$class_creation_27__bases_orig == NULL);
            tmp_QtWidgets$class_creation_27__bases_orig = tmp_assign_source_357;
        }
        {
            PyObject *tmp_assign_source_358;
            PyObject *tmp_dircall_arg1_48;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases_orig);
            tmp_dircall_arg1_48 = tmp_QtWidgets$class_creation_27__bases_orig;
            Py_INCREF(tmp_dircall_arg1_48);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_48};
                tmp_assign_source_358 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_358 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            assert(tmp_QtWidgets$class_creation_27__bases == NULL);
            tmp_QtWidgets$class_creation_27__bases = tmp_assign_source_358;
        }
        {
            PyObject *tmp_assign_source_359;
            tmp_assign_source_359 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_27__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_27__class_decl_dict = tmp_assign_source_359;
        }
        {
            PyObject *tmp_assign_source_360;
            PyObject *tmp_metaclass_name_48;
            nuitka_bool tmp_condition_result_285;
            PyObject *tmp_key_name_142;
            PyObject *tmp_dict_name_142;
            PyObject *tmp_dict_name_143;
            PyObject *tmp_key_name_143;
            nuitka_bool tmp_condition_result_286;
            int tmp_truth_name_48;
            PyObject *tmp_type_arg_95;
            PyObject *tmp_subscribed_name_48;
            PyObject *tmp_subscript_name_48;
            PyObject *tmp_bases_name_48;
            tmp_key_name_142 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__class_decl_dict);
            tmp_dict_name_142 = tmp_QtWidgets$class_creation_27__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_142, tmp_key_name_142);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            tmp_condition_result_285 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_285 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_97;
            } else {
                goto condexpr_false_97;
            }
            condexpr_true_97:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__class_decl_dict);
            tmp_dict_name_143 = tmp_QtWidgets$class_creation_27__class_decl_dict;
            tmp_key_name_143 = const_str_plain_metaclass;
            tmp_metaclass_name_48 = DICT_GET_ITEM(tmp_dict_name_143, tmp_key_name_143);
            if (tmp_metaclass_name_48 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            goto condexpr_end_97;
            condexpr_false_97:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases);
            tmp_truth_name_48 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_27__bases);
            if (tmp_truth_name_48 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            tmp_condition_result_286 = tmp_truth_name_48 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_286 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_98;
            } else {
                goto condexpr_false_98;
            }
            condexpr_true_98:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases);
            tmp_subscribed_name_48 = tmp_QtWidgets$class_creation_27__bases;
            tmp_subscript_name_48 = const_int_0;
            tmp_type_arg_95 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_48, tmp_subscript_name_48, 0);
            if (tmp_type_arg_95 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            tmp_metaclass_name_48 = BUILTIN_TYPE1(tmp_type_arg_95);
            Py_DECREF(tmp_type_arg_95);
            if (tmp_metaclass_name_48 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            goto condexpr_end_98;
            condexpr_false_98:;
            tmp_metaclass_name_48 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_48);
            condexpr_end_98:;
            condexpr_end_97:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases);
            tmp_bases_name_48 = tmp_QtWidgets$class_creation_27__bases;
            tmp_assign_source_360 = SELECT_METACLASS(tmp_metaclass_name_48, tmp_bases_name_48);
            Py_DECREF(tmp_metaclass_name_48);
            if (tmp_assign_source_360 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            assert(tmp_QtWidgets$class_creation_27__metaclass == NULL);
            tmp_QtWidgets$class_creation_27__metaclass = tmp_assign_source_360;
        }
        {
            nuitka_bool tmp_condition_result_287;
            PyObject *tmp_key_name_144;
            PyObject *tmp_dict_name_144;
            tmp_key_name_144 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__class_decl_dict);
            tmp_dict_name_144 = tmp_QtWidgets$class_creation_27__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_144, tmp_key_name_144);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            tmp_condition_result_287 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_287 == NUITKA_BOOL_TRUE) {
                goto branch_yes_189;
            } else {
                goto branch_no_189;
            }
            branch_yes_189:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_27__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_143;
            }
            branch_no_189:;
        }
        {
            nuitka_bool tmp_condition_result_288;
            PyObject *tmp_source_name_196;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__metaclass);
            tmp_source_name_196 = tmp_QtWidgets$class_creation_27__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_196, const_str_plain___prepare__);
            tmp_condition_result_288 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_288 == NUITKA_BOOL_TRUE) {
                goto branch_yes_190;
            } else {
                goto branch_no_190;
            }
            branch_yes_190:;
            {
                PyObject *tmp_assign_source_361;
                PyObject *tmp_called_name_96;
                PyObject *tmp_source_name_197;
                PyObject *tmp_args_name_94;
                PyObject *tmp_tuple_element_186;
                PyObject *tmp_kw_name_94;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_27__metaclass);
                tmp_source_name_197 = tmp_QtWidgets$class_creation_27__metaclass;
                tmp_called_name_96 = LOOKUP_ATTRIBUTE(tmp_source_name_197, const_str_plain___prepare__);
                if (tmp_called_name_96 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 352;
                    type_description_2 = "o";
                    goto try_except_handler_143;
                }
                tmp_tuple_element_186 = const_str_plain_QComboBox;
                tmp_args_name_94 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_186);
                PyTuple_SET_ITEM(tmp_args_name_94, 0, tmp_tuple_element_186);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases);
                tmp_tuple_element_186 = tmp_QtWidgets$class_creation_27__bases;
                Py_INCREF(tmp_tuple_element_186);
                PyTuple_SET_ITEM(tmp_args_name_94, 1, tmp_tuple_element_186);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_27__class_decl_dict);
                tmp_kw_name_94 = tmp_QtWidgets$class_creation_27__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 352;
                tmp_assign_source_361 = CALL_FUNCTION(tmp_called_name_96, tmp_args_name_94, tmp_kw_name_94);
                Py_DECREF(tmp_called_name_96);
                Py_DECREF(tmp_args_name_94);
                if (tmp_assign_source_361 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 352;
                    type_description_2 = "o";
                    goto try_except_handler_143;
                }
                assert(tmp_QtWidgets$class_creation_27__prepared == NULL);
                tmp_QtWidgets$class_creation_27__prepared = tmp_assign_source_361;
            }
            {
                nuitka_bool tmp_condition_result_289;
                PyObject *tmp_operand_name_48;
                PyObject *tmp_source_name_198;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_27__prepared);
                tmp_source_name_198 = tmp_QtWidgets$class_creation_27__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_198, const_str_plain___getitem__);
                tmp_operand_name_48 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_48);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 352;
                    type_description_2 = "o";
                    goto try_except_handler_143;
                }
                tmp_condition_result_289 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_289 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_191;
                } else {
                    goto branch_no_191;
                }
                branch_yes_191:;
                {
                    PyObject *tmp_raise_type_48;
                    PyObject *tmp_raise_value_48;
                    PyObject *tmp_left_name_48;
                    PyObject *tmp_right_name_48;
                    PyObject *tmp_tuple_element_187;
                    PyObject *tmp_getattr_target_48;
                    PyObject *tmp_getattr_attr_48;
                    PyObject *tmp_getattr_default_48;
                    PyObject *tmp_source_name_199;
                    PyObject *tmp_type_arg_96;
                    tmp_raise_type_48 = PyExc_TypeError;
                    tmp_left_name_48 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_27__metaclass);
                    tmp_getattr_target_48 = tmp_QtWidgets$class_creation_27__metaclass;
                    tmp_getattr_attr_48 = const_str_plain___name__;
                    tmp_getattr_default_48 = const_str_angle_metaclass;
                    tmp_tuple_element_187 = BUILTIN_GETATTR(tmp_getattr_target_48, tmp_getattr_attr_48, tmp_getattr_default_48);
                    if (tmp_tuple_element_187 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 352;
                        type_description_2 = "o";
                        goto try_except_handler_143;
                    }
                    tmp_right_name_48 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_48, 0, tmp_tuple_element_187);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_27__prepared);
                    tmp_type_arg_96 = tmp_QtWidgets$class_creation_27__prepared;
                    tmp_source_name_199 = BUILTIN_TYPE1(tmp_type_arg_96);
                    assert(!(tmp_source_name_199 == NULL));
                    tmp_tuple_element_187 = LOOKUP_ATTRIBUTE(tmp_source_name_199, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_199);
                    if (tmp_tuple_element_187 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_48);

                        exception_lineno = 352;
                        type_description_2 = "o";
                        goto try_except_handler_143;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_48, 1, tmp_tuple_element_187);
                    tmp_raise_value_48 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_48, tmp_right_name_48);
                    Py_DECREF(tmp_right_name_48);
                    if (tmp_raise_value_48 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 352;
                        type_description_2 = "o";
                        goto try_except_handler_143;
                    }
                    exception_type = tmp_raise_type_48;
                    Py_INCREF(tmp_raise_type_48);
                    exception_value = tmp_raise_value_48;
                    exception_lineno = 352;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_143;
                }
                branch_no_191:;
            }
            goto branch_end_190;
            branch_no_190:;
            {
                PyObject *tmp_assign_source_362;
                tmp_assign_source_362 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_27__prepared == NULL);
                tmp_QtWidgets$class_creation_27__prepared = tmp_assign_source_362;
            }
            branch_end_190:;
        }
        {
            PyObject *tmp_set_locals_48;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__prepared);
            tmp_set_locals_48 = tmp_QtWidgets$class_creation_27__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_352 = tmp_set_locals_48;
            Py_INCREF(tmp_set_locals_48);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_352, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 352;
            type_description_2 = "o";
            goto try_except_handler_145;
        }
        tmp_dictset_value = const_str_digest_fd7deb4e9f8f7904ec6fcb9c49d99391;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_352, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 352;
            type_description_2 = "o";
            goto try_except_handler_145;
        }
        {
            nuitka_bool tmp_condition_result_290;
            PyObject *tmp_compexpr_left_48;
            PyObject *tmp_compexpr_right_48;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases);
            tmp_compexpr_left_48 = tmp_QtWidgets$class_creation_27__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases_orig);
            tmp_compexpr_right_48 = tmp_QtWidgets$class_creation_27__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_48, tmp_compexpr_right_48);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_145;
            }
            tmp_condition_result_290 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_290 == NUITKA_BOOL_TRUE) {
                goto branch_yes_192;
            } else {
                goto branch_no_192;
            }
            branch_yes_192:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_27__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_352, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_145;
            }
            branch_no_192:;
        }
        {
            PyObject *tmp_assign_source_363;
            PyObject *tmp_called_name_97;
            PyObject *tmp_args_name_95;
            PyObject *tmp_tuple_element_188;
            PyObject *tmp_kw_name_95;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__metaclass);
            tmp_called_name_97 = tmp_QtWidgets$class_creation_27__metaclass;
            tmp_tuple_element_188 = const_str_plain_QComboBox;
            tmp_args_name_95 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_188);
            PyTuple_SET_ITEM(tmp_args_name_95, 0, tmp_tuple_element_188);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__bases);
            tmp_tuple_element_188 = tmp_QtWidgets$class_creation_27__bases;
            Py_INCREF(tmp_tuple_element_188);
            PyTuple_SET_ITEM(tmp_args_name_95, 1, tmp_tuple_element_188);
            tmp_tuple_element_188 = locals_PyQt5$uic$Compiler$qtproxies_352;
            Py_INCREF(tmp_tuple_element_188);
            PyTuple_SET_ITEM(tmp_args_name_95, 2, tmp_tuple_element_188);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_27__class_decl_dict);
            tmp_kw_name_95 = tmp_QtWidgets$class_creation_27__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 352;
            tmp_assign_source_363 = CALL_FUNCTION(tmp_called_name_97, tmp_args_name_95, tmp_kw_name_95);
            Py_DECREF(tmp_args_name_95);
            if (tmp_assign_source_363 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_2 = "o";
                goto try_except_handler_145;
            }
            assert(outline_47_var___class__ == NULL);
            outline_47_var___class__ = tmp_assign_source_363;
        }
        CHECK_OBJECT(outline_47_var___class__);
        tmp_dictset_value = outline_47_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_145;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_145:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_352);
        locals_PyQt5$uic$Compiler$qtproxies_352 = NULL;
        goto try_return_handler_144;
        // Exception handler code:
        try_except_handler_145:;
        exception_keeper_type_140 = exception_type;
        exception_keeper_value_140 = exception_value;
        exception_keeper_tb_140 = exception_tb;
        exception_keeper_lineno_140 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_352);
        locals_PyQt5$uic$Compiler$qtproxies_352 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_140;
        exception_value = exception_keeper_value_140;
        exception_tb = exception_keeper_tb_140;
        exception_lineno = exception_keeper_lineno_140;

        goto try_except_handler_144;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_144:;
        CHECK_OBJECT((PyObject *)outline_47_var___class__);
        Py_DECREF(outline_47_var___class__);
        outline_47_var___class__ = NULL;

        goto outline_result_48;
        // Exception handler code:
        try_except_handler_144:;
        exception_keeper_type_141 = exception_type;
        exception_keeper_value_141 = exception_value;
        exception_keeper_tb_141 = exception_tb;
        exception_keeper_lineno_141 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_141;
        exception_value = exception_keeper_value_141;
        exception_tb = exception_keeper_tb_141;
        exception_lineno = exception_keeper_lineno_141;

        goto outline_exception_48;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_48:;
        exception_lineno = 352;
        goto try_except_handler_143;
        outline_result_48:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QComboBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 352;
            type_description_2 = "o";
            goto try_except_handler_143;
        }
        goto try_end_48;
        // Exception handler code:
        try_except_handler_143:;
        exception_keeper_type_142 = exception_type;
        exception_keeper_value_142 = exception_value;
        exception_keeper_tb_142 = exception_tb;
        exception_keeper_lineno_142 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_27__bases_orig);
        tmp_QtWidgets$class_creation_27__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_27__bases);
        tmp_QtWidgets$class_creation_27__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_27__class_decl_dict);
        tmp_QtWidgets$class_creation_27__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_27__metaclass);
        tmp_QtWidgets$class_creation_27__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_27__prepared);
        tmp_QtWidgets$class_creation_27__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_142;
        exception_value = exception_keeper_value_142;
        exception_tb = exception_keeper_tb_142;
        exception_lineno = exception_keeper_lineno_142;

        goto frame_exception_exit_12;
        // End of try:
        try_end_48:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_27__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_27__bases_orig);
        tmp_QtWidgets$class_creation_27__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_27__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_27__bases);
        tmp_QtWidgets$class_creation_27__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_27__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_27__class_decl_dict);
        tmp_QtWidgets$class_creation_27__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_27__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_27__metaclass);
        tmp_QtWidgets$class_creation_27__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_27__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_27__prepared);
        tmp_QtWidgets$class_creation_27__prepared = NULL;

        {
            PyObject *tmp_assign_source_364;
            PyObject *tmp_tuple_element_189;
            tmp_tuple_element_189 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QComboBox);

            if (tmp_tuple_element_189 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1686 ], 31, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 353;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_189 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_364 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_364, 0, tmp_tuple_element_189);
            assert(tmp_QtWidgets$class_creation_28__bases_orig == NULL);
            tmp_QtWidgets$class_creation_28__bases_orig = tmp_assign_source_364;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_365;
            PyObject *tmp_dircall_arg1_49;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases_orig);
            tmp_dircall_arg1_49 = tmp_QtWidgets$class_creation_28__bases_orig;
            Py_INCREF(tmp_dircall_arg1_49);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_49};
                tmp_assign_source_365 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_365 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            assert(tmp_QtWidgets$class_creation_28__bases == NULL);
            tmp_QtWidgets$class_creation_28__bases = tmp_assign_source_365;
        }
        {
            PyObject *tmp_assign_source_366;
            tmp_assign_source_366 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_28__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_28__class_decl_dict = tmp_assign_source_366;
        }
        {
            PyObject *tmp_assign_source_367;
            PyObject *tmp_metaclass_name_49;
            nuitka_bool tmp_condition_result_291;
            PyObject *tmp_key_name_145;
            PyObject *tmp_dict_name_145;
            PyObject *tmp_dict_name_146;
            PyObject *tmp_key_name_146;
            nuitka_bool tmp_condition_result_292;
            int tmp_truth_name_49;
            PyObject *tmp_type_arg_97;
            PyObject *tmp_subscribed_name_49;
            PyObject *tmp_subscript_name_49;
            PyObject *tmp_bases_name_49;
            tmp_key_name_145 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__class_decl_dict);
            tmp_dict_name_145 = tmp_QtWidgets$class_creation_28__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_145, tmp_key_name_145);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            tmp_condition_result_291 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_291 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_99;
            } else {
                goto condexpr_false_99;
            }
            condexpr_true_99:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__class_decl_dict);
            tmp_dict_name_146 = tmp_QtWidgets$class_creation_28__class_decl_dict;
            tmp_key_name_146 = const_str_plain_metaclass;
            tmp_metaclass_name_49 = DICT_GET_ITEM(tmp_dict_name_146, tmp_key_name_146);
            if (tmp_metaclass_name_49 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            goto condexpr_end_99;
            condexpr_false_99:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases);
            tmp_truth_name_49 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_28__bases);
            if (tmp_truth_name_49 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            tmp_condition_result_292 = tmp_truth_name_49 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_292 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_100;
            } else {
                goto condexpr_false_100;
            }
            condexpr_true_100:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases);
            tmp_subscribed_name_49 = tmp_QtWidgets$class_creation_28__bases;
            tmp_subscript_name_49 = const_int_0;
            tmp_type_arg_97 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_49, tmp_subscript_name_49, 0);
            if (tmp_type_arg_97 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            tmp_metaclass_name_49 = BUILTIN_TYPE1(tmp_type_arg_97);
            Py_DECREF(tmp_type_arg_97);
            if (tmp_metaclass_name_49 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            goto condexpr_end_100;
            condexpr_false_100:;
            tmp_metaclass_name_49 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_49);
            condexpr_end_100:;
            condexpr_end_99:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases);
            tmp_bases_name_49 = tmp_QtWidgets$class_creation_28__bases;
            tmp_assign_source_367 = SELECT_METACLASS(tmp_metaclass_name_49, tmp_bases_name_49);
            Py_DECREF(tmp_metaclass_name_49);
            if (tmp_assign_source_367 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            assert(tmp_QtWidgets$class_creation_28__metaclass == NULL);
            tmp_QtWidgets$class_creation_28__metaclass = tmp_assign_source_367;
        }
        {
            nuitka_bool tmp_condition_result_293;
            PyObject *tmp_key_name_147;
            PyObject *tmp_dict_name_147;
            tmp_key_name_147 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__class_decl_dict);
            tmp_dict_name_147 = tmp_QtWidgets$class_creation_28__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_147, tmp_key_name_147);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            tmp_condition_result_293 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_293 == NUITKA_BOOL_TRUE) {
                goto branch_yes_193;
            } else {
                goto branch_no_193;
            }
            branch_yes_193:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_28__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_146;
            }
            branch_no_193:;
        }
        {
            nuitka_bool tmp_condition_result_294;
            PyObject *tmp_source_name_200;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__metaclass);
            tmp_source_name_200 = tmp_QtWidgets$class_creation_28__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_200, const_str_plain___prepare__);
            tmp_condition_result_294 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_294 == NUITKA_BOOL_TRUE) {
                goto branch_yes_194;
            } else {
                goto branch_no_194;
            }
            branch_yes_194:;
            {
                PyObject *tmp_assign_source_368;
                PyObject *tmp_called_name_98;
                PyObject *tmp_source_name_201;
                PyObject *tmp_args_name_96;
                PyObject *tmp_tuple_element_190;
                PyObject *tmp_kw_name_96;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_28__metaclass);
                tmp_source_name_201 = tmp_QtWidgets$class_creation_28__metaclass;
                tmp_called_name_98 = LOOKUP_ATTRIBUTE(tmp_source_name_201, const_str_plain___prepare__);
                if (tmp_called_name_98 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 353;
                    type_description_2 = "o";
                    goto try_except_handler_146;
                }
                tmp_tuple_element_190 = const_str_plain_QFontComboBox;
                tmp_args_name_96 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_190);
                PyTuple_SET_ITEM(tmp_args_name_96, 0, tmp_tuple_element_190);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases);
                tmp_tuple_element_190 = tmp_QtWidgets$class_creation_28__bases;
                Py_INCREF(tmp_tuple_element_190);
                PyTuple_SET_ITEM(tmp_args_name_96, 1, tmp_tuple_element_190);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_28__class_decl_dict);
                tmp_kw_name_96 = tmp_QtWidgets$class_creation_28__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 353;
                tmp_assign_source_368 = CALL_FUNCTION(tmp_called_name_98, tmp_args_name_96, tmp_kw_name_96);
                Py_DECREF(tmp_called_name_98);
                Py_DECREF(tmp_args_name_96);
                if (tmp_assign_source_368 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 353;
                    type_description_2 = "o";
                    goto try_except_handler_146;
                }
                assert(tmp_QtWidgets$class_creation_28__prepared == NULL);
                tmp_QtWidgets$class_creation_28__prepared = tmp_assign_source_368;
            }
            {
                nuitka_bool tmp_condition_result_295;
                PyObject *tmp_operand_name_49;
                PyObject *tmp_source_name_202;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_28__prepared);
                tmp_source_name_202 = tmp_QtWidgets$class_creation_28__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_202, const_str_plain___getitem__);
                tmp_operand_name_49 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_49);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 353;
                    type_description_2 = "o";
                    goto try_except_handler_146;
                }
                tmp_condition_result_295 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_295 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_195;
                } else {
                    goto branch_no_195;
                }
                branch_yes_195:;
                {
                    PyObject *tmp_raise_type_49;
                    PyObject *tmp_raise_value_49;
                    PyObject *tmp_left_name_49;
                    PyObject *tmp_right_name_49;
                    PyObject *tmp_tuple_element_191;
                    PyObject *tmp_getattr_target_49;
                    PyObject *tmp_getattr_attr_49;
                    PyObject *tmp_getattr_default_49;
                    PyObject *tmp_source_name_203;
                    PyObject *tmp_type_arg_98;
                    tmp_raise_type_49 = PyExc_TypeError;
                    tmp_left_name_49 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_28__metaclass);
                    tmp_getattr_target_49 = tmp_QtWidgets$class_creation_28__metaclass;
                    tmp_getattr_attr_49 = const_str_plain___name__;
                    tmp_getattr_default_49 = const_str_angle_metaclass;
                    tmp_tuple_element_191 = BUILTIN_GETATTR(tmp_getattr_target_49, tmp_getattr_attr_49, tmp_getattr_default_49);
                    if (tmp_tuple_element_191 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 353;
                        type_description_2 = "o";
                        goto try_except_handler_146;
                    }
                    tmp_right_name_49 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_49, 0, tmp_tuple_element_191);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_28__prepared);
                    tmp_type_arg_98 = tmp_QtWidgets$class_creation_28__prepared;
                    tmp_source_name_203 = BUILTIN_TYPE1(tmp_type_arg_98);
                    assert(!(tmp_source_name_203 == NULL));
                    tmp_tuple_element_191 = LOOKUP_ATTRIBUTE(tmp_source_name_203, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_203);
                    if (tmp_tuple_element_191 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_49);

                        exception_lineno = 353;
                        type_description_2 = "o";
                        goto try_except_handler_146;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_49, 1, tmp_tuple_element_191);
                    tmp_raise_value_49 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_49, tmp_right_name_49);
                    Py_DECREF(tmp_right_name_49);
                    if (tmp_raise_value_49 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 353;
                        type_description_2 = "o";
                        goto try_except_handler_146;
                    }
                    exception_type = tmp_raise_type_49;
                    Py_INCREF(tmp_raise_type_49);
                    exception_value = tmp_raise_value_49;
                    exception_lineno = 353;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_146;
                }
                branch_no_195:;
            }
            goto branch_end_194;
            branch_no_194:;
            {
                PyObject *tmp_assign_source_369;
                tmp_assign_source_369 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_28__prepared == NULL);
                tmp_QtWidgets$class_creation_28__prepared = tmp_assign_source_369;
            }
            branch_end_194:;
        }
        {
            PyObject *tmp_set_locals_49;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__prepared);
            tmp_set_locals_49 = tmp_QtWidgets$class_creation_28__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_353 = tmp_set_locals_49;
            Py_INCREF(tmp_set_locals_49);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_353, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;
            type_description_2 = "o";
            goto try_except_handler_148;
        }
        tmp_dictset_value = const_str_digest_e102df442c0b3e2a83bcb2f08ac5aea4;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_353, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;
            type_description_2 = "o";
            goto try_except_handler_148;
        }
        {
            nuitka_bool tmp_condition_result_296;
            PyObject *tmp_compexpr_left_49;
            PyObject *tmp_compexpr_right_49;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases);
            tmp_compexpr_left_49 = tmp_QtWidgets$class_creation_28__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases_orig);
            tmp_compexpr_right_49 = tmp_QtWidgets$class_creation_28__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_49, tmp_compexpr_right_49);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_148;
            }
            tmp_condition_result_296 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_296 == NUITKA_BOOL_TRUE) {
                goto branch_yes_196;
            } else {
                goto branch_no_196;
            }
            branch_yes_196:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_28__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_353, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_148;
            }
            branch_no_196:;
        }
        {
            PyObject *tmp_assign_source_370;
            PyObject *tmp_called_name_99;
            PyObject *tmp_args_name_97;
            PyObject *tmp_tuple_element_192;
            PyObject *tmp_kw_name_97;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__metaclass);
            tmp_called_name_99 = tmp_QtWidgets$class_creation_28__metaclass;
            tmp_tuple_element_192 = const_str_plain_QFontComboBox;
            tmp_args_name_97 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_192);
            PyTuple_SET_ITEM(tmp_args_name_97, 0, tmp_tuple_element_192);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__bases);
            tmp_tuple_element_192 = tmp_QtWidgets$class_creation_28__bases;
            Py_INCREF(tmp_tuple_element_192);
            PyTuple_SET_ITEM(tmp_args_name_97, 1, tmp_tuple_element_192);
            tmp_tuple_element_192 = locals_PyQt5$uic$Compiler$qtproxies_353;
            Py_INCREF(tmp_tuple_element_192);
            PyTuple_SET_ITEM(tmp_args_name_97, 2, tmp_tuple_element_192);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_28__class_decl_dict);
            tmp_kw_name_97 = tmp_QtWidgets$class_creation_28__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 353;
            tmp_assign_source_370 = CALL_FUNCTION(tmp_called_name_99, tmp_args_name_97, tmp_kw_name_97);
            Py_DECREF(tmp_args_name_97);
            if (tmp_assign_source_370 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_2 = "o";
                goto try_except_handler_148;
            }
            assert(outline_48_var___class__ == NULL);
            outline_48_var___class__ = tmp_assign_source_370;
        }
        CHECK_OBJECT(outline_48_var___class__);
        tmp_dictset_value = outline_48_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_148;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_148:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_353);
        locals_PyQt5$uic$Compiler$qtproxies_353 = NULL;
        goto try_return_handler_147;
        // Exception handler code:
        try_except_handler_148:;
        exception_keeper_type_143 = exception_type;
        exception_keeper_value_143 = exception_value;
        exception_keeper_tb_143 = exception_tb;
        exception_keeper_lineno_143 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_353);
        locals_PyQt5$uic$Compiler$qtproxies_353 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_143;
        exception_value = exception_keeper_value_143;
        exception_tb = exception_keeper_tb_143;
        exception_lineno = exception_keeper_lineno_143;

        goto try_except_handler_147;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_147:;
        CHECK_OBJECT((PyObject *)outline_48_var___class__);
        Py_DECREF(outline_48_var___class__);
        outline_48_var___class__ = NULL;

        goto outline_result_49;
        // Exception handler code:
        try_except_handler_147:;
        exception_keeper_type_144 = exception_type;
        exception_keeper_value_144 = exception_value;
        exception_keeper_tb_144 = exception_tb;
        exception_keeper_lineno_144 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_144;
        exception_value = exception_keeper_value_144;
        exception_tb = exception_keeper_tb_144;
        exception_lineno = exception_keeper_lineno_144;

        goto outline_exception_49;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_49:;
        exception_lineno = 353;
        goto try_except_handler_146;
        outline_result_49:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFontComboBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;
            type_description_2 = "o";
            goto try_except_handler_146;
        }
        goto try_end_49;
        // Exception handler code:
        try_except_handler_146:;
        exception_keeper_type_145 = exception_type;
        exception_keeper_value_145 = exception_value;
        exception_keeper_tb_145 = exception_tb;
        exception_keeper_lineno_145 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_28__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_28__bases_orig);
        tmp_QtWidgets$class_creation_28__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_28__bases);
        tmp_QtWidgets$class_creation_28__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_28__class_decl_dict);
        tmp_QtWidgets$class_creation_28__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_28__metaclass);
        tmp_QtWidgets$class_creation_28__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_28__prepared);
        tmp_QtWidgets$class_creation_28__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_145;
        exception_value = exception_keeper_value_145;
        exception_tb = exception_keeper_tb_145;
        exception_lineno = exception_keeper_lineno_145;

        goto frame_exception_exit_12;
        // End of try:
        try_end_49:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_28__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_28__bases_orig);
        tmp_QtWidgets$class_creation_28__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_28__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_28__bases);
        tmp_QtWidgets$class_creation_28__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_28__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_28__class_decl_dict);
        tmp_QtWidgets$class_creation_28__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_28__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_28__metaclass);
        tmp_QtWidgets$class_creation_28__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_28__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_28__prepared);
        tmp_QtWidgets$class_creation_28__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_371;
            PyObject *tmp_tuple_element_193;
            PyObject *tmp_mvar_value_46;
            tmp_tuple_element_193 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_193 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_46 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_46 == NULL)) {
                        tmp_mvar_value_46 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_46 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 355;
                        type_description_2 = "o";
                        goto try_except_handler_149;
                    }

                    tmp_tuple_element_193 = tmp_mvar_value_46;
                    Py_INCREF(tmp_tuple_element_193);
                }
            }

            tmp_assign_source_371 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_371, 0, tmp_tuple_element_193);
            assert(tmp_QtWidgets$class_creation_29__bases_orig == NULL);
            tmp_QtWidgets$class_creation_29__bases_orig = tmp_assign_source_371;
        }
        {
            PyObject *tmp_assign_source_372;
            PyObject *tmp_dircall_arg1_50;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases_orig);
            tmp_dircall_arg1_50 = tmp_QtWidgets$class_creation_29__bases_orig;
            Py_INCREF(tmp_dircall_arg1_50);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_50};
                tmp_assign_source_372 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_372 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            assert(tmp_QtWidgets$class_creation_29__bases == NULL);
            tmp_QtWidgets$class_creation_29__bases = tmp_assign_source_372;
        }
        {
            PyObject *tmp_assign_source_373;
            tmp_assign_source_373 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_29__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_29__class_decl_dict = tmp_assign_source_373;
        }
        {
            PyObject *tmp_assign_source_374;
            PyObject *tmp_metaclass_name_50;
            nuitka_bool tmp_condition_result_297;
            PyObject *tmp_key_name_148;
            PyObject *tmp_dict_name_148;
            PyObject *tmp_dict_name_149;
            PyObject *tmp_key_name_149;
            nuitka_bool tmp_condition_result_298;
            int tmp_truth_name_50;
            PyObject *tmp_type_arg_99;
            PyObject *tmp_subscribed_name_50;
            PyObject *tmp_subscript_name_50;
            PyObject *tmp_bases_name_50;
            tmp_key_name_148 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__class_decl_dict);
            tmp_dict_name_148 = tmp_QtWidgets$class_creation_29__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_148, tmp_key_name_148);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            tmp_condition_result_297 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_297 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_101;
            } else {
                goto condexpr_false_101;
            }
            condexpr_true_101:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__class_decl_dict);
            tmp_dict_name_149 = tmp_QtWidgets$class_creation_29__class_decl_dict;
            tmp_key_name_149 = const_str_plain_metaclass;
            tmp_metaclass_name_50 = DICT_GET_ITEM(tmp_dict_name_149, tmp_key_name_149);
            if (tmp_metaclass_name_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            goto condexpr_end_101;
            condexpr_false_101:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases);
            tmp_truth_name_50 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_29__bases);
            if (tmp_truth_name_50 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            tmp_condition_result_298 = tmp_truth_name_50 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_298 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_102;
            } else {
                goto condexpr_false_102;
            }
            condexpr_true_102:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases);
            tmp_subscribed_name_50 = tmp_QtWidgets$class_creation_29__bases;
            tmp_subscript_name_50 = const_int_0;
            tmp_type_arg_99 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_50, tmp_subscript_name_50, 0);
            if (tmp_type_arg_99 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            tmp_metaclass_name_50 = BUILTIN_TYPE1(tmp_type_arg_99);
            Py_DECREF(tmp_type_arg_99);
            if (tmp_metaclass_name_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            goto condexpr_end_102;
            condexpr_false_102:;
            tmp_metaclass_name_50 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_50);
            condexpr_end_102:;
            condexpr_end_101:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases);
            tmp_bases_name_50 = tmp_QtWidgets$class_creation_29__bases;
            tmp_assign_source_374 = SELECT_METACLASS(tmp_metaclass_name_50, tmp_bases_name_50);
            Py_DECREF(tmp_metaclass_name_50);
            if (tmp_assign_source_374 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            assert(tmp_QtWidgets$class_creation_29__metaclass == NULL);
            tmp_QtWidgets$class_creation_29__metaclass = tmp_assign_source_374;
        }
        {
            nuitka_bool tmp_condition_result_299;
            PyObject *tmp_key_name_150;
            PyObject *tmp_dict_name_150;
            tmp_key_name_150 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__class_decl_dict);
            tmp_dict_name_150 = tmp_QtWidgets$class_creation_29__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_150, tmp_key_name_150);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            tmp_condition_result_299 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_299 == NUITKA_BOOL_TRUE) {
                goto branch_yes_197;
            } else {
                goto branch_no_197;
            }
            branch_yes_197:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_29__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_149;
            }
            branch_no_197:;
        }
        {
            nuitka_bool tmp_condition_result_300;
            PyObject *tmp_source_name_204;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__metaclass);
            tmp_source_name_204 = tmp_QtWidgets$class_creation_29__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_204, const_str_plain___prepare__);
            tmp_condition_result_300 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_300 == NUITKA_BOOL_TRUE) {
                goto branch_yes_198;
            } else {
                goto branch_no_198;
            }
            branch_yes_198:;
            {
                PyObject *tmp_assign_source_375;
                PyObject *tmp_called_name_100;
                PyObject *tmp_source_name_205;
                PyObject *tmp_args_name_98;
                PyObject *tmp_tuple_element_194;
                PyObject *tmp_kw_name_98;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_29__metaclass);
                tmp_source_name_205 = tmp_QtWidgets$class_creation_29__metaclass;
                tmp_called_name_100 = LOOKUP_ATTRIBUTE(tmp_source_name_205, const_str_plain___prepare__);
                if (tmp_called_name_100 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 355;
                    type_description_2 = "o";
                    goto try_except_handler_149;
                }
                tmp_tuple_element_194 = const_str_plain_QAbstractSpinBox;
                tmp_args_name_98 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_194);
                PyTuple_SET_ITEM(tmp_args_name_98, 0, tmp_tuple_element_194);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases);
                tmp_tuple_element_194 = tmp_QtWidgets$class_creation_29__bases;
                Py_INCREF(tmp_tuple_element_194);
                PyTuple_SET_ITEM(tmp_args_name_98, 1, tmp_tuple_element_194);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_29__class_decl_dict);
                tmp_kw_name_98 = tmp_QtWidgets$class_creation_29__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 355;
                tmp_assign_source_375 = CALL_FUNCTION(tmp_called_name_100, tmp_args_name_98, tmp_kw_name_98);
                Py_DECREF(tmp_called_name_100);
                Py_DECREF(tmp_args_name_98);
                if (tmp_assign_source_375 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 355;
                    type_description_2 = "o";
                    goto try_except_handler_149;
                }
                assert(tmp_QtWidgets$class_creation_29__prepared == NULL);
                tmp_QtWidgets$class_creation_29__prepared = tmp_assign_source_375;
            }
            {
                nuitka_bool tmp_condition_result_301;
                PyObject *tmp_operand_name_50;
                PyObject *tmp_source_name_206;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_29__prepared);
                tmp_source_name_206 = tmp_QtWidgets$class_creation_29__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_206, const_str_plain___getitem__);
                tmp_operand_name_50 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_50);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 355;
                    type_description_2 = "o";
                    goto try_except_handler_149;
                }
                tmp_condition_result_301 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_301 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_199;
                } else {
                    goto branch_no_199;
                }
                branch_yes_199:;
                {
                    PyObject *tmp_raise_type_50;
                    PyObject *tmp_raise_value_50;
                    PyObject *tmp_left_name_50;
                    PyObject *tmp_right_name_50;
                    PyObject *tmp_tuple_element_195;
                    PyObject *tmp_getattr_target_50;
                    PyObject *tmp_getattr_attr_50;
                    PyObject *tmp_getattr_default_50;
                    PyObject *tmp_source_name_207;
                    PyObject *tmp_type_arg_100;
                    tmp_raise_type_50 = PyExc_TypeError;
                    tmp_left_name_50 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_29__metaclass);
                    tmp_getattr_target_50 = tmp_QtWidgets$class_creation_29__metaclass;
                    tmp_getattr_attr_50 = const_str_plain___name__;
                    tmp_getattr_default_50 = const_str_angle_metaclass;
                    tmp_tuple_element_195 = BUILTIN_GETATTR(tmp_getattr_target_50, tmp_getattr_attr_50, tmp_getattr_default_50);
                    if (tmp_tuple_element_195 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 355;
                        type_description_2 = "o";
                        goto try_except_handler_149;
                    }
                    tmp_right_name_50 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_50, 0, tmp_tuple_element_195);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_29__prepared);
                    tmp_type_arg_100 = tmp_QtWidgets$class_creation_29__prepared;
                    tmp_source_name_207 = BUILTIN_TYPE1(tmp_type_arg_100);
                    assert(!(tmp_source_name_207 == NULL));
                    tmp_tuple_element_195 = LOOKUP_ATTRIBUTE(tmp_source_name_207, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_207);
                    if (tmp_tuple_element_195 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_50);

                        exception_lineno = 355;
                        type_description_2 = "o";
                        goto try_except_handler_149;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_50, 1, tmp_tuple_element_195);
                    tmp_raise_value_50 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_50, tmp_right_name_50);
                    Py_DECREF(tmp_right_name_50);
                    if (tmp_raise_value_50 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 355;
                        type_description_2 = "o";
                        goto try_except_handler_149;
                    }
                    exception_type = tmp_raise_type_50;
                    Py_INCREF(tmp_raise_type_50);
                    exception_value = tmp_raise_value_50;
                    exception_lineno = 355;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_149;
                }
                branch_no_199:;
            }
            goto branch_end_198;
            branch_no_198:;
            {
                PyObject *tmp_assign_source_376;
                tmp_assign_source_376 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_29__prepared == NULL);
                tmp_QtWidgets$class_creation_29__prepared = tmp_assign_source_376;
            }
            branch_end_198:;
        }
        {
            PyObject *tmp_set_locals_50;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__prepared);
            tmp_set_locals_50 = tmp_QtWidgets$class_creation_29__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_355 = tmp_set_locals_50;
            Py_INCREF(tmp_set_locals_50);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_355, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 355;
            type_description_2 = "o";
            goto try_except_handler_151;
        }
        tmp_dictset_value = const_str_digest_038c02b78d2bf3e82c328228df37ca6d;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_355, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 355;
            type_description_2 = "o";
            goto try_except_handler_151;
        }
        {
            nuitka_bool tmp_condition_result_302;
            PyObject *tmp_compexpr_left_50;
            PyObject *tmp_compexpr_right_50;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases);
            tmp_compexpr_left_50 = tmp_QtWidgets$class_creation_29__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases_orig);
            tmp_compexpr_right_50 = tmp_QtWidgets$class_creation_29__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_50, tmp_compexpr_right_50);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_151;
            }
            tmp_condition_result_302 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_302 == NUITKA_BOOL_TRUE) {
                goto branch_yes_200;
            } else {
                goto branch_no_200;
            }
            branch_yes_200:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_29__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_355, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_151;
            }
            branch_no_200:;
        }
        {
            PyObject *tmp_assign_source_377;
            PyObject *tmp_called_name_101;
            PyObject *tmp_args_name_99;
            PyObject *tmp_tuple_element_196;
            PyObject *tmp_kw_name_99;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__metaclass);
            tmp_called_name_101 = tmp_QtWidgets$class_creation_29__metaclass;
            tmp_tuple_element_196 = const_str_plain_QAbstractSpinBox;
            tmp_args_name_99 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_196);
            PyTuple_SET_ITEM(tmp_args_name_99, 0, tmp_tuple_element_196);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__bases);
            tmp_tuple_element_196 = tmp_QtWidgets$class_creation_29__bases;
            Py_INCREF(tmp_tuple_element_196);
            PyTuple_SET_ITEM(tmp_args_name_99, 1, tmp_tuple_element_196);
            tmp_tuple_element_196 = locals_PyQt5$uic$Compiler$qtproxies_355;
            Py_INCREF(tmp_tuple_element_196);
            PyTuple_SET_ITEM(tmp_args_name_99, 2, tmp_tuple_element_196);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_29__class_decl_dict);
            tmp_kw_name_99 = tmp_QtWidgets$class_creation_29__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 355;
            tmp_assign_source_377 = CALL_FUNCTION(tmp_called_name_101, tmp_args_name_99, tmp_kw_name_99);
            Py_DECREF(tmp_args_name_99);
            if (tmp_assign_source_377 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_2 = "o";
                goto try_except_handler_151;
            }
            assert(outline_49_var___class__ == NULL);
            outline_49_var___class__ = tmp_assign_source_377;
        }
        CHECK_OBJECT(outline_49_var___class__);
        tmp_dictset_value = outline_49_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_151;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_151:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_355);
        locals_PyQt5$uic$Compiler$qtproxies_355 = NULL;
        goto try_return_handler_150;
        // Exception handler code:
        try_except_handler_151:;
        exception_keeper_type_146 = exception_type;
        exception_keeper_value_146 = exception_value;
        exception_keeper_tb_146 = exception_tb;
        exception_keeper_lineno_146 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_355);
        locals_PyQt5$uic$Compiler$qtproxies_355 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_146;
        exception_value = exception_keeper_value_146;
        exception_tb = exception_keeper_tb_146;
        exception_lineno = exception_keeper_lineno_146;

        goto try_except_handler_150;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_150:;
        CHECK_OBJECT((PyObject *)outline_49_var___class__);
        Py_DECREF(outline_49_var___class__);
        outline_49_var___class__ = NULL;

        goto outline_result_50;
        // Exception handler code:
        try_except_handler_150:;
        exception_keeper_type_147 = exception_type;
        exception_keeper_value_147 = exception_value;
        exception_keeper_tb_147 = exception_tb;
        exception_keeper_lineno_147 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_147;
        exception_value = exception_keeper_value_147;
        exception_tb = exception_keeper_tb_147;
        exception_lineno = exception_keeper_lineno_147;

        goto outline_exception_50;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_50:;
        exception_lineno = 355;
        goto try_except_handler_149;
        outline_result_50:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSpinBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 355;
            type_description_2 = "o";
            goto try_except_handler_149;
        }
        goto try_end_50;
        // Exception handler code:
        try_except_handler_149:;
        exception_keeper_type_148 = exception_type;
        exception_keeper_value_148 = exception_value;
        exception_keeper_tb_148 = exception_tb;
        exception_keeper_lineno_148 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_29__bases_orig);
        tmp_QtWidgets$class_creation_29__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_29__bases);
        tmp_QtWidgets$class_creation_29__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_29__class_decl_dict);
        tmp_QtWidgets$class_creation_29__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_29__metaclass);
        tmp_QtWidgets$class_creation_29__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_29__prepared);
        tmp_QtWidgets$class_creation_29__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_148;
        exception_value = exception_keeper_value_148;
        exception_tb = exception_keeper_tb_148;
        exception_lineno = exception_keeper_lineno_148;

        goto frame_exception_exit_12;
        // End of try:
        try_end_50:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_29__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_29__bases_orig);
        tmp_QtWidgets$class_creation_29__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_29__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_29__bases);
        tmp_QtWidgets$class_creation_29__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_29__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_29__class_decl_dict);
        tmp_QtWidgets$class_creation_29__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_29__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_29__metaclass);
        tmp_QtWidgets$class_creation_29__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_29__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_29__prepared);
        tmp_QtWidgets$class_creation_29__prepared = NULL;

        {
            PyObject *tmp_assign_source_378;
            PyObject *tmp_tuple_element_197;
            tmp_tuple_element_197 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSpinBox);

            if (tmp_tuple_element_197 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1717 ], 38, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 356;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_197 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_378 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_378, 0, tmp_tuple_element_197);
            assert(tmp_QtWidgets$class_creation_30__bases_orig == NULL);
            tmp_QtWidgets$class_creation_30__bases_orig = tmp_assign_source_378;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_379;
            PyObject *tmp_dircall_arg1_51;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases_orig);
            tmp_dircall_arg1_51 = tmp_QtWidgets$class_creation_30__bases_orig;
            Py_INCREF(tmp_dircall_arg1_51);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_51};
                tmp_assign_source_379 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_379 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            assert(tmp_QtWidgets$class_creation_30__bases == NULL);
            tmp_QtWidgets$class_creation_30__bases = tmp_assign_source_379;
        }
        {
            PyObject *tmp_assign_source_380;
            tmp_assign_source_380 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_30__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_30__class_decl_dict = tmp_assign_source_380;
        }
        {
            PyObject *tmp_assign_source_381;
            PyObject *tmp_metaclass_name_51;
            nuitka_bool tmp_condition_result_303;
            PyObject *tmp_key_name_151;
            PyObject *tmp_dict_name_151;
            PyObject *tmp_dict_name_152;
            PyObject *tmp_key_name_152;
            nuitka_bool tmp_condition_result_304;
            int tmp_truth_name_51;
            PyObject *tmp_type_arg_101;
            PyObject *tmp_subscribed_name_51;
            PyObject *tmp_subscript_name_51;
            PyObject *tmp_bases_name_51;
            tmp_key_name_151 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__class_decl_dict);
            tmp_dict_name_151 = tmp_QtWidgets$class_creation_30__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_151, tmp_key_name_151);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            tmp_condition_result_303 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_303 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_103;
            } else {
                goto condexpr_false_103;
            }
            condexpr_true_103:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__class_decl_dict);
            tmp_dict_name_152 = tmp_QtWidgets$class_creation_30__class_decl_dict;
            tmp_key_name_152 = const_str_plain_metaclass;
            tmp_metaclass_name_51 = DICT_GET_ITEM(tmp_dict_name_152, tmp_key_name_152);
            if (tmp_metaclass_name_51 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            goto condexpr_end_103;
            condexpr_false_103:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases);
            tmp_truth_name_51 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_30__bases);
            if (tmp_truth_name_51 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            tmp_condition_result_304 = tmp_truth_name_51 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_304 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_104;
            } else {
                goto condexpr_false_104;
            }
            condexpr_true_104:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases);
            tmp_subscribed_name_51 = tmp_QtWidgets$class_creation_30__bases;
            tmp_subscript_name_51 = const_int_0;
            tmp_type_arg_101 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_51, tmp_subscript_name_51, 0);
            if (tmp_type_arg_101 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            tmp_metaclass_name_51 = BUILTIN_TYPE1(tmp_type_arg_101);
            Py_DECREF(tmp_type_arg_101);
            if (tmp_metaclass_name_51 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            goto condexpr_end_104;
            condexpr_false_104:;
            tmp_metaclass_name_51 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_51);
            condexpr_end_104:;
            condexpr_end_103:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases);
            tmp_bases_name_51 = tmp_QtWidgets$class_creation_30__bases;
            tmp_assign_source_381 = SELECT_METACLASS(tmp_metaclass_name_51, tmp_bases_name_51);
            Py_DECREF(tmp_metaclass_name_51);
            if (tmp_assign_source_381 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            assert(tmp_QtWidgets$class_creation_30__metaclass == NULL);
            tmp_QtWidgets$class_creation_30__metaclass = tmp_assign_source_381;
        }
        {
            nuitka_bool tmp_condition_result_305;
            PyObject *tmp_key_name_153;
            PyObject *tmp_dict_name_153;
            tmp_key_name_153 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__class_decl_dict);
            tmp_dict_name_153 = tmp_QtWidgets$class_creation_30__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_153, tmp_key_name_153);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            tmp_condition_result_305 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_305 == NUITKA_BOOL_TRUE) {
                goto branch_yes_201;
            } else {
                goto branch_no_201;
            }
            branch_yes_201:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_30__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_152;
            }
            branch_no_201:;
        }
        {
            nuitka_bool tmp_condition_result_306;
            PyObject *tmp_source_name_208;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__metaclass);
            tmp_source_name_208 = tmp_QtWidgets$class_creation_30__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_208, const_str_plain___prepare__);
            tmp_condition_result_306 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_306 == NUITKA_BOOL_TRUE) {
                goto branch_yes_202;
            } else {
                goto branch_no_202;
            }
            branch_yes_202:;
            {
                PyObject *tmp_assign_source_382;
                PyObject *tmp_called_name_102;
                PyObject *tmp_source_name_209;
                PyObject *tmp_args_name_100;
                PyObject *tmp_tuple_element_198;
                PyObject *tmp_kw_name_100;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_30__metaclass);
                tmp_source_name_209 = tmp_QtWidgets$class_creation_30__metaclass;
                tmp_called_name_102 = LOOKUP_ATTRIBUTE(tmp_source_name_209, const_str_plain___prepare__);
                if (tmp_called_name_102 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 356;
                    type_description_2 = "o";
                    goto try_except_handler_152;
                }
                tmp_tuple_element_198 = const_str_plain_QDoubleSpinBox;
                tmp_args_name_100 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_198);
                PyTuple_SET_ITEM(tmp_args_name_100, 0, tmp_tuple_element_198);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases);
                tmp_tuple_element_198 = tmp_QtWidgets$class_creation_30__bases;
                Py_INCREF(tmp_tuple_element_198);
                PyTuple_SET_ITEM(tmp_args_name_100, 1, tmp_tuple_element_198);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_30__class_decl_dict);
                tmp_kw_name_100 = tmp_QtWidgets$class_creation_30__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 356;
                tmp_assign_source_382 = CALL_FUNCTION(tmp_called_name_102, tmp_args_name_100, tmp_kw_name_100);
                Py_DECREF(tmp_called_name_102);
                Py_DECREF(tmp_args_name_100);
                if (tmp_assign_source_382 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 356;
                    type_description_2 = "o";
                    goto try_except_handler_152;
                }
                assert(tmp_QtWidgets$class_creation_30__prepared == NULL);
                tmp_QtWidgets$class_creation_30__prepared = tmp_assign_source_382;
            }
            {
                nuitka_bool tmp_condition_result_307;
                PyObject *tmp_operand_name_51;
                PyObject *tmp_source_name_210;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_30__prepared);
                tmp_source_name_210 = tmp_QtWidgets$class_creation_30__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_210, const_str_plain___getitem__);
                tmp_operand_name_51 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_51);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 356;
                    type_description_2 = "o";
                    goto try_except_handler_152;
                }
                tmp_condition_result_307 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_307 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_203;
                } else {
                    goto branch_no_203;
                }
                branch_yes_203:;
                {
                    PyObject *tmp_raise_type_51;
                    PyObject *tmp_raise_value_51;
                    PyObject *tmp_left_name_51;
                    PyObject *tmp_right_name_51;
                    PyObject *tmp_tuple_element_199;
                    PyObject *tmp_getattr_target_51;
                    PyObject *tmp_getattr_attr_51;
                    PyObject *tmp_getattr_default_51;
                    PyObject *tmp_source_name_211;
                    PyObject *tmp_type_arg_102;
                    tmp_raise_type_51 = PyExc_TypeError;
                    tmp_left_name_51 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_30__metaclass);
                    tmp_getattr_target_51 = tmp_QtWidgets$class_creation_30__metaclass;
                    tmp_getattr_attr_51 = const_str_plain___name__;
                    tmp_getattr_default_51 = const_str_angle_metaclass;
                    tmp_tuple_element_199 = BUILTIN_GETATTR(tmp_getattr_target_51, tmp_getattr_attr_51, tmp_getattr_default_51);
                    if (tmp_tuple_element_199 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 356;
                        type_description_2 = "o";
                        goto try_except_handler_152;
                    }
                    tmp_right_name_51 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_51, 0, tmp_tuple_element_199);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_30__prepared);
                    tmp_type_arg_102 = tmp_QtWidgets$class_creation_30__prepared;
                    tmp_source_name_211 = BUILTIN_TYPE1(tmp_type_arg_102);
                    assert(!(tmp_source_name_211 == NULL));
                    tmp_tuple_element_199 = LOOKUP_ATTRIBUTE(tmp_source_name_211, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_211);
                    if (tmp_tuple_element_199 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_51);

                        exception_lineno = 356;
                        type_description_2 = "o";
                        goto try_except_handler_152;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_51, 1, tmp_tuple_element_199);
                    tmp_raise_value_51 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_51, tmp_right_name_51);
                    Py_DECREF(tmp_right_name_51);
                    if (tmp_raise_value_51 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 356;
                        type_description_2 = "o";
                        goto try_except_handler_152;
                    }
                    exception_type = tmp_raise_type_51;
                    Py_INCREF(tmp_raise_type_51);
                    exception_value = tmp_raise_value_51;
                    exception_lineno = 356;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_152;
                }
                branch_no_203:;
            }
            goto branch_end_202;
            branch_no_202:;
            {
                PyObject *tmp_assign_source_383;
                tmp_assign_source_383 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_30__prepared == NULL);
                tmp_QtWidgets$class_creation_30__prepared = tmp_assign_source_383;
            }
            branch_end_202:;
        }
        {
            PyObject *tmp_set_locals_51;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__prepared);
            tmp_set_locals_51 = tmp_QtWidgets$class_creation_30__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_356 = tmp_set_locals_51;
            Py_INCREF(tmp_set_locals_51);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_356, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 356;
            type_description_2 = "o";
            goto try_except_handler_154;
        }
        tmp_dictset_value = const_str_digest_524f735692c9d133d79579eca359ac14;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_356, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 356;
            type_description_2 = "o";
            goto try_except_handler_154;
        }
        {
            nuitka_bool tmp_condition_result_308;
            PyObject *tmp_compexpr_left_51;
            PyObject *tmp_compexpr_right_51;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases);
            tmp_compexpr_left_51 = tmp_QtWidgets$class_creation_30__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases_orig);
            tmp_compexpr_right_51 = tmp_QtWidgets$class_creation_30__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_51, tmp_compexpr_right_51);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_154;
            }
            tmp_condition_result_308 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_308 == NUITKA_BOOL_TRUE) {
                goto branch_yes_204;
            } else {
                goto branch_no_204;
            }
            branch_yes_204:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_30__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_356, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_154;
            }
            branch_no_204:;
        }
        {
            PyObject *tmp_assign_source_384;
            PyObject *tmp_called_name_103;
            PyObject *tmp_args_name_101;
            PyObject *tmp_tuple_element_200;
            PyObject *tmp_kw_name_101;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__metaclass);
            tmp_called_name_103 = tmp_QtWidgets$class_creation_30__metaclass;
            tmp_tuple_element_200 = const_str_plain_QDoubleSpinBox;
            tmp_args_name_101 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_200);
            PyTuple_SET_ITEM(tmp_args_name_101, 0, tmp_tuple_element_200);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__bases);
            tmp_tuple_element_200 = tmp_QtWidgets$class_creation_30__bases;
            Py_INCREF(tmp_tuple_element_200);
            PyTuple_SET_ITEM(tmp_args_name_101, 1, tmp_tuple_element_200);
            tmp_tuple_element_200 = locals_PyQt5$uic$Compiler$qtproxies_356;
            Py_INCREF(tmp_tuple_element_200);
            PyTuple_SET_ITEM(tmp_args_name_101, 2, tmp_tuple_element_200);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_30__class_decl_dict);
            tmp_kw_name_101 = tmp_QtWidgets$class_creation_30__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 356;
            tmp_assign_source_384 = CALL_FUNCTION(tmp_called_name_103, tmp_args_name_101, tmp_kw_name_101);
            Py_DECREF(tmp_args_name_101);
            if (tmp_assign_source_384 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_2 = "o";
                goto try_except_handler_154;
            }
            assert(outline_50_var___class__ == NULL);
            outline_50_var___class__ = tmp_assign_source_384;
        }
        CHECK_OBJECT(outline_50_var___class__);
        tmp_dictset_value = outline_50_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_154;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_154:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_356);
        locals_PyQt5$uic$Compiler$qtproxies_356 = NULL;
        goto try_return_handler_153;
        // Exception handler code:
        try_except_handler_154:;
        exception_keeper_type_149 = exception_type;
        exception_keeper_value_149 = exception_value;
        exception_keeper_tb_149 = exception_tb;
        exception_keeper_lineno_149 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_356);
        locals_PyQt5$uic$Compiler$qtproxies_356 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_149;
        exception_value = exception_keeper_value_149;
        exception_tb = exception_keeper_tb_149;
        exception_lineno = exception_keeper_lineno_149;

        goto try_except_handler_153;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_153:;
        CHECK_OBJECT((PyObject *)outline_50_var___class__);
        Py_DECREF(outline_50_var___class__);
        outline_50_var___class__ = NULL;

        goto outline_result_51;
        // Exception handler code:
        try_except_handler_153:;
        exception_keeper_type_150 = exception_type;
        exception_keeper_value_150 = exception_value;
        exception_keeper_tb_150 = exception_tb;
        exception_keeper_lineno_150 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_150;
        exception_value = exception_keeper_value_150;
        exception_tb = exception_keeper_tb_150;
        exception_lineno = exception_keeper_lineno_150;

        goto outline_exception_51;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_51:;
        exception_lineno = 356;
        goto try_except_handler_152;
        outline_result_51:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDoubleSpinBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 356;
            type_description_2 = "o";
            goto try_except_handler_152;
        }
        goto try_end_51;
        // Exception handler code:
        try_except_handler_152:;
        exception_keeper_type_151 = exception_type;
        exception_keeper_value_151 = exception_value;
        exception_keeper_tb_151 = exception_tb;
        exception_keeper_lineno_151 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_30__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_30__bases_orig);
        tmp_QtWidgets$class_creation_30__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_30__bases);
        tmp_QtWidgets$class_creation_30__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_30__class_decl_dict);
        tmp_QtWidgets$class_creation_30__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_30__metaclass);
        tmp_QtWidgets$class_creation_30__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_30__prepared);
        tmp_QtWidgets$class_creation_30__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_151;
        exception_value = exception_keeper_value_151;
        exception_tb = exception_keeper_tb_151;
        exception_lineno = exception_keeper_lineno_151;

        goto frame_exception_exit_12;
        // End of try:
        try_end_51:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_30__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_30__bases_orig);
        tmp_QtWidgets$class_creation_30__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_30__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_30__bases);
        tmp_QtWidgets$class_creation_30__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_30__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_30__class_decl_dict);
        tmp_QtWidgets$class_creation_30__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_30__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_30__metaclass);
        tmp_QtWidgets$class_creation_30__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_30__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_30__prepared);
        tmp_QtWidgets$class_creation_30__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_385;
            PyObject *tmp_tuple_element_201;
            PyObject *tmp_mvar_value_47;
            tmp_tuple_element_201 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSpinBox);

            if (tmp_tuple_element_201 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_47 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractSpinBox);

                    if (unlikely(tmp_mvar_value_47 == NULL)) {
                        tmp_mvar_value_47 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractSpinBox);
                    }

                    if (tmp_mvar_value_47 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1717 ], 38, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 357;
                        type_description_2 = "o";
                        goto try_except_handler_155;
                    }

                    tmp_tuple_element_201 = tmp_mvar_value_47;
                    Py_INCREF(tmp_tuple_element_201);
                }
            }

            tmp_assign_source_385 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_385, 0, tmp_tuple_element_201);
            assert(tmp_QtWidgets$class_creation_31__bases_orig == NULL);
            tmp_QtWidgets$class_creation_31__bases_orig = tmp_assign_source_385;
        }
        {
            PyObject *tmp_assign_source_386;
            PyObject *tmp_dircall_arg1_52;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases_orig);
            tmp_dircall_arg1_52 = tmp_QtWidgets$class_creation_31__bases_orig;
            Py_INCREF(tmp_dircall_arg1_52);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_52};
                tmp_assign_source_386 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_386 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            assert(tmp_QtWidgets$class_creation_31__bases == NULL);
            tmp_QtWidgets$class_creation_31__bases = tmp_assign_source_386;
        }
        {
            PyObject *tmp_assign_source_387;
            tmp_assign_source_387 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_31__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_31__class_decl_dict = tmp_assign_source_387;
        }
        {
            PyObject *tmp_assign_source_388;
            PyObject *tmp_metaclass_name_52;
            nuitka_bool tmp_condition_result_309;
            PyObject *tmp_key_name_154;
            PyObject *tmp_dict_name_154;
            PyObject *tmp_dict_name_155;
            PyObject *tmp_key_name_155;
            nuitka_bool tmp_condition_result_310;
            int tmp_truth_name_52;
            PyObject *tmp_type_arg_103;
            PyObject *tmp_subscribed_name_52;
            PyObject *tmp_subscript_name_52;
            PyObject *tmp_bases_name_52;
            tmp_key_name_154 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__class_decl_dict);
            tmp_dict_name_154 = tmp_QtWidgets$class_creation_31__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_154, tmp_key_name_154);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            tmp_condition_result_309 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_309 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_105;
            } else {
                goto condexpr_false_105;
            }
            condexpr_true_105:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__class_decl_dict);
            tmp_dict_name_155 = tmp_QtWidgets$class_creation_31__class_decl_dict;
            tmp_key_name_155 = const_str_plain_metaclass;
            tmp_metaclass_name_52 = DICT_GET_ITEM(tmp_dict_name_155, tmp_key_name_155);
            if (tmp_metaclass_name_52 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            goto condexpr_end_105;
            condexpr_false_105:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases);
            tmp_truth_name_52 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_31__bases);
            if (tmp_truth_name_52 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            tmp_condition_result_310 = tmp_truth_name_52 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_310 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_106;
            } else {
                goto condexpr_false_106;
            }
            condexpr_true_106:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases);
            tmp_subscribed_name_52 = tmp_QtWidgets$class_creation_31__bases;
            tmp_subscript_name_52 = const_int_0;
            tmp_type_arg_103 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_52, tmp_subscript_name_52, 0);
            if (tmp_type_arg_103 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            tmp_metaclass_name_52 = BUILTIN_TYPE1(tmp_type_arg_103);
            Py_DECREF(tmp_type_arg_103);
            if (tmp_metaclass_name_52 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            goto condexpr_end_106;
            condexpr_false_106:;
            tmp_metaclass_name_52 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_52);
            condexpr_end_106:;
            condexpr_end_105:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases);
            tmp_bases_name_52 = tmp_QtWidgets$class_creation_31__bases;
            tmp_assign_source_388 = SELECT_METACLASS(tmp_metaclass_name_52, tmp_bases_name_52);
            Py_DECREF(tmp_metaclass_name_52);
            if (tmp_assign_source_388 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            assert(tmp_QtWidgets$class_creation_31__metaclass == NULL);
            tmp_QtWidgets$class_creation_31__metaclass = tmp_assign_source_388;
        }
        {
            nuitka_bool tmp_condition_result_311;
            PyObject *tmp_key_name_156;
            PyObject *tmp_dict_name_156;
            tmp_key_name_156 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__class_decl_dict);
            tmp_dict_name_156 = tmp_QtWidgets$class_creation_31__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_156, tmp_key_name_156);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            tmp_condition_result_311 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_311 == NUITKA_BOOL_TRUE) {
                goto branch_yes_205;
            } else {
                goto branch_no_205;
            }
            branch_yes_205:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_31__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_155;
            }
            branch_no_205:;
        }
        {
            nuitka_bool tmp_condition_result_312;
            PyObject *tmp_source_name_212;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__metaclass);
            tmp_source_name_212 = tmp_QtWidgets$class_creation_31__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_212, const_str_plain___prepare__);
            tmp_condition_result_312 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_312 == NUITKA_BOOL_TRUE) {
                goto branch_yes_206;
            } else {
                goto branch_no_206;
            }
            branch_yes_206:;
            {
                PyObject *tmp_assign_source_389;
                PyObject *tmp_called_name_104;
                PyObject *tmp_source_name_213;
                PyObject *tmp_args_name_102;
                PyObject *tmp_tuple_element_202;
                PyObject *tmp_kw_name_102;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_31__metaclass);
                tmp_source_name_213 = tmp_QtWidgets$class_creation_31__metaclass;
                tmp_called_name_104 = LOOKUP_ATTRIBUTE(tmp_source_name_213, const_str_plain___prepare__);
                if (tmp_called_name_104 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 357;
                    type_description_2 = "o";
                    goto try_except_handler_155;
                }
                tmp_tuple_element_202 = const_str_plain_QSpinBox;
                tmp_args_name_102 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_202);
                PyTuple_SET_ITEM(tmp_args_name_102, 0, tmp_tuple_element_202);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases);
                tmp_tuple_element_202 = tmp_QtWidgets$class_creation_31__bases;
                Py_INCREF(tmp_tuple_element_202);
                PyTuple_SET_ITEM(tmp_args_name_102, 1, tmp_tuple_element_202);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_31__class_decl_dict);
                tmp_kw_name_102 = tmp_QtWidgets$class_creation_31__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 357;
                tmp_assign_source_389 = CALL_FUNCTION(tmp_called_name_104, tmp_args_name_102, tmp_kw_name_102);
                Py_DECREF(tmp_called_name_104);
                Py_DECREF(tmp_args_name_102);
                if (tmp_assign_source_389 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 357;
                    type_description_2 = "o";
                    goto try_except_handler_155;
                }
                assert(tmp_QtWidgets$class_creation_31__prepared == NULL);
                tmp_QtWidgets$class_creation_31__prepared = tmp_assign_source_389;
            }
            {
                nuitka_bool tmp_condition_result_313;
                PyObject *tmp_operand_name_52;
                PyObject *tmp_source_name_214;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_31__prepared);
                tmp_source_name_214 = tmp_QtWidgets$class_creation_31__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_214, const_str_plain___getitem__);
                tmp_operand_name_52 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_52);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 357;
                    type_description_2 = "o";
                    goto try_except_handler_155;
                }
                tmp_condition_result_313 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_313 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_207;
                } else {
                    goto branch_no_207;
                }
                branch_yes_207:;
                {
                    PyObject *tmp_raise_type_52;
                    PyObject *tmp_raise_value_52;
                    PyObject *tmp_left_name_52;
                    PyObject *tmp_right_name_52;
                    PyObject *tmp_tuple_element_203;
                    PyObject *tmp_getattr_target_52;
                    PyObject *tmp_getattr_attr_52;
                    PyObject *tmp_getattr_default_52;
                    PyObject *tmp_source_name_215;
                    PyObject *tmp_type_arg_104;
                    tmp_raise_type_52 = PyExc_TypeError;
                    tmp_left_name_52 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_31__metaclass);
                    tmp_getattr_target_52 = tmp_QtWidgets$class_creation_31__metaclass;
                    tmp_getattr_attr_52 = const_str_plain___name__;
                    tmp_getattr_default_52 = const_str_angle_metaclass;
                    tmp_tuple_element_203 = BUILTIN_GETATTR(tmp_getattr_target_52, tmp_getattr_attr_52, tmp_getattr_default_52);
                    if (tmp_tuple_element_203 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 357;
                        type_description_2 = "o";
                        goto try_except_handler_155;
                    }
                    tmp_right_name_52 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_52, 0, tmp_tuple_element_203);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_31__prepared);
                    tmp_type_arg_104 = tmp_QtWidgets$class_creation_31__prepared;
                    tmp_source_name_215 = BUILTIN_TYPE1(tmp_type_arg_104);
                    assert(!(tmp_source_name_215 == NULL));
                    tmp_tuple_element_203 = LOOKUP_ATTRIBUTE(tmp_source_name_215, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_215);
                    if (tmp_tuple_element_203 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_52);

                        exception_lineno = 357;
                        type_description_2 = "o";
                        goto try_except_handler_155;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_52, 1, tmp_tuple_element_203);
                    tmp_raise_value_52 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_52, tmp_right_name_52);
                    Py_DECREF(tmp_right_name_52);
                    if (tmp_raise_value_52 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 357;
                        type_description_2 = "o";
                        goto try_except_handler_155;
                    }
                    exception_type = tmp_raise_type_52;
                    Py_INCREF(tmp_raise_type_52);
                    exception_value = tmp_raise_value_52;
                    exception_lineno = 357;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_155;
                }
                branch_no_207:;
            }
            goto branch_end_206;
            branch_no_206:;
            {
                PyObject *tmp_assign_source_390;
                tmp_assign_source_390 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_31__prepared == NULL);
                tmp_QtWidgets$class_creation_31__prepared = tmp_assign_source_390;
            }
            branch_end_206:;
        }
        {
            PyObject *tmp_set_locals_52;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__prepared);
            tmp_set_locals_52 = tmp_QtWidgets$class_creation_31__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_357 = tmp_set_locals_52;
            Py_INCREF(tmp_set_locals_52);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_357, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;
            type_description_2 = "o";
            goto try_except_handler_157;
        }
        tmp_dictset_value = const_str_digest_b548001e5497aabe31fe7a9ae5edffd7;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_357, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;
            type_description_2 = "o";
            goto try_except_handler_157;
        }
        {
            nuitka_bool tmp_condition_result_314;
            PyObject *tmp_compexpr_left_52;
            PyObject *tmp_compexpr_right_52;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases);
            tmp_compexpr_left_52 = tmp_QtWidgets$class_creation_31__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases_orig);
            tmp_compexpr_right_52 = tmp_QtWidgets$class_creation_31__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_52, tmp_compexpr_right_52);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_157;
            }
            tmp_condition_result_314 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_314 == NUITKA_BOOL_TRUE) {
                goto branch_yes_208;
            } else {
                goto branch_no_208;
            }
            branch_yes_208:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_31__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_357, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_157;
            }
            branch_no_208:;
        }
        {
            PyObject *tmp_assign_source_391;
            PyObject *tmp_called_name_105;
            PyObject *tmp_args_name_103;
            PyObject *tmp_tuple_element_204;
            PyObject *tmp_kw_name_103;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__metaclass);
            tmp_called_name_105 = tmp_QtWidgets$class_creation_31__metaclass;
            tmp_tuple_element_204 = const_str_plain_QSpinBox;
            tmp_args_name_103 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_204);
            PyTuple_SET_ITEM(tmp_args_name_103, 0, tmp_tuple_element_204);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__bases);
            tmp_tuple_element_204 = tmp_QtWidgets$class_creation_31__bases;
            Py_INCREF(tmp_tuple_element_204);
            PyTuple_SET_ITEM(tmp_args_name_103, 1, tmp_tuple_element_204);
            tmp_tuple_element_204 = locals_PyQt5$uic$Compiler$qtproxies_357;
            Py_INCREF(tmp_tuple_element_204);
            PyTuple_SET_ITEM(tmp_args_name_103, 2, tmp_tuple_element_204);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_31__class_decl_dict);
            tmp_kw_name_103 = tmp_QtWidgets$class_creation_31__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 357;
            tmp_assign_source_391 = CALL_FUNCTION(tmp_called_name_105, tmp_args_name_103, tmp_kw_name_103);
            Py_DECREF(tmp_args_name_103);
            if (tmp_assign_source_391 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_2 = "o";
                goto try_except_handler_157;
            }
            assert(outline_51_var___class__ == NULL);
            outline_51_var___class__ = tmp_assign_source_391;
        }
        CHECK_OBJECT(outline_51_var___class__);
        tmp_dictset_value = outline_51_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_157;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_157:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_357);
        locals_PyQt5$uic$Compiler$qtproxies_357 = NULL;
        goto try_return_handler_156;
        // Exception handler code:
        try_except_handler_157:;
        exception_keeper_type_152 = exception_type;
        exception_keeper_value_152 = exception_value;
        exception_keeper_tb_152 = exception_tb;
        exception_keeper_lineno_152 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_357);
        locals_PyQt5$uic$Compiler$qtproxies_357 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_152;
        exception_value = exception_keeper_value_152;
        exception_tb = exception_keeper_tb_152;
        exception_lineno = exception_keeper_lineno_152;

        goto try_except_handler_156;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_156:;
        CHECK_OBJECT((PyObject *)outline_51_var___class__);
        Py_DECREF(outline_51_var___class__);
        outline_51_var___class__ = NULL;

        goto outline_result_52;
        // Exception handler code:
        try_except_handler_156:;
        exception_keeper_type_153 = exception_type;
        exception_keeper_value_153 = exception_value;
        exception_keeper_tb_153 = exception_tb;
        exception_keeper_lineno_153 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_153;
        exception_value = exception_keeper_value_153;
        exception_tb = exception_keeper_tb_153;
        exception_lineno = exception_keeper_lineno_153;

        goto outline_exception_52;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_52:;
        exception_lineno = 357;
        goto try_except_handler_155;
        outline_result_52:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QSpinBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;
            type_description_2 = "o";
            goto try_except_handler_155;
        }
        goto try_end_52;
        // Exception handler code:
        try_except_handler_155:;
        exception_keeper_type_154 = exception_type;
        exception_keeper_value_154 = exception_value;
        exception_keeper_tb_154 = exception_tb;
        exception_keeper_lineno_154 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_31__bases_orig);
        tmp_QtWidgets$class_creation_31__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_31__bases);
        tmp_QtWidgets$class_creation_31__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_31__class_decl_dict);
        tmp_QtWidgets$class_creation_31__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_31__metaclass);
        tmp_QtWidgets$class_creation_31__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_31__prepared);
        tmp_QtWidgets$class_creation_31__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_154;
        exception_value = exception_keeper_value_154;
        exception_tb = exception_keeper_tb_154;
        exception_lineno = exception_keeper_lineno_154;

        goto frame_exception_exit_12;
        // End of try:
        try_end_52:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_31__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_31__bases_orig);
        tmp_QtWidgets$class_creation_31__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_31__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_31__bases);
        tmp_QtWidgets$class_creation_31__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_31__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_31__class_decl_dict);
        tmp_QtWidgets$class_creation_31__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_31__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_31__metaclass);
        tmp_QtWidgets$class_creation_31__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_31__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_31__prepared);
        tmp_QtWidgets$class_creation_31__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_392;
            PyObject *tmp_tuple_element_205;
            PyObject *tmp_mvar_value_48;
            tmp_tuple_element_205 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractSpinBox);

            if (tmp_tuple_element_205 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_48 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractSpinBox);

                    if (unlikely(tmp_mvar_value_48 == NULL)) {
                        tmp_mvar_value_48 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractSpinBox);
                    }

                    if (tmp_mvar_value_48 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1717 ], 38, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 359;
                        type_description_2 = "o";
                        goto try_except_handler_158;
                    }

                    tmp_tuple_element_205 = tmp_mvar_value_48;
                    Py_INCREF(tmp_tuple_element_205);
                }
            }

            tmp_assign_source_392 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_392, 0, tmp_tuple_element_205);
            assert(tmp_QtWidgets$class_creation_32__bases_orig == NULL);
            tmp_QtWidgets$class_creation_32__bases_orig = tmp_assign_source_392;
        }
        {
            PyObject *tmp_assign_source_393;
            PyObject *tmp_dircall_arg1_53;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases_orig);
            tmp_dircall_arg1_53 = tmp_QtWidgets$class_creation_32__bases_orig;
            Py_INCREF(tmp_dircall_arg1_53);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_53};
                tmp_assign_source_393 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_393 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            assert(tmp_QtWidgets$class_creation_32__bases == NULL);
            tmp_QtWidgets$class_creation_32__bases = tmp_assign_source_393;
        }
        {
            PyObject *tmp_assign_source_394;
            tmp_assign_source_394 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_32__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_32__class_decl_dict = tmp_assign_source_394;
        }
        {
            PyObject *tmp_assign_source_395;
            PyObject *tmp_metaclass_name_53;
            nuitka_bool tmp_condition_result_315;
            PyObject *tmp_key_name_157;
            PyObject *tmp_dict_name_157;
            PyObject *tmp_dict_name_158;
            PyObject *tmp_key_name_158;
            nuitka_bool tmp_condition_result_316;
            int tmp_truth_name_53;
            PyObject *tmp_type_arg_105;
            PyObject *tmp_subscribed_name_53;
            PyObject *tmp_subscript_name_53;
            PyObject *tmp_bases_name_53;
            tmp_key_name_157 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__class_decl_dict);
            tmp_dict_name_157 = tmp_QtWidgets$class_creation_32__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_157, tmp_key_name_157);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            tmp_condition_result_315 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_315 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_107;
            } else {
                goto condexpr_false_107;
            }
            condexpr_true_107:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__class_decl_dict);
            tmp_dict_name_158 = tmp_QtWidgets$class_creation_32__class_decl_dict;
            tmp_key_name_158 = const_str_plain_metaclass;
            tmp_metaclass_name_53 = DICT_GET_ITEM(tmp_dict_name_158, tmp_key_name_158);
            if (tmp_metaclass_name_53 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            goto condexpr_end_107;
            condexpr_false_107:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases);
            tmp_truth_name_53 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_32__bases);
            if (tmp_truth_name_53 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            tmp_condition_result_316 = tmp_truth_name_53 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_316 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_108;
            } else {
                goto condexpr_false_108;
            }
            condexpr_true_108:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases);
            tmp_subscribed_name_53 = tmp_QtWidgets$class_creation_32__bases;
            tmp_subscript_name_53 = const_int_0;
            tmp_type_arg_105 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_53, tmp_subscript_name_53, 0);
            if (tmp_type_arg_105 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            tmp_metaclass_name_53 = BUILTIN_TYPE1(tmp_type_arg_105);
            Py_DECREF(tmp_type_arg_105);
            if (tmp_metaclass_name_53 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            goto condexpr_end_108;
            condexpr_false_108:;
            tmp_metaclass_name_53 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_53);
            condexpr_end_108:;
            condexpr_end_107:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases);
            tmp_bases_name_53 = tmp_QtWidgets$class_creation_32__bases;
            tmp_assign_source_395 = SELECT_METACLASS(tmp_metaclass_name_53, tmp_bases_name_53);
            Py_DECREF(tmp_metaclass_name_53);
            if (tmp_assign_source_395 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            assert(tmp_QtWidgets$class_creation_32__metaclass == NULL);
            tmp_QtWidgets$class_creation_32__metaclass = tmp_assign_source_395;
        }
        {
            nuitka_bool tmp_condition_result_317;
            PyObject *tmp_key_name_159;
            PyObject *tmp_dict_name_159;
            tmp_key_name_159 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__class_decl_dict);
            tmp_dict_name_159 = tmp_QtWidgets$class_creation_32__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_159, tmp_key_name_159);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            tmp_condition_result_317 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_317 == NUITKA_BOOL_TRUE) {
                goto branch_yes_209;
            } else {
                goto branch_no_209;
            }
            branch_yes_209:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_32__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_158;
            }
            branch_no_209:;
        }
        {
            nuitka_bool tmp_condition_result_318;
            PyObject *tmp_source_name_216;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__metaclass);
            tmp_source_name_216 = tmp_QtWidgets$class_creation_32__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_216, const_str_plain___prepare__);
            tmp_condition_result_318 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_318 == NUITKA_BOOL_TRUE) {
                goto branch_yes_210;
            } else {
                goto branch_no_210;
            }
            branch_yes_210:;
            {
                PyObject *tmp_assign_source_396;
                PyObject *tmp_called_name_106;
                PyObject *tmp_source_name_217;
                PyObject *tmp_args_name_104;
                PyObject *tmp_tuple_element_206;
                PyObject *tmp_kw_name_104;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_32__metaclass);
                tmp_source_name_217 = tmp_QtWidgets$class_creation_32__metaclass;
                tmp_called_name_106 = LOOKUP_ATTRIBUTE(tmp_source_name_217, const_str_plain___prepare__);
                if (tmp_called_name_106 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 359;
                    type_description_2 = "o";
                    goto try_except_handler_158;
                }
                tmp_tuple_element_206 = const_str_plain_QDateTimeEdit;
                tmp_args_name_104 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_206);
                PyTuple_SET_ITEM(tmp_args_name_104, 0, tmp_tuple_element_206);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases);
                tmp_tuple_element_206 = tmp_QtWidgets$class_creation_32__bases;
                Py_INCREF(tmp_tuple_element_206);
                PyTuple_SET_ITEM(tmp_args_name_104, 1, tmp_tuple_element_206);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_32__class_decl_dict);
                tmp_kw_name_104 = tmp_QtWidgets$class_creation_32__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 359;
                tmp_assign_source_396 = CALL_FUNCTION(tmp_called_name_106, tmp_args_name_104, tmp_kw_name_104);
                Py_DECREF(tmp_called_name_106);
                Py_DECREF(tmp_args_name_104);
                if (tmp_assign_source_396 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 359;
                    type_description_2 = "o";
                    goto try_except_handler_158;
                }
                assert(tmp_QtWidgets$class_creation_32__prepared == NULL);
                tmp_QtWidgets$class_creation_32__prepared = tmp_assign_source_396;
            }
            {
                nuitka_bool tmp_condition_result_319;
                PyObject *tmp_operand_name_53;
                PyObject *tmp_source_name_218;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_32__prepared);
                tmp_source_name_218 = tmp_QtWidgets$class_creation_32__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_218, const_str_plain___getitem__);
                tmp_operand_name_53 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_53);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 359;
                    type_description_2 = "o";
                    goto try_except_handler_158;
                }
                tmp_condition_result_319 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_319 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_211;
                } else {
                    goto branch_no_211;
                }
                branch_yes_211:;
                {
                    PyObject *tmp_raise_type_53;
                    PyObject *tmp_raise_value_53;
                    PyObject *tmp_left_name_53;
                    PyObject *tmp_right_name_53;
                    PyObject *tmp_tuple_element_207;
                    PyObject *tmp_getattr_target_53;
                    PyObject *tmp_getattr_attr_53;
                    PyObject *tmp_getattr_default_53;
                    PyObject *tmp_source_name_219;
                    PyObject *tmp_type_arg_106;
                    tmp_raise_type_53 = PyExc_TypeError;
                    tmp_left_name_53 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_32__metaclass);
                    tmp_getattr_target_53 = tmp_QtWidgets$class_creation_32__metaclass;
                    tmp_getattr_attr_53 = const_str_plain___name__;
                    tmp_getattr_default_53 = const_str_angle_metaclass;
                    tmp_tuple_element_207 = BUILTIN_GETATTR(tmp_getattr_target_53, tmp_getattr_attr_53, tmp_getattr_default_53);
                    if (tmp_tuple_element_207 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 359;
                        type_description_2 = "o";
                        goto try_except_handler_158;
                    }
                    tmp_right_name_53 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_53, 0, tmp_tuple_element_207);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_32__prepared);
                    tmp_type_arg_106 = tmp_QtWidgets$class_creation_32__prepared;
                    tmp_source_name_219 = BUILTIN_TYPE1(tmp_type_arg_106);
                    assert(!(tmp_source_name_219 == NULL));
                    tmp_tuple_element_207 = LOOKUP_ATTRIBUTE(tmp_source_name_219, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_219);
                    if (tmp_tuple_element_207 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_53);

                        exception_lineno = 359;
                        type_description_2 = "o";
                        goto try_except_handler_158;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_53, 1, tmp_tuple_element_207);
                    tmp_raise_value_53 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_53, tmp_right_name_53);
                    Py_DECREF(tmp_right_name_53);
                    if (tmp_raise_value_53 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 359;
                        type_description_2 = "o";
                        goto try_except_handler_158;
                    }
                    exception_type = tmp_raise_type_53;
                    Py_INCREF(tmp_raise_type_53);
                    exception_value = tmp_raise_value_53;
                    exception_lineno = 359;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_158;
                }
                branch_no_211:;
            }
            goto branch_end_210;
            branch_no_210:;
            {
                PyObject *tmp_assign_source_397;
                tmp_assign_source_397 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_32__prepared == NULL);
                tmp_QtWidgets$class_creation_32__prepared = tmp_assign_source_397;
            }
            branch_end_210:;
        }
        {
            PyObject *tmp_set_locals_53;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__prepared);
            tmp_set_locals_53 = tmp_QtWidgets$class_creation_32__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_359 = tmp_set_locals_53;
            Py_INCREF(tmp_set_locals_53);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_359, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_2 = "o";
            goto try_except_handler_160;
        }
        tmp_dictset_value = const_str_digest_10f1597c2d51a2472f293de9d98a5ead;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_359, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_2 = "o";
            goto try_except_handler_160;
        }
        {
            nuitka_bool tmp_condition_result_320;
            PyObject *tmp_compexpr_left_53;
            PyObject *tmp_compexpr_right_53;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases);
            tmp_compexpr_left_53 = tmp_QtWidgets$class_creation_32__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases_orig);
            tmp_compexpr_right_53 = tmp_QtWidgets$class_creation_32__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_53, tmp_compexpr_right_53);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_160;
            }
            tmp_condition_result_320 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_320 == NUITKA_BOOL_TRUE) {
                goto branch_yes_212;
            } else {
                goto branch_no_212;
            }
            branch_yes_212:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_32__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_359, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_160;
            }
            branch_no_212:;
        }
        {
            PyObject *tmp_assign_source_398;
            PyObject *tmp_called_name_107;
            PyObject *tmp_args_name_105;
            PyObject *tmp_tuple_element_208;
            PyObject *tmp_kw_name_105;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__metaclass);
            tmp_called_name_107 = tmp_QtWidgets$class_creation_32__metaclass;
            tmp_tuple_element_208 = const_str_plain_QDateTimeEdit;
            tmp_args_name_105 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_208);
            PyTuple_SET_ITEM(tmp_args_name_105, 0, tmp_tuple_element_208);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__bases);
            tmp_tuple_element_208 = tmp_QtWidgets$class_creation_32__bases;
            Py_INCREF(tmp_tuple_element_208);
            PyTuple_SET_ITEM(tmp_args_name_105, 1, tmp_tuple_element_208);
            tmp_tuple_element_208 = locals_PyQt5$uic$Compiler$qtproxies_359;
            Py_INCREF(tmp_tuple_element_208);
            PyTuple_SET_ITEM(tmp_args_name_105, 2, tmp_tuple_element_208);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_32__class_decl_dict);
            tmp_kw_name_105 = tmp_QtWidgets$class_creation_32__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 359;
            tmp_assign_source_398 = CALL_FUNCTION(tmp_called_name_107, tmp_args_name_105, tmp_kw_name_105);
            Py_DECREF(tmp_args_name_105);
            if (tmp_assign_source_398 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_2 = "o";
                goto try_except_handler_160;
            }
            assert(outline_52_var___class__ == NULL);
            outline_52_var___class__ = tmp_assign_source_398;
        }
        CHECK_OBJECT(outline_52_var___class__);
        tmp_dictset_value = outline_52_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_160;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_160:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_359);
        locals_PyQt5$uic$Compiler$qtproxies_359 = NULL;
        goto try_return_handler_159;
        // Exception handler code:
        try_except_handler_160:;
        exception_keeper_type_155 = exception_type;
        exception_keeper_value_155 = exception_value;
        exception_keeper_tb_155 = exception_tb;
        exception_keeper_lineno_155 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_359);
        locals_PyQt5$uic$Compiler$qtproxies_359 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_155;
        exception_value = exception_keeper_value_155;
        exception_tb = exception_keeper_tb_155;
        exception_lineno = exception_keeper_lineno_155;

        goto try_except_handler_159;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_159:;
        CHECK_OBJECT((PyObject *)outline_52_var___class__);
        Py_DECREF(outline_52_var___class__);
        outline_52_var___class__ = NULL;

        goto outline_result_53;
        // Exception handler code:
        try_except_handler_159:;
        exception_keeper_type_156 = exception_type;
        exception_keeper_value_156 = exception_value;
        exception_keeper_tb_156 = exception_tb;
        exception_keeper_lineno_156 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_156;
        exception_value = exception_keeper_value_156;
        exception_tb = exception_keeper_tb_156;
        exception_lineno = exception_keeper_lineno_156;

        goto outline_exception_53;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_53:;
        exception_lineno = 359;
        goto try_except_handler_158;
        outline_result_53:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDateTimeEdit, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_2 = "o";
            goto try_except_handler_158;
        }
        goto try_end_53;
        // Exception handler code:
        try_except_handler_158:;
        exception_keeper_type_157 = exception_type;
        exception_keeper_value_157 = exception_value;
        exception_keeper_tb_157 = exception_tb;
        exception_keeper_lineno_157 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_32__bases_orig);
        tmp_QtWidgets$class_creation_32__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_32__bases);
        tmp_QtWidgets$class_creation_32__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_32__class_decl_dict);
        tmp_QtWidgets$class_creation_32__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_32__metaclass);
        tmp_QtWidgets$class_creation_32__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_32__prepared);
        tmp_QtWidgets$class_creation_32__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_157;
        exception_value = exception_keeper_value_157;
        exception_tb = exception_keeper_tb_157;
        exception_lineno = exception_keeper_lineno_157;

        goto frame_exception_exit_12;
        // End of try:
        try_end_53:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_32__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_32__bases_orig);
        tmp_QtWidgets$class_creation_32__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_32__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_32__bases);
        tmp_QtWidgets$class_creation_32__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_32__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_32__class_decl_dict);
        tmp_QtWidgets$class_creation_32__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_32__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_32__metaclass);
        tmp_QtWidgets$class_creation_32__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_32__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_32__prepared);
        tmp_QtWidgets$class_creation_32__prepared = NULL;

        {
            PyObject *tmp_assign_source_399;
            PyObject *tmp_tuple_element_209;
            tmp_tuple_element_209 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDateTimeEdit);

            if (tmp_tuple_element_209 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1755 ], 35, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 360;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_209 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_399 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_399, 0, tmp_tuple_element_209);
            assert(tmp_QtWidgets$class_creation_33__bases_orig == NULL);
            tmp_QtWidgets$class_creation_33__bases_orig = tmp_assign_source_399;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_400;
            PyObject *tmp_dircall_arg1_54;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases_orig);
            tmp_dircall_arg1_54 = tmp_QtWidgets$class_creation_33__bases_orig;
            Py_INCREF(tmp_dircall_arg1_54);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_54};
                tmp_assign_source_400 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_400 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            assert(tmp_QtWidgets$class_creation_33__bases == NULL);
            tmp_QtWidgets$class_creation_33__bases = tmp_assign_source_400;
        }
        {
            PyObject *tmp_assign_source_401;
            tmp_assign_source_401 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_33__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_33__class_decl_dict = tmp_assign_source_401;
        }
        {
            PyObject *tmp_assign_source_402;
            PyObject *tmp_metaclass_name_54;
            nuitka_bool tmp_condition_result_321;
            PyObject *tmp_key_name_160;
            PyObject *tmp_dict_name_160;
            PyObject *tmp_dict_name_161;
            PyObject *tmp_key_name_161;
            nuitka_bool tmp_condition_result_322;
            int tmp_truth_name_54;
            PyObject *tmp_type_arg_107;
            PyObject *tmp_subscribed_name_54;
            PyObject *tmp_subscript_name_54;
            PyObject *tmp_bases_name_54;
            tmp_key_name_160 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__class_decl_dict);
            tmp_dict_name_160 = tmp_QtWidgets$class_creation_33__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_160, tmp_key_name_160);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            tmp_condition_result_321 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_321 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_109;
            } else {
                goto condexpr_false_109;
            }
            condexpr_true_109:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__class_decl_dict);
            tmp_dict_name_161 = tmp_QtWidgets$class_creation_33__class_decl_dict;
            tmp_key_name_161 = const_str_plain_metaclass;
            tmp_metaclass_name_54 = DICT_GET_ITEM(tmp_dict_name_161, tmp_key_name_161);
            if (tmp_metaclass_name_54 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            goto condexpr_end_109;
            condexpr_false_109:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases);
            tmp_truth_name_54 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_33__bases);
            if (tmp_truth_name_54 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            tmp_condition_result_322 = tmp_truth_name_54 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_322 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_110;
            } else {
                goto condexpr_false_110;
            }
            condexpr_true_110:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases);
            tmp_subscribed_name_54 = tmp_QtWidgets$class_creation_33__bases;
            tmp_subscript_name_54 = const_int_0;
            tmp_type_arg_107 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_54, tmp_subscript_name_54, 0);
            if (tmp_type_arg_107 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            tmp_metaclass_name_54 = BUILTIN_TYPE1(tmp_type_arg_107);
            Py_DECREF(tmp_type_arg_107);
            if (tmp_metaclass_name_54 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            goto condexpr_end_110;
            condexpr_false_110:;
            tmp_metaclass_name_54 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_54);
            condexpr_end_110:;
            condexpr_end_109:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases);
            tmp_bases_name_54 = tmp_QtWidgets$class_creation_33__bases;
            tmp_assign_source_402 = SELECT_METACLASS(tmp_metaclass_name_54, tmp_bases_name_54);
            Py_DECREF(tmp_metaclass_name_54);
            if (tmp_assign_source_402 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            assert(tmp_QtWidgets$class_creation_33__metaclass == NULL);
            tmp_QtWidgets$class_creation_33__metaclass = tmp_assign_source_402;
        }
        {
            nuitka_bool tmp_condition_result_323;
            PyObject *tmp_key_name_162;
            PyObject *tmp_dict_name_162;
            tmp_key_name_162 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__class_decl_dict);
            tmp_dict_name_162 = tmp_QtWidgets$class_creation_33__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_162, tmp_key_name_162);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            tmp_condition_result_323 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_323 == NUITKA_BOOL_TRUE) {
                goto branch_yes_213;
            } else {
                goto branch_no_213;
            }
            branch_yes_213:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_33__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_161;
            }
            branch_no_213:;
        }
        {
            nuitka_bool tmp_condition_result_324;
            PyObject *tmp_source_name_220;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__metaclass);
            tmp_source_name_220 = tmp_QtWidgets$class_creation_33__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_220, const_str_plain___prepare__);
            tmp_condition_result_324 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_324 == NUITKA_BOOL_TRUE) {
                goto branch_yes_214;
            } else {
                goto branch_no_214;
            }
            branch_yes_214:;
            {
                PyObject *tmp_assign_source_403;
                PyObject *tmp_called_name_108;
                PyObject *tmp_source_name_221;
                PyObject *tmp_args_name_106;
                PyObject *tmp_tuple_element_210;
                PyObject *tmp_kw_name_106;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_33__metaclass);
                tmp_source_name_221 = tmp_QtWidgets$class_creation_33__metaclass;
                tmp_called_name_108 = LOOKUP_ATTRIBUTE(tmp_source_name_221, const_str_plain___prepare__);
                if (tmp_called_name_108 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 360;
                    type_description_2 = "o";
                    goto try_except_handler_161;
                }
                tmp_tuple_element_210 = const_str_plain_QDateEdit;
                tmp_args_name_106 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_210);
                PyTuple_SET_ITEM(tmp_args_name_106, 0, tmp_tuple_element_210);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases);
                tmp_tuple_element_210 = tmp_QtWidgets$class_creation_33__bases;
                Py_INCREF(tmp_tuple_element_210);
                PyTuple_SET_ITEM(tmp_args_name_106, 1, tmp_tuple_element_210);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_33__class_decl_dict);
                tmp_kw_name_106 = tmp_QtWidgets$class_creation_33__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 360;
                tmp_assign_source_403 = CALL_FUNCTION(tmp_called_name_108, tmp_args_name_106, tmp_kw_name_106);
                Py_DECREF(tmp_called_name_108);
                Py_DECREF(tmp_args_name_106);
                if (tmp_assign_source_403 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 360;
                    type_description_2 = "o";
                    goto try_except_handler_161;
                }
                assert(tmp_QtWidgets$class_creation_33__prepared == NULL);
                tmp_QtWidgets$class_creation_33__prepared = tmp_assign_source_403;
            }
            {
                nuitka_bool tmp_condition_result_325;
                PyObject *tmp_operand_name_54;
                PyObject *tmp_source_name_222;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_33__prepared);
                tmp_source_name_222 = tmp_QtWidgets$class_creation_33__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_222, const_str_plain___getitem__);
                tmp_operand_name_54 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_54);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 360;
                    type_description_2 = "o";
                    goto try_except_handler_161;
                }
                tmp_condition_result_325 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_325 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_215;
                } else {
                    goto branch_no_215;
                }
                branch_yes_215:;
                {
                    PyObject *tmp_raise_type_54;
                    PyObject *tmp_raise_value_54;
                    PyObject *tmp_left_name_54;
                    PyObject *tmp_right_name_54;
                    PyObject *tmp_tuple_element_211;
                    PyObject *tmp_getattr_target_54;
                    PyObject *tmp_getattr_attr_54;
                    PyObject *tmp_getattr_default_54;
                    PyObject *tmp_source_name_223;
                    PyObject *tmp_type_arg_108;
                    tmp_raise_type_54 = PyExc_TypeError;
                    tmp_left_name_54 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_33__metaclass);
                    tmp_getattr_target_54 = tmp_QtWidgets$class_creation_33__metaclass;
                    tmp_getattr_attr_54 = const_str_plain___name__;
                    tmp_getattr_default_54 = const_str_angle_metaclass;
                    tmp_tuple_element_211 = BUILTIN_GETATTR(tmp_getattr_target_54, tmp_getattr_attr_54, tmp_getattr_default_54);
                    if (tmp_tuple_element_211 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 360;
                        type_description_2 = "o";
                        goto try_except_handler_161;
                    }
                    tmp_right_name_54 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_54, 0, tmp_tuple_element_211);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_33__prepared);
                    tmp_type_arg_108 = tmp_QtWidgets$class_creation_33__prepared;
                    tmp_source_name_223 = BUILTIN_TYPE1(tmp_type_arg_108);
                    assert(!(tmp_source_name_223 == NULL));
                    tmp_tuple_element_211 = LOOKUP_ATTRIBUTE(tmp_source_name_223, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_223);
                    if (tmp_tuple_element_211 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_54);

                        exception_lineno = 360;
                        type_description_2 = "o";
                        goto try_except_handler_161;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_54, 1, tmp_tuple_element_211);
                    tmp_raise_value_54 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_54, tmp_right_name_54);
                    Py_DECREF(tmp_right_name_54);
                    if (tmp_raise_value_54 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 360;
                        type_description_2 = "o";
                        goto try_except_handler_161;
                    }
                    exception_type = tmp_raise_type_54;
                    Py_INCREF(tmp_raise_type_54);
                    exception_value = tmp_raise_value_54;
                    exception_lineno = 360;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_161;
                }
                branch_no_215:;
            }
            goto branch_end_214;
            branch_no_214:;
            {
                PyObject *tmp_assign_source_404;
                tmp_assign_source_404 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_33__prepared == NULL);
                tmp_QtWidgets$class_creation_33__prepared = tmp_assign_source_404;
            }
            branch_end_214:;
        }
        {
            PyObject *tmp_set_locals_54;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__prepared);
            tmp_set_locals_54 = tmp_QtWidgets$class_creation_33__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_360 = tmp_set_locals_54;
            Py_INCREF(tmp_set_locals_54);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_360, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 360;
            type_description_2 = "o";
            goto try_except_handler_163;
        }
        tmp_dictset_value = const_str_digest_2e6257f631d3cac8eb55a7363981e82d;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_360, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 360;
            type_description_2 = "o";
            goto try_except_handler_163;
        }
        {
            nuitka_bool tmp_condition_result_326;
            PyObject *tmp_compexpr_left_54;
            PyObject *tmp_compexpr_right_54;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases);
            tmp_compexpr_left_54 = tmp_QtWidgets$class_creation_33__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases_orig);
            tmp_compexpr_right_54 = tmp_QtWidgets$class_creation_33__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_54, tmp_compexpr_right_54);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_163;
            }
            tmp_condition_result_326 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_326 == NUITKA_BOOL_TRUE) {
                goto branch_yes_216;
            } else {
                goto branch_no_216;
            }
            branch_yes_216:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_33__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_360, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_163;
            }
            branch_no_216:;
        }
        {
            PyObject *tmp_assign_source_405;
            PyObject *tmp_called_name_109;
            PyObject *tmp_args_name_107;
            PyObject *tmp_tuple_element_212;
            PyObject *tmp_kw_name_107;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__metaclass);
            tmp_called_name_109 = tmp_QtWidgets$class_creation_33__metaclass;
            tmp_tuple_element_212 = const_str_plain_QDateEdit;
            tmp_args_name_107 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_212);
            PyTuple_SET_ITEM(tmp_args_name_107, 0, tmp_tuple_element_212);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__bases);
            tmp_tuple_element_212 = tmp_QtWidgets$class_creation_33__bases;
            Py_INCREF(tmp_tuple_element_212);
            PyTuple_SET_ITEM(tmp_args_name_107, 1, tmp_tuple_element_212);
            tmp_tuple_element_212 = locals_PyQt5$uic$Compiler$qtproxies_360;
            Py_INCREF(tmp_tuple_element_212);
            PyTuple_SET_ITEM(tmp_args_name_107, 2, tmp_tuple_element_212);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_33__class_decl_dict);
            tmp_kw_name_107 = tmp_QtWidgets$class_creation_33__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 360;
            tmp_assign_source_405 = CALL_FUNCTION(tmp_called_name_109, tmp_args_name_107, tmp_kw_name_107);
            Py_DECREF(tmp_args_name_107);
            if (tmp_assign_source_405 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_2 = "o";
                goto try_except_handler_163;
            }
            assert(outline_53_var___class__ == NULL);
            outline_53_var___class__ = tmp_assign_source_405;
        }
        CHECK_OBJECT(outline_53_var___class__);
        tmp_dictset_value = outline_53_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_163;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_163:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_360);
        locals_PyQt5$uic$Compiler$qtproxies_360 = NULL;
        goto try_return_handler_162;
        // Exception handler code:
        try_except_handler_163:;
        exception_keeper_type_158 = exception_type;
        exception_keeper_value_158 = exception_value;
        exception_keeper_tb_158 = exception_tb;
        exception_keeper_lineno_158 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_360);
        locals_PyQt5$uic$Compiler$qtproxies_360 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_158;
        exception_value = exception_keeper_value_158;
        exception_tb = exception_keeper_tb_158;
        exception_lineno = exception_keeper_lineno_158;

        goto try_except_handler_162;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_162:;
        CHECK_OBJECT((PyObject *)outline_53_var___class__);
        Py_DECREF(outline_53_var___class__);
        outline_53_var___class__ = NULL;

        goto outline_result_54;
        // Exception handler code:
        try_except_handler_162:;
        exception_keeper_type_159 = exception_type;
        exception_keeper_value_159 = exception_value;
        exception_keeper_tb_159 = exception_tb;
        exception_keeper_lineno_159 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_159;
        exception_value = exception_keeper_value_159;
        exception_tb = exception_keeper_tb_159;
        exception_lineno = exception_keeper_lineno_159;

        goto outline_exception_54;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_54:;
        exception_lineno = 360;
        goto try_except_handler_161;
        outline_result_54:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDateEdit, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 360;
            type_description_2 = "o";
            goto try_except_handler_161;
        }
        goto try_end_54;
        // Exception handler code:
        try_except_handler_161:;
        exception_keeper_type_160 = exception_type;
        exception_keeper_value_160 = exception_value;
        exception_keeper_tb_160 = exception_tb;
        exception_keeper_lineno_160 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_33__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_33__bases_orig);
        tmp_QtWidgets$class_creation_33__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_33__bases);
        tmp_QtWidgets$class_creation_33__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_33__class_decl_dict);
        tmp_QtWidgets$class_creation_33__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_33__metaclass);
        tmp_QtWidgets$class_creation_33__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_33__prepared);
        tmp_QtWidgets$class_creation_33__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_160;
        exception_value = exception_keeper_value_160;
        exception_tb = exception_keeper_tb_160;
        exception_lineno = exception_keeper_lineno_160;

        goto frame_exception_exit_12;
        // End of try:
        try_end_54:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_33__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_33__bases_orig);
        tmp_QtWidgets$class_creation_33__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_33__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_33__bases);
        tmp_QtWidgets$class_creation_33__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_33__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_33__class_decl_dict);
        tmp_QtWidgets$class_creation_33__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_33__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_33__metaclass);
        tmp_QtWidgets$class_creation_33__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_33__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_33__prepared);
        tmp_QtWidgets$class_creation_33__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_406;
            PyObject *tmp_tuple_element_213;
            PyObject *tmp_mvar_value_49;
            tmp_tuple_element_213 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QDateTimeEdit);

            if (tmp_tuple_element_213 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_49 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QDateTimeEdit);

                    if (unlikely(tmp_mvar_value_49 == NULL)) {
                        tmp_mvar_value_49 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QDateTimeEdit);
                    }

                    if (tmp_mvar_value_49 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1755 ], 35, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 361;
                        type_description_2 = "o";
                        goto try_except_handler_164;
                    }

                    tmp_tuple_element_213 = tmp_mvar_value_49;
                    Py_INCREF(tmp_tuple_element_213);
                }
            }

            tmp_assign_source_406 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_406, 0, tmp_tuple_element_213);
            assert(tmp_QtWidgets$class_creation_34__bases_orig == NULL);
            tmp_QtWidgets$class_creation_34__bases_orig = tmp_assign_source_406;
        }
        {
            PyObject *tmp_assign_source_407;
            PyObject *tmp_dircall_arg1_55;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases_orig);
            tmp_dircall_arg1_55 = tmp_QtWidgets$class_creation_34__bases_orig;
            Py_INCREF(tmp_dircall_arg1_55);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_55};
                tmp_assign_source_407 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_407 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            assert(tmp_QtWidgets$class_creation_34__bases == NULL);
            tmp_QtWidgets$class_creation_34__bases = tmp_assign_source_407;
        }
        {
            PyObject *tmp_assign_source_408;
            tmp_assign_source_408 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_34__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_34__class_decl_dict = tmp_assign_source_408;
        }
        {
            PyObject *tmp_assign_source_409;
            PyObject *tmp_metaclass_name_55;
            nuitka_bool tmp_condition_result_327;
            PyObject *tmp_key_name_163;
            PyObject *tmp_dict_name_163;
            PyObject *tmp_dict_name_164;
            PyObject *tmp_key_name_164;
            nuitka_bool tmp_condition_result_328;
            int tmp_truth_name_55;
            PyObject *tmp_type_arg_109;
            PyObject *tmp_subscribed_name_55;
            PyObject *tmp_subscript_name_55;
            PyObject *tmp_bases_name_55;
            tmp_key_name_163 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__class_decl_dict);
            tmp_dict_name_163 = tmp_QtWidgets$class_creation_34__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_163, tmp_key_name_163);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            tmp_condition_result_327 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_327 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_111;
            } else {
                goto condexpr_false_111;
            }
            condexpr_true_111:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__class_decl_dict);
            tmp_dict_name_164 = tmp_QtWidgets$class_creation_34__class_decl_dict;
            tmp_key_name_164 = const_str_plain_metaclass;
            tmp_metaclass_name_55 = DICT_GET_ITEM(tmp_dict_name_164, tmp_key_name_164);
            if (tmp_metaclass_name_55 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            goto condexpr_end_111;
            condexpr_false_111:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases);
            tmp_truth_name_55 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_34__bases);
            if (tmp_truth_name_55 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            tmp_condition_result_328 = tmp_truth_name_55 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_328 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_112;
            } else {
                goto condexpr_false_112;
            }
            condexpr_true_112:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases);
            tmp_subscribed_name_55 = tmp_QtWidgets$class_creation_34__bases;
            tmp_subscript_name_55 = const_int_0;
            tmp_type_arg_109 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_55, tmp_subscript_name_55, 0);
            if (tmp_type_arg_109 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            tmp_metaclass_name_55 = BUILTIN_TYPE1(tmp_type_arg_109);
            Py_DECREF(tmp_type_arg_109);
            if (tmp_metaclass_name_55 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            goto condexpr_end_112;
            condexpr_false_112:;
            tmp_metaclass_name_55 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_55);
            condexpr_end_112:;
            condexpr_end_111:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases);
            tmp_bases_name_55 = tmp_QtWidgets$class_creation_34__bases;
            tmp_assign_source_409 = SELECT_METACLASS(tmp_metaclass_name_55, tmp_bases_name_55);
            Py_DECREF(tmp_metaclass_name_55);
            if (tmp_assign_source_409 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            assert(tmp_QtWidgets$class_creation_34__metaclass == NULL);
            tmp_QtWidgets$class_creation_34__metaclass = tmp_assign_source_409;
        }
        {
            nuitka_bool tmp_condition_result_329;
            PyObject *tmp_key_name_165;
            PyObject *tmp_dict_name_165;
            tmp_key_name_165 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__class_decl_dict);
            tmp_dict_name_165 = tmp_QtWidgets$class_creation_34__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_165, tmp_key_name_165);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            tmp_condition_result_329 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_329 == NUITKA_BOOL_TRUE) {
                goto branch_yes_217;
            } else {
                goto branch_no_217;
            }
            branch_yes_217:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_34__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_164;
            }
            branch_no_217:;
        }
        {
            nuitka_bool tmp_condition_result_330;
            PyObject *tmp_source_name_224;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__metaclass);
            tmp_source_name_224 = tmp_QtWidgets$class_creation_34__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_224, const_str_plain___prepare__);
            tmp_condition_result_330 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_330 == NUITKA_BOOL_TRUE) {
                goto branch_yes_218;
            } else {
                goto branch_no_218;
            }
            branch_yes_218:;
            {
                PyObject *tmp_assign_source_410;
                PyObject *tmp_called_name_110;
                PyObject *tmp_source_name_225;
                PyObject *tmp_args_name_108;
                PyObject *tmp_tuple_element_214;
                PyObject *tmp_kw_name_108;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_34__metaclass);
                tmp_source_name_225 = tmp_QtWidgets$class_creation_34__metaclass;
                tmp_called_name_110 = LOOKUP_ATTRIBUTE(tmp_source_name_225, const_str_plain___prepare__);
                if (tmp_called_name_110 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 361;
                    type_description_2 = "o";
                    goto try_except_handler_164;
                }
                tmp_tuple_element_214 = const_str_plain_QTimeEdit;
                tmp_args_name_108 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_214);
                PyTuple_SET_ITEM(tmp_args_name_108, 0, tmp_tuple_element_214);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases);
                tmp_tuple_element_214 = tmp_QtWidgets$class_creation_34__bases;
                Py_INCREF(tmp_tuple_element_214);
                PyTuple_SET_ITEM(tmp_args_name_108, 1, tmp_tuple_element_214);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_34__class_decl_dict);
                tmp_kw_name_108 = tmp_QtWidgets$class_creation_34__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 361;
                tmp_assign_source_410 = CALL_FUNCTION(tmp_called_name_110, tmp_args_name_108, tmp_kw_name_108);
                Py_DECREF(tmp_called_name_110);
                Py_DECREF(tmp_args_name_108);
                if (tmp_assign_source_410 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 361;
                    type_description_2 = "o";
                    goto try_except_handler_164;
                }
                assert(tmp_QtWidgets$class_creation_34__prepared == NULL);
                tmp_QtWidgets$class_creation_34__prepared = tmp_assign_source_410;
            }
            {
                nuitka_bool tmp_condition_result_331;
                PyObject *tmp_operand_name_55;
                PyObject *tmp_source_name_226;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_34__prepared);
                tmp_source_name_226 = tmp_QtWidgets$class_creation_34__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_226, const_str_plain___getitem__);
                tmp_operand_name_55 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_55);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 361;
                    type_description_2 = "o";
                    goto try_except_handler_164;
                }
                tmp_condition_result_331 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_331 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_219;
                } else {
                    goto branch_no_219;
                }
                branch_yes_219:;
                {
                    PyObject *tmp_raise_type_55;
                    PyObject *tmp_raise_value_55;
                    PyObject *tmp_left_name_55;
                    PyObject *tmp_right_name_55;
                    PyObject *tmp_tuple_element_215;
                    PyObject *tmp_getattr_target_55;
                    PyObject *tmp_getattr_attr_55;
                    PyObject *tmp_getattr_default_55;
                    PyObject *tmp_source_name_227;
                    PyObject *tmp_type_arg_110;
                    tmp_raise_type_55 = PyExc_TypeError;
                    tmp_left_name_55 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_34__metaclass);
                    tmp_getattr_target_55 = tmp_QtWidgets$class_creation_34__metaclass;
                    tmp_getattr_attr_55 = const_str_plain___name__;
                    tmp_getattr_default_55 = const_str_angle_metaclass;
                    tmp_tuple_element_215 = BUILTIN_GETATTR(tmp_getattr_target_55, tmp_getattr_attr_55, tmp_getattr_default_55);
                    if (tmp_tuple_element_215 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 361;
                        type_description_2 = "o";
                        goto try_except_handler_164;
                    }
                    tmp_right_name_55 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_55, 0, tmp_tuple_element_215);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_34__prepared);
                    tmp_type_arg_110 = tmp_QtWidgets$class_creation_34__prepared;
                    tmp_source_name_227 = BUILTIN_TYPE1(tmp_type_arg_110);
                    assert(!(tmp_source_name_227 == NULL));
                    tmp_tuple_element_215 = LOOKUP_ATTRIBUTE(tmp_source_name_227, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_227);
                    if (tmp_tuple_element_215 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_55);

                        exception_lineno = 361;
                        type_description_2 = "o";
                        goto try_except_handler_164;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_55, 1, tmp_tuple_element_215);
                    tmp_raise_value_55 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_55, tmp_right_name_55);
                    Py_DECREF(tmp_right_name_55);
                    if (tmp_raise_value_55 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 361;
                        type_description_2 = "o";
                        goto try_except_handler_164;
                    }
                    exception_type = tmp_raise_type_55;
                    Py_INCREF(tmp_raise_type_55);
                    exception_value = tmp_raise_value_55;
                    exception_lineno = 361;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_164;
                }
                branch_no_219:;
            }
            goto branch_end_218;
            branch_no_218:;
            {
                PyObject *tmp_assign_source_411;
                tmp_assign_source_411 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_34__prepared == NULL);
                tmp_QtWidgets$class_creation_34__prepared = tmp_assign_source_411;
            }
            branch_end_218:;
        }
        {
            PyObject *tmp_set_locals_55;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__prepared);
            tmp_set_locals_55 = tmp_QtWidgets$class_creation_34__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_361 = tmp_set_locals_55;
            Py_INCREF(tmp_set_locals_55);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_361, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 361;
            type_description_2 = "o";
            goto try_except_handler_166;
        }
        tmp_dictset_value = const_str_digest_00bf4bf917367e7d19dac4c4926c5b58;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_361, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 361;
            type_description_2 = "o";
            goto try_except_handler_166;
        }
        {
            nuitka_bool tmp_condition_result_332;
            PyObject *tmp_compexpr_left_55;
            PyObject *tmp_compexpr_right_55;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases);
            tmp_compexpr_left_55 = tmp_QtWidgets$class_creation_34__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases_orig);
            tmp_compexpr_right_55 = tmp_QtWidgets$class_creation_34__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_55, tmp_compexpr_right_55);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_166;
            }
            tmp_condition_result_332 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_332 == NUITKA_BOOL_TRUE) {
                goto branch_yes_220;
            } else {
                goto branch_no_220;
            }
            branch_yes_220:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_34__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_361, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_166;
            }
            branch_no_220:;
        }
        {
            PyObject *tmp_assign_source_412;
            PyObject *tmp_called_name_111;
            PyObject *tmp_args_name_109;
            PyObject *tmp_tuple_element_216;
            PyObject *tmp_kw_name_109;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__metaclass);
            tmp_called_name_111 = tmp_QtWidgets$class_creation_34__metaclass;
            tmp_tuple_element_216 = const_str_plain_QTimeEdit;
            tmp_args_name_109 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_216);
            PyTuple_SET_ITEM(tmp_args_name_109, 0, tmp_tuple_element_216);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__bases);
            tmp_tuple_element_216 = tmp_QtWidgets$class_creation_34__bases;
            Py_INCREF(tmp_tuple_element_216);
            PyTuple_SET_ITEM(tmp_args_name_109, 1, tmp_tuple_element_216);
            tmp_tuple_element_216 = locals_PyQt5$uic$Compiler$qtproxies_361;
            Py_INCREF(tmp_tuple_element_216);
            PyTuple_SET_ITEM(tmp_args_name_109, 2, tmp_tuple_element_216);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_34__class_decl_dict);
            tmp_kw_name_109 = tmp_QtWidgets$class_creation_34__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 361;
            tmp_assign_source_412 = CALL_FUNCTION(tmp_called_name_111, tmp_args_name_109, tmp_kw_name_109);
            Py_DECREF(tmp_args_name_109);
            if (tmp_assign_source_412 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_2 = "o";
                goto try_except_handler_166;
            }
            assert(outline_54_var___class__ == NULL);
            outline_54_var___class__ = tmp_assign_source_412;
        }
        CHECK_OBJECT(outline_54_var___class__);
        tmp_dictset_value = outline_54_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_166;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_166:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_361);
        locals_PyQt5$uic$Compiler$qtproxies_361 = NULL;
        goto try_return_handler_165;
        // Exception handler code:
        try_except_handler_166:;
        exception_keeper_type_161 = exception_type;
        exception_keeper_value_161 = exception_value;
        exception_keeper_tb_161 = exception_tb;
        exception_keeper_lineno_161 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_361);
        locals_PyQt5$uic$Compiler$qtproxies_361 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_161;
        exception_value = exception_keeper_value_161;
        exception_tb = exception_keeper_tb_161;
        exception_lineno = exception_keeper_lineno_161;

        goto try_except_handler_165;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_165:;
        CHECK_OBJECT((PyObject *)outline_54_var___class__);
        Py_DECREF(outline_54_var___class__);
        outline_54_var___class__ = NULL;

        goto outline_result_55;
        // Exception handler code:
        try_except_handler_165:;
        exception_keeper_type_162 = exception_type;
        exception_keeper_value_162 = exception_value;
        exception_keeper_tb_162 = exception_tb;
        exception_keeper_lineno_162 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_162;
        exception_value = exception_keeper_value_162;
        exception_tb = exception_keeper_tb_162;
        exception_lineno = exception_keeper_lineno_162;

        goto outline_exception_55;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_55:;
        exception_lineno = 361;
        goto try_except_handler_164;
        outline_result_55:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTimeEdit, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 361;
            type_description_2 = "o";
            goto try_except_handler_164;
        }
        goto try_end_55;
        // Exception handler code:
        try_except_handler_164:;
        exception_keeper_type_163 = exception_type;
        exception_keeper_value_163 = exception_value;
        exception_keeper_tb_163 = exception_tb;
        exception_keeper_lineno_163 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_34__bases_orig);
        tmp_QtWidgets$class_creation_34__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_34__bases);
        tmp_QtWidgets$class_creation_34__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_34__class_decl_dict);
        tmp_QtWidgets$class_creation_34__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_34__metaclass);
        tmp_QtWidgets$class_creation_34__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_34__prepared);
        tmp_QtWidgets$class_creation_34__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_163;
        exception_value = exception_keeper_value_163;
        exception_tb = exception_keeper_tb_163;
        exception_lineno = exception_keeper_lineno_163;

        goto frame_exception_exit_12;
        // End of try:
        try_end_55:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_34__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_34__bases_orig);
        tmp_QtWidgets$class_creation_34__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_34__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_34__bases);
        tmp_QtWidgets$class_creation_34__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_34__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_34__class_decl_dict);
        tmp_QtWidgets$class_creation_34__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_34__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_34__metaclass);
        tmp_QtWidgets$class_creation_34__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_34__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_34__prepared);
        tmp_QtWidgets$class_creation_34__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_413;
            PyObject *tmp_tuple_element_217;
            PyObject *tmp_mvar_value_50;
            tmp_tuple_element_217 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_217 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_50 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_50 == NULL)) {
                        tmp_mvar_value_50 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_50 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 363;
                        type_description_2 = "o";
                        goto try_except_handler_167;
                    }

                    tmp_tuple_element_217 = tmp_mvar_value_50;
                    Py_INCREF(tmp_tuple_element_217);
                }
            }

            tmp_assign_source_413 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_413, 0, tmp_tuple_element_217);
            assert(tmp_QtWidgets$class_creation_35__bases_orig == NULL);
            tmp_QtWidgets$class_creation_35__bases_orig = tmp_assign_source_413;
        }
        {
            PyObject *tmp_assign_source_414;
            PyObject *tmp_dircall_arg1_56;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases_orig);
            tmp_dircall_arg1_56 = tmp_QtWidgets$class_creation_35__bases_orig;
            Py_INCREF(tmp_dircall_arg1_56);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_56};
                tmp_assign_source_414 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_414 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            assert(tmp_QtWidgets$class_creation_35__bases == NULL);
            tmp_QtWidgets$class_creation_35__bases = tmp_assign_source_414;
        }
        {
            PyObject *tmp_assign_source_415;
            tmp_assign_source_415 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_35__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_35__class_decl_dict = tmp_assign_source_415;
        }
        {
            PyObject *tmp_assign_source_416;
            PyObject *tmp_metaclass_name_56;
            nuitka_bool tmp_condition_result_333;
            PyObject *tmp_key_name_166;
            PyObject *tmp_dict_name_166;
            PyObject *tmp_dict_name_167;
            PyObject *tmp_key_name_167;
            nuitka_bool tmp_condition_result_334;
            int tmp_truth_name_56;
            PyObject *tmp_type_arg_111;
            PyObject *tmp_subscribed_name_56;
            PyObject *tmp_subscript_name_56;
            PyObject *tmp_bases_name_56;
            tmp_key_name_166 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__class_decl_dict);
            tmp_dict_name_166 = tmp_QtWidgets$class_creation_35__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_166, tmp_key_name_166);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            tmp_condition_result_333 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_333 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_113;
            } else {
                goto condexpr_false_113;
            }
            condexpr_true_113:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__class_decl_dict);
            tmp_dict_name_167 = tmp_QtWidgets$class_creation_35__class_decl_dict;
            tmp_key_name_167 = const_str_plain_metaclass;
            tmp_metaclass_name_56 = DICT_GET_ITEM(tmp_dict_name_167, tmp_key_name_167);
            if (tmp_metaclass_name_56 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            goto condexpr_end_113;
            condexpr_false_113:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases);
            tmp_truth_name_56 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_35__bases);
            if (tmp_truth_name_56 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            tmp_condition_result_334 = tmp_truth_name_56 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_334 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_114;
            } else {
                goto condexpr_false_114;
            }
            condexpr_true_114:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases);
            tmp_subscribed_name_56 = tmp_QtWidgets$class_creation_35__bases;
            tmp_subscript_name_56 = const_int_0;
            tmp_type_arg_111 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_56, tmp_subscript_name_56, 0);
            if (tmp_type_arg_111 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            tmp_metaclass_name_56 = BUILTIN_TYPE1(tmp_type_arg_111);
            Py_DECREF(tmp_type_arg_111);
            if (tmp_metaclass_name_56 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            goto condexpr_end_114;
            condexpr_false_114:;
            tmp_metaclass_name_56 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_56);
            condexpr_end_114:;
            condexpr_end_113:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases);
            tmp_bases_name_56 = tmp_QtWidgets$class_creation_35__bases;
            tmp_assign_source_416 = SELECT_METACLASS(tmp_metaclass_name_56, tmp_bases_name_56);
            Py_DECREF(tmp_metaclass_name_56);
            if (tmp_assign_source_416 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            assert(tmp_QtWidgets$class_creation_35__metaclass == NULL);
            tmp_QtWidgets$class_creation_35__metaclass = tmp_assign_source_416;
        }
        {
            nuitka_bool tmp_condition_result_335;
            PyObject *tmp_key_name_168;
            PyObject *tmp_dict_name_168;
            tmp_key_name_168 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__class_decl_dict);
            tmp_dict_name_168 = tmp_QtWidgets$class_creation_35__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_168, tmp_key_name_168);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            tmp_condition_result_335 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_335 == NUITKA_BOOL_TRUE) {
                goto branch_yes_221;
            } else {
                goto branch_no_221;
            }
            branch_yes_221:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_35__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_167;
            }
            branch_no_221:;
        }
        {
            nuitka_bool tmp_condition_result_336;
            PyObject *tmp_source_name_228;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__metaclass);
            tmp_source_name_228 = tmp_QtWidgets$class_creation_35__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_228, const_str_plain___prepare__);
            tmp_condition_result_336 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_336 == NUITKA_BOOL_TRUE) {
                goto branch_yes_222;
            } else {
                goto branch_no_222;
            }
            branch_yes_222:;
            {
                PyObject *tmp_assign_source_417;
                PyObject *tmp_called_name_112;
                PyObject *tmp_source_name_229;
                PyObject *tmp_args_name_110;
                PyObject *tmp_tuple_element_218;
                PyObject *tmp_kw_name_110;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_35__metaclass);
                tmp_source_name_229 = tmp_QtWidgets$class_creation_35__metaclass;
                tmp_called_name_112 = LOOKUP_ATTRIBUTE(tmp_source_name_229, const_str_plain___prepare__);
                if (tmp_called_name_112 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 363;
                    type_description_2 = "o";
                    goto try_except_handler_167;
                }
                tmp_tuple_element_218 = const_str_plain_QFrame;
                tmp_args_name_110 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_218);
                PyTuple_SET_ITEM(tmp_args_name_110, 0, tmp_tuple_element_218);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases);
                tmp_tuple_element_218 = tmp_QtWidgets$class_creation_35__bases;
                Py_INCREF(tmp_tuple_element_218);
                PyTuple_SET_ITEM(tmp_args_name_110, 1, tmp_tuple_element_218);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_35__class_decl_dict);
                tmp_kw_name_110 = tmp_QtWidgets$class_creation_35__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 363;
                tmp_assign_source_417 = CALL_FUNCTION(tmp_called_name_112, tmp_args_name_110, tmp_kw_name_110);
                Py_DECREF(tmp_called_name_112);
                Py_DECREF(tmp_args_name_110);
                if (tmp_assign_source_417 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 363;
                    type_description_2 = "o";
                    goto try_except_handler_167;
                }
                assert(tmp_QtWidgets$class_creation_35__prepared == NULL);
                tmp_QtWidgets$class_creation_35__prepared = tmp_assign_source_417;
            }
            {
                nuitka_bool tmp_condition_result_337;
                PyObject *tmp_operand_name_56;
                PyObject *tmp_source_name_230;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_35__prepared);
                tmp_source_name_230 = tmp_QtWidgets$class_creation_35__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_230, const_str_plain___getitem__);
                tmp_operand_name_56 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_56);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 363;
                    type_description_2 = "o";
                    goto try_except_handler_167;
                }
                tmp_condition_result_337 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_337 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_223;
                } else {
                    goto branch_no_223;
                }
                branch_yes_223:;
                {
                    PyObject *tmp_raise_type_56;
                    PyObject *tmp_raise_value_56;
                    PyObject *tmp_left_name_56;
                    PyObject *tmp_right_name_56;
                    PyObject *tmp_tuple_element_219;
                    PyObject *tmp_getattr_target_56;
                    PyObject *tmp_getattr_attr_56;
                    PyObject *tmp_getattr_default_56;
                    PyObject *tmp_source_name_231;
                    PyObject *tmp_type_arg_112;
                    tmp_raise_type_56 = PyExc_TypeError;
                    tmp_left_name_56 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_35__metaclass);
                    tmp_getattr_target_56 = tmp_QtWidgets$class_creation_35__metaclass;
                    tmp_getattr_attr_56 = const_str_plain___name__;
                    tmp_getattr_default_56 = const_str_angle_metaclass;
                    tmp_tuple_element_219 = BUILTIN_GETATTR(tmp_getattr_target_56, tmp_getattr_attr_56, tmp_getattr_default_56);
                    if (tmp_tuple_element_219 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 363;
                        type_description_2 = "o";
                        goto try_except_handler_167;
                    }
                    tmp_right_name_56 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_56, 0, tmp_tuple_element_219);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_35__prepared);
                    tmp_type_arg_112 = tmp_QtWidgets$class_creation_35__prepared;
                    tmp_source_name_231 = BUILTIN_TYPE1(tmp_type_arg_112);
                    assert(!(tmp_source_name_231 == NULL));
                    tmp_tuple_element_219 = LOOKUP_ATTRIBUTE(tmp_source_name_231, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_231);
                    if (tmp_tuple_element_219 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_56);

                        exception_lineno = 363;
                        type_description_2 = "o";
                        goto try_except_handler_167;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_56, 1, tmp_tuple_element_219);
                    tmp_raise_value_56 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_56, tmp_right_name_56);
                    Py_DECREF(tmp_right_name_56);
                    if (tmp_raise_value_56 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 363;
                        type_description_2 = "o";
                        goto try_except_handler_167;
                    }
                    exception_type = tmp_raise_type_56;
                    Py_INCREF(tmp_raise_type_56);
                    exception_value = tmp_raise_value_56;
                    exception_lineno = 363;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_167;
                }
                branch_no_223:;
            }
            goto branch_end_222;
            branch_no_222:;
            {
                PyObject *tmp_assign_source_418;
                tmp_assign_source_418 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_35__prepared == NULL);
                tmp_QtWidgets$class_creation_35__prepared = tmp_assign_source_418;
            }
            branch_end_222:;
        }
        {
            PyObject *tmp_set_locals_56;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__prepared);
            tmp_set_locals_56 = tmp_QtWidgets$class_creation_35__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_363 = tmp_set_locals_56;
            Py_INCREF(tmp_set_locals_56);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_363, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 363;
            type_description_2 = "o";
            goto try_except_handler_169;
        }
        tmp_dictset_value = const_str_digest_d6e45e8670c28df2e5e320fbb80bb88a;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_363, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 363;
            type_description_2 = "o";
            goto try_except_handler_169;
        }
        {
            nuitka_bool tmp_condition_result_338;
            PyObject *tmp_compexpr_left_56;
            PyObject *tmp_compexpr_right_56;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases);
            tmp_compexpr_left_56 = tmp_QtWidgets$class_creation_35__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases_orig);
            tmp_compexpr_right_56 = tmp_QtWidgets$class_creation_35__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_56, tmp_compexpr_right_56);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_169;
            }
            tmp_condition_result_338 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_338 == NUITKA_BOOL_TRUE) {
                goto branch_yes_224;
            } else {
                goto branch_no_224;
            }
            branch_yes_224:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_35__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_363, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_169;
            }
            branch_no_224:;
        }
        {
            PyObject *tmp_assign_source_419;
            PyObject *tmp_called_name_113;
            PyObject *tmp_args_name_111;
            PyObject *tmp_tuple_element_220;
            PyObject *tmp_kw_name_111;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__metaclass);
            tmp_called_name_113 = tmp_QtWidgets$class_creation_35__metaclass;
            tmp_tuple_element_220 = const_str_plain_QFrame;
            tmp_args_name_111 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_220);
            PyTuple_SET_ITEM(tmp_args_name_111, 0, tmp_tuple_element_220);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__bases);
            tmp_tuple_element_220 = tmp_QtWidgets$class_creation_35__bases;
            Py_INCREF(tmp_tuple_element_220);
            PyTuple_SET_ITEM(tmp_args_name_111, 1, tmp_tuple_element_220);
            tmp_tuple_element_220 = locals_PyQt5$uic$Compiler$qtproxies_363;
            Py_INCREF(tmp_tuple_element_220);
            PyTuple_SET_ITEM(tmp_args_name_111, 2, tmp_tuple_element_220);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_35__class_decl_dict);
            tmp_kw_name_111 = tmp_QtWidgets$class_creation_35__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 363;
            tmp_assign_source_419 = CALL_FUNCTION(tmp_called_name_113, tmp_args_name_111, tmp_kw_name_111);
            Py_DECREF(tmp_args_name_111);
            if (tmp_assign_source_419 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 363;
                type_description_2 = "o";
                goto try_except_handler_169;
            }
            assert(outline_55_var___class__ == NULL);
            outline_55_var___class__ = tmp_assign_source_419;
        }
        CHECK_OBJECT(outline_55_var___class__);
        tmp_dictset_value = outline_55_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_169;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_169:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_363);
        locals_PyQt5$uic$Compiler$qtproxies_363 = NULL;
        goto try_return_handler_168;
        // Exception handler code:
        try_except_handler_169:;
        exception_keeper_type_164 = exception_type;
        exception_keeper_value_164 = exception_value;
        exception_keeper_tb_164 = exception_tb;
        exception_keeper_lineno_164 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_363);
        locals_PyQt5$uic$Compiler$qtproxies_363 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_164;
        exception_value = exception_keeper_value_164;
        exception_tb = exception_keeper_tb_164;
        exception_lineno = exception_keeper_lineno_164;

        goto try_except_handler_168;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_168:;
        CHECK_OBJECT((PyObject *)outline_55_var___class__);
        Py_DECREF(outline_55_var___class__);
        outline_55_var___class__ = NULL;

        goto outline_result_56;
        // Exception handler code:
        try_except_handler_168:;
        exception_keeper_type_165 = exception_type;
        exception_keeper_value_165 = exception_value;
        exception_keeper_tb_165 = exception_tb;
        exception_keeper_lineno_165 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_165;
        exception_value = exception_keeper_value_165;
        exception_tb = exception_keeper_tb_165;
        exception_lineno = exception_keeper_lineno_165;

        goto outline_exception_56;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_56:;
        exception_lineno = 363;
        goto try_except_handler_167;
        outline_result_56:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFrame, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 363;
            type_description_2 = "o";
            goto try_except_handler_167;
        }
        goto try_end_56;
        // Exception handler code:
        try_except_handler_167:;
        exception_keeper_type_166 = exception_type;
        exception_keeper_value_166 = exception_value;
        exception_keeper_tb_166 = exception_tb;
        exception_keeper_lineno_166 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_35__bases_orig);
        tmp_QtWidgets$class_creation_35__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_35__bases);
        tmp_QtWidgets$class_creation_35__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_35__class_decl_dict);
        tmp_QtWidgets$class_creation_35__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_35__metaclass);
        tmp_QtWidgets$class_creation_35__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_35__prepared);
        tmp_QtWidgets$class_creation_35__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_166;
        exception_value = exception_keeper_value_166;
        exception_tb = exception_keeper_tb_166;
        exception_lineno = exception_keeper_lineno_166;

        goto frame_exception_exit_12;
        // End of try:
        try_end_56:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_35__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_35__bases_orig);
        tmp_QtWidgets$class_creation_35__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_35__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_35__bases);
        tmp_QtWidgets$class_creation_35__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_35__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_35__class_decl_dict);
        tmp_QtWidgets$class_creation_35__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_35__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_35__metaclass);
        tmp_QtWidgets$class_creation_35__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_35__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_35__prepared);
        tmp_QtWidgets$class_creation_35__prepared = NULL;

        {
            PyObject *tmp_assign_source_420;
            PyObject *tmp_tuple_element_221;
            tmp_tuple_element_221 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFrame);

            if (tmp_tuple_element_221 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1790 ], 28, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 364;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_221 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_420 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_420, 0, tmp_tuple_element_221);
            assert(tmp_QtWidgets$class_creation_36__bases_orig == NULL);
            tmp_QtWidgets$class_creation_36__bases_orig = tmp_assign_source_420;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_421;
            PyObject *tmp_dircall_arg1_57;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases_orig);
            tmp_dircall_arg1_57 = tmp_QtWidgets$class_creation_36__bases_orig;
            Py_INCREF(tmp_dircall_arg1_57);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_57};
                tmp_assign_source_421 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_421 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            assert(tmp_QtWidgets$class_creation_36__bases == NULL);
            tmp_QtWidgets$class_creation_36__bases = tmp_assign_source_421;
        }
        {
            PyObject *tmp_assign_source_422;
            tmp_assign_source_422 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_36__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_36__class_decl_dict = tmp_assign_source_422;
        }
        {
            PyObject *tmp_assign_source_423;
            PyObject *tmp_metaclass_name_57;
            nuitka_bool tmp_condition_result_339;
            PyObject *tmp_key_name_169;
            PyObject *tmp_dict_name_169;
            PyObject *tmp_dict_name_170;
            PyObject *tmp_key_name_170;
            nuitka_bool tmp_condition_result_340;
            int tmp_truth_name_57;
            PyObject *tmp_type_arg_113;
            PyObject *tmp_subscribed_name_57;
            PyObject *tmp_subscript_name_57;
            PyObject *tmp_bases_name_57;
            tmp_key_name_169 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__class_decl_dict);
            tmp_dict_name_169 = tmp_QtWidgets$class_creation_36__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_169, tmp_key_name_169);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            tmp_condition_result_339 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_339 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_115;
            } else {
                goto condexpr_false_115;
            }
            condexpr_true_115:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__class_decl_dict);
            tmp_dict_name_170 = tmp_QtWidgets$class_creation_36__class_decl_dict;
            tmp_key_name_170 = const_str_plain_metaclass;
            tmp_metaclass_name_57 = DICT_GET_ITEM(tmp_dict_name_170, tmp_key_name_170);
            if (tmp_metaclass_name_57 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            goto condexpr_end_115;
            condexpr_false_115:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases);
            tmp_truth_name_57 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_36__bases);
            if (tmp_truth_name_57 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            tmp_condition_result_340 = tmp_truth_name_57 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_340 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_116;
            } else {
                goto condexpr_false_116;
            }
            condexpr_true_116:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases);
            tmp_subscribed_name_57 = tmp_QtWidgets$class_creation_36__bases;
            tmp_subscript_name_57 = const_int_0;
            tmp_type_arg_113 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_57, tmp_subscript_name_57, 0);
            if (tmp_type_arg_113 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            tmp_metaclass_name_57 = BUILTIN_TYPE1(tmp_type_arg_113);
            Py_DECREF(tmp_type_arg_113);
            if (tmp_metaclass_name_57 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            goto condexpr_end_116;
            condexpr_false_116:;
            tmp_metaclass_name_57 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_57);
            condexpr_end_116:;
            condexpr_end_115:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases);
            tmp_bases_name_57 = tmp_QtWidgets$class_creation_36__bases;
            tmp_assign_source_423 = SELECT_METACLASS(tmp_metaclass_name_57, tmp_bases_name_57);
            Py_DECREF(tmp_metaclass_name_57);
            if (tmp_assign_source_423 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            assert(tmp_QtWidgets$class_creation_36__metaclass == NULL);
            tmp_QtWidgets$class_creation_36__metaclass = tmp_assign_source_423;
        }
        {
            nuitka_bool tmp_condition_result_341;
            PyObject *tmp_key_name_171;
            PyObject *tmp_dict_name_171;
            tmp_key_name_171 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__class_decl_dict);
            tmp_dict_name_171 = tmp_QtWidgets$class_creation_36__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_171, tmp_key_name_171);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            tmp_condition_result_341 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_341 == NUITKA_BOOL_TRUE) {
                goto branch_yes_225;
            } else {
                goto branch_no_225;
            }
            branch_yes_225:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_36__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_170;
            }
            branch_no_225:;
        }
        {
            nuitka_bool tmp_condition_result_342;
            PyObject *tmp_source_name_232;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__metaclass);
            tmp_source_name_232 = tmp_QtWidgets$class_creation_36__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_232, const_str_plain___prepare__);
            tmp_condition_result_342 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_342 == NUITKA_BOOL_TRUE) {
                goto branch_yes_226;
            } else {
                goto branch_no_226;
            }
            branch_yes_226:;
            {
                PyObject *tmp_assign_source_424;
                PyObject *tmp_called_name_114;
                PyObject *tmp_source_name_233;
                PyObject *tmp_args_name_112;
                PyObject *tmp_tuple_element_222;
                PyObject *tmp_kw_name_112;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_36__metaclass);
                tmp_source_name_233 = tmp_QtWidgets$class_creation_36__metaclass;
                tmp_called_name_114 = LOOKUP_ATTRIBUTE(tmp_source_name_233, const_str_plain___prepare__);
                if (tmp_called_name_114 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 364;
                    type_description_2 = "o";
                    goto try_except_handler_170;
                }
                tmp_tuple_element_222 = const_str_plain_QLabel;
                tmp_args_name_112 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_222);
                PyTuple_SET_ITEM(tmp_args_name_112, 0, tmp_tuple_element_222);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases);
                tmp_tuple_element_222 = tmp_QtWidgets$class_creation_36__bases;
                Py_INCREF(tmp_tuple_element_222);
                PyTuple_SET_ITEM(tmp_args_name_112, 1, tmp_tuple_element_222);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_36__class_decl_dict);
                tmp_kw_name_112 = tmp_QtWidgets$class_creation_36__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 364;
                tmp_assign_source_424 = CALL_FUNCTION(tmp_called_name_114, tmp_args_name_112, tmp_kw_name_112);
                Py_DECREF(tmp_called_name_114);
                Py_DECREF(tmp_args_name_112);
                if (tmp_assign_source_424 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 364;
                    type_description_2 = "o";
                    goto try_except_handler_170;
                }
                assert(tmp_QtWidgets$class_creation_36__prepared == NULL);
                tmp_QtWidgets$class_creation_36__prepared = tmp_assign_source_424;
            }
            {
                nuitka_bool tmp_condition_result_343;
                PyObject *tmp_operand_name_57;
                PyObject *tmp_source_name_234;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_36__prepared);
                tmp_source_name_234 = tmp_QtWidgets$class_creation_36__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_234, const_str_plain___getitem__);
                tmp_operand_name_57 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_57);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 364;
                    type_description_2 = "o";
                    goto try_except_handler_170;
                }
                tmp_condition_result_343 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_343 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_227;
                } else {
                    goto branch_no_227;
                }
                branch_yes_227:;
                {
                    PyObject *tmp_raise_type_57;
                    PyObject *tmp_raise_value_57;
                    PyObject *tmp_left_name_57;
                    PyObject *tmp_right_name_57;
                    PyObject *tmp_tuple_element_223;
                    PyObject *tmp_getattr_target_57;
                    PyObject *tmp_getattr_attr_57;
                    PyObject *tmp_getattr_default_57;
                    PyObject *tmp_source_name_235;
                    PyObject *tmp_type_arg_114;
                    tmp_raise_type_57 = PyExc_TypeError;
                    tmp_left_name_57 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_36__metaclass);
                    tmp_getattr_target_57 = tmp_QtWidgets$class_creation_36__metaclass;
                    tmp_getattr_attr_57 = const_str_plain___name__;
                    tmp_getattr_default_57 = const_str_angle_metaclass;
                    tmp_tuple_element_223 = BUILTIN_GETATTR(tmp_getattr_target_57, tmp_getattr_attr_57, tmp_getattr_default_57);
                    if (tmp_tuple_element_223 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 364;
                        type_description_2 = "o";
                        goto try_except_handler_170;
                    }
                    tmp_right_name_57 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_57, 0, tmp_tuple_element_223);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_36__prepared);
                    tmp_type_arg_114 = tmp_QtWidgets$class_creation_36__prepared;
                    tmp_source_name_235 = BUILTIN_TYPE1(tmp_type_arg_114);
                    assert(!(tmp_source_name_235 == NULL));
                    tmp_tuple_element_223 = LOOKUP_ATTRIBUTE(tmp_source_name_235, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_235);
                    if (tmp_tuple_element_223 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_57);

                        exception_lineno = 364;
                        type_description_2 = "o";
                        goto try_except_handler_170;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_57, 1, tmp_tuple_element_223);
                    tmp_raise_value_57 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_57, tmp_right_name_57);
                    Py_DECREF(tmp_right_name_57);
                    if (tmp_raise_value_57 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 364;
                        type_description_2 = "o";
                        goto try_except_handler_170;
                    }
                    exception_type = tmp_raise_type_57;
                    Py_INCREF(tmp_raise_type_57);
                    exception_value = tmp_raise_value_57;
                    exception_lineno = 364;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_170;
                }
                branch_no_227:;
            }
            goto branch_end_226;
            branch_no_226:;
            {
                PyObject *tmp_assign_source_425;
                tmp_assign_source_425 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_36__prepared == NULL);
                tmp_QtWidgets$class_creation_36__prepared = tmp_assign_source_425;
            }
            branch_end_226:;
        }
        {
            PyObject *tmp_set_locals_57;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__prepared);
            tmp_set_locals_57 = tmp_QtWidgets$class_creation_36__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_364 = tmp_set_locals_57;
            Py_INCREF(tmp_set_locals_57);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_364, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;
            type_description_2 = "o";
            goto try_except_handler_172;
        }
        tmp_dictset_value = const_str_digest_c2d708a87186ecd7982a3b92a662625c;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_364, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;
            type_description_2 = "o";
            goto try_except_handler_172;
        }
        {
            nuitka_bool tmp_condition_result_344;
            PyObject *tmp_compexpr_left_57;
            PyObject *tmp_compexpr_right_57;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases);
            tmp_compexpr_left_57 = tmp_QtWidgets$class_creation_36__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases_orig);
            tmp_compexpr_right_57 = tmp_QtWidgets$class_creation_36__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_57, tmp_compexpr_right_57);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_172;
            }
            tmp_condition_result_344 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_344 == NUITKA_BOOL_TRUE) {
                goto branch_yes_228;
            } else {
                goto branch_no_228;
            }
            branch_yes_228:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_36__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_364, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_172;
            }
            branch_no_228:;
        }
        {
            PyObject *tmp_assign_source_426;
            PyObject *tmp_called_name_115;
            PyObject *tmp_args_name_113;
            PyObject *tmp_tuple_element_224;
            PyObject *tmp_kw_name_113;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__metaclass);
            tmp_called_name_115 = tmp_QtWidgets$class_creation_36__metaclass;
            tmp_tuple_element_224 = const_str_plain_QLabel;
            tmp_args_name_113 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_224);
            PyTuple_SET_ITEM(tmp_args_name_113, 0, tmp_tuple_element_224);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__bases);
            tmp_tuple_element_224 = tmp_QtWidgets$class_creation_36__bases;
            Py_INCREF(tmp_tuple_element_224);
            PyTuple_SET_ITEM(tmp_args_name_113, 1, tmp_tuple_element_224);
            tmp_tuple_element_224 = locals_PyQt5$uic$Compiler$qtproxies_364;
            Py_INCREF(tmp_tuple_element_224);
            PyTuple_SET_ITEM(tmp_args_name_113, 2, tmp_tuple_element_224);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_36__class_decl_dict);
            tmp_kw_name_113 = tmp_QtWidgets$class_creation_36__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 364;
            tmp_assign_source_426 = CALL_FUNCTION(tmp_called_name_115, tmp_args_name_113, tmp_kw_name_113);
            Py_DECREF(tmp_args_name_113);
            if (tmp_assign_source_426 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_2 = "o";
                goto try_except_handler_172;
            }
            assert(outline_56_var___class__ == NULL);
            outline_56_var___class__ = tmp_assign_source_426;
        }
        CHECK_OBJECT(outline_56_var___class__);
        tmp_dictset_value = outline_56_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_172;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_172:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_364);
        locals_PyQt5$uic$Compiler$qtproxies_364 = NULL;
        goto try_return_handler_171;
        // Exception handler code:
        try_except_handler_172:;
        exception_keeper_type_167 = exception_type;
        exception_keeper_value_167 = exception_value;
        exception_keeper_tb_167 = exception_tb;
        exception_keeper_lineno_167 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_364);
        locals_PyQt5$uic$Compiler$qtproxies_364 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_167;
        exception_value = exception_keeper_value_167;
        exception_tb = exception_keeper_tb_167;
        exception_lineno = exception_keeper_lineno_167;

        goto try_except_handler_171;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_171:;
        CHECK_OBJECT((PyObject *)outline_56_var___class__);
        Py_DECREF(outline_56_var___class__);
        outline_56_var___class__ = NULL;

        goto outline_result_57;
        // Exception handler code:
        try_except_handler_171:;
        exception_keeper_type_168 = exception_type;
        exception_keeper_value_168 = exception_value;
        exception_keeper_tb_168 = exception_tb;
        exception_keeper_lineno_168 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_168;
        exception_value = exception_keeper_value_168;
        exception_tb = exception_keeper_tb_168;
        exception_lineno = exception_keeper_lineno_168;

        goto outline_exception_57;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_57:;
        exception_lineno = 364;
        goto try_except_handler_170;
        outline_result_57:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QLabel, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;
            type_description_2 = "o";
            goto try_except_handler_170;
        }
        goto try_end_57;
        // Exception handler code:
        try_except_handler_170:;
        exception_keeper_type_169 = exception_type;
        exception_keeper_value_169 = exception_value;
        exception_keeper_tb_169 = exception_tb;
        exception_keeper_lineno_169 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_36__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_36__bases_orig);
        tmp_QtWidgets$class_creation_36__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_36__bases);
        tmp_QtWidgets$class_creation_36__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_36__class_decl_dict);
        tmp_QtWidgets$class_creation_36__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_36__metaclass);
        tmp_QtWidgets$class_creation_36__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_36__prepared);
        tmp_QtWidgets$class_creation_36__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_169;
        exception_value = exception_keeper_value_169;
        exception_tb = exception_keeper_tb_169;
        exception_lineno = exception_keeper_lineno_169;

        goto frame_exception_exit_12;
        // End of try:
        try_end_57:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_36__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_36__bases_orig);
        tmp_QtWidgets$class_creation_36__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_36__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_36__bases);
        tmp_QtWidgets$class_creation_36__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_36__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_36__class_decl_dict);
        tmp_QtWidgets$class_creation_36__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_36__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_36__metaclass);
        tmp_QtWidgets$class_creation_36__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_36__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_36__prepared);
        tmp_QtWidgets$class_creation_36__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_427;
            PyObject *tmp_tuple_element_225;
            PyObject *tmp_mvar_value_51;
            tmp_tuple_element_225 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFrame);

            if (tmp_tuple_element_225 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_51 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QFrame);

                    if (unlikely(tmp_mvar_value_51 == NULL)) {
                        tmp_mvar_value_51 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QFrame);
                    }

                    if (tmp_mvar_value_51 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1790 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 365;
                        type_description_2 = "o";
                        goto try_except_handler_173;
                    }

                    tmp_tuple_element_225 = tmp_mvar_value_51;
                    Py_INCREF(tmp_tuple_element_225);
                }
            }

            tmp_assign_source_427 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_427, 0, tmp_tuple_element_225);
            assert(tmp_QtWidgets$class_creation_37__bases_orig == NULL);
            tmp_QtWidgets$class_creation_37__bases_orig = tmp_assign_source_427;
        }
        {
            PyObject *tmp_assign_source_428;
            PyObject *tmp_dircall_arg1_58;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases_orig);
            tmp_dircall_arg1_58 = tmp_QtWidgets$class_creation_37__bases_orig;
            Py_INCREF(tmp_dircall_arg1_58);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_58};
                tmp_assign_source_428 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_428 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            assert(tmp_QtWidgets$class_creation_37__bases == NULL);
            tmp_QtWidgets$class_creation_37__bases = tmp_assign_source_428;
        }
        {
            PyObject *tmp_assign_source_429;
            tmp_assign_source_429 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_37__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_37__class_decl_dict = tmp_assign_source_429;
        }
        {
            PyObject *tmp_assign_source_430;
            PyObject *tmp_metaclass_name_58;
            nuitka_bool tmp_condition_result_345;
            PyObject *tmp_key_name_172;
            PyObject *tmp_dict_name_172;
            PyObject *tmp_dict_name_173;
            PyObject *tmp_key_name_173;
            nuitka_bool tmp_condition_result_346;
            int tmp_truth_name_58;
            PyObject *tmp_type_arg_115;
            PyObject *tmp_subscribed_name_58;
            PyObject *tmp_subscript_name_58;
            PyObject *tmp_bases_name_58;
            tmp_key_name_172 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__class_decl_dict);
            tmp_dict_name_172 = tmp_QtWidgets$class_creation_37__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_172, tmp_key_name_172);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            tmp_condition_result_345 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_345 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_117;
            } else {
                goto condexpr_false_117;
            }
            condexpr_true_117:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__class_decl_dict);
            tmp_dict_name_173 = tmp_QtWidgets$class_creation_37__class_decl_dict;
            tmp_key_name_173 = const_str_plain_metaclass;
            tmp_metaclass_name_58 = DICT_GET_ITEM(tmp_dict_name_173, tmp_key_name_173);
            if (tmp_metaclass_name_58 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            goto condexpr_end_117;
            condexpr_false_117:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases);
            tmp_truth_name_58 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_37__bases);
            if (tmp_truth_name_58 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            tmp_condition_result_346 = tmp_truth_name_58 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_346 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_118;
            } else {
                goto condexpr_false_118;
            }
            condexpr_true_118:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases);
            tmp_subscribed_name_58 = tmp_QtWidgets$class_creation_37__bases;
            tmp_subscript_name_58 = const_int_0;
            tmp_type_arg_115 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_58, tmp_subscript_name_58, 0);
            if (tmp_type_arg_115 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            tmp_metaclass_name_58 = BUILTIN_TYPE1(tmp_type_arg_115);
            Py_DECREF(tmp_type_arg_115);
            if (tmp_metaclass_name_58 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            goto condexpr_end_118;
            condexpr_false_118:;
            tmp_metaclass_name_58 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_58);
            condexpr_end_118:;
            condexpr_end_117:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases);
            tmp_bases_name_58 = tmp_QtWidgets$class_creation_37__bases;
            tmp_assign_source_430 = SELECT_METACLASS(tmp_metaclass_name_58, tmp_bases_name_58);
            Py_DECREF(tmp_metaclass_name_58);
            if (tmp_assign_source_430 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            assert(tmp_QtWidgets$class_creation_37__metaclass == NULL);
            tmp_QtWidgets$class_creation_37__metaclass = tmp_assign_source_430;
        }
        {
            nuitka_bool tmp_condition_result_347;
            PyObject *tmp_key_name_174;
            PyObject *tmp_dict_name_174;
            tmp_key_name_174 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__class_decl_dict);
            tmp_dict_name_174 = tmp_QtWidgets$class_creation_37__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_174, tmp_key_name_174);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            tmp_condition_result_347 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_347 == NUITKA_BOOL_TRUE) {
                goto branch_yes_229;
            } else {
                goto branch_no_229;
            }
            branch_yes_229:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_37__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_173;
            }
            branch_no_229:;
        }
        {
            nuitka_bool tmp_condition_result_348;
            PyObject *tmp_source_name_236;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__metaclass);
            tmp_source_name_236 = tmp_QtWidgets$class_creation_37__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_236, const_str_plain___prepare__);
            tmp_condition_result_348 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_348 == NUITKA_BOOL_TRUE) {
                goto branch_yes_230;
            } else {
                goto branch_no_230;
            }
            branch_yes_230:;
            {
                PyObject *tmp_assign_source_431;
                PyObject *tmp_called_name_116;
                PyObject *tmp_source_name_237;
                PyObject *tmp_args_name_114;
                PyObject *tmp_tuple_element_226;
                PyObject *tmp_kw_name_114;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_37__metaclass);
                tmp_source_name_237 = tmp_QtWidgets$class_creation_37__metaclass;
                tmp_called_name_116 = LOOKUP_ATTRIBUTE(tmp_source_name_237, const_str_plain___prepare__);
                if (tmp_called_name_116 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 365;
                    type_description_2 = "o";
                    goto try_except_handler_173;
                }
                tmp_tuple_element_226 = const_str_plain_QLCDNumber;
                tmp_args_name_114 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_226);
                PyTuple_SET_ITEM(tmp_args_name_114, 0, tmp_tuple_element_226);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases);
                tmp_tuple_element_226 = tmp_QtWidgets$class_creation_37__bases;
                Py_INCREF(tmp_tuple_element_226);
                PyTuple_SET_ITEM(tmp_args_name_114, 1, tmp_tuple_element_226);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_37__class_decl_dict);
                tmp_kw_name_114 = tmp_QtWidgets$class_creation_37__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 365;
                tmp_assign_source_431 = CALL_FUNCTION(tmp_called_name_116, tmp_args_name_114, tmp_kw_name_114);
                Py_DECREF(tmp_called_name_116);
                Py_DECREF(tmp_args_name_114);
                if (tmp_assign_source_431 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 365;
                    type_description_2 = "o";
                    goto try_except_handler_173;
                }
                assert(tmp_QtWidgets$class_creation_37__prepared == NULL);
                tmp_QtWidgets$class_creation_37__prepared = tmp_assign_source_431;
            }
            {
                nuitka_bool tmp_condition_result_349;
                PyObject *tmp_operand_name_58;
                PyObject *tmp_source_name_238;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_37__prepared);
                tmp_source_name_238 = tmp_QtWidgets$class_creation_37__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_238, const_str_plain___getitem__);
                tmp_operand_name_58 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_58);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 365;
                    type_description_2 = "o";
                    goto try_except_handler_173;
                }
                tmp_condition_result_349 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_349 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_231;
                } else {
                    goto branch_no_231;
                }
                branch_yes_231:;
                {
                    PyObject *tmp_raise_type_58;
                    PyObject *tmp_raise_value_58;
                    PyObject *tmp_left_name_58;
                    PyObject *tmp_right_name_58;
                    PyObject *tmp_tuple_element_227;
                    PyObject *tmp_getattr_target_58;
                    PyObject *tmp_getattr_attr_58;
                    PyObject *tmp_getattr_default_58;
                    PyObject *tmp_source_name_239;
                    PyObject *tmp_type_arg_116;
                    tmp_raise_type_58 = PyExc_TypeError;
                    tmp_left_name_58 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_37__metaclass);
                    tmp_getattr_target_58 = tmp_QtWidgets$class_creation_37__metaclass;
                    tmp_getattr_attr_58 = const_str_plain___name__;
                    tmp_getattr_default_58 = const_str_angle_metaclass;
                    tmp_tuple_element_227 = BUILTIN_GETATTR(tmp_getattr_target_58, tmp_getattr_attr_58, tmp_getattr_default_58);
                    if (tmp_tuple_element_227 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 365;
                        type_description_2 = "o";
                        goto try_except_handler_173;
                    }
                    tmp_right_name_58 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_58, 0, tmp_tuple_element_227);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_37__prepared);
                    tmp_type_arg_116 = tmp_QtWidgets$class_creation_37__prepared;
                    tmp_source_name_239 = BUILTIN_TYPE1(tmp_type_arg_116);
                    assert(!(tmp_source_name_239 == NULL));
                    tmp_tuple_element_227 = LOOKUP_ATTRIBUTE(tmp_source_name_239, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_239);
                    if (tmp_tuple_element_227 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_58);

                        exception_lineno = 365;
                        type_description_2 = "o";
                        goto try_except_handler_173;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_58, 1, tmp_tuple_element_227);
                    tmp_raise_value_58 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_58, tmp_right_name_58);
                    Py_DECREF(tmp_right_name_58);
                    if (tmp_raise_value_58 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 365;
                        type_description_2 = "o";
                        goto try_except_handler_173;
                    }
                    exception_type = tmp_raise_type_58;
                    Py_INCREF(tmp_raise_type_58);
                    exception_value = tmp_raise_value_58;
                    exception_lineno = 365;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_173;
                }
                branch_no_231:;
            }
            goto branch_end_230;
            branch_no_230:;
            {
                PyObject *tmp_assign_source_432;
                tmp_assign_source_432 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_37__prepared == NULL);
                tmp_QtWidgets$class_creation_37__prepared = tmp_assign_source_432;
            }
            branch_end_230:;
        }
        {
            PyObject *tmp_set_locals_58;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__prepared);
            tmp_set_locals_58 = tmp_QtWidgets$class_creation_37__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_365 = tmp_set_locals_58;
            Py_INCREF(tmp_set_locals_58);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_365, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_2 = "o";
            goto try_except_handler_175;
        }
        tmp_dictset_value = const_str_digest_95f2c08a130f98bb2230089496c3e36d;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_365, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_2 = "o";
            goto try_except_handler_175;
        }
        {
            nuitka_bool tmp_condition_result_350;
            PyObject *tmp_compexpr_left_58;
            PyObject *tmp_compexpr_right_58;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases);
            tmp_compexpr_left_58 = tmp_QtWidgets$class_creation_37__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases_orig);
            tmp_compexpr_right_58 = tmp_QtWidgets$class_creation_37__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_58, tmp_compexpr_right_58);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_175;
            }
            tmp_condition_result_350 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_350 == NUITKA_BOOL_TRUE) {
                goto branch_yes_232;
            } else {
                goto branch_no_232;
            }
            branch_yes_232:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_37__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_365, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_175;
            }
            branch_no_232:;
        }
        {
            PyObject *tmp_assign_source_433;
            PyObject *tmp_called_name_117;
            PyObject *tmp_args_name_115;
            PyObject *tmp_tuple_element_228;
            PyObject *tmp_kw_name_115;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__metaclass);
            tmp_called_name_117 = tmp_QtWidgets$class_creation_37__metaclass;
            tmp_tuple_element_228 = const_str_plain_QLCDNumber;
            tmp_args_name_115 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_228);
            PyTuple_SET_ITEM(tmp_args_name_115, 0, tmp_tuple_element_228);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__bases);
            tmp_tuple_element_228 = tmp_QtWidgets$class_creation_37__bases;
            Py_INCREF(tmp_tuple_element_228);
            PyTuple_SET_ITEM(tmp_args_name_115, 1, tmp_tuple_element_228);
            tmp_tuple_element_228 = locals_PyQt5$uic$Compiler$qtproxies_365;
            Py_INCREF(tmp_tuple_element_228);
            PyTuple_SET_ITEM(tmp_args_name_115, 2, tmp_tuple_element_228);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_37__class_decl_dict);
            tmp_kw_name_115 = tmp_QtWidgets$class_creation_37__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 365;
            tmp_assign_source_433 = CALL_FUNCTION(tmp_called_name_117, tmp_args_name_115, tmp_kw_name_115);
            Py_DECREF(tmp_args_name_115);
            if (tmp_assign_source_433 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_2 = "o";
                goto try_except_handler_175;
            }
            assert(outline_57_var___class__ == NULL);
            outline_57_var___class__ = tmp_assign_source_433;
        }
        CHECK_OBJECT(outline_57_var___class__);
        tmp_dictset_value = outline_57_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_175;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_175:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_365);
        locals_PyQt5$uic$Compiler$qtproxies_365 = NULL;
        goto try_return_handler_174;
        // Exception handler code:
        try_except_handler_175:;
        exception_keeper_type_170 = exception_type;
        exception_keeper_value_170 = exception_value;
        exception_keeper_tb_170 = exception_tb;
        exception_keeper_lineno_170 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_365);
        locals_PyQt5$uic$Compiler$qtproxies_365 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_170;
        exception_value = exception_keeper_value_170;
        exception_tb = exception_keeper_tb_170;
        exception_lineno = exception_keeper_lineno_170;

        goto try_except_handler_174;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_174:;
        CHECK_OBJECT((PyObject *)outline_57_var___class__);
        Py_DECREF(outline_57_var___class__);
        outline_57_var___class__ = NULL;

        goto outline_result_58;
        // Exception handler code:
        try_except_handler_174:;
        exception_keeper_type_171 = exception_type;
        exception_keeper_value_171 = exception_value;
        exception_keeper_tb_171 = exception_tb;
        exception_keeper_lineno_171 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_171;
        exception_value = exception_keeper_value_171;
        exception_tb = exception_keeper_tb_171;
        exception_lineno = exception_keeper_lineno_171;

        goto outline_exception_58;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_58:;
        exception_lineno = 365;
        goto try_except_handler_173;
        outline_result_58:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QLCDNumber, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_2 = "o";
            goto try_except_handler_173;
        }
        goto try_end_58;
        // Exception handler code:
        try_except_handler_173:;
        exception_keeper_type_172 = exception_type;
        exception_keeper_value_172 = exception_value;
        exception_keeper_tb_172 = exception_tb;
        exception_keeper_lineno_172 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_37__bases_orig);
        tmp_QtWidgets$class_creation_37__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_37__bases);
        tmp_QtWidgets$class_creation_37__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_37__class_decl_dict);
        tmp_QtWidgets$class_creation_37__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_37__metaclass);
        tmp_QtWidgets$class_creation_37__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_37__prepared);
        tmp_QtWidgets$class_creation_37__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_172;
        exception_value = exception_keeper_value_172;
        exception_tb = exception_keeper_tb_172;
        exception_lineno = exception_keeper_lineno_172;

        goto frame_exception_exit_12;
        // End of try:
        try_end_58:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_37__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_37__bases_orig);
        tmp_QtWidgets$class_creation_37__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_37__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_37__bases);
        tmp_QtWidgets$class_creation_37__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_37__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_37__class_decl_dict);
        tmp_QtWidgets$class_creation_37__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_37__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_37__metaclass);
        tmp_QtWidgets$class_creation_37__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_37__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_37__prepared);
        tmp_QtWidgets$class_creation_37__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_434;
            PyObject *tmp_tuple_element_229;
            PyObject *tmp_mvar_value_52;
            tmp_tuple_element_229 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFrame);

            if (tmp_tuple_element_229 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_52 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QFrame);

                    if (unlikely(tmp_mvar_value_52 == NULL)) {
                        tmp_mvar_value_52 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QFrame);
                    }

                    if (tmp_mvar_value_52 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1790 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 366;
                        type_description_2 = "o";
                        goto try_except_handler_176;
                    }

                    tmp_tuple_element_229 = tmp_mvar_value_52;
                    Py_INCREF(tmp_tuple_element_229);
                }
            }

            tmp_assign_source_434 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_434, 0, tmp_tuple_element_229);
            assert(tmp_QtWidgets$class_creation_38__bases_orig == NULL);
            tmp_QtWidgets$class_creation_38__bases_orig = tmp_assign_source_434;
        }
        {
            PyObject *tmp_assign_source_435;
            PyObject *tmp_dircall_arg1_59;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases_orig);
            tmp_dircall_arg1_59 = tmp_QtWidgets$class_creation_38__bases_orig;
            Py_INCREF(tmp_dircall_arg1_59);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_59};
                tmp_assign_source_435 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_435 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            assert(tmp_QtWidgets$class_creation_38__bases == NULL);
            tmp_QtWidgets$class_creation_38__bases = tmp_assign_source_435;
        }
        {
            PyObject *tmp_assign_source_436;
            tmp_assign_source_436 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_38__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_38__class_decl_dict = tmp_assign_source_436;
        }
        {
            PyObject *tmp_assign_source_437;
            PyObject *tmp_metaclass_name_59;
            nuitka_bool tmp_condition_result_351;
            PyObject *tmp_key_name_175;
            PyObject *tmp_dict_name_175;
            PyObject *tmp_dict_name_176;
            PyObject *tmp_key_name_176;
            nuitka_bool tmp_condition_result_352;
            int tmp_truth_name_59;
            PyObject *tmp_type_arg_117;
            PyObject *tmp_subscribed_name_59;
            PyObject *tmp_subscript_name_59;
            PyObject *tmp_bases_name_59;
            tmp_key_name_175 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__class_decl_dict);
            tmp_dict_name_175 = tmp_QtWidgets$class_creation_38__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_175, tmp_key_name_175);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            tmp_condition_result_351 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_351 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_119;
            } else {
                goto condexpr_false_119;
            }
            condexpr_true_119:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__class_decl_dict);
            tmp_dict_name_176 = tmp_QtWidgets$class_creation_38__class_decl_dict;
            tmp_key_name_176 = const_str_plain_metaclass;
            tmp_metaclass_name_59 = DICT_GET_ITEM(tmp_dict_name_176, tmp_key_name_176);
            if (tmp_metaclass_name_59 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            goto condexpr_end_119;
            condexpr_false_119:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases);
            tmp_truth_name_59 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_38__bases);
            if (tmp_truth_name_59 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            tmp_condition_result_352 = tmp_truth_name_59 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_352 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_120;
            } else {
                goto condexpr_false_120;
            }
            condexpr_true_120:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases);
            tmp_subscribed_name_59 = tmp_QtWidgets$class_creation_38__bases;
            tmp_subscript_name_59 = const_int_0;
            tmp_type_arg_117 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_59, tmp_subscript_name_59, 0);
            if (tmp_type_arg_117 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            tmp_metaclass_name_59 = BUILTIN_TYPE1(tmp_type_arg_117);
            Py_DECREF(tmp_type_arg_117);
            if (tmp_metaclass_name_59 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            goto condexpr_end_120;
            condexpr_false_120:;
            tmp_metaclass_name_59 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_59);
            condexpr_end_120:;
            condexpr_end_119:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases);
            tmp_bases_name_59 = tmp_QtWidgets$class_creation_38__bases;
            tmp_assign_source_437 = SELECT_METACLASS(tmp_metaclass_name_59, tmp_bases_name_59);
            Py_DECREF(tmp_metaclass_name_59);
            if (tmp_assign_source_437 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            assert(tmp_QtWidgets$class_creation_38__metaclass == NULL);
            tmp_QtWidgets$class_creation_38__metaclass = tmp_assign_source_437;
        }
        {
            nuitka_bool tmp_condition_result_353;
            PyObject *tmp_key_name_177;
            PyObject *tmp_dict_name_177;
            tmp_key_name_177 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__class_decl_dict);
            tmp_dict_name_177 = tmp_QtWidgets$class_creation_38__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_177, tmp_key_name_177);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            tmp_condition_result_353 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_353 == NUITKA_BOOL_TRUE) {
                goto branch_yes_233;
            } else {
                goto branch_no_233;
            }
            branch_yes_233:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_38__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_176;
            }
            branch_no_233:;
        }
        {
            nuitka_bool tmp_condition_result_354;
            PyObject *tmp_source_name_240;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__metaclass);
            tmp_source_name_240 = tmp_QtWidgets$class_creation_38__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_240, const_str_plain___prepare__);
            tmp_condition_result_354 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_354 == NUITKA_BOOL_TRUE) {
                goto branch_yes_234;
            } else {
                goto branch_no_234;
            }
            branch_yes_234:;
            {
                PyObject *tmp_assign_source_438;
                PyObject *tmp_called_name_118;
                PyObject *tmp_source_name_241;
                PyObject *tmp_args_name_116;
                PyObject *tmp_tuple_element_230;
                PyObject *tmp_kw_name_116;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_38__metaclass);
                tmp_source_name_241 = tmp_QtWidgets$class_creation_38__metaclass;
                tmp_called_name_118 = LOOKUP_ATTRIBUTE(tmp_source_name_241, const_str_plain___prepare__);
                if (tmp_called_name_118 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 366;
                    type_description_2 = "o";
                    goto try_except_handler_176;
                }
                tmp_tuple_element_230 = const_str_plain_QSplitter;
                tmp_args_name_116 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_230);
                PyTuple_SET_ITEM(tmp_args_name_116, 0, tmp_tuple_element_230);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases);
                tmp_tuple_element_230 = tmp_QtWidgets$class_creation_38__bases;
                Py_INCREF(tmp_tuple_element_230);
                PyTuple_SET_ITEM(tmp_args_name_116, 1, tmp_tuple_element_230);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_38__class_decl_dict);
                tmp_kw_name_116 = tmp_QtWidgets$class_creation_38__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 366;
                tmp_assign_source_438 = CALL_FUNCTION(tmp_called_name_118, tmp_args_name_116, tmp_kw_name_116);
                Py_DECREF(tmp_called_name_118);
                Py_DECREF(tmp_args_name_116);
                if (tmp_assign_source_438 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 366;
                    type_description_2 = "o";
                    goto try_except_handler_176;
                }
                assert(tmp_QtWidgets$class_creation_38__prepared == NULL);
                tmp_QtWidgets$class_creation_38__prepared = tmp_assign_source_438;
            }
            {
                nuitka_bool tmp_condition_result_355;
                PyObject *tmp_operand_name_59;
                PyObject *tmp_source_name_242;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_38__prepared);
                tmp_source_name_242 = tmp_QtWidgets$class_creation_38__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_242, const_str_plain___getitem__);
                tmp_operand_name_59 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_59);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 366;
                    type_description_2 = "o";
                    goto try_except_handler_176;
                }
                tmp_condition_result_355 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_355 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_235;
                } else {
                    goto branch_no_235;
                }
                branch_yes_235:;
                {
                    PyObject *tmp_raise_type_59;
                    PyObject *tmp_raise_value_59;
                    PyObject *tmp_left_name_59;
                    PyObject *tmp_right_name_59;
                    PyObject *tmp_tuple_element_231;
                    PyObject *tmp_getattr_target_59;
                    PyObject *tmp_getattr_attr_59;
                    PyObject *tmp_getattr_default_59;
                    PyObject *tmp_source_name_243;
                    PyObject *tmp_type_arg_118;
                    tmp_raise_type_59 = PyExc_TypeError;
                    tmp_left_name_59 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_38__metaclass);
                    tmp_getattr_target_59 = tmp_QtWidgets$class_creation_38__metaclass;
                    tmp_getattr_attr_59 = const_str_plain___name__;
                    tmp_getattr_default_59 = const_str_angle_metaclass;
                    tmp_tuple_element_231 = BUILTIN_GETATTR(tmp_getattr_target_59, tmp_getattr_attr_59, tmp_getattr_default_59);
                    if (tmp_tuple_element_231 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 366;
                        type_description_2 = "o";
                        goto try_except_handler_176;
                    }
                    tmp_right_name_59 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_59, 0, tmp_tuple_element_231);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_38__prepared);
                    tmp_type_arg_118 = tmp_QtWidgets$class_creation_38__prepared;
                    tmp_source_name_243 = BUILTIN_TYPE1(tmp_type_arg_118);
                    assert(!(tmp_source_name_243 == NULL));
                    tmp_tuple_element_231 = LOOKUP_ATTRIBUTE(tmp_source_name_243, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_243);
                    if (tmp_tuple_element_231 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_59);

                        exception_lineno = 366;
                        type_description_2 = "o";
                        goto try_except_handler_176;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_59, 1, tmp_tuple_element_231);
                    tmp_raise_value_59 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_59, tmp_right_name_59);
                    Py_DECREF(tmp_right_name_59);
                    if (tmp_raise_value_59 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 366;
                        type_description_2 = "o";
                        goto try_except_handler_176;
                    }
                    exception_type = tmp_raise_type_59;
                    Py_INCREF(tmp_raise_type_59);
                    exception_value = tmp_raise_value_59;
                    exception_lineno = 366;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_176;
                }
                branch_no_235:;
            }
            goto branch_end_234;
            branch_no_234:;
            {
                PyObject *tmp_assign_source_439;
                tmp_assign_source_439 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_38__prepared == NULL);
                tmp_QtWidgets$class_creation_38__prepared = tmp_assign_source_439;
            }
            branch_end_234:;
        }
        {
            PyObject *tmp_set_locals_59;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__prepared);
            tmp_set_locals_59 = tmp_QtWidgets$class_creation_38__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_366 = tmp_set_locals_59;
            Py_INCREF(tmp_set_locals_59);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_366, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 366;
            type_description_2 = "o";
            goto try_except_handler_178;
        }
        tmp_dictset_value = const_str_digest_85e9149e6ad2319c715852a1d46576a2;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_366, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 366;
            type_description_2 = "o";
            goto try_except_handler_178;
        }
        {
            nuitka_bool tmp_condition_result_356;
            PyObject *tmp_compexpr_left_59;
            PyObject *tmp_compexpr_right_59;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases);
            tmp_compexpr_left_59 = tmp_QtWidgets$class_creation_38__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases_orig);
            tmp_compexpr_right_59 = tmp_QtWidgets$class_creation_38__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_59, tmp_compexpr_right_59);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_178;
            }
            tmp_condition_result_356 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_356 == NUITKA_BOOL_TRUE) {
                goto branch_yes_236;
            } else {
                goto branch_no_236;
            }
            branch_yes_236:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_38__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_366, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_178;
            }
            branch_no_236:;
        }
        {
            PyObject *tmp_assign_source_440;
            PyObject *tmp_called_name_119;
            PyObject *tmp_args_name_117;
            PyObject *tmp_tuple_element_232;
            PyObject *tmp_kw_name_117;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__metaclass);
            tmp_called_name_119 = tmp_QtWidgets$class_creation_38__metaclass;
            tmp_tuple_element_232 = const_str_plain_QSplitter;
            tmp_args_name_117 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_232);
            PyTuple_SET_ITEM(tmp_args_name_117, 0, tmp_tuple_element_232);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__bases);
            tmp_tuple_element_232 = tmp_QtWidgets$class_creation_38__bases;
            Py_INCREF(tmp_tuple_element_232);
            PyTuple_SET_ITEM(tmp_args_name_117, 1, tmp_tuple_element_232);
            tmp_tuple_element_232 = locals_PyQt5$uic$Compiler$qtproxies_366;
            Py_INCREF(tmp_tuple_element_232);
            PyTuple_SET_ITEM(tmp_args_name_117, 2, tmp_tuple_element_232);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_38__class_decl_dict);
            tmp_kw_name_117 = tmp_QtWidgets$class_creation_38__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 366;
            tmp_assign_source_440 = CALL_FUNCTION(tmp_called_name_119, tmp_args_name_117, tmp_kw_name_117);
            Py_DECREF(tmp_args_name_117);
            if (tmp_assign_source_440 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_2 = "o";
                goto try_except_handler_178;
            }
            assert(outline_58_var___class__ == NULL);
            outline_58_var___class__ = tmp_assign_source_440;
        }
        CHECK_OBJECT(outline_58_var___class__);
        tmp_dictset_value = outline_58_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_178;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_178:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_366);
        locals_PyQt5$uic$Compiler$qtproxies_366 = NULL;
        goto try_return_handler_177;
        // Exception handler code:
        try_except_handler_178:;
        exception_keeper_type_173 = exception_type;
        exception_keeper_value_173 = exception_value;
        exception_keeper_tb_173 = exception_tb;
        exception_keeper_lineno_173 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_366);
        locals_PyQt5$uic$Compiler$qtproxies_366 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_173;
        exception_value = exception_keeper_value_173;
        exception_tb = exception_keeper_tb_173;
        exception_lineno = exception_keeper_lineno_173;

        goto try_except_handler_177;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_177:;
        CHECK_OBJECT((PyObject *)outline_58_var___class__);
        Py_DECREF(outline_58_var___class__);
        outline_58_var___class__ = NULL;

        goto outline_result_59;
        // Exception handler code:
        try_except_handler_177:;
        exception_keeper_type_174 = exception_type;
        exception_keeper_value_174 = exception_value;
        exception_keeper_tb_174 = exception_tb;
        exception_keeper_lineno_174 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_174;
        exception_value = exception_keeper_value_174;
        exception_tb = exception_keeper_tb_174;
        exception_lineno = exception_keeper_lineno_174;

        goto outline_exception_59;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_59:;
        exception_lineno = 366;
        goto try_except_handler_176;
        outline_result_59:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QSplitter, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 366;
            type_description_2 = "o";
            goto try_except_handler_176;
        }
        goto try_end_59;
        // Exception handler code:
        try_except_handler_176:;
        exception_keeper_type_175 = exception_type;
        exception_keeper_value_175 = exception_value;
        exception_keeper_tb_175 = exception_tb;
        exception_keeper_lineno_175 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_38__bases_orig);
        tmp_QtWidgets$class_creation_38__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_38__bases);
        tmp_QtWidgets$class_creation_38__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_38__class_decl_dict);
        tmp_QtWidgets$class_creation_38__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_38__metaclass);
        tmp_QtWidgets$class_creation_38__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_38__prepared);
        tmp_QtWidgets$class_creation_38__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_175;
        exception_value = exception_keeper_value_175;
        exception_tb = exception_keeper_tb_175;
        exception_lineno = exception_keeper_lineno_175;

        goto frame_exception_exit_12;
        // End of try:
        try_end_59:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_38__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_38__bases_orig);
        tmp_QtWidgets$class_creation_38__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_38__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_38__bases);
        tmp_QtWidgets$class_creation_38__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_38__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_38__class_decl_dict);
        tmp_QtWidgets$class_creation_38__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_38__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_38__metaclass);
        tmp_QtWidgets$class_creation_38__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_38__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_38__prepared);
        tmp_QtWidgets$class_creation_38__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_441;
            PyObject *tmp_tuple_element_233;
            PyObject *tmp_mvar_value_53;
            tmp_tuple_element_233 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFrame);

            if (tmp_tuple_element_233 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_53 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QFrame);

                    if (unlikely(tmp_mvar_value_53 == NULL)) {
                        tmp_mvar_value_53 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QFrame);
                    }

                    if (tmp_mvar_value_53 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1790 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 367;
                        type_description_2 = "o";
                        goto try_except_handler_179;
                    }

                    tmp_tuple_element_233 = tmp_mvar_value_53;
                    Py_INCREF(tmp_tuple_element_233);
                }
            }

            tmp_assign_source_441 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_441, 0, tmp_tuple_element_233);
            assert(tmp_QtWidgets$class_creation_39__bases_orig == NULL);
            tmp_QtWidgets$class_creation_39__bases_orig = tmp_assign_source_441;
        }
        {
            PyObject *tmp_assign_source_442;
            PyObject *tmp_dircall_arg1_60;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases_orig);
            tmp_dircall_arg1_60 = tmp_QtWidgets$class_creation_39__bases_orig;
            Py_INCREF(tmp_dircall_arg1_60);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_60};
                tmp_assign_source_442 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_442 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            assert(tmp_QtWidgets$class_creation_39__bases == NULL);
            tmp_QtWidgets$class_creation_39__bases = tmp_assign_source_442;
        }
        {
            PyObject *tmp_assign_source_443;
            tmp_assign_source_443 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_39__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_39__class_decl_dict = tmp_assign_source_443;
        }
        {
            PyObject *tmp_assign_source_444;
            PyObject *tmp_metaclass_name_60;
            nuitka_bool tmp_condition_result_357;
            PyObject *tmp_key_name_178;
            PyObject *tmp_dict_name_178;
            PyObject *tmp_dict_name_179;
            PyObject *tmp_key_name_179;
            nuitka_bool tmp_condition_result_358;
            int tmp_truth_name_60;
            PyObject *tmp_type_arg_119;
            PyObject *tmp_subscribed_name_60;
            PyObject *tmp_subscript_name_60;
            PyObject *tmp_bases_name_60;
            tmp_key_name_178 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__class_decl_dict);
            tmp_dict_name_178 = tmp_QtWidgets$class_creation_39__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_178, tmp_key_name_178);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            tmp_condition_result_357 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_357 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_121;
            } else {
                goto condexpr_false_121;
            }
            condexpr_true_121:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__class_decl_dict);
            tmp_dict_name_179 = tmp_QtWidgets$class_creation_39__class_decl_dict;
            tmp_key_name_179 = const_str_plain_metaclass;
            tmp_metaclass_name_60 = DICT_GET_ITEM(tmp_dict_name_179, tmp_key_name_179);
            if (tmp_metaclass_name_60 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            goto condexpr_end_121;
            condexpr_false_121:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases);
            tmp_truth_name_60 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_39__bases);
            if (tmp_truth_name_60 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            tmp_condition_result_358 = tmp_truth_name_60 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_358 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_122;
            } else {
                goto condexpr_false_122;
            }
            condexpr_true_122:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases);
            tmp_subscribed_name_60 = tmp_QtWidgets$class_creation_39__bases;
            tmp_subscript_name_60 = const_int_0;
            tmp_type_arg_119 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_60, tmp_subscript_name_60, 0);
            if (tmp_type_arg_119 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            tmp_metaclass_name_60 = BUILTIN_TYPE1(tmp_type_arg_119);
            Py_DECREF(tmp_type_arg_119);
            if (tmp_metaclass_name_60 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            goto condexpr_end_122;
            condexpr_false_122:;
            tmp_metaclass_name_60 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_60);
            condexpr_end_122:;
            condexpr_end_121:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases);
            tmp_bases_name_60 = tmp_QtWidgets$class_creation_39__bases;
            tmp_assign_source_444 = SELECT_METACLASS(tmp_metaclass_name_60, tmp_bases_name_60);
            Py_DECREF(tmp_metaclass_name_60);
            if (tmp_assign_source_444 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            assert(tmp_QtWidgets$class_creation_39__metaclass == NULL);
            tmp_QtWidgets$class_creation_39__metaclass = tmp_assign_source_444;
        }
        {
            nuitka_bool tmp_condition_result_359;
            PyObject *tmp_key_name_180;
            PyObject *tmp_dict_name_180;
            tmp_key_name_180 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__class_decl_dict);
            tmp_dict_name_180 = tmp_QtWidgets$class_creation_39__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_180, tmp_key_name_180);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            tmp_condition_result_359 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_359 == NUITKA_BOOL_TRUE) {
                goto branch_yes_237;
            } else {
                goto branch_no_237;
            }
            branch_yes_237:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_39__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_179;
            }
            branch_no_237:;
        }
        {
            nuitka_bool tmp_condition_result_360;
            PyObject *tmp_source_name_244;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__metaclass);
            tmp_source_name_244 = tmp_QtWidgets$class_creation_39__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_244, const_str_plain___prepare__);
            tmp_condition_result_360 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_360 == NUITKA_BOOL_TRUE) {
                goto branch_yes_238;
            } else {
                goto branch_no_238;
            }
            branch_yes_238:;
            {
                PyObject *tmp_assign_source_445;
                PyObject *tmp_called_name_120;
                PyObject *tmp_source_name_245;
                PyObject *tmp_args_name_118;
                PyObject *tmp_tuple_element_234;
                PyObject *tmp_kw_name_118;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_39__metaclass);
                tmp_source_name_245 = tmp_QtWidgets$class_creation_39__metaclass;
                tmp_called_name_120 = LOOKUP_ATTRIBUTE(tmp_source_name_245, const_str_plain___prepare__);
                if (tmp_called_name_120 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 367;
                    type_description_2 = "o";
                    goto try_except_handler_179;
                }
                tmp_tuple_element_234 = const_str_plain_QStackedWidget;
                tmp_args_name_118 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_234);
                PyTuple_SET_ITEM(tmp_args_name_118, 0, tmp_tuple_element_234);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases);
                tmp_tuple_element_234 = tmp_QtWidgets$class_creation_39__bases;
                Py_INCREF(tmp_tuple_element_234);
                PyTuple_SET_ITEM(tmp_args_name_118, 1, tmp_tuple_element_234);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_39__class_decl_dict);
                tmp_kw_name_118 = tmp_QtWidgets$class_creation_39__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 367;
                tmp_assign_source_445 = CALL_FUNCTION(tmp_called_name_120, tmp_args_name_118, tmp_kw_name_118);
                Py_DECREF(tmp_called_name_120);
                Py_DECREF(tmp_args_name_118);
                if (tmp_assign_source_445 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 367;
                    type_description_2 = "o";
                    goto try_except_handler_179;
                }
                assert(tmp_QtWidgets$class_creation_39__prepared == NULL);
                tmp_QtWidgets$class_creation_39__prepared = tmp_assign_source_445;
            }
            {
                nuitka_bool tmp_condition_result_361;
                PyObject *tmp_operand_name_60;
                PyObject *tmp_source_name_246;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_39__prepared);
                tmp_source_name_246 = tmp_QtWidgets$class_creation_39__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_246, const_str_plain___getitem__);
                tmp_operand_name_60 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_60);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 367;
                    type_description_2 = "o";
                    goto try_except_handler_179;
                }
                tmp_condition_result_361 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_361 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_239;
                } else {
                    goto branch_no_239;
                }
                branch_yes_239:;
                {
                    PyObject *tmp_raise_type_60;
                    PyObject *tmp_raise_value_60;
                    PyObject *tmp_left_name_60;
                    PyObject *tmp_right_name_60;
                    PyObject *tmp_tuple_element_235;
                    PyObject *tmp_getattr_target_60;
                    PyObject *tmp_getattr_attr_60;
                    PyObject *tmp_getattr_default_60;
                    PyObject *tmp_source_name_247;
                    PyObject *tmp_type_arg_120;
                    tmp_raise_type_60 = PyExc_TypeError;
                    tmp_left_name_60 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_39__metaclass);
                    tmp_getattr_target_60 = tmp_QtWidgets$class_creation_39__metaclass;
                    tmp_getattr_attr_60 = const_str_plain___name__;
                    tmp_getattr_default_60 = const_str_angle_metaclass;
                    tmp_tuple_element_235 = BUILTIN_GETATTR(tmp_getattr_target_60, tmp_getattr_attr_60, tmp_getattr_default_60);
                    if (tmp_tuple_element_235 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 367;
                        type_description_2 = "o";
                        goto try_except_handler_179;
                    }
                    tmp_right_name_60 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_60, 0, tmp_tuple_element_235);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_39__prepared);
                    tmp_type_arg_120 = tmp_QtWidgets$class_creation_39__prepared;
                    tmp_source_name_247 = BUILTIN_TYPE1(tmp_type_arg_120);
                    assert(!(tmp_source_name_247 == NULL));
                    tmp_tuple_element_235 = LOOKUP_ATTRIBUTE(tmp_source_name_247, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_247);
                    if (tmp_tuple_element_235 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_60);

                        exception_lineno = 367;
                        type_description_2 = "o";
                        goto try_except_handler_179;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_60, 1, tmp_tuple_element_235);
                    tmp_raise_value_60 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_60, tmp_right_name_60);
                    Py_DECREF(tmp_right_name_60);
                    if (tmp_raise_value_60 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 367;
                        type_description_2 = "o";
                        goto try_except_handler_179;
                    }
                    exception_type = tmp_raise_type_60;
                    Py_INCREF(tmp_raise_type_60);
                    exception_value = tmp_raise_value_60;
                    exception_lineno = 367;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_179;
                }
                branch_no_239:;
            }
            goto branch_end_238;
            branch_no_238:;
            {
                PyObject *tmp_assign_source_446;
                tmp_assign_source_446 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_39__prepared == NULL);
                tmp_QtWidgets$class_creation_39__prepared = tmp_assign_source_446;
            }
            branch_end_238:;
        }
        {
            PyObject *tmp_set_locals_60;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__prepared);
            tmp_set_locals_60 = tmp_QtWidgets$class_creation_39__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_367 = tmp_set_locals_60;
            Py_INCREF(tmp_set_locals_60);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_367, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 367;
            type_description_2 = "o";
            goto try_except_handler_181;
        }
        tmp_dictset_value = const_str_digest_31a0bd6420283acca2fd18800703e60f;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_367, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 367;
            type_description_2 = "o";
            goto try_except_handler_181;
        }
        {
            nuitka_bool tmp_condition_result_362;
            PyObject *tmp_compexpr_left_60;
            PyObject *tmp_compexpr_right_60;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases);
            tmp_compexpr_left_60 = tmp_QtWidgets$class_creation_39__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases_orig);
            tmp_compexpr_right_60 = tmp_QtWidgets$class_creation_39__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_60, tmp_compexpr_right_60);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_181;
            }
            tmp_condition_result_362 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_362 == NUITKA_BOOL_TRUE) {
                goto branch_yes_240;
            } else {
                goto branch_no_240;
            }
            branch_yes_240:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_39__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_367, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_181;
            }
            branch_no_240:;
        }
        {
            PyObject *tmp_assign_source_447;
            PyObject *tmp_called_name_121;
            PyObject *tmp_args_name_119;
            PyObject *tmp_tuple_element_236;
            PyObject *tmp_kw_name_119;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__metaclass);
            tmp_called_name_121 = tmp_QtWidgets$class_creation_39__metaclass;
            tmp_tuple_element_236 = const_str_plain_QStackedWidget;
            tmp_args_name_119 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_236);
            PyTuple_SET_ITEM(tmp_args_name_119, 0, tmp_tuple_element_236);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__bases);
            tmp_tuple_element_236 = tmp_QtWidgets$class_creation_39__bases;
            Py_INCREF(tmp_tuple_element_236);
            PyTuple_SET_ITEM(tmp_args_name_119, 1, tmp_tuple_element_236);
            tmp_tuple_element_236 = locals_PyQt5$uic$Compiler$qtproxies_367;
            Py_INCREF(tmp_tuple_element_236);
            PyTuple_SET_ITEM(tmp_args_name_119, 2, tmp_tuple_element_236);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_39__class_decl_dict);
            tmp_kw_name_119 = tmp_QtWidgets$class_creation_39__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 367;
            tmp_assign_source_447 = CALL_FUNCTION(tmp_called_name_121, tmp_args_name_119, tmp_kw_name_119);
            Py_DECREF(tmp_args_name_119);
            if (tmp_assign_source_447 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_2 = "o";
                goto try_except_handler_181;
            }
            assert(outline_59_var___class__ == NULL);
            outline_59_var___class__ = tmp_assign_source_447;
        }
        CHECK_OBJECT(outline_59_var___class__);
        tmp_dictset_value = outline_59_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_181;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_181:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_367);
        locals_PyQt5$uic$Compiler$qtproxies_367 = NULL;
        goto try_return_handler_180;
        // Exception handler code:
        try_except_handler_181:;
        exception_keeper_type_176 = exception_type;
        exception_keeper_value_176 = exception_value;
        exception_keeper_tb_176 = exception_tb;
        exception_keeper_lineno_176 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_367);
        locals_PyQt5$uic$Compiler$qtproxies_367 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_176;
        exception_value = exception_keeper_value_176;
        exception_tb = exception_keeper_tb_176;
        exception_lineno = exception_keeper_lineno_176;

        goto try_except_handler_180;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_180:;
        CHECK_OBJECT((PyObject *)outline_59_var___class__);
        Py_DECREF(outline_59_var___class__);
        outline_59_var___class__ = NULL;

        goto outline_result_60;
        // Exception handler code:
        try_except_handler_180:;
        exception_keeper_type_177 = exception_type;
        exception_keeper_value_177 = exception_value;
        exception_keeper_tb_177 = exception_tb;
        exception_keeper_lineno_177 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_177;
        exception_value = exception_keeper_value_177;
        exception_tb = exception_keeper_tb_177;
        exception_lineno = exception_keeper_lineno_177;

        goto outline_exception_60;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_60:;
        exception_lineno = 367;
        goto try_except_handler_179;
        outline_result_60:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QStackedWidget, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 367;
            type_description_2 = "o";
            goto try_except_handler_179;
        }
        goto try_end_60;
        // Exception handler code:
        try_except_handler_179:;
        exception_keeper_type_178 = exception_type;
        exception_keeper_value_178 = exception_value;
        exception_keeper_tb_178 = exception_tb;
        exception_keeper_lineno_178 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_39__bases_orig);
        tmp_QtWidgets$class_creation_39__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_39__bases);
        tmp_QtWidgets$class_creation_39__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_39__class_decl_dict);
        tmp_QtWidgets$class_creation_39__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_39__metaclass);
        tmp_QtWidgets$class_creation_39__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_39__prepared);
        tmp_QtWidgets$class_creation_39__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_178;
        exception_value = exception_keeper_value_178;
        exception_tb = exception_keeper_tb_178;
        exception_lineno = exception_keeper_lineno_178;

        goto frame_exception_exit_12;
        // End of try:
        try_end_60:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_39__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_39__bases_orig);
        tmp_QtWidgets$class_creation_39__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_39__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_39__bases);
        tmp_QtWidgets$class_creation_39__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_39__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_39__class_decl_dict);
        tmp_QtWidgets$class_creation_39__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_39__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_39__metaclass);
        tmp_QtWidgets$class_creation_39__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_39__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_39__prepared);
        tmp_QtWidgets$class_creation_39__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_448;
            PyObject *tmp_tuple_element_237;
            PyObject *tmp_mvar_value_54;
            tmp_tuple_element_237 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFrame);

            if (tmp_tuple_element_237 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_54 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QFrame);

                    if (unlikely(tmp_mvar_value_54 == NULL)) {
                        tmp_mvar_value_54 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QFrame);
                    }

                    if (tmp_mvar_value_54 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1790 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 369;
                        type_description_2 = "o";
                        goto try_except_handler_182;
                    }

                    tmp_tuple_element_237 = tmp_mvar_value_54;
                    Py_INCREF(tmp_tuple_element_237);
                }
            }

            tmp_assign_source_448 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_448, 0, tmp_tuple_element_237);
            assert(tmp_QtWidgets$class_creation_40__bases_orig == NULL);
            tmp_QtWidgets$class_creation_40__bases_orig = tmp_assign_source_448;
        }
        {
            PyObject *tmp_assign_source_449;
            PyObject *tmp_dircall_arg1_61;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases_orig);
            tmp_dircall_arg1_61 = tmp_QtWidgets$class_creation_40__bases_orig;
            Py_INCREF(tmp_dircall_arg1_61);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_61};
                tmp_assign_source_449 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_449 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            assert(tmp_QtWidgets$class_creation_40__bases == NULL);
            tmp_QtWidgets$class_creation_40__bases = tmp_assign_source_449;
        }
        {
            PyObject *tmp_assign_source_450;
            tmp_assign_source_450 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_40__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_40__class_decl_dict = tmp_assign_source_450;
        }
        {
            PyObject *tmp_assign_source_451;
            PyObject *tmp_metaclass_name_61;
            nuitka_bool tmp_condition_result_363;
            PyObject *tmp_key_name_181;
            PyObject *tmp_dict_name_181;
            PyObject *tmp_dict_name_182;
            PyObject *tmp_key_name_182;
            nuitka_bool tmp_condition_result_364;
            int tmp_truth_name_61;
            PyObject *tmp_type_arg_121;
            PyObject *tmp_subscribed_name_61;
            PyObject *tmp_subscript_name_61;
            PyObject *tmp_bases_name_61;
            tmp_key_name_181 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__class_decl_dict);
            tmp_dict_name_181 = tmp_QtWidgets$class_creation_40__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_181, tmp_key_name_181);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            tmp_condition_result_363 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_363 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_123;
            } else {
                goto condexpr_false_123;
            }
            condexpr_true_123:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__class_decl_dict);
            tmp_dict_name_182 = tmp_QtWidgets$class_creation_40__class_decl_dict;
            tmp_key_name_182 = const_str_plain_metaclass;
            tmp_metaclass_name_61 = DICT_GET_ITEM(tmp_dict_name_182, tmp_key_name_182);
            if (tmp_metaclass_name_61 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            goto condexpr_end_123;
            condexpr_false_123:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases);
            tmp_truth_name_61 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_40__bases);
            if (tmp_truth_name_61 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            tmp_condition_result_364 = tmp_truth_name_61 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_364 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_124;
            } else {
                goto condexpr_false_124;
            }
            condexpr_true_124:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases);
            tmp_subscribed_name_61 = tmp_QtWidgets$class_creation_40__bases;
            tmp_subscript_name_61 = const_int_0;
            tmp_type_arg_121 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_61, tmp_subscript_name_61, 0);
            if (tmp_type_arg_121 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            tmp_metaclass_name_61 = BUILTIN_TYPE1(tmp_type_arg_121);
            Py_DECREF(tmp_type_arg_121);
            if (tmp_metaclass_name_61 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            goto condexpr_end_124;
            condexpr_false_124:;
            tmp_metaclass_name_61 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_61);
            condexpr_end_124:;
            condexpr_end_123:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases);
            tmp_bases_name_61 = tmp_QtWidgets$class_creation_40__bases;
            tmp_assign_source_451 = SELECT_METACLASS(tmp_metaclass_name_61, tmp_bases_name_61);
            Py_DECREF(tmp_metaclass_name_61);
            if (tmp_assign_source_451 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            assert(tmp_QtWidgets$class_creation_40__metaclass == NULL);
            tmp_QtWidgets$class_creation_40__metaclass = tmp_assign_source_451;
        }
        {
            nuitka_bool tmp_condition_result_365;
            PyObject *tmp_key_name_183;
            PyObject *tmp_dict_name_183;
            tmp_key_name_183 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__class_decl_dict);
            tmp_dict_name_183 = tmp_QtWidgets$class_creation_40__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_183, tmp_key_name_183);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            tmp_condition_result_365 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_365 == NUITKA_BOOL_TRUE) {
                goto branch_yes_241;
            } else {
                goto branch_no_241;
            }
            branch_yes_241:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_40__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_182;
            }
            branch_no_241:;
        }
        {
            nuitka_bool tmp_condition_result_366;
            PyObject *tmp_source_name_248;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__metaclass);
            tmp_source_name_248 = tmp_QtWidgets$class_creation_40__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_248, const_str_plain___prepare__);
            tmp_condition_result_366 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_366 == NUITKA_BOOL_TRUE) {
                goto branch_yes_242;
            } else {
                goto branch_no_242;
            }
            branch_yes_242:;
            {
                PyObject *tmp_assign_source_452;
                PyObject *tmp_called_name_122;
                PyObject *tmp_source_name_249;
                PyObject *tmp_args_name_120;
                PyObject *tmp_tuple_element_238;
                PyObject *tmp_kw_name_120;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_40__metaclass);
                tmp_source_name_249 = tmp_QtWidgets$class_creation_40__metaclass;
                tmp_called_name_122 = LOOKUP_ATTRIBUTE(tmp_source_name_249, const_str_plain___prepare__);
                if (tmp_called_name_122 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 369;
                    type_description_2 = "o";
                    goto try_except_handler_182;
                }
                tmp_tuple_element_238 = const_str_plain_QToolBox;
                tmp_args_name_120 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_238);
                PyTuple_SET_ITEM(tmp_args_name_120, 0, tmp_tuple_element_238);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases);
                tmp_tuple_element_238 = tmp_QtWidgets$class_creation_40__bases;
                Py_INCREF(tmp_tuple_element_238);
                PyTuple_SET_ITEM(tmp_args_name_120, 1, tmp_tuple_element_238);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_40__class_decl_dict);
                tmp_kw_name_120 = tmp_QtWidgets$class_creation_40__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 369;
                tmp_assign_source_452 = CALL_FUNCTION(tmp_called_name_122, tmp_args_name_120, tmp_kw_name_120);
                Py_DECREF(tmp_called_name_122);
                Py_DECREF(tmp_args_name_120);
                if (tmp_assign_source_452 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 369;
                    type_description_2 = "o";
                    goto try_except_handler_182;
                }
                assert(tmp_QtWidgets$class_creation_40__prepared == NULL);
                tmp_QtWidgets$class_creation_40__prepared = tmp_assign_source_452;
            }
            {
                nuitka_bool tmp_condition_result_367;
                PyObject *tmp_operand_name_61;
                PyObject *tmp_source_name_250;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_40__prepared);
                tmp_source_name_250 = tmp_QtWidgets$class_creation_40__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_250, const_str_plain___getitem__);
                tmp_operand_name_61 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_61);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 369;
                    type_description_2 = "o";
                    goto try_except_handler_182;
                }
                tmp_condition_result_367 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_367 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_243;
                } else {
                    goto branch_no_243;
                }
                branch_yes_243:;
                {
                    PyObject *tmp_raise_type_61;
                    PyObject *tmp_raise_value_61;
                    PyObject *tmp_left_name_61;
                    PyObject *tmp_right_name_61;
                    PyObject *tmp_tuple_element_239;
                    PyObject *tmp_getattr_target_61;
                    PyObject *tmp_getattr_attr_61;
                    PyObject *tmp_getattr_default_61;
                    PyObject *tmp_source_name_251;
                    PyObject *tmp_type_arg_122;
                    tmp_raise_type_61 = PyExc_TypeError;
                    tmp_left_name_61 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_40__metaclass);
                    tmp_getattr_target_61 = tmp_QtWidgets$class_creation_40__metaclass;
                    tmp_getattr_attr_61 = const_str_plain___name__;
                    tmp_getattr_default_61 = const_str_angle_metaclass;
                    tmp_tuple_element_239 = BUILTIN_GETATTR(tmp_getattr_target_61, tmp_getattr_attr_61, tmp_getattr_default_61);
                    if (tmp_tuple_element_239 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 369;
                        type_description_2 = "o";
                        goto try_except_handler_182;
                    }
                    tmp_right_name_61 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_61, 0, tmp_tuple_element_239);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_40__prepared);
                    tmp_type_arg_122 = tmp_QtWidgets$class_creation_40__prepared;
                    tmp_source_name_251 = BUILTIN_TYPE1(tmp_type_arg_122);
                    assert(!(tmp_source_name_251 == NULL));
                    tmp_tuple_element_239 = LOOKUP_ATTRIBUTE(tmp_source_name_251, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_251);
                    if (tmp_tuple_element_239 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_61);

                        exception_lineno = 369;
                        type_description_2 = "o";
                        goto try_except_handler_182;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_61, 1, tmp_tuple_element_239);
                    tmp_raise_value_61 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_61, tmp_right_name_61);
                    Py_DECREF(tmp_right_name_61);
                    if (tmp_raise_value_61 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 369;
                        type_description_2 = "o";
                        goto try_except_handler_182;
                    }
                    exception_type = tmp_raise_type_61;
                    Py_INCREF(tmp_raise_type_61);
                    exception_value = tmp_raise_value_61;
                    exception_lineno = 369;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_182;
                }
                branch_no_243:;
            }
            goto branch_end_242;
            branch_no_242:;
            {
                PyObject *tmp_assign_source_453;
                tmp_assign_source_453 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_40__prepared == NULL);
                tmp_QtWidgets$class_creation_40__prepared = tmp_assign_source_453;
            }
            branch_end_242:;
        }
        {
            PyObject *tmp_set_locals_61;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__prepared);
            tmp_set_locals_61 = tmp_QtWidgets$class_creation_40__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_369 = tmp_set_locals_61;
            Py_INCREF(tmp_set_locals_61);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_369, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;
            type_description_2 = "o";
            goto try_except_handler_184;
        }
        tmp_dictset_value = const_str_digest_c41a49663887372325faf65a709cb429;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_369, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;
            type_description_2 = "o";
            goto try_except_handler_184;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17, codeobj_a36b19e6c8b2ca45e826f66d7f0b7e16, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17 = cache_frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_28_addItem();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_369, const_str_plain_addItem, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 370;
            type_description_3 = "o";
            goto frame_exception_exit_17;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_29_indexOf();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_369, const_str_plain_indexOf, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 380;
            type_description_3 = "o";
            goto frame_exception_exit_17;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_30_layout();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_369, const_str_plain_layout, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 383;
            type_description_3 = "o";
            goto frame_exception_exit_17;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_15;

        frame_exception_exit_17:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17,
            type_description_3,
            outline_60_var___class__
        );


        // Release cached frame.
        if (frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17 == cache_frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17) {
            Py_DECREF(frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17);
        }
        cache_frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17 = NULL;

        assertFrameObject(frame_a36b19e6c8b2ca45e826f66d7f0b7e16_17);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_16;

        frame_no_exception_15:;
        goto skip_nested_handling_15;
        nested_frame_exit_16:;
        type_description_2 = "o";
        goto try_except_handler_184;
        skip_nested_handling_15:;
        {
            nuitka_bool tmp_condition_result_368;
            PyObject *tmp_compexpr_left_61;
            PyObject *tmp_compexpr_right_61;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases);
            tmp_compexpr_left_61 = tmp_QtWidgets$class_creation_40__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases_orig);
            tmp_compexpr_right_61 = tmp_QtWidgets$class_creation_40__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_61, tmp_compexpr_right_61);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_184;
            }
            tmp_condition_result_368 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_368 == NUITKA_BOOL_TRUE) {
                goto branch_yes_244;
            } else {
                goto branch_no_244;
            }
            branch_yes_244:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_40__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_369, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_184;
            }
            branch_no_244:;
        }
        {
            PyObject *tmp_assign_source_454;
            PyObject *tmp_called_name_123;
            PyObject *tmp_args_name_121;
            PyObject *tmp_tuple_element_240;
            PyObject *tmp_kw_name_121;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__metaclass);
            tmp_called_name_123 = tmp_QtWidgets$class_creation_40__metaclass;
            tmp_tuple_element_240 = const_str_plain_QToolBox;
            tmp_args_name_121 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_240);
            PyTuple_SET_ITEM(tmp_args_name_121, 0, tmp_tuple_element_240);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__bases);
            tmp_tuple_element_240 = tmp_QtWidgets$class_creation_40__bases;
            Py_INCREF(tmp_tuple_element_240);
            PyTuple_SET_ITEM(tmp_args_name_121, 1, tmp_tuple_element_240);
            tmp_tuple_element_240 = locals_PyQt5$uic$Compiler$qtproxies_369;
            Py_INCREF(tmp_tuple_element_240);
            PyTuple_SET_ITEM(tmp_args_name_121, 2, tmp_tuple_element_240);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_40__class_decl_dict);
            tmp_kw_name_121 = tmp_QtWidgets$class_creation_40__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 369;
            tmp_assign_source_454 = CALL_FUNCTION(tmp_called_name_123, tmp_args_name_121, tmp_kw_name_121);
            Py_DECREF(tmp_args_name_121);
            if (tmp_assign_source_454 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_2 = "o";
                goto try_except_handler_184;
            }
            assert(outline_60_var___class__ == NULL);
            outline_60_var___class__ = tmp_assign_source_454;
        }
        CHECK_OBJECT(outline_60_var___class__);
        tmp_dictset_value = outline_60_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_184;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_184:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_369);
        locals_PyQt5$uic$Compiler$qtproxies_369 = NULL;
        goto try_return_handler_183;
        // Exception handler code:
        try_except_handler_184:;
        exception_keeper_type_179 = exception_type;
        exception_keeper_value_179 = exception_value;
        exception_keeper_tb_179 = exception_tb;
        exception_keeper_lineno_179 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_369);
        locals_PyQt5$uic$Compiler$qtproxies_369 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_179;
        exception_value = exception_keeper_value_179;
        exception_tb = exception_keeper_tb_179;
        exception_lineno = exception_keeper_lineno_179;

        goto try_except_handler_183;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_183:;
        CHECK_OBJECT((PyObject *)outline_60_var___class__);
        Py_DECREF(outline_60_var___class__);
        outline_60_var___class__ = NULL;

        goto outline_result_61;
        // Exception handler code:
        try_except_handler_183:;
        exception_keeper_type_180 = exception_type;
        exception_keeper_value_180 = exception_value;
        exception_keeper_tb_180 = exception_tb;
        exception_keeper_lineno_180 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_180;
        exception_value = exception_keeper_value_180;
        exception_tb = exception_keeper_tb_180;
        exception_lineno = exception_keeper_lineno_180;

        goto outline_exception_61;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_61:;
        exception_lineno = 369;
        goto try_except_handler_182;
        outline_result_61:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QToolBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;
            type_description_2 = "o";
            goto try_except_handler_182;
        }
        goto try_end_61;
        // Exception handler code:
        try_except_handler_182:;
        exception_keeper_type_181 = exception_type;
        exception_keeper_value_181 = exception_value;
        exception_keeper_tb_181 = exception_tb;
        exception_keeper_lineno_181 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_40__bases_orig);
        tmp_QtWidgets$class_creation_40__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_40__bases);
        tmp_QtWidgets$class_creation_40__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_40__class_decl_dict);
        tmp_QtWidgets$class_creation_40__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_40__metaclass);
        tmp_QtWidgets$class_creation_40__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_40__prepared);
        tmp_QtWidgets$class_creation_40__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_181;
        exception_value = exception_keeper_value_181;
        exception_tb = exception_keeper_tb_181;
        exception_lineno = exception_keeper_lineno_181;

        goto frame_exception_exit_12;
        // End of try:
        try_end_61:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_40__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_40__bases_orig);
        tmp_QtWidgets$class_creation_40__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_40__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_40__bases);
        tmp_QtWidgets$class_creation_40__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_40__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_40__class_decl_dict);
        tmp_QtWidgets$class_creation_40__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_40__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_40__metaclass);
        tmp_QtWidgets$class_creation_40__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_40__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_40__prepared);
        tmp_QtWidgets$class_creation_40__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_455;
            PyObject *tmp_tuple_element_241;
            PyObject *tmp_mvar_value_55;
            tmp_tuple_element_241 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QFrame);

            if (tmp_tuple_element_241 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_55 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QFrame);

                    if (unlikely(tmp_mvar_value_55 == NULL)) {
                        tmp_mvar_value_55 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QFrame);
                    }

                    if (tmp_mvar_value_55 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1790 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 387;
                        type_description_2 = "o";
                        goto try_except_handler_185;
                    }

                    tmp_tuple_element_241 = tmp_mvar_value_55;
                    Py_INCREF(tmp_tuple_element_241);
                }
            }

            tmp_assign_source_455 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_455, 0, tmp_tuple_element_241);
            assert(tmp_QtWidgets$class_creation_41__bases_orig == NULL);
            tmp_QtWidgets$class_creation_41__bases_orig = tmp_assign_source_455;
        }
        {
            PyObject *tmp_assign_source_456;
            PyObject *tmp_dircall_arg1_62;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases_orig);
            tmp_dircall_arg1_62 = tmp_QtWidgets$class_creation_41__bases_orig;
            Py_INCREF(tmp_dircall_arg1_62);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_62};
                tmp_assign_source_456 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_456 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            assert(tmp_QtWidgets$class_creation_41__bases == NULL);
            tmp_QtWidgets$class_creation_41__bases = tmp_assign_source_456;
        }
        {
            PyObject *tmp_assign_source_457;
            tmp_assign_source_457 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_41__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_41__class_decl_dict = tmp_assign_source_457;
        }
        {
            PyObject *tmp_assign_source_458;
            PyObject *tmp_metaclass_name_62;
            nuitka_bool tmp_condition_result_369;
            PyObject *tmp_key_name_184;
            PyObject *tmp_dict_name_184;
            PyObject *tmp_dict_name_185;
            PyObject *tmp_key_name_185;
            nuitka_bool tmp_condition_result_370;
            int tmp_truth_name_62;
            PyObject *tmp_type_arg_123;
            PyObject *tmp_subscribed_name_62;
            PyObject *tmp_subscript_name_62;
            PyObject *tmp_bases_name_62;
            tmp_key_name_184 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__class_decl_dict);
            tmp_dict_name_184 = tmp_QtWidgets$class_creation_41__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_184, tmp_key_name_184);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            tmp_condition_result_369 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_369 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_125;
            } else {
                goto condexpr_false_125;
            }
            condexpr_true_125:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__class_decl_dict);
            tmp_dict_name_185 = tmp_QtWidgets$class_creation_41__class_decl_dict;
            tmp_key_name_185 = const_str_plain_metaclass;
            tmp_metaclass_name_62 = DICT_GET_ITEM(tmp_dict_name_185, tmp_key_name_185);
            if (tmp_metaclass_name_62 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            goto condexpr_end_125;
            condexpr_false_125:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases);
            tmp_truth_name_62 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_41__bases);
            if (tmp_truth_name_62 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            tmp_condition_result_370 = tmp_truth_name_62 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_370 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_126;
            } else {
                goto condexpr_false_126;
            }
            condexpr_true_126:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases);
            tmp_subscribed_name_62 = tmp_QtWidgets$class_creation_41__bases;
            tmp_subscript_name_62 = const_int_0;
            tmp_type_arg_123 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_62, tmp_subscript_name_62, 0);
            if (tmp_type_arg_123 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            tmp_metaclass_name_62 = BUILTIN_TYPE1(tmp_type_arg_123);
            Py_DECREF(tmp_type_arg_123);
            if (tmp_metaclass_name_62 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            goto condexpr_end_126;
            condexpr_false_126:;
            tmp_metaclass_name_62 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_62);
            condexpr_end_126:;
            condexpr_end_125:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases);
            tmp_bases_name_62 = tmp_QtWidgets$class_creation_41__bases;
            tmp_assign_source_458 = SELECT_METACLASS(tmp_metaclass_name_62, tmp_bases_name_62);
            Py_DECREF(tmp_metaclass_name_62);
            if (tmp_assign_source_458 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            assert(tmp_QtWidgets$class_creation_41__metaclass == NULL);
            tmp_QtWidgets$class_creation_41__metaclass = tmp_assign_source_458;
        }
        {
            nuitka_bool tmp_condition_result_371;
            PyObject *tmp_key_name_186;
            PyObject *tmp_dict_name_186;
            tmp_key_name_186 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__class_decl_dict);
            tmp_dict_name_186 = tmp_QtWidgets$class_creation_41__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_186, tmp_key_name_186);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            tmp_condition_result_371 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_371 == NUITKA_BOOL_TRUE) {
                goto branch_yes_245;
            } else {
                goto branch_no_245;
            }
            branch_yes_245:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_41__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_185;
            }
            branch_no_245:;
        }
        {
            nuitka_bool tmp_condition_result_372;
            PyObject *tmp_source_name_252;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__metaclass);
            tmp_source_name_252 = tmp_QtWidgets$class_creation_41__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_252, const_str_plain___prepare__);
            tmp_condition_result_372 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_372 == NUITKA_BOOL_TRUE) {
                goto branch_yes_246;
            } else {
                goto branch_no_246;
            }
            branch_yes_246:;
            {
                PyObject *tmp_assign_source_459;
                PyObject *tmp_called_name_124;
                PyObject *tmp_source_name_253;
                PyObject *tmp_args_name_122;
                PyObject *tmp_tuple_element_242;
                PyObject *tmp_kw_name_122;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_41__metaclass);
                tmp_source_name_253 = tmp_QtWidgets$class_creation_41__metaclass;
                tmp_called_name_124 = LOOKUP_ATTRIBUTE(tmp_source_name_253, const_str_plain___prepare__);
                if (tmp_called_name_124 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 387;
                    type_description_2 = "o";
                    goto try_except_handler_185;
                }
                tmp_tuple_element_242 = const_str_plain_QAbstractScrollArea;
                tmp_args_name_122 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_242);
                PyTuple_SET_ITEM(tmp_args_name_122, 0, tmp_tuple_element_242);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases);
                tmp_tuple_element_242 = tmp_QtWidgets$class_creation_41__bases;
                Py_INCREF(tmp_tuple_element_242);
                PyTuple_SET_ITEM(tmp_args_name_122, 1, tmp_tuple_element_242);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_41__class_decl_dict);
                tmp_kw_name_122 = tmp_QtWidgets$class_creation_41__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 387;
                tmp_assign_source_459 = CALL_FUNCTION(tmp_called_name_124, tmp_args_name_122, tmp_kw_name_122);
                Py_DECREF(tmp_called_name_124);
                Py_DECREF(tmp_args_name_122);
                if (tmp_assign_source_459 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 387;
                    type_description_2 = "o";
                    goto try_except_handler_185;
                }
                assert(tmp_QtWidgets$class_creation_41__prepared == NULL);
                tmp_QtWidgets$class_creation_41__prepared = tmp_assign_source_459;
            }
            {
                nuitka_bool tmp_condition_result_373;
                PyObject *tmp_operand_name_62;
                PyObject *tmp_source_name_254;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_41__prepared);
                tmp_source_name_254 = tmp_QtWidgets$class_creation_41__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_254, const_str_plain___getitem__);
                tmp_operand_name_62 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_62);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 387;
                    type_description_2 = "o";
                    goto try_except_handler_185;
                }
                tmp_condition_result_373 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_373 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_247;
                } else {
                    goto branch_no_247;
                }
                branch_yes_247:;
                {
                    PyObject *tmp_raise_type_62;
                    PyObject *tmp_raise_value_62;
                    PyObject *tmp_left_name_62;
                    PyObject *tmp_right_name_62;
                    PyObject *tmp_tuple_element_243;
                    PyObject *tmp_getattr_target_62;
                    PyObject *tmp_getattr_attr_62;
                    PyObject *tmp_getattr_default_62;
                    PyObject *tmp_source_name_255;
                    PyObject *tmp_type_arg_124;
                    tmp_raise_type_62 = PyExc_TypeError;
                    tmp_left_name_62 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_41__metaclass);
                    tmp_getattr_target_62 = tmp_QtWidgets$class_creation_41__metaclass;
                    tmp_getattr_attr_62 = const_str_plain___name__;
                    tmp_getattr_default_62 = const_str_angle_metaclass;
                    tmp_tuple_element_243 = BUILTIN_GETATTR(tmp_getattr_target_62, tmp_getattr_attr_62, tmp_getattr_default_62);
                    if (tmp_tuple_element_243 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 387;
                        type_description_2 = "o";
                        goto try_except_handler_185;
                    }
                    tmp_right_name_62 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_62, 0, tmp_tuple_element_243);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_41__prepared);
                    tmp_type_arg_124 = tmp_QtWidgets$class_creation_41__prepared;
                    tmp_source_name_255 = BUILTIN_TYPE1(tmp_type_arg_124);
                    assert(!(tmp_source_name_255 == NULL));
                    tmp_tuple_element_243 = LOOKUP_ATTRIBUTE(tmp_source_name_255, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_255);
                    if (tmp_tuple_element_243 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_62);

                        exception_lineno = 387;
                        type_description_2 = "o";
                        goto try_except_handler_185;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_62, 1, tmp_tuple_element_243);
                    tmp_raise_value_62 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_62, tmp_right_name_62);
                    Py_DECREF(tmp_right_name_62);
                    if (tmp_raise_value_62 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 387;
                        type_description_2 = "o";
                        goto try_except_handler_185;
                    }
                    exception_type = tmp_raise_type_62;
                    Py_INCREF(tmp_raise_type_62);
                    exception_value = tmp_raise_value_62;
                    exception_lineno = 387;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_185;
                }
                branch_no_247:;
            }
            goto branch_end_246;
            branch_no_246:;
            {
                PyObject *tmp_assign_source_460;
                tmp_assign_source_460 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_41__prepared == NULL);
                tmp_QtWidgets$class_creation_41__prepared = tmp_assign_source_460;
            }
            branch_end_246:;
        }
        {
            PyObject *tmp_set_locals_62;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__prepared);
            tmp_set_locals_62 = tmp_QtWidgets$class_creation_41__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_387 = tmp_set_locals_62;
            Py_INCREF(tmp_set_locals_62);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_387, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 387;
            type_description_2 = "o";
            goto try_except_handler_187;
        }
        tmp_dictset_value = const_str_digest_4dcfe10d04f1a816f6b491aaa018d207;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_387, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 387;
            type_description_2 = "o";
            goto try_except_handler_187;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_a9d6db0955b7ba28bfba73ef240b3f90_18, codeobj_a9d6db0955b7ba28bfba73ef240b3f90, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_a9d6db0955b7ba28bfba73ef240b3f90_18 = cache_frame_a9d6db0955b7ba28bfba73ef240b3f90_18;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_a9d6db0955b7ba28bfba73ef240b3f90_18);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_a9d6db0955b7ba28bfba73ef240b3f90_18) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_31_viewport();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_387, const_str_plain_viewport, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 388;
            type_description_3 = "o";
            goto frame_exception_exit_18;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a9d6db0955b7ba28bfba73ef240b3f90_18);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_16;

        frame_exception_exit_18:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a9d6db0955b7ba28bfba73ef240b3f90_18);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_a9d6db0955b7ba28bfba73ef240b3f90_18, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_a9d6db0955b7ba28bfba73ef240b3f90_18->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_a9d6db0955b7ba28bfba73ef240b3f90_18, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_a9d6db0955b7ba28bfba73ef240b3f90_18,
            type_description_3,
            outline_61_var___class__
        );


        // Release cached frame.
        if (frame_a9d6db0955b7ba28bfba73ef240b3f90_18 == cache_frame_a9d6db0955b7ba28bfba73ef240b3f90_18) {
            Py_DECREF(frame_a9d6db0955b7ba28bfba73ef240b3f90_18);
        }
        cache_frame_a9d6db0955b7ba28bfba73ef240b3f90_18 = NULL;

        assertFrameObject(frame_a9d6db0955b7ba28bfba73ef240b3f90_18);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_17;

        frame_no_exception_16:;
        goto skip_nested_handling_16;
        nested_frame_exit_17:;
        type_description_2 = "o";
        goto try_except_handler_187;
        skip_nested_handling_16:;
        {
            nuitka_bool tmp_condition_result_374;
            PyObject *tmp_compexpr_left_62;
            PyObject *tmp_compexpr_right_62;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases);
            tmp_compexpr_left_62 = tmp_QtWidgets$class_creation_41__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases_orig);
            tmp_compexpr_right_62 = tmp_QtWidgets$class_creation_41__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_62, tmp_compexpr_right_62);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_187;
            }
            tmp_condition_result_374 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_374 == NUITKA_BOOL_TRUE) {
                goto branch_yes_248;
            } else {
                goto branch_no_248;
            }
            branch_yes_248:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_41__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_387, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_187;
            }
            branch_no_248:;
        }
        {
            PyObject *tmp_assign_source_461;
            PyObject *tmp_called_name_125;
            PyObject *tmp_args_name_123;
            PyObject *tmp_tuple_element_244;
            PyObject *tmp_kw_name_123;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__metaclass);
            tmp_called_name_125 = tmp_QtWidgets$class_creation_41__metaclass;
            tmp_tuple_element_244 = const_str_plain_QAbstractScrollArea;
            tmp_args_name_123 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_244);
            PyTuple_SET_ITEM(tmp_args_name_123, 0, tmp_tuple_element_244);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__bases);
            tmp_tuple_element_244 = tmp_QtWidgets$class_creation_41__bases;
            Py_INCREF(tmp_tuple_element_244);
            PyTuple_SET_ITEM(tmp_args_name_123, 1, tmp_tuple_element_244);
            tmp_tuple_element_244 = locals_PyQt5$uic$Compiler$qtproxies_387;
            Py_INCREF(tmp_tuple_element_244);
            PyTuple_SET_ITEM(tmp_args_name_123, 2, tmp_tuple_element_244);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_41__class_decl_dict);
            tmp_kw_name_123 = tmp_QtWidgets$class_creation_41__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 387;
            tmp_assign_source_461 = CALL_FUNCTION(tmp_called_name_125, tmp_args_name_123, tmp_kw_name_123);
            Py_DECREF(tmp_args_name_123);
            if (tmp_assign_source_461 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_2 = "o";
                goto try_except_handler_187;
            }
            assert(outline_61_var___class__ == NULL);
            outline_61_var___class__ = tmp_assign_source_461;
        }
        CHECK_OBJECT(outline_61_var___class__);
        tmp_dictset_value = outline_61_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_187;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_187:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_387);
        locals_PyQt5$uic$Compiler$qtproxies_387 = NULL;
        goto try_return_handler_186;
        // Exception handler code:
        try_except_handler_187:;
        exception_keeper_type_182 = exception_type;
        exception_keeper_value_182 = exception_value;
        exception_keeper_tb_182 = exception_tb;
        exception_keeper_lineno_182 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_387);
        locals_PyQt5$uic$Compiler$qtproxies_387 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_182;
        exception_value = exception_keeper_value_182;
        exception_tb = exception_keeper_tb_182;
        exception_lineno = exception_keeper_lineno_182;

        goto try_except_handler_186;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_186:;
        CHECK_OBJECT((PyObject *)outline_61_var___class__);
        Py_DECREF(outline_61_var___class__);
        outline_61_var___class__ = NULL;

        goto outline_result_62;
        // Exception handler code:
        try_except_handler_186:;
        exception_keeper_type_183 = exception_type;
        exception_keeper_value_183 = exception_value;
        exception_keeper_tb_183 = exception_tb;
        exception_keeper_lineno_183 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_183;
        exception_value = exception_keeper_value_183;
        exception_tb = exception_keeper_tb_183;
        exception_lineno = exception_keeper_lineno_183;

        goto outline_exception_62;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_62:;
        exception_lineno = 387;
        goto try_except_handler_185;
        outline_result_62:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractScrollArea, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 387;
            type_description_2 = "o";
            goto try_except_handler_185;
        }
        goto try_end_62;
        // Exception handler code:
        try_except_handler_185:;
        exception_keeper_type_184 = exception_type;
        exception_keeper_value_184 = exception_value;
        exception_keeper_tb_184 = exception_tb;
        exception_keeper_lineno_184 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_41__bases_orig);
        tmp_QtWidgets$class_creation_41__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_41__bases);
        tmp_QtWidgets$class_creation_41__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_41__class_decl_dict);
        tmp_QtWidgets$class_creation_41__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_41__metaclass);
        tmp_QtWidgets$class_creation_41__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_41__prepared);
        tmp_QtWidgets$class_creation_41__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_184;
        exception_value = exception_keeper_value_184;
        exception_tb = exception_keeper_tb_184;
        exception_lineno = exception_keeper_lineno_184;

        goto frame_exception_exit_12;
        // End of try:
        try_end_62:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_41__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_41__bases_orig);
        tmp_QtWidgets$class_creation_41__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_41__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_41__bases);
        tmp_QtWidgets$class_creation_41__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_41__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_41__class_decl_dict);
        tmp_QtWidgets$class_creation_41__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_41__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_41__metaclass);
        tmp_QtWidgets$class_creation_41__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_41__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_41__prepared);
        tmp_QtWidgets$class_creation_41__prepared = NULL;

        {
            PyObject *tmp_assign_source_462;
            PyObject *tmp_tuple_element_245;
            tmp_tuple_element_245 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractScrollArea);

            if (tmp_tuple_element_245 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1818 ], 41, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 392;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_245 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_462 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_462, 0, tmp_tuple_element_245);
            assert(tmp_QtWidgets$class_creation_42__bases_orig == NULL);
            tmp_QtWidgets$class_creation_42__bases_orig = tmp_assign_source_462;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_463;
            PyObject *tmp_dircall_arg1_63;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases_orig);
            tmp_dircall_arg1_63 = tmp_QtWidgets$class_creation_42__bases_orig;
            Py_INCREF(tmp_dircall_arg1_63);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_63};
                tmp_assign_source_463 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_463 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            assert(tmp_QtWidgets$class_creation_42__bases == NULL);
            tmp_QtWidgets$class_creation_42__bases = tmp_assign_source_463;
        }
        {
            PyObject *tmp_assign_source_464;
            tmp_assign_source_464 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_42__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_42__class_decl_dict = tmp_assign_source_464;
        }
        {
            PyObject *tmp_assign_source_465;
            PyObject *tmp_metaclass_name_63;
            nuitka_bool tmp_condition_result_375;
            PyObject *tmp_key_name_187;
            PyObject *tmp_dict_name_187;
            PyObject *tmp_dict_name_188;
            PyObject *tmp_key_name_188;
            nuitka_bool tmp_condition_result_376;
            int tmp_truth_name_63;
            PyObject *tmp_type_arg_125;
            PyObject *tmp_subscribed_name_63;
            PyObject *tmp_subscript_name_63;
            PyObject *tmp_bases_name_63;
            tmp_key_name_187 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__class_decl_dict);
            tmp_dict_name_187 = tmp_QtWidgets$class_creation_42__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_187, tmp_key_name_187);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            tmp_condition_result_375 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_375 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_127;
            } else {
                goto condexpr_false_127;
            }
            condexpr_true_127:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__class_decl_dict);
            tmp_dict_name_188 = tmp_QtWidgets$class_creation_42__class_decl_dict;
            tmp_key_name_188 = const_str_plain_metaclass;
            tmp_metaclass_name_63 = DICT_GET_ITEM(tmp_dict_name_188, tmp_key_name_188);
            if (tmp_metaclass_name_63 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            goto condexpr_end_127;
            condexpr_false_127:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases);
            tmp_truth_name_63 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_42__bases);
            if (tmp_truth_name_63 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            tmp_condition_result_376 = tmp_truth_name_63 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_376 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_128;
            } else {
                goto condexpr_false_128;
            }
            condexpr_true_128:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases);
            tmp_subscribed_name_63 = tmp_QtWidgets$class_creation_42__bases;
            tmp_subscript_name_63 = const_int_0;
            tmp_type_arg_125 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_63, tmp_subscript_name_63, 0);
            if (tmp_type_arg_125 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            tmp_metaclass_name_63 = BUILTIN_TYPE1(tmp_type_arg_125);
            Py_DECREF(tmp_type_arg_125);
            if (tmp_metaclass_name_63 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            goto condexpr_end_128;
            condexpr_false_128:;
            tmp_metaclass_name_63 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_63);
            condexpr_end_128:;
            condexpr_end_127:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases);
            tmp_bases_name_63 = tmp_QtWidgets$class_creation_42__bases;
            tmp_assign_source_465 = SELECT_METACLASS(tmp_metaclass_name_63, tmp_bases_name_63);
            Py_DECREF(tmp_metaclass_name_63);
            if (tmp_assign_source_465 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            assert(tmp_QtWidgets$class_creation_42__metaclass == NULL);
            tmp_QtWidgets$class_creation_42__metaclass = tmp_assign_source_465;
        }
        {
            nuitka_bool tmp_condition_result_377;
            PyObject *tmp_key_name_189;
            PyObject *tmp_dict_name_189;
            tmp_key_name_189 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__class_decl_dict);
            tmp_dict_name_189 = tmp_QtWidgets$class_creation_42__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_189, tmp_key_name_189);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            tmp_condition_result_377 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_377 == NUITKA_BOOL_TRUE) {
                goto branch_yes_249;
            } else {
                goto branch_no_249;
            }
            branch_yes_249:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_42__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_188;
            }
            branch_no_249:;
        }
        {
            nuitka_bool tmp_condition_result_378;
            PyObject *tmp_source_name_256;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__metaclass);
            tmp_source_name_256 = tmp_QtWidgets$class_creation_42__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_256, const_str_plain___prepare__);
            tmp_condition_result_378 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_378 == NUITKA_BOOL_TRUE) {
                goto branch_yes_250;
            } else {
                goto branch_no_250;
            }
            branch_yes_250:;
            {
                PyObject *tmp_assign_source_466;
                PyObject *tmp_called_name_126;
                PyObject *tmp_source_name_257;
                PyObject *tmp_args_name_124;
                PyObject *tmp_tuple_element_246;
                PyObject *tmp_kw_name_124;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_42__metaclass);
                tmp_source_name_257 = tmp_QtWidgets$class_creation_42__metaclass;
                tmp_called_name_126 = LOOKUP_ATTRIBUTE(tmp_source_name_257, const_str_plain___prepare__);
                if (tmp_called_name_126 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 392;
                    type_description_2 = "o";
                    goto try_except_handler_188;
                }
                tmp_tuple_element_246 = const_str_plain_QGraphicsView;
                tmp_args_name_124 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_246);
                PyTuple_SET_ITEM(tmp_args_name_124, 0, tmp_tuple_element_246);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases);
                tmp_tuple_element_246 = tmp_QtWidgets$class_creation_42__bases;
                Py_INCREF(tmp_tuple_element_246);
                PyTuple_SET_ITEM(tmp_args_name_124, 1, tmp_tuple_element_246);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_42__class_decl_dict);
                tmp_kw_name_124 = tmp_QtWidgets$class_creation_42__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 392;
                tmp_assign_source_466 = CALL_FUNCTION(tmp_called_name_126, tmp_args_name_124, tmp_kw_name_124);
                Py_DECREF(tmp_called_name_126);
                Py_DECREF(tmp_args_name_124);
                if (tmp_assign_source_466 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 392;
                    type_description_2 = "o";
                    goto try_except_handler_188;
                }
                assert(tmp_QtWidgets$class_creation_42__prepared == NULL);
                tmp_QtWidgets$class_creation_42__prepared = tmp_assign_source_466;
            }
            {
                nuitka_bool tmp_condition_result_379;
                PyObject *tmp_operand_name_63;
                PyObject *tmp_source_name_258;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_42__prepared);
                tmp_source_name_258 = tmp_QtWidgets$class_creation_42__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_258, const_str_plain___getitem__);
                tmp_operand_name_63 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_63);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 392;
                    type_description_2 = "o";
                    goto try_except_handler_188;
                }
                tmp_condition_result_379 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_379 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_251;
                } else {
                    goto branch_no_251;
                }
                branch_yes_251:;
                {
                    PyObject *tmp_raise_type_63;
                    PyObject *tmp_raise_value_63;
                    PyObject *tmp_left_name_63;
                    PyObject *tmp_right_name_63;
                    PyObject *tmp_tuple_element_247;
                    PyObject *tmp_getattr_target_63;
                    PyObject *tmp_getattr_attr_63;
                    PyObject *tmp_getattr_default_63;
                    PyObject *tmp_source_name_259;
                    PyObject *tmp_type_arg_126;
                    tmp_raise_type_63 = PyExc_TypeError;
                    tmp_left_name_63 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_42__metaclass);
                    tmp_getattr_target_63 = tmp_QtWidgets$class_creation_42__metaclass;
                    tmp_getattr_attr_63 = const_str_plain___name__;
                    tmp_getattr_default_63 = const_str_angle_metaclass;
                    tmp_tuple_element_247 = BUILTIN_GETATTR(tmp_getattr_target_63, tmp_getattr_attr_63, tmp_getattr_default_63);
                    if (tmp_tuple_element_247 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 392;
                        type_description_2 = "o";
                        goto try_except_handler_188;
                    }
                    tmp_right_name_63 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_63, 0, tmp_tuple_element_247);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_42__prepared);
                    tmp_type_arg_126 = tmp_QtWidgets$class_creation_42__prepared;
                    tmp_source_name_259 = BUILTIN_TYPE1(tmp_type_arg_126);
                    assert(!(tmp_source_name_259 == NULL));
                    tmp_tuple_element_247 = LOOKUP_ATTRIBUTE(tmp_source_name_259, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_259);
                    if (tmp_tuple_element_247 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_63);

                        exception_lineno = 392;
                        type_description_2 = "o";
                        goto try_except_handler_188;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_63, 1, tmp_tuple_element_247);
                    tmp_raise_value_63 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_63, tmp_right_name_63);
                    Py_DECREF(tmp_right_name_63);
                    if (tmp_raise_value_63 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 392;
                        type_description_2 = "o";
                        goto try_except_handler_188;
                    }
                    exception_type = tmp_raise_type_63;
                    Py_INCREF(tmp_raise_type_63);
                    exception_value = tmp_raise_value_63;
                    exception_lineno = 392;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_188;
                }
                branch_no_251:;
            }
            goto branch_end_250;
            branch_no_250:;
            {
                PyObject *tmp_assign_source_467;
                tmp_assign_source_467 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_42__prepared == NULL);
                tmp_QtWidgets$class_creation_42__prepared = tmp_assign_source_467;
            }
            branch_end_250:;
        }
        {
            PyObject *tmp_set_locals_63;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__prepared);
            tmp_set_locals_63 = tmp_QtWidgets$class_creation_42__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_392 = tmp_set_locals_63;
            Py_INCREF(tmp_set_locals_63);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_392, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 392;
            type_description_2 = "o";
            goto try_except_handler_190;
        }
        tmp_dictset_value = const_str_digest_e2c99cabda74aeb55eab2a5db3680efa;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_392, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 392;
            type_description_2 = "o";
            goto try_except_handler_190;
        }
        {
            nuitka_bool tmp_condition_result_380;
            PyObject *tmp_compexpr_left_63;
            PyObject *tmp_compexpr_right_63;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases);
            tmp_compexpr_left_63 = tmp_QtWidgets$class_creation_42__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases_orig);
            tmp_compexpr_right_63 = tmp_QtWidgets$class_creation_42__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_63, tmp_compexpr_right_63);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_190;
            }
            tmp_condition_result_380 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_380 == NUITKA_BOOL_TRUE) {
                goto branch_yes_252;
            } else {
                goto branch_no_252;
            }
            branch_yes_252:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_42__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_392, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_190;
            }
            branch_no_252:;
        }
        {
            PyObject *tmp_assign_source_468;
            PyObject *tmp_called_name_127;
            PyObject *tmp_args_name_125;
            PyObject *tmp_tuple_element_248;
            PyObject *tmp_kw_name_125;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__metaclass);
            tmp_called_name_127 = tmp_QtWidgets$class_creation_42__metaclass;
            tmp_tuple_element_248 = const_str_plain_QGraphicsView;
            tmp_args_name_125 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_248);
            PyTuple_SET_ITEM(tmp_args_name_125, 0, tmp_tuple_element_248);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__bases);
            tmp_tuple_element_248 = tmp_QtWidgets$class_creation_42__bases;
            Py_INCREF(tmp_tuple_element_248);
            PyTuple_SET_ITEM(tmp_args_name_125, 1, tmp_tuple_element_248);
            tmp_tuple_element_248 = locals_PyQt5$uic$Compiler$qtproxies_392;
            Py_INCREF(tmp_tuple_element_248);
            PyTuple_SET_ITEM(tmp_args_name_125, 2, tmp_tuple_element_248);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_42__class_decl_dict);
            tmp_kw_name_125 = tmp_QtWidgets$class_creation_42__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 392;
            tmp_assign_source_468 = CALL_FUNCTION(tmp_called_name_127, tmp_args_name_125, tmp_kw_name_125);
            Py_DECREF(tmp_args_name_125);
            if (tmp_assign_source_468 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_2 = "o";
                goto try_except_handler_190;
            }
            assert(outline_62_var___class__ == NULL);
            outline_62_var___class__ = tmp_assign_source_468;
        }
        CHECK_OBJECT(outline_62_var___class__);
        tmp_dictset_value = outline_62_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_190;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_190:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_392);
        locals_PyQt5$uic$Compiler$qtproxies_392 = NULL;
        goto try_return_handler_189;
        // Exception handler code:
        try_except_handler_190:;
        exception_keeper_type_185 = exception_type;
        exception_keeper_value_185 = exception_value;
        exception_keeper_tb_185 = exception_tb;
        exception_keeper_lineno_185 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_392);
        locals_PyQt5$uic$Compiler$qtproxies_392 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_185;
        exception_value = exception_keeper_value_185;
        exception_tb = exception_keeper_tb_185;
        exception_lineno = exception_keeper_lineno_185;

        goto try_except_handler_189;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_189:;
        CHECK_OBJECT((PyObject *)outline_62_var___class__);
        Py_DECREF(outline_62_var___class__);
        outline_62_var___class__ = NULL;

        goto outline_result_63;
        // Exception handler code:
        try_except_handler_189:;
        exception_keeper_type_186 = exception_type;
        exception_keeper_value_186 = exception_value;
        exception_keeper_tb_186 = exception_tb;
        exception_keeper_lineno_186 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_186;
        exception_value = exception_keeper_value_186;
        exception_tb = exception_keeper_tb_186;
        exception_lineno = exception_keeper_lineno_186;

        goto outline_exception_63;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_63:;
        exception_lineno = 392;
        goto try_except_handler_188;
        outline_result_63:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QGraphicsView, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 392;
            type_description_2 = "o";
            goto try_except_handler_188;
        }
        goto try_end_63;
        // Exception handler code:
        try_except_handler_188:;
        exception_keeper_type_187 = exception_type;
        exception_keeper_value_187 = exception_value;
        exception_keeper_tb_187 = exception_tb;
        exception_keeper_lineno_187 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_42__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_42__bases_orig);
        tmp_QtWidgets$class_creation_42__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_42__bases);
        tmp_QtWidgets$class_creation_42__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_42__class_decl_dict);
        tmp_QtWidgets$class_creation_42__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_42__metaclass);
        tmp_QtWidgets$class_creation_42__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_42__prepared);
        tmp_QtWidgets$class_creation_42__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_187;
        exception_value = exception_keeper_value_187;
        exception_tb = exception_keeper_tb_187;
        exception_lineno = exception_keeper_lineno_187;

        goto frame_exception_exit_12;
        // End of try:
        try_end_63:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_42__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_42__bases_orig);
        tmp_QtWidgets$class_creation_42__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_42__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_42__bases);
        tmp_QtWidgets$class_creation_42__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_42__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_42__class_decl_dict);
        tmp_QtWidgets$class_creation_42__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_42__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_42__metaclass);
        tmp_QtWidgets$class_creation_42__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_42__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_42__prepared);
        tmp_QtWidgets$class_creation_42__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_469;
            PyObject *tmp_tuple_element_249;
            PyObject *tmp_mvar_value_56;
            tmp_tuple_element_249 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractScrollArea);

            if (tmp_tuple_element_249 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_56 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);

                    if (unlikely(tmp_mvar_value_56 == NULL)) {
                        tmp_mvar_value_56 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);
                    }

                    if (tmp_mvar_value_56 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1818 ], 41, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 393;
                        type_description_2 = "o";
                        goto try_except_handler_191;
                    }

                    tmp_tuple_element_249 = tmp_mvar_value_56;
                    Py_INCREF(tmp_tuple_element_249);
                }
            }

            tmp_assign_source_469 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_469, 0, tmp_tuple_element_249);
            assert(tmp_QtWidgets$class_creation_43__bases_orig == NULL);
            tmp_QtWidgets$class_creation_43__bases_orig = tmp_assign_source_469;
        }
        {
            PyObject *tmp_assign_source_470;
            PyObject *tmp_dircall_arg1_64;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases_orig);
            tmp_dircall_arg1_64 = tmp_QtWidgets$class_creation_43__bases_orig;
            Py_INCREF(tmp_dircall_arg1_64);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_64};
                tmp_assign_source_470 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_470 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            assert(tmp_QtWidgets$class_creation_43__bases == NULL);
            tmp_QtWidgets$class_creation_43__bases = tmp_assign_source_470;
        }
        {
            PyObject *tmp_assign_source_471;
            tmp_assign_source_471 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_43__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_43__class_decl_dict = tmp_assign_source_471;
        }
        {
            PyObject *tmp_assign_source_472;
            PyObject *tmp_metaclass_name_64;
            nuitka_bool tmp_condition_result_381;
            PyObject *tmp_key_name_190;
            PyObject *tmp_dict_name_190;
            PyObject *tmp_dict_name_191;
            PyObject *tmp_key_name_191;
            nuitka_bool tmp_condition_result_382;
            int tmp_truth_name_64;
            PyObject *tmp_type_arg_127;
            PyObject *tmp_subscribed_name_64;
            PyObject *tmp_subscript_name_64;
            PyObject *tmp_bases_name_64;
            tmp_key_name_190 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__class_decl_dict);
            tmp_dict_name_190 = tmp_QtWidgets$class_creation_43__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_190, tmp_key_name_190);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            tmp_condition_result_381 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_381 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_129;
            } else {
                goto condexpr_false_129;
            }
            condexpr_true_129:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__class_decl_dict);
            tmp_dict_name_191 = tmp_QtWidgets$class_creation_43__class_decl_dict;
            tmp_key_name_191 = const_str_plain_metaclass;
            tmp_metaclass_name_64 = DICT_GET_ITEM(tmp_dict_name_191, tmp_key_name_191);
            if (tmp_metaclass_name_64 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            goto condexpr_end_129;
            condexpr_false_129:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases);
            tmp_truth_name_64 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_43__bases);
            if (tmp_truth_name_64 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            tmp_condition_result_382 = tmp_truth_name_64 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_382 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_130;
            } else {
                goto condexpr_false_130;
            }
            condexpr_true_130:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases);
            tmp_subscribed_name_64 = tmp_QtWidgets$class_creation_43__bases;
            tmp_subscript_name_64 = const_int_0;
            tmp_type_arg_127 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_64, tmp_subscript_name_64, 0);
            if (tmp_type_arg_127 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            tmp_metaclass_name_64 = BUILTIN_TYPE1(tmp_type_arg_127);
            Py_DECREF(tmp_type_arg_127);
            if (tmp_metaclass_name_64 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            goto condexpr_end_130;
            condexpr_false_130:;
            tmp_metaclass_name_64 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_64);
            condexpr_end_130:;
            condexpr_end_129:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases);
            tmp_bases_name_64 = tmp_QtWidgets$class_creation_43__bases;
            tmp_assign_source_472 = SELECT_METACLASS(tmp_metaclass_name_64, tmp_bases_name_64);
            Py_DECREF(tmp_metaclass_name_64);
            if (tmp_assign_source_472 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            assert(tmp_QtWidgets$class_creation_43__metaclass == NULL);
            tmp_QtWidgets$class_creation_43__metaclass = tmp_assign_source_472;
        }
        {
            nuitka_bool tmp_condition_result_383;
            PyObject *tmp_key_name_192;
            PyObject *tmp_dict_name_192;
            tmp_key_name_192 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__class_decl_dict);
            tmp_dict_name_192 = tmp_QtWidgets$class_creation_43__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_192, tmp_key_name_192);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            tmp_condition_result_383 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_383 == NUITKA_BOOL_TRUE) {
                goto branch_yes_253;
            } else {
                goto branch_no_253;
            }
            branch_yes_253:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_43__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_191;
            }
            branch_no_253:;
        }
        {
            nuitka_bool tmp_condition_result_384;
            PyObject *tmp_source_name_260;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__metaclass);
            tmp_source_name_260 = tmp_QtWidgets$class_creation_43__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_260, const_str_plain___prepare__);
            tmp_condition_result_384 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_384 == NUITKA_BOOL_TRUE) {
                goto branch_yes_254;
            } else {
                goto branch_no_254;
            }
            branch_yes_254:;
            {
                PyObject *tmp_assign_source_473;
                PyObject *tmp_called_name_128;
                PyObject *tmp_source_name_261;
                PyObject *tmp_args_name_126;
                PyObject *tmp_tuple_element_250;
                PyObject *tmp_kw_name_126;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_43__metaclass);
                tmp_source_name_261 = tmp_QtWidgets$class_creation_43__metaclass;
                tmp_called_name_128 = LOOKUP_ATTRIBUTE(tmp_source_name_261, const_str_plain___prepare__);
                if (tmp_called_name_128 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 393;
                    type_description_2 = "o";
                    goto try_except_handler_191;
                }
                tmp_tuple_element_250 = const_str_plain_QMdiArea;
                tmp_args_name_126 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_250);
                PyTuple_SET_ITEM(tmp_args_name_126, 0, tmp_tuple_element_250);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases);
                tmp_tuple_element_250 = tmp_QtWidgets$class_creation_43__bases;
                Py_INCREF(tmp_tuple_element_250);
                PyTuple_SET_ITEM(tmp_args_name_126, 1, tmp_tuple_element_250);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_43__class_decl_dict);
                tmp_kw_name_126 = tmp_QtWidgets$class_creation_43__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 393;
                tmp_assign_source_473 = CALL_FUNCTION(tmp_called_name_128, tmp_args_name_126, tmp_kw_name_126);
                Py_DECREF(tmp_called_name_128);
                Py_DECREF(tmp_args_name_126);
                if (tmp_assign_source_473 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 393;
                    type_description_2 = "o";
                    goto try_except_handler_191;
                }
                assert(tmp_QtWidgets$class_creation_43__prepared == NULL);
                tmp_QtWidgets$class_creation_43__prepared = tmp_assign_source_473;
            }
            {
                nuitka_bool tmp_condition_result_385;
                PyObject *tmp_operand_name_64;
                PyObject *tmp_source_name_262;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_43__prepared);
                tmp_source_name_262 = tmp_QtWidgets$class_creation_43__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_262, const_str_plain___getitem__);
                tmp_operand_name_64 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_64);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 393;
                    type_description_2 = "o";
                    goto try_except_handler_191;
                }
                tmp_condition_result_385 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_385 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_255;
                } else {
                    goto branch_no_255;
                }
                branch_yes_255:;
                {
                    PyObject *tmp_raise_type_64;
                    PyObject *tmp_raise_value_64;
                    PyObject *tmp_left_name_64;
                    PyObject *tmp_right_name_64;
                    PyObject *tmp_tuple_element_251;
                    PyObject *tmp_getattr_target_64;
                    PyObject *tmp_getattr_attr_64;
                    PyObject *tmp_getattr_default_64;
                    PyObject *tmp_source_name_263;
                    PyObject *tmp_type_arg_128;
                    tmp_raise_type_64 = PyExc_TypeError;
                    tmp_left_name_64 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_43__metaclass);
                    tmp_getattr_target_64 = tmp_QtWidgets$class_creation_43__metaclass;
                    tmp_getattr_attr_64 = const_str_plain___name__;
                    tmp_getattr_default_64 = const_str_angle_metaclass;
                    tmp_tuple_element_251 = BUILTIN_GETATTR(tmp_getattr_target_64, tmp_getattr_attr_64, tmp_getattr_default_64);
                    if (tmp_tuple_element_251 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_2 = "o";
                        goto try_except_handler_191;
                    }
                    tmp_right_name_64 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_64, 0, tmp_tuple_element_251);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_43__prepared);
                    tmp_type_arg_128 = tmp_QtWidgets$class_creation_43__prepared;
                    tmp_source_name_263 = BUILTIN_TYPE1(tmp_type_arg_128);
                    assert(!(tmp_source_name_263 == NULL));
                    tmp_tuple_element_251 = LOOKUP_ATTRIBUTE(tmp_source_name_263, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_263);
                    if (tmp_tuple_element_251 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_64);

                        exception_lineno = 393;
                        type_description_2 = "o";
                        goto try_except_handler_191;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_64, 1, tmp_tuple_element_251);
                    tmp_raise_value_64 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_64, tmp_right_name_64);
                    Py_DECREF(tmp_right_name_64);
                    if (tmp_raise_value_64 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_2 = "o";
                        goto try_except_handler_191;
                    }
                    exception_type = tmp_raise_type_64;
                    Py_INCREF(tmp_raise_type_64);
                    exception_value = tmp_raise_value_64;
                    exception_lineno = 393;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_191;
                }
                branch_no_255:;
            }
            goto branch_end_254;
            branch_no_254:;
            {
                PyObject *tmp_assign_source_474;
                tmp_assign_source_474 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_43__prepared == NULL);
                tmp_QtWidgets$class_creation_43__prepared = tmp_assign_source_474;
            }
            branch_end_254:;
        }
        {
            PyObject *tmp_set_locals_64;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__prepared);
            tmp_set_locals_64 = tmp_QtWidgets$class_creation_43__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_393 = tmp_set_locals_64;
            Py_INCREF(tmp_set_locals_64);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_393, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 393;
            type_description_2 = "o";
            goto try_except_handler_193;
        }
        tmp_dictset_value = const_str_digest_be2368c83be9c87dbb63bcc0f8bd218c;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_393, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 393;
            type_description_2 = "o";
            goto try_except_handler_193;
        }
        {
            nuitka_bool tmp_condition_result_386;
            PyObject *tmp_compexpr_left_64;
            PyObject *tmp_compexpr_right_64;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases);
            tmp_compexpr_left_64 = tmp_QtWidgets$class_creation_43__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases_orig);
            tmp_compexpr_right_64 = tmp_QtWidgets$class_creation_43__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_64, tmp_compexpr_right_64);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_193;
            }
            tmp_condition_result_386 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_386 == NUITKA_BOOL_TRUE) {
                goto branch_yes_256;
            } else {
                goto branch_no_256;
            }
            branch_yes_256:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_43__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_393, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_193;
            }
            branch_no_256:;
        }
        {
            PyObject *tmp_assign_source_475;
            PyObject *tmp_called_name_129;
            PyObject *tmp_args_name_127;
            PyObject *tmp_tuple_element_252;
            PyObject *tmp_kw_name_127;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__metaclass);
            tmp_called_name_129 = tmp_QtWidgets$class_creation_43__metaclass;
            tmp_tuple_element_252 = const_str_plain_QMdiArea;
            tmp_args_name_127 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_252);
            PyTuple_SET_ITEM(tmp_args_name_127, 0, tmp_tuple_element_252);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__bases);
            tmp_tuple_element_252 = tmp_QtWidgets$class_creation_43__bases;
            Py_INCREF(tmp_tuple_element_252);
            PyTuple_SET_ITEM(tmp_args_name_127, 1, tmp_tuple_element_252);
            tmp_tuple_element_252 = locals_PyQt5$uic$Compiler$qtproxies_393;
            Py_INCREF(tmp_tuple_element_252);
            PyTuple_SET_ITEM(tmp_args_name_127, 2, tmp_tuple_element_252);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_43__class_decl_dict);
            tmp_kw_name_127 = tmp_QtWidgets$class_creation_43__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 393;
            tmp_assign_source_475 = CALL_FUNCTION(tmp_called_name_129, tmp_args_name_127, tmp_kw_name_127);
            Py_DECREF(tmp_args_name_127);
            if (tmp_assign_source_475 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_2 = "o";
                goto try_except_handler_193;
            }
            assert(outline_63_var___class__ == NULL);
            outline_63_var___class__ = tmp_assign_source_475;
        }
        CHECK_OBJECT(outline_63_var___class__);
        tmp_dictset_value = outline_63_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_193;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_193:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_393);
        locals_PyQt5$uic$Compiler$qtproxies_393 = NULL;
        goto try_return_handler_192;
        // Exception handler code:
        try_except_handler_193:;
        exception_keeper_type_188 = exception_type;
        exception_keeper_value_188 = exception_value;
        exception_keeper_tb_188 = exception_tb;
        exception_keeper_lineno_188 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_393);
        locals_PyQt5$uic$Compiler$qtproxies_393 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_188;
        exception_value = exception_keeper_value_188;
        exception_tb = exception_keeper_tb_188;
        exception_lineno = exception_keeper_lineno_188;

        goto try_except_handler_192;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_192:;
        CHECK_OBJECT((PyObject *)outline_63_var___class__);
        Py_DECREF(outline_63_var___class__);
        outline_63_var___class__ = NULL;

        goto outline_result_64;
        // Exception handler code:
        try_except_handler_192:;
        exception_keeper_type_189 = exception_type;
        exception_keeper_value_189 = exception_value;
        exception_keeper_tb_189 = exception_tb;
        exception_keeper_lineno_189 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_189;
        exception_value = exception_keeper_value_189;
        exception_tb = exception_keeper_tb_189;
        exception_lineno = exception_keeper_lineno_189;

        goto outline_exception_64;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_64:;
        exception_lineno = 393;
        goto try_except_handler_191;
        outline_result_64:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QMdiArea, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 393;
            type_description_2 = "o";
            goto try_except_handler_191;
        }
        goto try_end_64;
        // Exception handler code:
        try_except_handler_191:;
        exception_keeper_type_190 = exception_type;
        exception_keeper_value_190 = exception_value;
        exception_keeper_tb_190 = exception_tb;
        exception_keeper_lineno_190 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_43__bases_orig);
        tmp_QtWidgets$class_creation_43__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_43__bases);
        tmp_QtWidgets$class_creation_43__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_43__class_decl_dict);
        tmp_QtWidgets$class_creation_43__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_43__metaclass);
        tmp_QtWidgets$class_creation_43__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_43__prepared);
        tmp_QtWidgets$class_creation_43__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_190;
        exception_value = exception_keeper_value_190;
        exception_tb = exception_keeper_tb_190;
        exception_lineno = exception_keeper_lineno_190;

        goto frame_exception_exit_12;
        // End of try:
        try_end_64:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_43__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_43__bases_orig);
        tmp_QtWidgets$class_creation_43__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_43__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_43__bases);
        tmp_QtWidgets$class_creation_43__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_43__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_43__class_decl_dict);
        tmp_QtWidgets$class_creation_43__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_43__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_43__metaclass);
        tmp_QtWidgets$class_creation_43__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_43__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_43__prepared);
        tmp_QtWidgets$class_creation_43__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_476;
            PyObject *tmp_tuple_element_253;
            PyObject *tmp_mvar_value_57;
            tmp_tuple_element_253 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractScrollArea);

            if (tmp_tuple_element_253 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_57 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);

                    if (unlikely(tmp_mvar_value_57 == NULL)) {
                        tmp_mvar_value_57 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);
                    }

                    if (tmp_mvar_value_57 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1818 ], 41, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 394;
                        type_description_2 = "o";
                        goto try_except_handler_194;
                    }

                    tmp_tuple_element_253 = tmp_mvar_value_57;
                    Py_INCREF(tmp_tuple_element_253);
                }
            }

            tmp_assign_source_476 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_476, 0, tmp_tuple_element_253);
            assert(tmp_QtWidgets$class_creation_44__bases_orig == NULL);
            tmp_QtWidgets$class_creation_44__bases_orig = tmp_assign_source_476;
        }
        {
            PyObject *tmp_assign_source_477;
            PyObject *tmp_dircall_arg1_65;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases_orig);
            tmp_dircall_arg1_65 = tmp_QtWidgets$class_creation_44__bases_orig;
            Py_INCREF(tmp_dircall_arg1_65);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_65};
                tmp_assign_source_477 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_477 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            assert(tmp_QtWidgets$class_creation_44__bases == NULL);
            tmp_QtWidgets$class_creation_44__bases = tmp_assign_source_477;
        }
        {
            PyObject *tmp_assign_source_478;
            tmp_assign_source_478 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_44__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_44__class_decl_dict = tmp_assign_source_478;
        }
        {
            PyObject *tmp_assign_source_479;
            PyObject *tmp_metaclass_name_65;
            nuitka_bool tmp_condition_result_387;
            PyObject *tmp_key_name_193;
            PyObject *tmp_dict_name_193;
            PyObject *tmp_dict_name_194;
            PyObject *tmp_key_name_194;
            nuitka_bool tmp_condition_result_388;
            int tmp_truth_name_65;
            PyObject *tmp_type_arg_129;
            PyObject *tmp_subscribed_name_65;
            PyObject *tmp_subscript_name_65;
            PyObject *tmp_bases_name_65;
            tmp_key_name_193 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__class_decl_dict);
            tmp_dict_name_193 = tmp_QtWidgets$class_creation_44__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_193, tmp_key_name_193);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            tmp_condition_result_387 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_387 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_131;
            } else {
                goto condexpr_false_131;
            }
            condexpr_true_131:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__class_decl_dict);
            tmp_dict_name_194 = tmp_QtWidgets$class_creation_44__class_decl_dict;
            tmp_key_name_194 = const_str_plain_metaclass;
            tmp_metaclass_name_65 = DICT_GET_ITEM(tmp_dict_name_194, tmp_key_name_194);
            if (tmp_metaclass_name_65 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            goto condexpr_end_131;
            condexpr_false_131:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases);
            tmp_truth_name_65 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_44__bases);
            if (tmp_truth_name_65 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            tmp_condition_result_388 = tmp_truth_name_65 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_388 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_132;
            } else {
                goto condexpr_false_132;
            }
            condexpr_true_132:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases);
            tmp_subscribed_name_65 = tmp_QtWidgets$class_creation_44__bases;
            tmp_subscript_name_65 = const_int_0;
            tmp_type_arg_129 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_65, tmp_subscript_name_65, 0);
            if (tmp_type_arg_129 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            tmp_metaclass_name_65 = BUILTIN_TYPE1(tmp_type_arg_129);
            Py_DECREF(tmp_type_arg_129);
            if (tmp_metaclass_name_65 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            goto condexpr_end_132;
            condexpr_false_132:;
            tmp_metaclass_name_65 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_65);
            condexpr_end_132:;
            condexpr_end_131:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases);
            tmp_bases_name_65 = tmp_QtWidgets$class_creation_44__bases;
            tmp_assign_source_479 = SELECT_METACLASS(tmp_metaclass_name_65, tmp_bases_name_65);
            Py_DECREF(tmp_metaclass_name_65);
            if (tmp_assign_source_479 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            assert(tmp_QtWidgets$class_creation_44__metaclass == NULL);
            tmp_QtWidgets$class_creation_44__metaclass = tmp_assign_source_479;
        }
        {
            nuitka_bool tmp_condition_result_389;
            PyObject *tmp_key_name_195;
            PyObject *tmp_dict_name_195;
            tmp_key_name_195 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__class_decl_dict);
            tmp_dict_name_195 = tmp_QtWidgets$class_creation_44__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_195, tmp_key_name_195);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            tmp_condition_result_389 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_389 == NUITKA_BOOL_TRUE) {
                goto branch_yes_257;
            } else {
                goto branch_no_257;
            }
            branch_yes_257:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_44__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_194;
            }
            branch_no_257:;
        }
        {
            nuitka_bool tmp_condition_result_390;
            PyObject *tmp_source_name_264;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__metaclass);
            tmp_source_name_264 = tmp_QtWidgets$class_creation_44__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_264, const_str_plain___prepare__);
            tmp_condition_result_390 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_390 == NUITKA_BOOL_TRUE) {
                goto branch_yes_258;
            } else {
                goto branch_no_258;
            }
            branch_yes_258:;
            {
                PyObject *tmp_assign_source_480;
                PyObject *tmp_called_name_130;
                PyObject *tmp_source_name_265;
                PyObject *tmp_args_name_128;
                PyObject *tmp_tuple_element_254;
                PyObject *tmp_kw_name_128;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_44__metaclass);
                tmp_source_name_265 = tmp_QtWidgets$class_creation_44__metaclass;
                tmp_called_name_130 = LOOKUP_ATTRIBUTE(tmp_source_name_265, const_str_plain___prepare__);
                if (tmp_called_name_130 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 394;
                    type_description_2 = "o";
                    goto try_except_handler_194;
                }
                tmp_tuple_element_254 = const_str_plain_QPlainTextEdit;
                tmp_args_name_128 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_254);
                PyTuple_SET_ITEM(tmp_args_name_128, 0, tmp_tuple_element_254);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases);
                tmp_tuple_element_254 = tmp_QtWidgets$class_creation_44__bases;
                Py_INCREF(tmp_tuple_element_254);
                PyTuple_SET_ITEM(tmp_args_name_128, 1, tmp_tuple_element_254);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_44__class_decl_dict);
                tmp_kw_name_128 = tmp_QtWidgets$class_creation_44__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 394;
                tmp_assign_source_480 = CALL_FUNCTION(tmp_called_name_130, tmp_args_name_128, tmp_kw_name_128);
                Py_DECREF(tmp_called_name_130);
                Py_DECREF(tmp_args_name_128);
                if (tmp_assign_source_480 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 394;
                    type_description_2 = "o";
                    goto try_except_handler_194;
                }
                assert(tmp_QtWidgets$class_creation_44__prepared == NULL);
                tmp_QtWidgets$class_creation_44__prepared = tmp_assign_source_480;
            }
            {
                nuitka_bool tmp_condition_result_391;
                PyObject *tmp_operand_name_65;
                PyObject *tmp_source_name_266;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_44__prepared);
                tmp_source_name_266 = tmp_QtWidgets$class_creation_44__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_266, const_str_plain___getitem__);
                tmp_operand_name_65 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_65);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 394;
                    type_description_2 = "o";
                    goto try_except_handler_194;
                }
                tmp_condition_result_391 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_391 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_259;
                } else {
                    goto branch_no_259;
                }
                branch_yes_259:;
                {
                    PyObject *tmp_raise_type_65;
                    PyObject *tmp_raise_value_65;
                    PyObject *tmp_left_name_65;
                    PyObject *tmp_right_name_65;
                    PyObject *tmp_tuple_element_255;
                    PyObject *tmp_getattr_target_65;
                    PyObject *tmp_getattr_attr_65;
                    PyObject *tmp_getattr_default_65;
                    PyObject *tmp_source_name_267;
                    PyObject *tmp_type_arg_130;
                    tmp_raise_type_65 = PyExc_TypeError;
                    tmp_left_name_65 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_44__metaclass);
                    tmp_getattr_target_65 = tmp_QtWidgets$class_creation_44__metaclass;
                    tmp_getattr_attr_65 = const_str_plain___name__;
                    tmp_getattr_default_65 = const_str_angle_metaclass;
                    tmp_tuple_element_255 = BUILTIN_GETATTR(tmp_getattr_target_65, tmp_getattr_attr_65, tmp_getattr_default_65);
                    if (tmp_tuple_element_255 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 394;
                        type_description_2 = "o";
                        goto try_except_handler_194;
                    }
                    tmp_right_name_65 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_65, 0, tmp_tuple_element_255);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_44__prepared);
                    tmp_type_arg_130 = tmp_QtWidgets$class_creation_44__prepared;
                    tmp_source_name_267 = BUILTIN_TYPE1(tmp_type_arg_130);
                    assert(!(tmp_source_name_267 == NULL));
                    tmp_tuple_element_255 = LOOKUP_ATTRIBUTE(tmp_source_name_267, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_267);
                    if (tmp_tuple_element_255 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_65);

                        exception_lineno = 394;
                        type_description_2 = "o";
                        goto try_except_handler_194;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_65, 1, tmp_tuple_element_255);
                    tmp_raise_value_65 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_65, tmp_right_name_65);
                    Py_DECREF(tmp_right_name_65);
                    if (tmp_raise_value_65 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 394;
                        type_description_2 = "o";
                        goto try_except_handler_194;
                    }
                    exception_type = tmp_raise_type_65;
                    Py_INCREF(tmp_raise_type_65);
                    exception_value = tmp_raise_value_65;
                    exception_lineno = 394;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_194;
                }
                branch_no_259:;
            }
            goto branch_end_258;
            branch_no_258:;
            {
                PyObject *tmp_assign_source_481;
                tmp_assign_source_481 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_44__prepared == NULL);
                tmp_QtWidgets$class_creation_44__prepared = tmp_assign_source_481;
            }
            branch_end_258:;
        }
        {
            PyObject *tmp_set_locals_65;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__prepared);
            tmp_set_locals_65 = tmp_QtWidgets$class_creation_44__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_394 = tmp_set_locals_65;
            Py_INCREF(tmp_set_locals_65);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_394, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;
            type_description_2 = "o";
            goto try_except_handler_196;
        }
        tmp_dictset_value = const_str_digest_8e611e5c50f8f4d310824827087f3e3d;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_394, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;
            type_description_2 = "o";
            goto try_except_handler_196;
        }
        {
            nuitka_bool tmp_condition_result_392;
            PyObject *tmp_compexpr_left_65;
            PyObject *tmp_compexpr_right_65;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases);
            tmp_compexpr_left_65 = tmp_QtWidgets$class_creation_44__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases_orig);
            tmp_compexpr_right_65 = tmp_QtWidgets$class_creation_44__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_65, tmp_compexpr_right_65);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_196;
            }
            tmp_condition_result_392 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_392 == NUITKA_BOOL_TRUE) {
                goto branch_yes_260;
            } else {
                goto branch_no_260;
            }
            branch_yes_260:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_44__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_394, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_196;
            }
            branch_no_260:;
        }
        {
            PyObject *tmp_assign_source_482;
            PyObject *tmp_called_name_131;
            PyObject *tmp_args_name_129;
            PyObject *tmp_tuple_element_256;
            PyObject *tmp_kw_name_129;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__metaclass);
            tmp_called_name_131 = tmp_QtWidgets$class_creation_44__metaclass;
            tmp_tuple_element_256 = const_str_plain_QPlainTextEdit;
            tmp_args_name_129 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_256);
            PyTuple_SET_ITEM(tmp_args_name_129, 0, tmp_tuple_element_256);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__bases);
            tmp_tuple_element_256 = tmp_QtWidgets$class_creation_44__bases;
            Py_INCREF(tmp_tuple_element_256);
            PyTuple_SET_ITEM(tmp_args_name_129, 1, tmp_tuple_element_256);
            tmp_tuple_element_256 = locals_PyQt5$uic$Compiler$qtproxies_394;
            Py_INCREF(tmp_tuple_element_256);
            PyTuple_SET_ITEM(tmp_args_name_129, 2, tmp_tuple_element_256);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_44__class_decl_dict);
            tmp_kw_name_129 = tmp_QtWidgets$class_creation_44__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 394;
            tmp_assign_source_482 = CALL_FUNCTION(tmp_called_name_131, tmp_args_name_129, tmp_kw_name_129);
            Py_DECREF(tmp_args_name_129);
            if (tmp_assign_source_482 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_2 = "o";
                goto try_except_handler_196;
            }
            assert(outline_64_var___class__ == NULL);
            outline_64_var___class__ = tmp_assign_source_482;
        }
        CHECK_OBJECT(outline_64_var___class__);
        tmp_dictset_value = outline_64_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_196;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_196:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_394);
        locals_PyQt5$uic$Compiler$qtproxies_394 = NULL;
        goto try_return_handler_195;
        // Exception handler code:
        try_except_handler_196:;
        exception_keeper_type_191 = exception_type;
        exception_keeper_value_191 = exception_value;
        exception_keeper_tb_191 = exception_tb;
        exception_keeper_lineno_191 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_394);
        locals_PyQt5$uic$Compiler$qtproxies_394 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_191;
        exception_value = exception_keeper_value_191;
        exception_tb = exception_keeper_tb_191;
        exception_lineno = exception_keeper_lineno_191;

        goto try_except_handler_195;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_195:;
        CHECK_OBJECT((PyObject *)outline_64_var___class__);
        Py_DECREF(outline_64_var___class__);
        outline_64_var___class__ = NULL;

        goto outline_result_65;
        // Exception handler code:
        try_except_handler_195:;
        exception_keeper_type_192 = exception_type;
        exception_keeper_value_192 = exception_value;
        exception_keeper_tb_192 = exception_tb;
        exception_keeper_lineno_192 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_192;
        exception_value = exception_keeper_value_192;
        exception_tb = exception_keeper_tb_192;
        exception_lineno = exception_keeper_lineno_192;

        goto outline_exception_65;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_65:;
        exception_lineno = 394;
        goto try_except_handler_194;
        outline_result_65:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QPlainTextEdit, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;
            type_description_2 = "o";
            goto try_except_handler_194;
        }
        goto try_end_65;
        // Exception handler code:
        try_except_handler_194:;
        exception_keeper_type_193 = exception_type;
        exception_keeper_value_193 = exception_value;
        exception_keeper_tb_193 = exception_tb;
        exception_keeper_lineno_193 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_44__bases_orig);
        tmp_QtWidgets$class_creation_44__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_44__bases);
        tmp_QtWidgets$class_creation_44__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_44__class_decl_dict);
        tmp_QtWidgets$class_creation_44__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_44__metaclass);
        tmp_QtWidgets$class_creation_44__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_44__prepared);
        tmp_QtWidgets$class_creation_44__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_193;
        exception_value = exception_keeper_value_193;
        exception_tb = exception_keeper_tb_193;
        exception_lineno = exception_keeper_lineno_193;

        goto frame_exception_exit_12;
        // End of try:
        try_end_65:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_44__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_44__bases_orig);
        tmp_QtWidgets$class_creation_44__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_44__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_44__bases);
        tmp_QtWidgets$class_creation_44__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_44__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_44__class_decl_dict);
        tmp_QtWidgets$class_creation_44__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_44__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_44__metaclass);
        tmp_QtWidgets$class_creation_44__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_44__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_44__prepared);
        tmp_QtWidgets$class_creation_44__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_483;
            PyObject *tmp_tuple_element_257;
            PyObject *tmp_mvar_value_58;
            tmp_tuple_element_257 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractScrollArea);

            if (tmp_tuple_element_257 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_58 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);

                    if (unlikely(tmp_mvar_value_58 == NULL)) {
                        tmp_mvar_value_58 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);
                    }

                    if (tmp_mvar_value_58 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1818 ], 41, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 395;
                        type_description_2 = "o";
                        goto try_except_handler_197;
                    }

                    tmp_tuple_element_257 = tmp_mvar_value_58;
                    Py_INCREF(tmp_tuple_element_257);
                }
            }

            tmp_assign_source_483 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_483, 0, tmp_tuple_element_257);
            assert(tmp_QtWidgets$class_creation_45__bases_orig == NULL);
            tmp_QtWidgets$class_creation_45__bases_orig = tmp_assign_source_483;
        }
        {
            PyObject *tmp_assign_source_484;
            PyObject *tmp_dircall_arg1_66;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases_orig);
            tmp_dircall_arg1_66 = tmp_QtWidgets$class_creation_45__bases_orig;
            Py_INCREF(tmp_dircall_arg1_66);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_66};
                tmp_assign_source_484 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_484 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            assert(tmp_QtWidgets$class_creation_45__bases == NULL);
            tmp_QtWidgets$class_creation_45__bases = tmp_assign_source_484;
        }
        {
            PyObject *tmp_assign_source_485;
            tmp_assign_source_485 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_45__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_45__class_decl_dict = tmp_assign_source_485;
        }
        {
            PyObject *tmp_assign_source_486;
            PyObject *tmp_metaclass_name_66;
            nuitka_bool tmp_condition_result_393;
            PyObject *tmp_key_name_196;
            PyObject *tmp_dict_name_196;
            PyObject *tmp_dict_name_197;
            PyObject *tmp_key_name_197;
            nuitka_bool tmp_condition_result_394;
            int tmp_truth_name_66;
            PyObject *tmp_type_arg_131;
            PyObject *tmp_subscribed_name_66;
            PyObject *tmp_subscript_name_66;
            PyObject *tmp_bases_name_66;
            tmp_key_name_196 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__class_decl_dict);
            tmp_dict_name_196 = tmp_QtWidgets$class_creation_45__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_196, tmp_key_name_196);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            tmp_condition_result_393 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_393 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_133;
            } else {
                goto condexpr_false_133;
            }
            condexpr_true_133:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__class_decl_dict);
            tmp_dict_name_197 = tmp_QtWidgets$class_creation_45__class_decl_dict;
            tmp_key_name_197 = const_str_plain_metaclass;
            tmp_metaclass_name_66 = DICT_GET_ITEM(tmp_dict_name_197, tmp_key_name_197);
            if (tmp_metaclass_name_66 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            goto condexpr_end_133;
            condexpr_false_133:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases);
            tmp_truth_name_66 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_45__bases);
            if (tmp_truth_name_66 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            tmp_condition_result_394 = tmp_truth_name_66 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_394 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_134;
            } else {
                goto condexpr_false_134;
            }
            condexpr_true_134:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases);
            tmp_subscribed_name_66 = tmp_QtWidgets$class_creation_45__bases;
            tmp_subscript_name_66 = const_int_0;
            tmp_type_arg_131 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_66, tmp_subscript_name_66, 0);
            if (tmp_type_arg_131 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            tmp_metaclass_name_66 = BUILTIN_TYPE1(tmp_type_arg_131);
            Py_DECREF(tmp_type_arg_131);
            if (tmp_metaclass_name_66 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            goto condexpr_end_134;
            condexpr_false_134:;
            tmp_metaclass_name_66 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_66);
            condexpr_end_134:;
            condexpr_end_133:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases);
            tmp_bases_name_66 = tmp_QtWidgets$class_creation_45__bases;
            tmp_assign_source_486 = SELECT_METACLASS(tmp_metaclass_name_66, tmp_bases_name_66);
            Py_DECREF(tmp_metaclass_name_66);
            if (tmp_assign_source_486 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            assert(tmp_QtWidgets$class_creation_45__metaclass == NULL);
            tmp_QtWidgets$class_creation_45__metaclass = tmp_assign_source_486;
        }
        {
            nuitka_bool tmp_condition_result_395;
            PyObject *tmp_key_name_198;
            PyObject *tmp_dict_name_198;
            tmp_key_name_198 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__class_decl_dict);
            tmp_dict_name_198 = tmp_QtWidgets$class_creation_45__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_198, tmp_key_name_198);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            tmp_condition_result_395 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_395 == NUITKA_BOOL_TRUE) {
                goto branch_yes_261;
            } else {
                goto branch_no_261;
            }
            branch_yes_261:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_45__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_197;
            }
            branch_no_261:;
        }
        {
            nuitka_bool tmp_condition_result_396;
            PyObject *tmp_source_name_268;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__metaclass);
            tmp_source_name_268 = tmp_QtWidgets$class_creation_45__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_268, const_str_plain___prepare__);
            tmp_condition_result_396 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_396 == NUITKA_BOOL_TRUE) {
                goto branch_yes_262;
            } else {
                goto branch_no_262;
            }
            branch_yes_262:;
            {
                PyObject *tmp_assign_source_487;
                PyObject *tmp_called_name_132;
                PyObject *tmp_source_name_269;
                PyObject *tmp_args_name_130;
                PyObject *tmp_tuple_element_258;
                PyObject *tmp_kw_name_130;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_45__metaclass);
                tmp_source_name_269 = tmp_QtWidgets$class_creation_45__metaclass;
                tmp_called_name_132 = LOOKUP_ATTRIBUTE(tmp_source_name_269, const_str_plain___prepare__);
                if (tmp_called_name_132 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 395;
                    type_description_2 = "o";
                    goto try_except_handler_197;
                }
                tmp_tuple_element_258 = const_str_plain_QScrollArea;
                tmp_args_name_130 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_258);
                PyTuple_SET_ITEM(tmp_args_name_130, 0, tmp_tuple_element_258);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases);
                tmp_tuple_element_258 = tmp_QtWidgets$class_creation_45__bases;
                Py_INCREF(tmp_tuple_element_258);
                PyTuple_SET_ITEM(tmp_args_name_130, 1, tmp_tuple_element_258);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_45__class_decl_dict);
                tmp_kw_name_130 = tmp_QtWidgets$class_creation_45__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 395;
                tmp_assign_source_487 = CALL_FUNCTION(tmp_called_name_132, tmp_args_name_130, tmp_kw_name_130);
                Py_DECREF(tmp_called_name_132);
                Py_DECREF(tmp_args_name_130);
                if (tmp_assign_source_487 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 395;
                    type_description_2 = "o";
                    goto try_except_handler_197;
                }
                assert(tmp_QtWidgets$class_creation_45__prepared == NULL);
                tmp_QtWidgets$class_creation_45__prepared = tmp_assign_source_487;
            }
            {
                nuitka_bool tmp_condition_result_397;
                PyObject *tmp_operand_name_66;
                PyObject *tmp_source_name_270;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_45__prepared);
                tmp_source_name_270 = tmp_QtWidgets$class_creation_45__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_270, const_str_plain___getitem__);
                tmp_operand_name_66 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_66);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 395;
                    type_description_2 = "o";
                    goto try_except_handler_197;
                }
                tmp_condition_result_397 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_397 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_263;
                } else {
                    goto branch_no_263;
                }
                branch_yes_263:;
                {
                    PyObject *tmp_raise_type_66;
                    PyObject *tmp_raise_value_66;
                    PyObject *tmp_left_name_66;
                    PyObject *tmp_right_name_66;
                    PyObject *tmp_tuple_element_259;
                    PyObject *tmp_getattr_target_66;
                    PyObject *tmp_getattr_attr_66;
                    PyObject *tmp_getattr_default_66;
                    PyObject *tmp_source_name_271;
                    PyObject *tmp_type_arg_132;
                    tmp_raise_type_66 = PyExc_TypeError;
                    tmp_left_name_66 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_45__metaclass);
                    tmp_getattr_target_66 = tmp_QtWidgets$class_creation_45__metaclass;
                    tmp_getattr_attr_66 = const_str_plain___name__;
                    tmp_getattr_default_66 = const_str_angle_metaclass;
                    tmp_tuple_element_259 = BUILTIN_GETATTR(tmp_getattr_target_66, tmp_getattr_attr_66, tmp_getattr_default_66);
                    if (tmp_tuple_element_259 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 395;
                        type_description_2 = "o";
                        goto try_except_handler_197;
                    }
                    tmp_right_name_66 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_66, 0, tmp_tuple_element_259);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_45__prepared);
                    tmp_type_arg_132 = tmp_QtWidgets$class_creation_45__prepared;
                    tmp_source_name_271 = BUILTIN_TYPE1(tmp_type_arg_132);
                    assert(!(tmp_source_name_271 == NULL));
                    tmp_tuple_element_259 = LOOKUP_ATTRIBUTE(tmp_source_name_271, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_271);
                    if (tmp_tuple_element_259 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_66);

                        exception_lineno = 395;
                        type_description_2 = "o";
                        goto try_except_handler_197;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_66, 1, tmp_tuple_element_259);
                    tmp_raise_value_66 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_66, tmp_right_name_66);
                    Py_DECREF(tmp_right_name_66);
                    if (tmp_raise_value_66 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 395;
                        type_description_2 = "o";
                        goto try_except_handler_197;
                    }
                    exception_type = tmp_raise_type_66;
                    Py_INCREF(tmp_raise_type_66);
                    exception_value = tmp_raise_value_66;
                    exception_lineno = 395;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_197;
                }
                branch_no_263:;
            }
            goto branch_end_262;
            branch_no_262:;
            {
                PyObject *tmp_assign_source_488;
                tmp_assign_source_488 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_45__prepared == NULL);
                tmp_QtWidgets$class_creation_45__prepared = tmp_assign_source_488;
            }
            branch_end_262:;
        }
        {
            PyObject *tmp_set_locals_66;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__prepared);
            tmp_set_locals_66 = tmp_QtWidgets$class_creation_45__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_395 = tmp_set_locals_66;
            Py_INCREF(tmp_set_locals_66);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_395, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 395;
            type_description_2 = "o";
            goto try_except_handler_199;
        }
        tmp_dictset_value = const_str_digest_0d7821e7064e1cd5e934fef1d0f64c1f;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_395, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 395;
            type_description_2 = "o";
            goto try_except_handler_199;
        }
        {
            nuitka_bool tmp_condition_result_398;
            PyObject *tmp_compexpr_left_66;
            PyObject *tmp_compexpr_right_66;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases);
            tmp_compexpr_left_66 = tmp_QtWidgets$class_creation_45__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases_orig);
            tmp_compexpr_right_66 = tmp_QtWidgets$class_creation_45__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_66, tmp_compexpr_right_66);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_199;
            }
            tmp_condition_result_398 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_398 == NUITKA_BOOL_TRUE) {
                goto branch_yes_264;
            } else {
                goto branch_no_264;
            }
            branch_yes_264:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_45__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_395, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_199;
            }
            branch_no_264:;
        }
        {
            PyObject *tmp_assign_source_489;
            PyObject *tmp_called_name_133;
            PyObject *tmp_args_name_131;
            PyObject *tmp_tuple_element_260;
            PyObject *tmp_kw_name_131;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__metaclass);
            tmp_called_name_133 = tmp_QtWidgets$class_creation_45__metaclass;
            tmp_tuple_element_260 = const_str_plain_QScrollArea;
            tmp_args_name_131 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_260);
            PyTuple_SET_ITEM(tmp_args_name_131, 0, tmp_tuple_element_260);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__bases);
            tmp_tuple_element_260 = tmp_QtWidgets$class_creation_45__bases;
            Py_INCREF(tmp_tuple_element_260);
            PyTuple_SET_ITEM(tmp_args_name_131, 1, tmp_tuple_element_260);
            tmp_tuple_element_260 = locals_PyQt5$uic$Compiler$qtproxies_395;
            Py_INCREF(tmp_tuple_element_260);
            PyTuple_SET_ITEM(tmp_args_name_131, 2, tmp_tuple_element_260);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_45__class_decl_dict);
            tmp_kw_name_131 = tmp_QtWidgets$class_creation_45__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 395;
            tmp_assign_source_489 = CALL_FUNCTION(tmp_called_name_133, tmp_args_name_131, tmp_kw_name_131);
            Py_DECREF(tmp_args_name_131);
            if (tmp_assign_source_489 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_2 = "o";
                goto try_except_handler_199;
            }
            assert(outline_65_var___class__ == NULL);
            outline_65_var___class__ = tmp_assign_source_489;
        }
        CHECK_OBJECT(outline_65_var___class__);
        tmp_dictset_value = outline_65_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_199;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_199:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_395);
        locals_PyQt5$uic$Compiler$qtproxies_395 = NULL;
        goto try_return_handler_198;
        // Exception handler code:
        try_except_handler_199:;
        exception_keeper_type_194 = exception_type;
        exception_keeper_value_194 = exception_value;
        exception_keeper_tb_194 = exception_tb;
        exception_keeper_lineno_194 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_395);
        locals_PyQt5$uic$Compiler$qtproxies_395 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_194;
        exception_value = exception_keeper_value_194;
        exception_tb = exception_keeper_tb_194;
        exception_lineno = exception_keeper_lineno_194;

        goto try_except_handler_198;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_198:;
        CHECK_OBJECT((PyObject *)outline_65_var___class__);
        Py_DECREF(outline_65_var___class__);
        outline_65_var___class__ = NULL;

        goto outline_result_66;
        // Exception handler code:
        try_except_handler_198:;
        exception_keeper_type_195 = exception_type;
        exception_keeper_value_195 = exception_value;
        exception_keeper_tb_195 = exception_tb;
        exception_keeper_lineno_195 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_195;
        exception_value = exception_keeper_value_195;
        exception_tb = exception_keeper_tb_195;
        exception_lineno = exception_keeper_lineno_195;

        goto outline_exception_66;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_66:;
        exception_lineno = 395;
        goto try_except_handler_197;
        outline_result_66:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QScrollArea, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 395;
            type_description_2 = "o";
            goto try_except_handler_197;
        }
        goto try_end_66;
        // Exception handler code:
        try_except_handler_197:;
        exception_keeper_type_196 = exception_type;
        exception_keeper_value_196 = exception_value;
        exception_keeper_tb_196 = exception_tb;
        exception_keeper_lineno_196 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_45__bases_orig);
        tmp_QtWidgets$class_creation_45__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_45__bases);
        tmp_QtWidgets$class_creation_45__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_45__class_decl_dict);
        tmp_QtWidgets$class_creation_45__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_45__metaclass);
        tmp_QtWidgets$class_creation_45__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_45__prepared);
        tmp_QtWidgets$class_creation_45__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_196;
        exception_value = exception_keeper_value_196;
        exception_tb = exception_keeper_tb_196;
        exception_lineno = exception_keeper_lineno_196;

        goto frame_exception_exit_12;
        // End of try:
        try_end_66:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_45__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_45__bases_orig);
        tmp_QtWidgets$class_creation_45__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_45__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_45__bases);
        tmp_QtWidgets$class_creation_45__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_45__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_45__class_decl_dict);
        tmp_QtWidgets$class_creation_45__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_45__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_45__metaclass);
        tmp_QtWidgets$class_creation_45__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_45__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_45__prepared);
        tmp_QtWidgets$class_creation_45__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_490;
            PyObject *tmp_tuple_element_261;
            PyObject *tmp_mvar_value_59;
            tmp_tuple_element_261 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractScrollArea);

            if (tmp_tuple_element_261 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_59 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);

                    if (unlikely(tmp_mvar_value_59 == NULL)) {
                        tmp_mvar_value_59 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);
                    }

                    if (tmp_mvar_value_59 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1818 ], 41, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 397;
                        type_description_2 = "o";
                        goto try_except_handler_200;
                    }

                    tmp_tuple_element_261 = tmp_mvar_value_59;
                    Py_INCREF(tmp_tuple_element_261);
                }
            }

            tmp_assign_source_490 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_490, 0, tmp_tuple_element_261);
            assert(tmp_QtWidgets$class_creation_46__bases_orig == NULL);
            tmp_QtWidgets$class_creation_46__bases_orig = tmp_assign_source_490;
        }
        {
            PyObject *tmp_assign_source_491;
            PyObject *tmp_dircall_arg1_67;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases_orig);
            tmp_dircall_arg1_67 = tmp_QtWidgets$class_creation_46__bases_orig;
            Py_INCREF(tmp_dircall_arg1_67);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_67};
                tmp_assign_source_491 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_491 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            assert(tmp_QtWidgets$class_creation_46__bases == NULL);
            tmp_QtWidgets$class_creation_46__bases = tmp_assign_source_491;
        }
        {
            PyObject *tmp_assign_source_492;
            tmp_assign_source_492 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_46__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_46__class_decl_dict = tmp_assign_source_492;
        }
        {
            PyObject *tmp_assign_source_493;
            PyObject *tmp_metaclass_name_67;
            nuitka_bool tmp_condition_result_399;
            PyObject *tmp_key_name_199;
            PyObject *tmp_dict_name_199;
            PyObject *tmp_dict_name_200;
            PyObject *tmp_key_name_200;
            nuitka_bool tmp_condition_result_400;
            int tmp_truth_name_67;
            PyObject *tmp_type_arg_133;
            PyObject *tmp_subscribed_name_67;
            PyObject *tmp_subscript_name_67;
            PyObject *tmp_bases_name_67;
            tmp_key_name_199 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__class_decl_dict);
            tmp_dict_name_199 = tmp_QtWidgets$class_creation_46__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_199, tmp_key_name_199);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            tmp_condition_result_399 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_399 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_135;
            } else {
                goto condexpr_false_135;
            }
            condexpr_true_135:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__class_decl_dict);
            tmp_dict_name_200 = tmp_QtWidgets$class_creation_46__class_decl_dict;
            tmp_key_name_200 = const_str_plain_metaclass;
            tmp_metaclass_name_67 = DICT_GET_ITEM(tmp_dict_name_200, tmp_key_name_200);
            if (tmp_metaclass_name_67 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            goto condexpr_end_135;
            condexpr_false_135:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases);
            tmp_truth_name_67 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_46__bases);
            if (tmp_truth_name_67 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            tmp_condition_result_400 = tmp_truth_name_67 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_400 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_136;
            } else {
                goto condexpr_false_136;
            }
            condexpr_true_136:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases);
            tmp_subscribed_name_67 = tmp_QtWidgets$class_creation_46__bases;
            tmp_subscript_name_67 = const_int_0;
            tmp_type_arg_133 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_67, tmp_subscript_name_67, 0);
            if (tmp_type_arg_133 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            tmp_metaclass_name_67 = BUILTIN_TYPE1(tmp_type_arg_133);
            Py_DECREF(tmp_type_arg_133);
            if (tmp_metaclass_name_67 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            goto condexpr_end_136;
            condexpr_false_136:;
            tmp_metaclass_name_67 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_67);
            condexpr_end_136:;
            condexpr_end_135:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases);
            tmp_bases_name_67 = tmp_QtWidgets$class_creation_46__bases;
            tmp_assign_source_493 = SELECT_METACLASS(tmp_metaclass_name_67, tmp_bases_name_67);
            Py_DECREF(tmp_metaclass_name_67);
            if (tmp_assign_source_493 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            assert(tmp_QtWidgets$class_creation_46__metaclass == NULL);
            tmp_QtWidgets$class_creation_46__metaclass = tmp_assign_source_493;
        }
        {
            nuitka_bool tmp_condition_result_401;
            PyObject *tmp_key_name_201;
            PyObject *tmp_dict_name_201;
            tmp_key_name_201 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__class_decl_dict);
            tmp_dict_name_201 = tmp_QtWidgets$class_creation_46__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_201, tmp_key_name_201);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            tmp_condition_result_401 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_401 == NUITKA_BOOL_TRUE) {
                goto branch_yes_265;
            } else {
                goto branch_no_265;
            }
            branch_yes_265:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_46__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_200;
            }
            branch_no_265:;
        }
        {
            nuitka_bool tmp_condition_result_402;
            PyObject *tmp_source_name_272;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__metaclass);
            tmp_source_name_272 = tmp_QtWidgets$class_creation_46__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_272, const_str_plain___prepare__);
            tmp_condition_result_402 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_402 == NUITKA_BOOL_TRUE) {
                goto branch_yes_266;
            } else {
                goto branch_no_266;
            }
            branch_yes_266:;
            {
                PyObject *tmp_assign_source_494;
                PyObject *tmp_called_name_134;
                PyObject *tmp_source_name_273;
                PyObject *tmp_args_name_132;
                PyObject *tmp_tuple_element_262;
                PyObject *tmp_kw_name_132;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_46__metaclass);
                tmp_source_name_273 = tmp_QtWidgets$class_creation_46__metaclass;
                tmp_called_name_134 = LOOKUP_ATTRIBUTE(tmp_source_name_273, const_str_plain___prepare__);
                if (tmp_called_name_134 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 397;
                    type_description_2 = "o";
                    goto try_except_handler_200;
                }
                tmp_tuple_element_262 = const_str_plain_QTextEdit;
                tmp_args_name_132 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_262);
                PyTuple_SET_ITEM(tmp_args_name_132, 0, tmp_tuple_element_262);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases);
                tmp_tuple_element_262 = tmp_QtWidgets$class_creation_46__bases;
                Py_INCREF(tmp_tuple_element_262);
                PyTuple_SET_ITEM(tmp_args_name_132, 1, tmp_tuple_element_262);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_46__class_decl_dict);
                tmp_kw_name_132 = tmp_QtWidgets$class_creation_46__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 397;
                tmp_assign_source_494 = CALL_FUNCTION(tmp_called_name_134, tmp_args_name_132, tmp_kw_name_132);
                Py_DECREF(tmp_called_name_134);
                Py_DECREF(tmp_args_name_132);
                if (tmp_assign_source_494 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 397;
                    type_description_2 = "o";
                    goto try_except_handler_200;
                }
                assert(tmp_QtWidgets$class_creation_46__prepared == NULL);
                tmp_QtWidgets$class_creation_46__prepared = tmp_assign_source_494;
            }
            {
                nuitka_bool tmp_condition_result_403;
                PyObject *tmp_operand_name_67;
                PyObject *tmp_source_name_274;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_46__prepared);
                tmp_source_name_274 = tmp_QtWidgets$class_creation_46__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_274, const_str_plain___getitem__);
                tmp_operand_name_67 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_67);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 397;
                    type_description_2 = "o";
                    goto try_except_handler_200;
                }
                tmp_condition_result_403 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_403 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_267;
                } else {
                    goto branch_no_267;
                }
                branch_yes_267:;
                {
                    PyObject *tmp_raise_type_67;
                    PyObject *tmp_raise_value_67;
                    PyObject *tmp_left_name_67;
                    PyObject *tmp_right_name_67;
                    PyObject *tmp_tuple_element_263;
                    PyObject *tmp_getattr_target_67;
                    PyObject *tmp_getattr_attr_67;
                    PyObject *tmp_getattr_default_67;
                    PyObject *tmp_source_name_275;
                    PyObject *tmp_type_arg_134;
                    tmp_raise_type_67 = PyExc_TypeError;
                    tmp_left_name_67 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_46__metaclass);
                    tmp_getattr_target_67 = tmp_QtWidgets$class_creation_46__metaclass;
                    tmp_getattr_attr_67 = const_str_plain___name__;
                    tmp_getattr_default_67 = const_str_angle_metaclass;
                    tmp_tuple_element_263 = BUILTIN_GETATTR(tmp_getattr_target_67, tmp_getattr_attr_67, tmp_getattr_default_67);
                    if (tmp_tuple_element_263 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 397;
                        type_description_2 = "o";
                        goto try_except_handler_200;
                    }
                    tmp_right_name_67 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_67, 0, tmp_tuple_element_263);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_46__prepared);
                    tmp_type_arg_134 = tmp_QtWidgets$class_creation_46__prepared;
                    tmp_source_name_275 = BUILTIN_TYPE1(tmp_type_arg_134);
                    assert(!(tmp_source_name_275 == NULL));
                    tmp_tuple_element_263 = LOOKUP_ATTRIBUTE(tmp_source_name_275, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_275);
                    if (tmp_tuple_element_263 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_67);

                        exception_lineno = 397;
                        type_description_2 = "o";
                        goto try_except_handler_200;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_67, 1, tmp_tuple_element_263);
                    tmp_raise_value_67 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_67, tmp_right_name_67);
                    Py_DECREF(tmp_right_name_67);
                    if (tmp_raise_value_67 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 397;
                        type_description_2 = "o";
                        goto try_except_handler_200;
                    }
                    exception_type = tmp_raise_type_67;
                    Py_INCREF(tmp_raise_type_67);
                    exception_value = tmp_raise_value_67;
                    exception_lineno = 397;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_200;
                }
                branch_no_267:;
            }
            goto branch_end_266;
            branch_no_266:;
            {
                PyObject *tmp_assign_source_495;
                tmp_assign_source_495 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_46__prepared == NULL);
                tmp_QtWidgets$class_creation_46__prepared = tmp_assign_source_495;
            }
            branch_end_266:;
        }
        {
            PyObject *tmp_set_locals_67;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__prepared);
            tmp_set_locals_67 = tmp_QtWidgets$class_creation_46__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_397 = tmp_set_locals_67;
            Py_INCREF(tmp_set_locals_67);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_397, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 397;
            type_description_2 = "o";
            goto try_except_handler_202;
        }
        tmp_dictset_value = const_str_digest_5ff651c6aff8f0acdd8250626275cd5a;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_397, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 397;
            type_description_2 = "o";
            goto try_except_handler_202;
        }
        {
            nuitka_bool tmp_condition_result_404;
            PyObject *tmp_compexpr_left_67;
            PyObject *tmp_compexpr_right_67;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases);
            tmp_compexpr_left_67 = tmp_QtWidgets$class_creation_46__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases_orig);
            tmp_compexpr_right_67 = tmp_QtWidgets$class_creation_46__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_67, tmp_compexpr_right_67);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_202;
            }
            tmp_condition_result_404 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_404 == NUITKA_BOOL_TRUE) {
                goto branch_yes_268;
            } else {
                goto branch_no_268;
            }
            branch_yes_268:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_46__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_397, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_202;
            }
            branch_no_268:;
        }
        {
            PyObject *tmp_assign_source_496;
            PyObject *tmp_called_name_135;
            PyObject *tmp_args_name_133;
            PyObject *tmp_tuple_element_264;
            PyObject *tmp_kw_name_133;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__metaclass);
            tmp_called_name_135 = tmp_QtWidgets$class_creation_46__metaclass;
            tmp_tuple_element_264 = const_str_plain_QTextEdit;
            tmp_args_name_133 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_264);
            PyTuple_SET_ITEM(tmp_args_name_133, 0, tmp_tuple_element_264);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__bases);
            tmp_tuple_element_264 = tmp_QtWidgets$class_creation_46__bases;
            Py_INCREF(tmp_tuple_element_264);
            PyTuple_SET_ITEM(tmp_args_name_133, 1, tmp_tuple_element_264);
            tmp_tuple_element_264 = locals_PyQt5$uic$Compiler$qtproxies_397;
            Py_INCREF(tmp_tuple_element_264);
            PyTuple_SET_ITEM(tmp_args_name_133, 2, tmp_tuple_element_264);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_46__class_decl_dict);
            tmp_kw_name_133 = tmp_QtWidgets$class_creation_46__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 397;
            tmp_assign_source_496 = CALL_FUNCTION(tmp_called_name_135, tmp_args_name_133, tmp_kw_name_133);
            Py_DECREF(tmp_args_name_133);
            if (tmp_assign_source_496 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_2 = "o";
                goto try_except_handler_202;
            }
            assert(outline_66_var___class__ == NULL);
            outline_66_var___class__ = tmp_assign_source_496;
        }
        CHECK_OBJECT(outline_66_var___class__);
        tmp_dictset_value = outline_66_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_202;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_202:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_397);
        locals_PyQt5$uic$Compiler$qtproxies_397 = NULL;
        goto try_return_handler_201;
        // Exception handler code:
        try_except_handler_202:;
        exception_keeper_type_197 = exception_type;
        exception_keeper_value_197 = exception_value;
        exception_keeper_tb_197 = exception_tb;
        exception_keeper_lineno_197 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_397);
        locals_PyQt5$uic$Compiler$qtproxies_397 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_197;
        exception_value = exception_keeper_value_197;
        exception_tb = exception_keeper_tb_197;
        exception_lineno = exception_keeper_lineno_197;

        goto try_except_handler_201;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_201:;
        CHECK_OBJECT((PyObject *)outline_66_var___class__);
        Py_DECREF(outline_66_var___class__);
        outline_66_var___class__ = NULL;

        goto outline_result_67;
        // Exception handler code:
        try_except_handler_201:;
        exception_keeper_type_198 = exception_type;
        exception_keeper_value_198 = exception_value;
        exception_keeper_tb_198 = exception_tb;
        exception_keeper_lineno_198 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_198;
        exception_value = exception_keeper_value_198;
        exception_tb = exception_keeper_tb_198;
        exception_lineno = exception_keeper_lineno_198;

        goto outline_exception_67;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_67:;
        exception_lineno = 397;
        goto try_except_handler_200;
        outline_result_67:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTextEdit, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 397;
            type_description_2 = "o";
            goto try_except_handler_200;
        }
        goto try_end_67;
        // Exception handler code:
        try_except_handler_200:;
        exception_keeper_type_199 = exception_type;
        exception_keeper_value_199 = exception_value;
        exception_keeper_tb_199 = exception_tb;
        exception_keeper_lineno_199 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_46__bases_orig);
        tmp_QtWidgets$class_creation_46__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_46__bases);
        tmp_QtWidgets$class_creation_46__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_46__class_decl_dict);
        tmp_QtWidgets$class_creation_46__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_46__metaclass);
        tmp_QtWidgets$class_creation_46__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_46__prepared);
        tmp_QtWidgets$class_creation_46__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_199;
        exception_value = exception_keeper_value_199;
        exception_tb = exception_keeper_tb_199;
        exception_lineno = exception_keeper_lineno_199;

        goto frame_exception_exit_12;
        // End of try:
        try_end_67:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_46__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_46__bases_orig);
        tmp_QtWidgets$class_creation_46__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_46__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_46__bases);
        tmp_QtWidgets$class_creation_46__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_46__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_46__class_decl_dict);
        tmp_QtWidgets$class_creation_46__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_46__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_46__metaclass);
        tmp_QtWidgets$class_creation_46__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_46__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_46__prepared);
        tmp_QtWidgets$class_creation_46__prepared = NULL;

        {
            PyObject *tmp_assign_source_497;
            PyObject *tmp_tuple_element_265;
            tmp_tuple_element_265 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTextEdit);

            if (tmp_tuple_element_265 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1859 ], 31, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 398;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_265 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_497 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_497, 0, tmp_tuple_element_265);
            assert(tmp_QtWidgets$class_creation_47__bases_orig == NULL);
            tmp_QtWidgets$class_creation_47__bases_orig = tmp_assign_source_497;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_498;
            PyObject *tmp_dircall_arg1_68;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases_orig);
            tmp_dircall_arg1_68 = tmp_QtWidgets$class_creation_47__bases_orig;
            Py_INCREF(tmp_dircall_arg1_68);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_68};
                tmp_assign_source_498 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_498 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            assert(tmp_QtWidgets$class_creation_47__bases == NULL);
            tmp_QtWidgets$class_creation_47__bases = tmp_assign_source_498;
        }
        {
            PyObject *tmp_assign_source_499;
            tmp_assign_source_499 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_47__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_47__class_decl_dict = tmp_assign_source_499;
        }
        {
            PyObject *tmp_assign_source_500;
            PyObject *tmp_metaclass_name_68;
            nuitka_bool tmp_condition_result_405;
            PyObject *tmp_key_name_202;
            PyObject *tmp_dict_name_202;
            PyObject *tmp_dict_name_203;
            PyObject *tmp_key_name_203;
            nuitka_bool tmp_condition_result_406;
            int tmp_truth_name_68;
            PyObject *tmp_type_arg_135;
            PyObject *tmp_subscribed_name_68;
            PyObject *tmp_subscript_name_68;
            PyObject *tmp_bases_name_68;
            tmp_key_name_202 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__class_decl_dict);
            tmp_dict_name_202 = tmp_QtWidgets$class_creation_47__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_202, tmp_key_name_202);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            tmp_condition_result_405 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_405 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_137;
            } else {
                goto condexpr_false_137;
            }
            condexpr_true_137:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__class_decl_dict);
            tmp_dict_name_203 = tmp_QtWidgets$class_creation_47__class_decl_dict;
            tmp_key_name_203 = const_str_plain_metaclass;
            tmp_metaclass_name_68 = DICT_GET_ITEM(tmp_dict_name_203, tmp_key_name_203);
            if (tmp_metaclass_name_68 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            goto condexpr_end_137;
            condexpr_false_137:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases);
            tmp_truth_name_68 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_47__bases);
            if (tmp_truth_name_68 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            tmp_condition_result_406 = tmp_truth_name_68 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_406 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_138;
            } else {
                goto condexpr_false_138;
            }
            condexpr_true_138:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases);
            tmp_subscribed_name_68 = tmp_QtWidgets$class_creation_47__bases;
            tmp_subscript_name_68 = const_int_0;
            tmp_type_arg_135 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_68, tmp_subscript_name_68, 0);
            if (tmp_type_arg_135 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            tmp_metaclass_name_68 = BUILTIN_TYPE1(tmp_type_arg_135);
            Py_DECREF(tmp_type_arg_135);
            if (tmp_metaclass_name_68 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            goto condexpr_end_138;
            condexpr_false_138:;
            tmp_metaclass_name_68 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_68);
            condexpr_end_138:;
            condexpr_end_137:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases);
            tmp_bases_name_68 = tmp_QtWidgets$class_creation_47__bases;
            tmp_assign_source_500 = SELECT_METACLASS(tmp_metaclass_name_68, tmp_bases_name_68);
            Py_DECREF(tmp_metaclass_name_68);
            if (tmp_assign_source_500 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            assert(tmp_QtWidgets$class_creation_47__metaclass == NULL);
            tmp_QtWidgets$class_creation_47__metaclass = tmp_assign_source_500;
        }
        {
            nuitka_bool tmp_condition_result_407;
            PyObject *tmp_key_name_204;
            PyObject *tmp_dict_name_204;
            tmp_key_name_204 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__class_decl_dict);
            tmp_dict_name_204 = tmp_QtWidgets$class_creation_47__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_204, tmp_key_name_204);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            tmp_condition_result_407 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_407 == NUITKA_BOOL_TRUE) {
                goto branch_yes_269;
            } else {
                goto branch_no_269;
            }
            branch_yes_269:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_47__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_203;
            }
            branch_no_269:;
        }
        {
            nuitka_bool tmp_condition_result_408;
            PyObject *tmp_source_name_276;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__metaclass);
            tmp_source_name_276 = tmp_QtWidgets$class_creation_47__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_276, const_str_plain___prepare__);
            tmp_condition_result_408 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_408 == NUITKA_BOOL_TRUE) {
                goto branch_yes_270;
            } else {
                goto branch_no_270;
            }
            branch_yes_270:;
            {
                PyObject *tmp_assign_source_501;
                PyObject *tmp_called_name_136;
                PyObject *tmp_source_name_277;
                PyObject *tmp_args_name_134;
                PyObject *tmp_tuple_element_266;
                PyObject *tmp_kw_name_134;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_47__metaclass);
                tmp_source_name_277 = tmp_QtWidgets$class_creation_47__metaclass;
                tmp_called_name_136 = LOOKUP_ATTRIBUTE(tmp_source_name_277, const_str_plain___prepare__);
                if (tmp_called_name_136 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 398;
                    type_description_2 = "o";
                    goto try_except_handler_203;
                }
                tmp_tuple_element_266 = const_str_plain_QTextBrowser;
                tmp_args_name_134 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_266);
                PyTuple_SET_ITEM(tmp_args_name_134, 0, tmp_tuple_element_266);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases);
                tmp_tuple_element_266 = tmp_QtWidgets$class_creation_47__bases;
                Py_INCREF(tmp_tuple_element_266);
                PyTuple_SET_ITEM(tmp_args_name_134, 1, tmp_tuple_element_266);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_47__class_decl_dict);
                tmp_kw_name_134 = tmp_QtWidgets$class_creation_47__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 398;
                tmp_assign_source_501 = CALL_FUNCTION(tmp_called_name_136, tmp_args_name_134, tmp_kw_name_134);
                Py_DECREF(tmp_called_name_136);
                Py_DECREF(tmp_args_name_134);
                if (tmp_assign_source_501 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 398;
                    type_description_2 = "o";
                    goto try_except_handler_203;
                }
                assert(tmp_QtWidgets$class_creation_47__prepared == NULL);
                tmp_QtWidgets$class_creation_47__prepared = tmp_assign_source_501;
            }
            {
                nuitka_bool tmp_condition_result_409;
                PyObject *tmp_operand_name_68;
                PyObject *tmp_source_name_278;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_47__prepared);
                tmp_source_name_278 = tmp_QtWidgets$class_creation_47__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_278, const_str_plain___getitem__);
                tmp_operand_name_68 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_68);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 398;
                    type_description_2 = "o";
                    goto try_except_handler_203;
                }
                tmp_condition_result_409 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_409 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_271;
                } else {
                    goto branch_no_271;
                }
                branch_yes_271:;
                {
                    PyObject *tmp_raise_type_68;
                    PyObject *tmp_raise_value_68;
                    PyObject *tmp_left_name_68;
                    PyObject *tmp_right_name_68;
                    PyObject *tmp_tuple_element_267;
                    PyObject *tmp_getattr_target_68;
                    PyObject *tmp_getattr_attr_68;
                    PyObject *tmp_getattr_default_68;
                    PyObject *tmp_source_name_279;
                    PyObject *tmp_type_arg_136;
                    tmp_raise_type_68 = PyExc_TypeError;
                    tmp_left_name_68 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_47__metaclass);
                    tmp_getattr_target_68 = tmp_QtWidgets$class_creation_47__metaclass;
                    tmp_getattr_attr_68 = const_str_plain___name__;
                    tmp_getattr_default_68 = const_str_angle_metaclass;
                    tmp_tuple_element_267 = BUILTIN_GETATTR(tmp_getattr_target_68, tmp_getattr_attr_68, tmp_getattr_default_68);
                    if (tmp_tuple_element_267 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 398;
                        type_description_2 = "o";
                        goto try_except_handler_203;
                    }
                    tmp_right_name_68 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_68, 0, tmp_tuple_element_267);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_47__prepared);
                    tmp_type_arg_136 = tmp_QtWidgets$class_creation_47__prepared;
                    tmp_source_name_279 = BUILTIN_TYPE1(tmp_type_arg_136);
                    assert(!(tmp_source_name_279 == NULL));
                    tmp_tuple_element_267 = LOOKUP_ATTRIBUTE(tmp_source_name_279, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_279);
                    if (tmp_tuple_element_267 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_68);

                        exception_lineno = 398;
                        type_description_2 = "o";
                        goto try_except_handler_203;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_68, 1, tmp_tuple_element_267);
                    tmp_raise_value_68 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_68, tmp_right_name_68);
                    Py_DECREF(tmp_right_name_68);
                    if (tmp_raise_value_68 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 398;
                        type_description_2 = "o";
                        goto try_except_handler_203;
                    }
                    exception_type = tmp_raise_type_68;
                    Py_INCREF(tmp_raise_type_68);
                    exception_value = tmp_raise_value_68;
                    exception_lineno = 398;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_203;
                }
                branch_no_271:;
            }
            goto branch_end_270;
            branch_no_270:;
            {
                PyObject *tmp_assign_source_502;
                tmp_assign_source_502 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_47__prepared == NULL);
                tmp_QtWidgets$class_creation_47__prepared = tmp_assign_source_502;
            }
            branch_end_270:;
        }
        {
            PyObject *tmp_set_locals_68;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__prepared);
            tmp_set_locals_68 = tmp_QtWidgets$class_creation_47__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_398 = tmp_set_locals_68;
            Py_INCREF(tmp_set_locals_68);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_398, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 398;
            type_description_2 = "o";
            goto try_except_handler_205;
        }
        tmp_dictset_value = const_str_digest_b27bb63e9dae809a75d3790a98b95b72;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_398, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 398;
            type_description_2 = "o";
            goto try_except_handler_205;
        }
        {
            nuitka_bool tmp_condition_result_410;
            PyObject *tmp_compexpr_left_68;
            PyObject *tmp_compexpr_right_68;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases);
            tmp_compexpr_left_68 = tmp_QtWidgets$class_creation_47__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases_orig);
            tmp_compexpr_right_68 = tmp_QtWidgets$class_creation_47__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_68, tmp_compexpr_right_68);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_205;
            }
            tmp_condition_result_410 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_410 == NUITKA_BOOL_TRUE) {
                goto branch_yes_272;
            } else {
                goto branch_no_272;
            }
            branch_yes_272:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_47__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_398, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_205;
            }
            branch_no_272:;
        }
        {
            PyObject *tmp_assign_source_503;
            PyObject *tmp_called_name_137;
            PyObject *tmp_args_name_135;
            PyObject *tmp_tuple_element_268;
            PyObject *tmp_kw_name_135;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__metaclass);
            tmp_called_name_137 = tmp_QtWidgets$class_creation_47__metaclass;
            tmp_tuple_element_268 = const_str_plain_QTextBrowser;
            tmp_args_name_135 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_268);
            PyTuple_SET_ITEM(tmp_args_name_135, 0, tmp_tuple_element_268);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__bases);
            tmp_tuple_element_268 = tmp_QtWidgets$class_creation_47__bases;
            Py_INCREF(tmp_tuple_element_268);
            PyTuple_SET_ITEM(tmp_args_name_135, 1, tmp_tuple_element_268);
            tmp_tuple_element_268 = locals_PyQt5$uic$Compiler$qtproxies_398;
            Py_INCREF(tmp_tuple_element_268);
            PyTuple_SET_ITEM(tmp_args_name_135, 2, tmp_tuple_element_268);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_47__class_decl_dict);
            tmp_kw_name_135 = tmp_QtWidgets$class_creation_47__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 398;
            tmp_assign_source_503 = CALL_FUNCTION(tmp_called_name_137, tmp_args_name_135, tmp_kw_name_135);
            Py_DECREF(tmp_args_name_135);
            if (tmp_assign_source_503 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 398;
                type_description_2 = "o";
                goto try_except_handler_205;
            }
            assert(outline_67_var___class__ == NULL);
            outline_67_var___class__ = tmp_assign_source_503;
        }
        CHECK_OBJECT(outline_67_var___class__);
        tmp_dictset_value = outline_67_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_205;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_205:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_398);
        locals_PyQt5$uic$Compiler$qtproxies_398 = NULL;
        goto try_return_handler_204;
        // Exception handler code:
        try_except_handler_205:;
        exception_keeper_type_200 = exception_type;
        exception_keeper_value_200 = exception_value;
        exception_keeper_tb_200 = exception_tb;
        exception_keeper_lineno_200 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_398);
        locals_PyQt5$uic$Compiler$qtproxies_398 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_200;
        exception_value = exception_keeper_value_200;
        exception_tb = exception_keeper_tb_200;
        exception_lineno = exception_keeper_lineno_200;

        goto try_except_handler_204;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_204:;
        CHECK_OBJECT((PyObject *)outline_67_var___class__);
        Py_DECREF(outline_67_var___class__);
        outline_67_var___class__ = NULL;

        goto outline_result_68;
        // Exception handler code:
        try_except_handler_204:;
        exception_keeper_type_201 = exception_type;
        exception_keeper_value_201 = exception_value;
        exception_keeper_tb_201 = exception_tb;
        exception_keeper_lineno_201 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_201;
        exception_value = exception_keeper_value_201;
        exception_tb = exception_keeper_tb_201;
        exception_lineno = exception_keeper_lineno_201;

        goto outline_exception_68;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_68:;
        exception_lineno = 398;
        goto try_except_handler_203;
        outline_result_68:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTextBrowser, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 398;
            type_description_2 = "o";
            goto try_except_handler_203;
        }
        goto try_end_68;
        // Exception handler code:
        try_except_handler_203:;
        exception_keeper_type_202 = exception_type;
        exception_keeper_value_202 = exception_value;
        exception_keeper_tb_202 = exception_tb;
        exception_keeper_lineno_202 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_47__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_47__bases_orig);
        tmp_QtWidgets$class_creation_47__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_47__bases);
        tmp_QtWidgets$class_creation_47__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_47__class_decl_dict);
        tmp_QtWidgets$class_creation_47__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_47__metaclass);
        tmp_QtWidgets$class_creation_47__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_47__prepared);
        tmp_QtWidgets$class_creation_47__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_202;
        exception_value = exception_keeper_value_202;
        exception_tb = exception_keeper_tb_202;
        exception_lineno = exception_keeper_lineno_202;

        goto frame_exception_exit_12;
        // End of try:
        try_end_68:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_47__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_47__bases_orig);
        tmp_QtWidgets$class_creation_47__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_47__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_47__bases);
        tmp_QtWidgets$class_creation_47__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_47__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_47__class_decl_dict);
        tmp_QtWidgets$class_creation_47__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_47__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_47__metaclass);
        tmp_QtWidgets$class_creation_47__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_47__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_47__prepared);
        tmp_QtWidgets$class_creation_47__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_504;
            PyObject *tmp_tuple_element_269;
            PyObject *tmp_mvar_value_60;
            tmp_tuple_element_269 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractScrollArea);

            if (tmp_tuple_element_269 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_60 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);

                    if (unlikely(tmp_mvar_value_60 == NULL)) {
                        tmp_mvar_value_60 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractScrollArea);
                    }

                    if (tmp_mvar_value_60 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1818 ], 41, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 400;
                        type_description_2 = "o";
                        goto try_except_handler_206;
                    }

                    tmp_tuple_element_269 = tmp_mvar_value_60;
                    Py_INCREF(tmp_tuple_element_269);
                }
            }

            tmp_assign_source_504 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_504, 0, tmp_tuple_element_269);
            assert(tmp_QtWidgets$class_creation_48__bases_orig == NULL);
            tmp_QtWidgets$class_creation_48__bases_orig = tmp_assign_source_504;
        }
        {
            PyObject *tmp_assign_source_505;
            PyObject *tmp_dircall_arg1_69;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases_orig);
            tmp_dircall_arg1_69 = tmp_QtWidgets$class_creation_48__bases_orig;
            Py_INCREF(tmp_dircall_arg1_69);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_69};
                tmp_assign_source_505 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_505 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            assert(tmp_QtWidgets$class_creation_48__bases == NULL);
            tmp_QtWidgets$class_creation_48__bases = tmp_assign_source_505;
        }
        {
            PyObject *tmp_assign_source_506;
            tmp_assign_source_506 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_48__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_48__class_decl_dict = tmp_assign_source_506;
        }
        {
            PyObject *tmp_assign_source_507;
            PyObject *tmp_metaclass_name_69;
            nuitka_bool tmp_condition_result_411;
            PyObject *tmp_key_name_205;
            PyObject *tmp_dict_name_205;
            PyObject *tmp_dict_name_206;
            PyObject *tmp_key_name_206;
            nuitka_bool tmp_condition_result_412;
            int tmp_truth_name_69;
            PyObject *tmp_type_arg_137;
            PyObject *tmp_subscribed_name_69;
            PyObject *tmp_subscript_name_69;
            PyObject *tmp_bases_name_69;
            tmp_key_name_205 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__class_decl_dict);
            tmp_dict_name_205 = tmp_QtWidgets$class_creation_48__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_205, tmp_key_name_205);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            tmp_condition_result_411 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_411 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_139;
            } else {
                goto condexpr_false_139;
            }
            condexpr_true_139:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__class_decl_dict);
            tmp_dict_name_206 = tmp_QtWidgets$class_creation_48__class_decl_dict;
            tmp_key_name_206 = const_str_plain_metaclass;
            tmp_metaclass_name_69 = DICT_GET_ITEM(tmp_dict_name_206, tmp_key_name_206);
            if (tmp_metaclass_name_69 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            goto condexpr_end_139;
            condexpr_false_139:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases);
            tmp_truth_name_69 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_48__bases);
            if (tmp_truth_name_69 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            tmp_condition_result_412 = tmp_truth_name_69 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_412 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_140;
            } else {
                goto condexpr_false_140;
            }
            condexpr_true_140:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases);
            tmp_subscribed_name_69 = tmp_QtWidgets$class_creation_48__bases;
            tmp_subscript_name_69 = const_int_0;
            tmp_type_arg_137 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_69, tmp_subscript_name_69, 0);
            if (tmp_type_arg_137 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            tmp_metaclass_name_69 = BUILTIN_TYPE1(tmp_type_arg_137);
            Py_DECREF(tmp_type_arg_137);
            if (tmp_metaclass_name_69 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            goto condexpr_end_140;
            condexpr_false_140:;
            tmp_metaclass_name_69 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_69);
            condexpr_end_140:;
            condexpr_end_139:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases);
            tmp_bases_name_69 = tmp_QtWidgets$class_creation_48__bases;
            tmp_assign_source_507 = SELECT_METACLASS(tmp_metaclass_name_69, tmp_bases_name_69);
            Py_DECREF(tmp_metaclass_name_69);
            if (tmp_assign_source_507 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            assert(tmp_QtWidgets$class_creation_48__metaclass == NULL);
            tmp_QtWidgets$class_creation_48__metaclass = tmp_assign_source_507;
        }
        {
            nuitka_bool tmp_condition_result_413;
            PyObject *tmp_key_name_207;
            PyObject *tmp_dict_name_207;
            tmp_key_name_207 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__class_decl_dict);
            tmp_dict_name_207 = tmp_QtWidgets$class_creation_48__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_207, tmp_key_name_207);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            tmp_condition_result_413 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_413 == NUITKA_BOOL_TRUE) {
                goto branch_yes_273;
            } else {
                goto branch_no_273;
            }
            branch_yes_273:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_48__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_206;
            }
            branch_no_273:;
        }
        {
            nuitka_bool tmp_condition_result_414;
            PyObject *tmp_source_name_280;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__metaclass);
            tmp_source_name_280 = tmp_QtWidgets$class_creation_48__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_280, const_str_plain___prepare__);
            tmp_condition_result_414 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_414 == NUITKA_BOOL_TRUE) {
                goto branch_yes_274;
            } else {
                goto branch_no_274;
            }
            branch_yes_274:;
            {
                PyObject *tmp_assign_source_508;
                PyObject *tmp_called_name_138;
                PyObject *tmp_source_name_281;
                PyObject *tmp_args_name_136;
                PyObject *tmp_tuple_element_270;
                PyObject *tmp_kw_name_136;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_48__metaclass);
                tmp_source_name_281 = tmp_QtWidgets$class_creation_48__metaclass;
                tmp_called_name_138 = LOOKUP_ATTRIBUTE(tmp_source_name_281, const_str_plain___prepare__);
                if (tmp_called_name_138 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 400;
                    type_description_2 = "o";
                    goto try_except_handler_206;
                }
                tmp_tuple_element_270 = const_str_plain_QAbstractItemView;
                tmp_args_name_136 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_270);
                PyTuple_SET_ITEM(tmp_args_name_136, 0, tmp_tuple_element_270);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases);
                tmp_tuple_element_270 = tmp_QtWidgets$class_creation_48__bases;
                Py_INCREF(tmp_tuple_element_270);
                PyTuple_SET_ITEM(tmp_args_name_136, 1, tmp_tuple_element_270);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_48__class_decl_dict);
                tmp_kw_name_136 = tmp_QtWidgets$class_creation_48__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 400;
                tmp_assign_source_508 = CALL_FUNCTION(tmp_called_name_138, tmp_args_name_136, tmp_kw_name_136);
                Py_DECREF(tmp_called_name_138);
                Py_DECREF(tmp_args_name_136);
                if (tmp_assign_source_508 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 400;
                    type_description_2 = "o";
                    goto try_except_handler_206;
                }
                assert(tmp_QtWidgets$class_creation_48__prepared == NULL);
                tmp_QtWidgets$class_creation_48__prepared = tmp_assign_source_508;
            }
            {
                nuitka_bool tmp_condition_result_415;
                PyObject *tmp_operand_name_69;
                PyObject *tmp_source_name_282;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_48__prepared);
                tmp_source_name_282 = tmp_QtWidgets$class_creation_48__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_282, const_str_plain___getitem__);
                tmp_operand_name_69 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_69);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 400;
                    type_description_2 = "o";
                    goto try_except_handler_206;
                }
                tmp_condition_result_415 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_415 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_275;
                } else {
                    goto branch_no_275;
                }
                branch_yes_275:;
                {
                    PyObject *tmp_raise_type_69;
                    PyObject *tmp_raise_value_69;
                    PyObject *tmp_left_name_69;
                    PyObject *tmp_right_name_69;
                    PyObject *tmp_tuple_element_271;
                    PyObject *tmp_getattr_target_69;
                    PyObject *tmp_getattr_attr_69;
                    PyObject *tmp_getattr_default_69;
                    PyObject *tmp_source_name_283;
                    PyObject *tmp_type_arg_138;
                    tmp_raise_type_69 = PyExc_TypeError;
                    tmp_left_name_69 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_48__metaclass);
                    tmp_getattr_target_69 = tmp_QtWidgets$class_creation_48__metaclass;
                    tmp_getattr_attr_69 = const_str_plain___name__;
                    tmp_getattr_default_69 = const_str_angle_metaclass;
                    tmp_tuple_element_271 = BUILTIN_GETATTR(tmp_getattr_target_69, tmp_getattr_attr_69, tmp_getattr_default_69);
                    if (tmp_tuple_element_271 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 400;
                        type_description_2 = "o";
                        goto try_except_handler_206;
                    }
                    tmp_right_name_69 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_69, 0, tmp_tuple_element_271);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_48__prepared);
                    tmp_type_arg_138 = tmp_QtWidgets$class_creation_48__prepared;
                    tmp_source_name_283 = BUILTIN_TYPE1(tmp_type_arg_138);
                    assert(!(tmp_source_name_283 == NULL));
                    tmp_tuple_element_271 = LOOKUP_ATTRIBUTE(tmp_source_name_283, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_283);
                    if (tmp_tuple_element_271 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_69);

                        exception_lineno = 400;
                        type_description_2 = "o";
                        goto try_except_handler_206;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_69, 1, tmp_tuple_element_271);
                    tmp_raise_value_69 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_69, tmp_right_name_69);
                    Py_DECREF(tmp_right_name_69);
                    if (tmp_raise_value_69 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 400;
                        type_description_2 = "o";
                        goto try_except_handler_206;
                    }
                    exception_type = tmp_raise_type_69;
                    Py_INCREF(tmp_raise_type_69);
                    exception_value = tmp_raise_value_69;
                    exception_lineno = 400;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_206;
                }
                branch_no_275:;
            }
            goto branch_end_274;
            branch_no_274:;
            {
                PyObject *tmp_assign_source_509;
                tmp_assign_source_509 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_48__prepared == NULL);
                tmp_QtWidgets$class_creation_48__prepared = tmp_assign_source_509;
            }
            branch_end_274:;
        }
        {
            PyObject *tmp_set_locals_69;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__prepared);
            tmp_set_locals_69 = tmp_QtWidgets$class_creation_48__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_400 = tmp_set_locals_69;
            Py_INCREF(tmp_set_locals_69);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_400, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;
            type_description_2 = "o";
            goto try_except_handler_208;
        }
        tmp_dictset_value = const_str_digest_87d646b44c6fdfca3ea7025d61ede53d;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_400, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;
            type_description_2 = "o";
            goto try_except_handler_208;
        }
        {
            nuitka_bool tmp_condition_result_416;
            PyObject *tmp_compexpr_left_69;
            PyObject *tmp_compexpr_right_69;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases);
            tmp_compexpr_left_69 = tmp_QtWidgets$class_creation_48__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases_orig);
            tmp_compexpr_right_69 = tmp_QtWidgets$class_creation_48__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_69, tmp_compexpr_right_69);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_208;
            }
            tmp_condition_result_416 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_416 == NUITKA_BOOL_TRUE) {
                goto branch_yes_276;
            } else {
                goto branch_no_276;
            }
            branch_yes_276:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_48__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_400, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_208;
            }
            branch_no_276:;
        }
        {
            PyObject *tmp_assign_source_510;
            PyObject *tmp_called_name_139;
            PyObject *tmp_args_name_137;
            PyObject *tmp_tuple_element_272;
            PyObject *tmp_kw_name_137;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__metaclass);
            tmp_called_name_139 = tmp_QtWidgets$class_creation_48__metaclass;
            tmp_tuple_element_272 = const_str_plain_QAbstractItemView;
            tmp_args_name_137 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_272);
            PyTuple_SET_ITEM(tmp_args_name_137, 0, tmp_tuple_element_272);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__bases);
            tmp_tuple_element_272 = tmp_QtWidgets$class_creation_48__bases;
            Py_INCREF(tmp_tuple_element_272);
            PyTuple_SET_ITEM(tmp_args_name_137, 1, tmp_tuple_element_272);
            tmp_tuple_element_272 = locals_PyQt5$uic$Compiler$qtproxies_400;
            Py_INCREF(tmp_tuple_element_272);
            PyTuple_SET_ITEM(tmp_args_name_137, 2, tmp_tuple_element_272);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_48__class_decl_dict);
            tmp_kw_name_137 = tmp_QtWidgets$class_creation_48__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 400;
            tmp_assign_source_510 = CALL_FUNCTION(tmp_called_name_139, tmp_args_name_137, tmp_kw_name_137);
            Py_DECREF(tmp_args_name_137);
            if (tmp_assign_source_510 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_2 = "o";
                goto try_except_handler_208;
            }
            assert(outline_68_var___class__ == NULL);
            outline_68_var___class__ = tmp_assign_source_510;
        }
        CHECK_OBJECT(outline_68_var___class__);
        tmp_dictset_value = outline_68_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_208;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_208:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_400);
        locals_PyQt5$uic$Compiler$qtproxies_400 = NULL;
        goto try_return_handler_207;
        // Exception handler code:
        try_except_handler_208:;
        exception_keeper_type_203 = exception_type;
        exception_keeper_value_203 = exception_value;
        exception_keeper_tb_203 = exception_tb;
        exception_keeper_lineno_203 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_400);
        locals_PyQt5$uic$Compiler$qtproxies_400 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_203;
        exception_value = exception_keeper_value_203;
        exception_tb = exception_keeper_tb_203;
        exception_lineno = exception_keeper_lineno_203;

        goto try_except_handler_207;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_207:;
        CHECK_OBJECT((PyObject *)outline_68_var___class__);
        Py_DECREF(outline_68_var___class__);
        outline_68_var___class__ = NULL;

        goto outline_result_69;
        // Exception handler code:
        try_except_handler_207:;
        exception_keeper_type_204 = exception_type;
        exception_keeper_value_204 = exception_value;
        exception_keeper_tb_204 = exception_tb;
        exception_keeper_lineno_204 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_204;
        exception_value = exception_keeper_value_204;
        exception_tb = exception_keeper_tb_204;
        exception_lineno = exception_keeper_lineno_204;

        goto outline_exception_69;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_69:;
        exception_lineno = 400;
        goto try_except_handler_206;
        outline_result_69:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractItemView, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;
            type_description_2 = "o";
            goto try_except_handler_206;
        }
        goto try_end_69;
        // Exception handler code:
        try_except_handler_206:;
        exception_keeper_type_205 = exception_type;
        exception_keeper_value_205 = exception_value;
        exception_keeper_tb_205 = exception_tb;
        exception_keeper_lineno_205 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_48__bases_orig);
        tmp_QtWidgets$class_creation_48__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_48__bases);
        tmp_QtWidgets$class_creation_48__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_48__class_decl_dict);
        tmp_QtWidgets$class_creation_48__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_48__metaclass);
        tmp_QtWidgets$class_creation_48__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_48__prepared);
        tmp_QtWidgets$class_creation_48__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_205;
        exception_value = exception_keeper_value_205;
        exception_tb = exception_keeper_tb_205;
        exception_lineno = exception_keeper_lineno_205;

        goto frame_exception_exit_12;
        // End of try:
        try_end_69:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_48__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_48__bases_orig);
        tmp_QtWidgets$class_creation_48__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_48__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_48__bases);
        tmp_QtWidgets$class_creation_48__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_48__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_48__class_decl_dict);
        tmp_QtWidgets$class_creation_48__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_48__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_48__metaclass);
        tmp_QtWidgets$class_creation_48__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_48__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_48__prepared);
        tmp_QtWidgets$class_creation_48__prepared = NULL;

        {
            PyObject *tmp_assign_source_511;
            PyObject *tmp_tuple_element_273;
            tmp_tuple_element_273 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractItemView);

            if (tmp_tuple_element_273 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 1890 ], 39, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 401;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_273 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_511 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_511, 0, tmp_tuple_element_273);
            assert(tmp_QtWidgets$class_creation_49__bases_orig == NULL);
            tmp_QtWidgets$class_creation_49__bases_orig = tmp_assign_source_511;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_512;
            PyObject *tmp_dircall_arg1_70;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases_orig);
            tmp_dircall_arg1_70 = tmp_QtWidgets$class_creation_49__bases_orig;
            Py_INCREF(tmp_dircall_arg1_70);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_70};
                tmp_assign_source_512 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_512 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            assert(tmp_QtWidgets$class_creation_49__bases == NULL);
            tmp_QtWidgets$class_creation_49__bases = tmp_assign_source_512;
        }
        {
            PyObject *tmp_assign_source_513;
            tmp_assign_source_513 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_49__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_49__class_decl_dict = tmp_assign_source_513;
        }
        {
            PyObject *tmp_assign_source_514;
            PyObject *tmp_metaclass_name_70;
            nuitka_bool tmp_condition_result_417;
            PyObject *tmp_key_name_208;
            PyObject *tmp_dict_name_208;
            PyObject *tmp_dict_name_209;
            PyObject *tmp_key_name_209;
            nuitka_bool tmp_condition_result_418;
            int tmp_truth_name_70;
            PyObject *tmp_type_arg_139;
            PyObject *tmp_subscribed_name_70;
            PyObject *tmp_subscript_name_70;
            PyObject *tmp_bases_name_70;
            tmp_key_name_208 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__class_decl_dict);
            tmp_dict_name_208 = tmp_QtWidgets$class_creation_49__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_208, tmp_key_name_208);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            tmp_condition_result_417 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_417 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_141;
            } else {
                goto condexpr_false_141;
            }
            condexpr_true_141:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__class_decl_dict);
            tmp_dict_name_209 = tmp_QtWidgets$class_creation_49__class_decl_dict;
            tmp_key_name_209 = const_str_plain_metaclass;
            tmp_metaclass_name_70 = DICT_GET_ITEM(tmp_dict_name_209, tmp_key_name_209);
            if (tmp_metaclass_name_70 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            goto condexpr_end_141;
            condexpr_false_141:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases);
            tmp_truth_name_70 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_49__bases);
            if (tmp_truth_name_70 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            tmp_condition_result_418 = tmp_truth_name_70 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_418 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_142;
            } else {
                goto condexpr_false_142;
            }
            condexpr_true_142:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases);
            tmp_subscribed_name_70 = tmp_QtWidgets$class_creation_49__bases;
            tmp_subscript_name_70 = const_int_0;
            tmp_type_arg_139 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_70, tmp_subscript_name_70, 0);
            if (tmp_type_arg_139 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            tmp_metaclass_name_70 = BUILTIN_TYPE1(tmp_type_arg_139);
            Py_DECREF(tmp_type_arg_139);
            if (tmp_metaclass_name_70 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            goto condexpr_end_142;
            condexpr_false_142:;
            tmp_metaclass_name_70 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_70);
            condexpr_end_142:;
            condexpr_end_141:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases);
            tmp_bases_name_70 = tmp_QtWidgets$class_creation_49__bases;
            tmp_assign_source_514 = SELECT_METACLASS(tmp_metaclass_name_70, tmp_bases_name_70);
            Py_DECREF(tmp_metaclass_name_70);
            if (tmp_assign_source_514 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            assert(tmp_QtWidgets$class_creation_49__metaclass == NULL);
            tmp_QtWidgets$class_creation_49__metaclass = tmp_assign_source_514;
        }
        {
            nuitka_bool tmp_condition_result_419;
            PyObject *tmp_key_name_210;
            PyObject *tmp_dict_name_210;
            tmp_key_name_210 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__class_decl_dict);
            tmp_dict_name_210 = tmp_QtWidgets$class_creation_49__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_210, tmp_key_name_210);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            tmp_condition_result_419 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_419 == NUITKA_BOOL_TRUE) {
                goto branch_yes_277;
            } else {
                goto branch_no_277;
            }
            branch_yes_277:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_49__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_209;
            }
            branch_no_277:;
        }
        {
            nuitka_bool tmp_condition_result_420;
            PyObject *tmp_source_name_284;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__metaclass);
            tmp_source_name_284 = tmp_QtWidgets$class_creation_49__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_284, const_str_plain___prepare__);
            tmp_condition_result_420 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_420 == NUITKA_BOOL_TRUE) {
                goto branch_yes_278;
            } else {
                goto branch_no_278;
            }
            branch_yes_278:;
            {
                PyObject *tmp_assign_source_515;
                PyObject *tmp_called_name_140;
                PyObject *tmp_source_name_285;
                PyObject *tmp_args_name_138;
                PyObject *tmp_tuple_element_274;
                PyObject *tmp_kw_name_138;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_49__metaclass);
                tmp_source_name_285 = tmp_QtWidgets$class_creation_49__metaclass;
                tmp_called_name_140 = LOOKUP_ATTRIBUTE(tmp_source_name_285, const_str_plain___prepare__);
                if (tmp_called_name_140 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 401;
                    type_description_2 = "o";
                    goto try_except_handler_209;
                }
                tmp_tuple_element_274 = const_str_plain_QColumnView;
                tmp_args_name_138 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_274);
                PyTuple_SET_ITEM(tmp_args_name_138, 0, tmp_tuple_element_274);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases);
                tmp_tuple_element_274 = tmp_QtWidgets$class_creation_49__bases;
                Py_INCREF(tmp_tuple_element_274);
                PyTuple_SET_ITEM(tmp_args_name_138, 1, tmp_tuple_element_274);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_49__class_decl_dict);
                tmp_kw_name_138 = tmp_QtWidgets$class_creation_49__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 401;
                tmp_assign_source_515 = CALL_FUNCTION(tmp_called_name_140, tmp_args_name_138, tmp_kw_name_138);
                Py_DECREF(tmp_called_name_140);
                Py_DECREF(tmp_args_name_138);
                if (tmp_assign_source_515 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 401;
                    type_description_2 = "o";
                    goto try_except_handler_209;
                }
                assert(tmp_QtWidgets$class_creation_49__prepared == NULL);
                tmp_QtWidgets$class_creation_49__prepared = tmp_assign_source_515;
            }
            {
                nuitka_bool tmp_condition_result_421;
                PyObject *tmp_operand_name_70;
                PyObject *tmp_source_name_286;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_49__prepared);
                tmp_source_name_286 = tmp_QtWidgets$class_creation_49__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_286, const_str_plain___getitem__);
                tmp_operand_name_70 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_70);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 401;
                    type_description_2 = "o";
                    goto try_except_handler_209;
                }
                tmp_condition_result_421 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_421 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_279;
                } else {
                    goto branch_no_279;
                }
                branch_yes_279:;
                {
                    PyObject *tmp_raise_type_70;
                    PyObject *tmp_raise_value_70;
                    PyObject *tmp_left_name_70;
                    PyObject *tmp_right_name_70;
                    PyObject *tmp_tuple_element_275;
                    PyObject *tmp_getattr_target_70;
                    PyObject *tmp_getattr_attr_70;
                    PyObject *tmp_getattr_default_70;
                    PyObject *tmp_source_name_287;
                    PyObject *tmp_type_arg_140;
                    tmp_raise_type_70 = PyExc_TypeError;
                    tmp_left_name_70 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_49__metaclass);
                    tmp_getattr_target_70 = tmp_QtWidgets$class_creation_49__metaclass;
                    tmp_getattr_attr_70 = const_str_plain___name__;
                    tmp_getattr_default_70 = const_str_angle_metaclass;
                    tmp_tuple_element_275 = BUILTIN_GETATTR(tmp_getattr_target_70, tmp_getattr_attr_70, tmp_getattr_default_70);
                    if (tmp_tuple_element_275 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 401;
                        type_description_2 = "o";
                        goto try_except_handler_209;
                    }
                    tmp_right_name_70 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_70, 0, tmp_tuple_element_275);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_49__prepared);
                    tmp_type_arg_140 = tmp_QtWidgets$class_creation_49__prepared;
                    tmp_source_name_287 = BUILTIN_TYPE1(tmp_type_arg_140);
                    assert(!(tmp_source_name_287 == NULL));
                    tmp_tuple_element_275 = LOOKUP_ATTRIBUTE(tmp_source_name_287, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_287);
                    if (tmp_tuple_element_275 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_70);

                        exception_lineno = 401;
                        type_description_2 = "o";
                        goto try_except_handler_209;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_70, 1, tmp_tuple_element_275);
                    tmp_raise_value_70 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_70, tmp_right_name_70);
                    Py_DECREF(tmp_right_name_70);
                    if (tmp_raise_value_70 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 401;
                        type_description_2 = "o";
                        goto try_except_handler_209;
                    }
                    exception_type = tmp_raise_type_70;
                    Py_INCREF(tmp_raise_type_70);
                    exception_value = tmp_raise_value_70;
                    exception_lineno = 401;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_209;
                }
                branch_no_279:;
            }
            goto branch_end_278;
            branch_no_278:;
            {
                PyObject *tmp_assign_source_516;
                tmp_assign_source_516 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_49__prepared == NULL);
                tmp_QtWidgets$class_creation_49__prepared = tmp_assign_source_516;
            }
            branch_end_278:;
        }
        {
            PyObject *tmp_set_locals_70;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__prepared);
            tmp_set_locals_70 = tmp_QtWidgets$class_creation_49__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_401 = tmp_set_locals_70;
            Py_INCREF(tmp_set_locals_70);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_401, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;
            type_description_2 = "o";
            goto try_except_handler_211;
        }
        tmp_dictset_value = const_str_digest_b960eb01aa4da10709a2e74c3339462e;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_401, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;
            type_description_2 = "o";
            goto try_except_handler_211;
        }
        {
            nuitka_bool tmp_condition_result_422;
            PyObject *tmp_compexpr_left_70;
            PyObject *tmp_compexpr_right_70;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases);
            tmp_compexpr_left_70 = tmp_QtWidgets$class_creation_49__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases_orig);
            tmp_compexpr_right_70 = tmp_QtWidgets$class_creation_49__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_70, tmp_compexpr_right_70);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_211;
            }
            tmp_condition_result_422 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_422 == NUITKA_BOOL_TRUE) {
                goto branch_yes_280;
            } else {
                goto branch_no_280;
            }
            branch_yes_280:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_49__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_401, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_211;
            }
            branch_no_280:;
        }
        {
            PyObject *tmp_assign_source_517;
            PyObject *tmp_called_name_141;
            PyObject *tmp_args_name_139;
            PyObject *tmp_tuple_element_276;
            PyObject *tmp_kw_name_139;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__metaclass);
            tmp_called_name_141 = tmp_QtWidgets$class_creation_49__metaclass;
            tmp_tuple_element_276 = const_str_plain_QColumnView;
            tmp_args_name_139 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_276);
            PyTuple_SET_ITEM(tmp_args_name_139, 0, tmp_tuple_element_276);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__bases);
            tmp_tuple_element_276 = tmp_QtWidgets$class_creation_49__bases;
            Py_INCREF(tmp_tuple_element_276);
            PyTuple_SET_ITEM(tmp_args_name_139, 1, tmp_tuple_element_276);
            tmp_tuple_element_276 = locals_PyQt5$uic$Compiler$qtproxies_401;
            Py_INCREF(tmp_tuple_element_276);
            PyTuple_SET_ITEM(tmp_args_name_139, 2, tmp_tuple_element_276);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_49__class_decl_dict);
            tmp_kw_name_139 = tmp_QtWidgets$class_creation_49__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 401;
            tmp_assign_source_517 = CALL_FUNCTION(tmp_called_name_141, tmp_args_name_139, tmp_kw_name_139);
            Py_DECREF(tmp_args_name_139);
            if (tmp_assign_source_517 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_2 = "o";
                goto try_except_handler_211;
            }
            assert(outline_69_var___class__ == NULL);
            outline_69_var___class__ = tmp_assign_source_517;
        }
        CHECK_OBJECT(outline_69_var___class__);
        tmp_dictset_value = outline_69_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_211;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_211:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_401);
        locals_PyQt5$uic$Compiler$qtproxies_401 = NULL;
        goto try_return_handler_210;
        // Exception handler code:
        try_except_handler_211:;
        exception_keeper_type_206 = exception_type;
        exception_keeper_value_206 = exception_value;
        exception_keeper_tb_206 = exception_tb;
        exception_keeper_lineno_206 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_401);
        locals_PyQt5$uic$Compiler$qtproxies_401 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_206;
        exception_value = exception_keeper_value_206;
        exception_tb = exception_keeper_tb_206;
        exception_lineno = exception_keeper_lineno_206;

        goto try_except_handler_210;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_210:;
        CHECK_OBJECT((PyObject *)outline_69_var___class__);
        Py_DECREF(outline_69_var___class__);
        outline_69_var___class__ = NULL;

        goto outline_result_70;
        // Exception handler code:
        try_except_handler_210:;
        exception_keeper_type_207 = exception_type;
        exception_keeper_value_207 = exception_value;
        exception_keeper_tb_207 = exception_tb;
        exception_keeper_lineno_207 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_207;
        exception_value = exception_keeper_value_207;
        exception_tb = exception_keeper_tb_207;
        exception_lineno = exception_keeper_lineno_207;

        goto outline_exception_70;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_70:;
        exception_lineno = 401;
        goto try_except_handler_209;
        outline_result_70:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QColumnView, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;
            type_description_2 = "o";
            goto try_except_handler_209;
        }
        goto try_end_70;
        // Exception handler code:
        try_except_handler_209:;
        exception_keeper_type_208 = exception_type;
        exception_keeper_value_208 = exception_value;
        exception_keeper_tb_208 = exception_tb;
        exception_keeper_lineno_208 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_49__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_49__bases_orig);
        tmp_QtWidgets$class_creation_49__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_49__bases);
        tmp_QtWidgets$class_creation_49__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_49__class_decl_dict);
        tmp_QtWidgets$class_creation_49__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_49__metaclass);
        tmp_QtWidgets$class_creation_49__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_49__prepared);
        tmp_QtWidgets$class_creation_49__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_208;
        exception_value = exception_keeper_value_208;
        exception_tb = exception_keeper_tb_208;
        exception_lineno = exception_keeper_lineno_208;

        goto frame_exception_exit_12;
        // End of try:
        try_end_70:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_49__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_49__bases_orig);
        tmp_QtWidgets$class_creation_49__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_49__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_49__bases);
        tmp_QtWidgets$class_creation_49__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_49__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_49__class_decl_dict);
        tmp_QtWidgets$class_creation_49__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_49__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_49__metaclass);
        tmp_QtWidgets$class_creation_49__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_49__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_49__prepared);
        tmp_QtWidgets$class_creation_49__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_518;
            PyObject *tmp_tuple_element_277;
            PyObject *tmp_mvar_value_61;
            tmp_tuple_element_277 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractItemView);

            if (tmp_tuple_element_277 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_61 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);

                    if (unlikely(tmp_mvar_value_61 == NULL)) {
                        tmp_mvar_value_61 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);
                    }

                    if (tmp_mvar_value_61 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1890 ], 39, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 402;
                        type_description_2 = "o";
                        goto try_except_handler_212;
                    }

                    tmp_tuple_element_277 = tmp_mvar_value_61;
                    Py_INCREF(tmp_tuple_element_277);
                }
            }

            tmp_assign_source_518 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_518, 0, tmp_tuple_element_277);
            assert(tmp_QtWidgets$class_creation_50__bases_orig == NULL);
            tmp_QtWidgets$class_creation_50__bases_orig = tmp_assign_source_518;
        }
        {
            PyObject *tmp_assign_source_519;
            PyObject *tmp_dircall_arg1_71;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases_orig);
            tmp_dircall_arg1_71 = tmp_QtWidgets$class_creation_50__bases_orig;
            Py_INCREF(tmp_dircall_arg1_71);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_71};
                tmp_assign_source_519 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_519 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            assert(tmp_QtWidgets$class_creation_50__bases == NULL);
            tmp_QtWidgets$class_creation_50__bases = tmp_assign_source_519;
        }
        {
            PyObject *tmp_assign_source_520;
            tmp_assign_source_520 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_50__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_50__class_decl_dict = tmp_assign_source_520;
        }
        {
            PyObject *tmp_assign_source_521;
            PyObject *tmp_metaclass_name_71;
            nuitka_bool tmp_condition_result_423;
            PyObject *tmp_key_name_211;
            PyObject *tmp_dict_name_211;
            PyObject *tmp_dict_name_212;
            PyObject *tmp_key_name_212;
            nuitka_bool tmp_condition_result_424;
            int tmp_truth_name_71;
            PyObject *tmp_type_arg_141;
            PyObject *tmp_subscribed_name_71;
            PyObject *tmp_subscript_name_71;
            PyObject *tmp_bases_name_71;
            tmp_key_name_211 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__class_decl_dict);
            tmp_dict_name_211 = tmp_QtWidgets$class_creation_50__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_211, tmp_key_name_211);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            tmp_condition_result_423 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_423 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_143;
            } else {
                goto condexpr_false_143;
            }
            condexpr_true_143:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__class_decl_dict);
            tmp_dict_name_212 = tmp_QtWidgets$class_creation_50__class_decl_dict;
            tmp_key_name_212 = const_str_plain_metaclass;
            tmp_metaclass_name_71 = DICT_GET_ITEM(tmp_dict_name_212, tmp_key_name_212);
            if (tmp_metaclass_name_71 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            goto condexpr_end_143;
            condexpr_false_143:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases);
            tmp_truth_name_71 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_50__bases);
            if (tmp_truth_name_71 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            tmp_condition_result_424 = tmp_truth_name_71 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_424 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_144;
            } else {
                goto condexpr_false_144;
            }
            condexpr_true_144:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases);
            tmp_subscribed_name_71 = tmp_QtWidgets$class_creation_50__bases;
            tmp_subscript_name_71 = const_int_0;
            tmp_type_arg_141 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_71, tmp_subscript_name_71, 0);
            if (tmp_type_arg_141 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            tmp_metaclass_name_71 = BUILTIN_TYPE1(tmp_type_arg_141);
            Py_DECREF(tmp_type_arg_141);
            if (tmp_metaclass_name_71 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            goto condexpr_end_144;
            condexpr_false_144:;
            tmp_metaclass_name_71 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_71);
            condexpr_end_144:;
            condexpr_end_143:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases);
            tmp_bases_name_71 = tmp_QtWidgets$class_creation_50__bases;
            tmp_assign_source_521 = SELECT_METACLASS(tmp_metaclass_name_71, tmp_bases_name_71);
            Py_DECREF(tmp_metaclass_name_71);
            if (tmp_assign_source_521 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            assert(tmp_QtWidgets$class_creation_50__metaclass == NULL);
            tmp_QtWidgets$class_creation_50__metaclass = tmp_assign_source_521;
        }
        {
            nuitka_bool tmp_condition_result_425;
            PyObject *tmp_key_name_213;
            PyObject *tmp_dict_name_213;
            tmp_key_name_213 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__class_decl_dict);
            tmp_dict_name_213 = tmp_QtWidgets$class_creation_50__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_213, tmp_key_name_213);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            tmp_condition_result_425 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_425 == NUITKA_BOOL_TRUE) {
                goto branch_yes_281;
            } else {
                goto branch_no_281;
            }
            branch_yes_281:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_50__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_212;
            }
            branch_no_281:;
        }
        {
            nuitka_bool tmp_condition_result_426;
            PyObject *tmp_source_name_288;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__metaclass);
            tmp_source_name_288 = tmp_QtWidgets$class_creation_50__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_288, const_str_plain___prepare__);
            tmp_condition_result_426 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_426 == NUITKA_BOOL_TRUE) {
                goto branch_yes_282;
            } else {
                goto branch_no_282;
            }
            branch_yes_282:;
            {
                PyObject *tmp_assign_source_522;
                PyObject *tmp_called_name_142;
                PyObject *tmp_source_name_289;
                PyObject *tmp_args_name_140;
                PyObject *tmp_tuple_element_278;
                PyObject *tmp_kw_name_140;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_50__metaclass);
                tmp_source_name_289 = tmp_QtWidgets$class_creation_50__metaclass;
                tmp_called_name_142 = LOOKUP_ATTRIBUTE(tmp_source_name_289, const_str_plain___prepare__);
                if (tmp_called_name_142 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 402;
                    type_description_2 = "o";
                    goto try_except_handler_212;
                }
                tmp_tuple_element_278 = const_str_plain_QHeaderView;
                tmp_args_name_140 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_278);
                PyTuple_SET_ITEM(tmp_args_name_140, 0, tmp_tuple_element_278);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases);
                tmp_tuple_element_278 = tmp_QtWidgets$class_creation_50__bases;
                Py_INCREF(tmp_tuple_element_278);
                PyTuple_SET_ITEM(tmp_args_name_140, 1, tmp_tuple_element_278);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_50__class_decl_dict);
                tmp_kw_name_140 = tmp_QtWidgets$class_creation_50__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 402;
                tmp_assign_source_522 = CALL_FUNCTION(tmp_called_name_142, tmp_args_name_140, tmp_kw_name_140);
                Py_DECREF(tmp_called_name_142);
                Py_DECREF(tmp_args_name_140);
                if (tmp_assign_source_522 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 402;
                    type_description_2 = "o";
                    goto try_except_handler_212;
                }
                assert(tmp_QtWidgets$class_creation_50__prepared == NULL);
                tmp_QtWidgets$class_creation_50__prepared = tmp_assign_source_522;
            }
            {
                nuitka_bool tmp_condition_result_427;
                PyObject *tmp_operand_name_71;
                PyObject *tmp_source_name_290;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_50__prepared);
                tmp_source_name_290 = tmp_QtWidgets$class_creation_50__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_290, const_str_plain___getitem__);
                tmp_operand_name_71 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_71);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 402;
                    type_description_2 = "o";
                    goto try_except_handler_212;
                }
                tmp_condition_result_427 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_427 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_283;
                } else {
                    goto branch_no_283;
                }
                branch_yes_283:;
                {
                    PyObject *tmp_raise_type_71;
                    PyObject *tmp_raise_value_71;
                    PyObject *tmp_left_name_71;
                    PyObject *tmp_right_name_71;
                    PyObject *tmp_tuple_element_279;
                    PyObject *tmp_getattr_target_71;
                    PyObject *tmp_getattr_attr_71;
                    PyObject *tmp_getattr_default_71;
                    PyObject *tmp_source_name_291;
                    PyObject *tmp_type_arg_142;
                    tmp_raise_type_71 = PyExc_TypeError;
                    tmp_left_name_71 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_50__metaclass);
                    tmp_getattr_target_71 = tmp_QtWidgets$class_creation_50__metaclass;
                    tmp_getattr_attr_71 = const_str_plain___name__;
                    tmp_getattr_default_71 = const_str_angle_metaclass;
                    tmp_tuple_element_279 = BUILTIN_GETATTR(tmp_getattr_target_71, tmp_getattr_attr_71, tmp_getattr_default_71);
                    if (tmp_tuple_element_279 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 402;
                        type_description_2 = "o";
                        goto try_except_handler_212;
                    }
                    tmp_right_name_71 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_71, 0, tmp_tuple_element_279);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_50__prepared);
                    tmp_type_arg_142 = tmp_QtWidgets$class_creation_50__prepared;
                    tmp_source_name_291 = BUILTIN_TYPE1(tmp_type_arg_142);
                    assert(!(tmp_source_name_291 == NULL));
                    tmp_tuple_element_279 = LOOKUP_ATTRIBUTE(tmp_source_name_291, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_291);
                    if (tmp_tuple_element_279 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_71);

                        exception_lineno = 402;
                        type_description_2 = "o";
                        goto try_except_handler_212;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_71, 1, tmp_tuple_element_279);
                    tmp_raise_value_71 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_71, tmp_right_name_71);
                    Py_DECREF(tmp_right_name_71);
                    if (tmp_raise_value_71 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 402;
                        type_description_2 = "o";
                        goto try_except_handler_212;
                    }
                    exception_type = tmp_raise_type_71;
                    Py_INCREF(tmp_raise_type_71);
                    exception_value = tmp_raise_value_71;
                    exception_lineno = 402;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_212;
                }
                branch_no_283:;
            }
            goto branch_end_282;
            branch_no_282:;
            {
                PyObject *tmp_assign_source_523;
                tmp_assign_source_523 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_50__prepared == NULL);
                tmp_QtWidgets$class_creation_50__prepared = tmp_assign_source_523;
            }
            branch_end_282:;
        }
        {
            PyObject *tmp_set_locals_71;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__prepared);
            tmp_set_locals_71 = tmp_QtWidgets$class_creation_50__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_402 = tmp_set_locals_71;
            Py_INCREF(tmp_set_locals_71);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_402, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 402;
            type_description_2 = "o";
            goto try_except_handler_214;
        }
        tmp_dictset_value = const_str_digest_1da10d7760888df09a9dc6382ef15032;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_402, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 402;
            type_description_2 = "o";
            goto try_except_handler_214;
        }
        {
            nuitka_bool tmp_condition_result_428;
            PyObject *tmp_compexpr_left_71;
            PyObject *tmp_compexpr_right_71;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases);
            tmp_compexpr_left_71 = tmp_QtWidgets$class_creation_50__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases_orig);
            tmp_compexpr_right_71 = tmp_QtWidgets$class_creation_50__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_71, tmp_compexpr_right_71);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_214;
            }
            tmp_condition_result_428 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_428 == NUITKA_BOOL_TRUE) {
                goto branch_yes_284;
            } else {
                goto branch_no_284;
            }
            branch_yes_284:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_50__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_402, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_214;
            }
            branch_no_284:;
        }
        {
            PyObject *tmp_assign_source_524;
            PyObject *tmp_called_name_143;
            PyObject *tmp_args_name_141;
            PyObject *tmp_tuple_element_280;
            PyObject *tmp_kw_name_141;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__metaclass);
            tmp_called_name_143 = tmp_QtWidgets$class_creation_50__metaclass;
            tmp_tuple_element_280 = const_str_plain_QHeaderView;
            tmp_args_name_141 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_280);
            PyTuple_SET_ITEM(tmp_args_name_141, 0, tmp_tuple_element_280);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__bases);
            tmp_tuple_element_280 = tmp_QtWidgets$class_creation_50__bases;
            Py_INCREF(tmp_tuple_element_280);
            PyTuple_SET_ITEM(tmp_args_name_141, 1, tmp_tuple_element_280);
            tmp_tuple_element_280 = locals_PyQt5$uic$Compiler$qtproxies_402;
            Py_INCREF(tmp_tuple_element_280);
            PyTuple_SET_ITEM(tmp_args_name_141, 2, tmp_tuple_element_280);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_50__class_decl_dict);
            tmp_kw_name_141 = tmp_QtWidgets$class_creation_50__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 402;
            tmp_assign_source_524 = CALL_FUNCTION(tmp_called_name_143, tmp_args_name_141, tmp_kw_name_141);
            Py_DECREF(tmp_args_name_141);
            if (tmp_assign_source_524 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_2 = "o";
                goto try_except_handler_214;
            }
            assert(outline_70_var___class__ == NULL);
            outline_70_var___class__ = tmp_assign_source_524;
        }
        CHECK_OBJECT(outline_70_var___class__);
        tmp_dictset_value = outline_70_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_214;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_214:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_402);
        locals_PyQt5$uic$Compiler$qtproxies_402 = NULL;
        goto try_return_handler_213;
        // Exception handler code:
        try_except_handler_214:;
        exception_keeper_type_209 = exception_type;
        exception_keeper_value_209 = exception_value;
        exception_keeper_tb_209 = exception_tb;
        exception_keeper_lineno_209 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_402);
        locals_PyQt5$uic$Compiler$qtproxies_402 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_209;
        exception_value = exception_keeper_value_209;
        exception_tb = exception_keeper_tb_209;
        exception_lineno = exception_keeper_lineno_209;

        goto try_except_handler_213;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_213:;
        CHECK_OBJECT((PyObject *)outline_70_var___class__);
        Py_DECREF(outline_70_var___class__);
        outline_70_var___class__ = NULL;

        goto outline_result_71;
        // Exception handler code:
        try_except_handler_213:;
        exception_keeper_type_210 = exception_type;
        exception_keeper_value_210 = exception_value;
        exception_keeper_tb_210 = exception_tb;
        exception_keeper_lineno_210 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_210;
        exception_value = exception_keeper_value_210;
        exception_tb = exception_keeper_tb_210;
        exception_lineno = exception_keeper_lineno_210;

        goto outline_exception_71;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_71:;
        exception_lineno = 402;
        goto try_except_handler_212;
        outline_result_71:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QHeaderView, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 402;
            type_description_2 = "o";
            goto try_except_handler_212;
        }
        goto try_end_71;
        // Exception handler code:
        try_except_handler_212:;
        exception_keeper_type_211 = exception_type;
        exception_keeper_value_211 = exception_value;
        exception_keeper_tb_211 = exception_tb;
        exception_keeper_lineno_211 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_50__bases_orig);
        tmp_QtWidgets$class_creation_50__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_50__bases);
        tmp_QtWidgets$class_creation_50__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_50__class_decl_dict);
        tmp_QtWidgets$class_creation_50__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_50__metaclass);
        tmp_QtWidgets$class_creation_50__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_50__prepared);
        tmp_QtWidgets$class_creation_50__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_211;
        exception_value = exception_keeper_value_211;
        exception_tb = exception_keeper_tb_211;
        exception_lineno = exception_keeper_lineno_211;

        goto frame_exception_exit_12;
        // End of try:
        try_end_71:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_50__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_50__bases_orig);
        tmp_QtWidgets$class_creation_50__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_50__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_50__bases);
        tmp_QtWidgets$class_creation_50__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_50__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_50__class_decl_dict);
        tmp_QtWidgets$class_creation_50__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_50__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_50__metaclass);
        tmp_QtWidgets$class_creation_50__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_50__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_50__prepared);
        tmp_QtWidgets$class_creation_50__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_525;
            PyObject *tmp_tuple_element_281;
            PyObject *tmp_mvar_value_62;
            tmp_tuple_element_281 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractItemView);

            if (tmp_tuple_element_281 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_62 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);

                    if (unlikely(tmp_mvar_value_62 == NULL)) {
                        tmp_mvar_value_62 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);
                    }

                    if (tmp_mvar_value_62 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1890 ], 39, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 403;
                        type_description_2 = "o";
                        goto try_except_handler_215;
                    }

                    tmp_tuple_element_281 = tmp_mvar_value_62;
                    Py_INCREF(tmp_tuple_element_281);
                }
            }

            tmp_assign_source_525 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_525, 0, tmp_tuple_element_281);
            assert(tmp_QtWidgets$class_creation_51__bases_orig == NULL);
            tmp_QtWidgets$class_creation_51__bases_orig = tmp_assign_source_525;
        }
        {
            PyObject *tmp_assign_source_526;
            PyObject *tmp_dircall_arg1_72;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases_orig);
            tmp_dircall_arg1_72 = tmp_QtWidgets$class_creation_51__bases_orig;
            Py_INCREF(tmp_dircall_arg1_72);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_72};
                tmp_assign_source_526 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_526 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            assert(tmp_QtWidgets$class_creation_51__bases == NULL);
            tmp_QtWidgets$class_creation_51__bases = tmp_assign_source_526;
        }
        {
            PyObject *tmp_assign_source_527;
            tmp_assign_source_527 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_51__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_51__class_decl_dict = tmp_assign_source_527;
        }
        {
            PyObject *tmp_assign_source_528;
            PyObject *tmp_metaclass_name_72;
            nuitka_bool tmp_condition_result_429;
            PyObject *tmp_key_name_214;
            PyObject *tmp_dict_name_214;
            PyObject *tmp_dict_name_215;
            PyObject *tmp_key_name_215;
            nuitka_bool tmp_condition_result_430;
            int tmp_truth_name_72;
            PyObject *tmp_type_arg_143;
            PyObject *tmp_subscribed_name_72;
            PyObject *tmp_subscript_name_72;
            PyObject *tmp_bases_name_72;
            tmp_key_name_214 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__class_decl_dict);
            tmp_dict_name_214 = tmp_QtWidgets$class_creation_51__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_214, tmp_key_name_214);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            tmp_condition_result_429 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_429 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_145;
            } else {
                goto condexpr_false_145;
            }
            condexpr_true_145:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__class_decl_dict);
            tmp_dict_name_215 = tmp_QtWidgets$class_creation_51__class_decl_dict;
            tmp_key_name_215 = const_str_plain_metaclass;
            tmp_metaclass_name_72 = DICT_GET_ITEM(tmp_dict_name_215, tmp_key_name_215);
            if (tmp_metaclass_name_72 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            goto condexpr_end_145;
            condexpr_false_145:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases);
            tmp_truth_name_72 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_51__bases);
            if (tmp_truth_name_72 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            tmp_condition_result_430 = tmp_truth_name_72 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_430 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_146;
            } else {
                goto condexpr_false_146;
            }
            condexpr_true_146:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases);
            tmp_subscribed_name_72 = tmp_QtWidgets$class_creation_51__bases;
            tmp_subscript_name_72 = const_int_0;
            tmp_type_arg_143 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_72, tmp_subscript_name_72, 0);
            if (tmp_type_arg_143 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            tmp_metaclass_name_72 = BUILTIN_TYPE1(tmp_type_arg_143);
            Py_DECREF(tmp_type_arg_143);
            if (tmp_metaclass_name_72 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            goto condexpr_end_146;
            condexpr_false_146:;
            tmp_metaclass_name_72 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_72);
            condexpr_end_146:;
            condexpr_end_145:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases);
            tmp_bases_name_72 = tmp_QtWidgets$class_creation_51__bases;
            tmp_assign_source_528 = SELECT_METACLASS(tmp_metaclass_name_72, tmp_bases_name_72);
            Py_DECREF(tmp_metaclass_name_72);
            if (tmp_assign_source_528 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            assert(tmp_QtWidgets$class_creation_51__metaclass == NULL);
            tmp_QtWidgets$class_creation_51__metaclass = tmp_assign_source_528;
        }
        {
            nuitka_bool tmp_condition_result_431;
            PyObject *tmp_key_name_216;
            PyObject *tmp_dict_name_216;
            tmp_key_name_216 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__class_decl_dict);
            tmp_dict_name_216 = tmp_QtWidgets$class_creation_51__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_216, tmp_key_name_216);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            tmp_condition_result_431 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_431 == NUITKA_BOOL_TRUE) {
                goto branch_yes_285;
            } else {
                goto branch_no_285;
            }
            branch_yes_285:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_51__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_215;
            }
            branch_no_285:;
        }
        {
            nuitka_bool tmp_condition_result_432;
            PyObject *tmp_source_name_292;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__metaclass);
            tmp_source_name_292 = tmp_QtWidgets$class_creation_51__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_292, const_str_plain___prepare__);
            tmp_condition_result_432 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_432 == NUITKA_BOOL_TRUE) {
                goto branch_yes_286;
            } else {
                goto branch_no_286;
            }
            branch_yes_286:;
            {
                PyObject *tmp_assign_source_529;
                PyObject *tmp_called_name_144;
                PyObject *tmp_source_name_293;
                PyObject *tmp_args_name_142;
                PyObject *tmp_tuple_element_282;
                PyObject *tmp_kw_name_142;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_51__metaclass);
                tmp_source_name_293 = tmp_QtWidgets$class_creation_51__metaclass;
                tmp_called_name_144 = LOOKUP_ATTRIBUTE(tmp_source_name_293, const_str_plain___prepare__);
                if (tmp_called_name_144 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 403;
                    type_description_2 = "o";
                    goto try_except_handler_215;
                }
                tmp_tuple_element_282 = const_str_plain_QListView;
                tmp_args_name_142 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_282);
                PyTuple_SET_ITEM(tmp_args_name_142, 0, tmp_tuple_element_282);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases);
                tmp_tuple_element_282 = tmp_QtWidgets$class_creation_51__bases;
                Py_INCREF(tmp_tuple_element_282);
                PyTuple_SET_ITEM(tmp_args_name_142, 1, tmp_tuple_element_282);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_51__class_decl_dict);
                tmp_kw_name_142 = tmp_QtWidgets$class_creation_51__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 403;
                tmp_assign_source_529 = CALL_FUNCTION(tmp_called_name_144, tmp_args_name_142, tmp_kw_name_142);
                Py_DECREF(tmp_called_name_144);
                Py_DECREF(tmp_args_name_142);
                if (tmp_assign_source_529 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 403;
                    type_description_2 = "o";
                    goto try_except_handler_215;
                }
                assert(tmp_QtWidgets$class_creation_51__prepared == NULL);
                tmp_QtWidgets$class_creation_51__prepared = tmp_assign_source_529;
            }
            {
                nuitka_bool tmp_condition_result_433;
                PyObject *tmp_operand_name_72;
                PyObject *tmp_source_name_294;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_51__prepared);
                tmp_source_name_294 = tmp_QtWidgets$class_creation_51__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_294, const_str_plain___getitem__);
                tmp_operand_name_72 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_72);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 403;
                    type_description_2 = "o";
                    goto try_except_handler_215;
                }
                tmp_condition_result_433 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_433 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_287;
                } else {
                    goto branch_no_287;
                }
                branch_yes_287:;
                {
                    PyObject *tmp_raise_type_72;
                    PyObject *tmp_raise_value_72;
                    PyObject *tmp_left_name_72;
                    PyObject *tmp_right_name_72;
                    PyObject *tmp_tuple_element_283;
                    PyObject *tmp_getattr_target_72;
                    PyObject *tmp_getattr_attr_72;
                    PyObject *tmp_getattr_default_72;
                    PyObject *tmp_source_name_295;
                    PyObject *tmp_type_arg_144;
                    tmp_raise_type_72 = PyExc_TypeError;
                    tmp_left_name_72 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_51__metaclass);
                    tmp_getattr_target_72 = tmp_QtWidgets$class_creation_51__metaclass;
                    tmp_getattr_attr_72 = const_str_plain___name__;
                    tmp_getattr_default_72 = const_str_angle_metaclass;
                    tmp_tuple_element_283 = BUILTIN_GETATTR(tmp_getattr_target_72, tmp_getattr_attr_72, tmp_getattr_default_72);
                    if (tmp_tuple_element_283 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 403;
                        type_description_2 = "o";
                        goto try_except_handler_215;
                    }
                    tmp_right_name_72 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_72, 0, tmp_tuple_element_283);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_51__prepared);
                    tmp_type_arg_144 = tmp_QtWidgets$class_creation_51__prepared;
                    tmp_source_name_295 = BUILTIN_TYPE1(tmp_type_arg_144);
                    assert(!(tmp_source_name_295 == NULL));
                    tmp_tuple_element_283 = LOOKUP_ATTRIBUTE(tmp_source_name_295, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_295);
                    if (tmp_tuple_element_283 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_72);

                        exception_lineno = 403;
                        type_description_2 = "o";
                        goto try_except_handler_215;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_72, 1, tmp_tuple_element_283);
                    tmp_raise_value_72 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_72, tmp_right_name_72);
                    Py_DECREF(tmp_right_name_72);
                    if (tmp_raise_value_72 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 403;
                        type_description_2 = "o";
                        goto try_except_handler_215;
                    }
                    exception_type = tmp_raise_type_72;
                    Py_INCREF(tmp_raise_type_72);
                    exception_value = tmp_raise_value_72;
                    exception_lineno = 403;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_215;
                }
                branch_no_287:;
            }
            goto branch_end_286;
            branch_no_286:;
            {
                PyObject *tmp_assign_source_530;
                tmp_assign_source_530 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_51__prepared == NULL);
                tmp_QtWidgets$class_creation_51__prepared = tmp_assign_source_530;
            }
            branch_end_286:;
        }
        {
            PyObject *tmp_set_locals_72;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__prepared);
            tmp_set_locals_72 = tmp_QtWidgets$class_creation_51__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_403 = tmp_set_locals_72;
            Py_INCREF(tmp_set_locals_72);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_403, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 403;
            type_description_2 = "o";
            goto try_except_handler_217;
        }
        tmp_dictset_value = const_str_digest_fb084c6a3ced24839e9b1b2234a8219d;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_403, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 403;
            type_description_2 = "o";
            goto try_except_handler_217;
        }
        {
            nuitka_bool tmp_condition_result_434;
            PyObject *tmp_compexpr_left_72;
            PyObject *tmp_compexpr_right_72;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases);
            tmp_compexpr_left_72 = tmp_QtWidgets$class_creation_51__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases_orig);
            tmp_compexpr_right_72 = tmp_QtWidgets$class_creation_51__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_72, tmp_compexpr_right_72);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_217;
            }
            tmp_condition_result_434 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_434 == NUITKA_BOOL_TRUE) {
                goto branch_yes_288;
            } else {
                goto branch_no_288;
            }
            branch_yes_288:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_51__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_403, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_217;
            }
            branch_no_288:;
        }
        {
            PyObject *tmp_assign_source_531;
            PyObject *tmp_called_name_145;
            PyObject *tmp_args_name_143;
            PyObject *tmp_tuple_element_284;
            PyObject *tmp_kw_name_143;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__metaclass);
            tmp_called_name_145 = tmp_QtWidgets$class_creation_51__metaclass;
            tmp_tuple_element_284 = const_str_plain_QListView;
            tmp_args_name_143 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_284);
            PyTuple_SET_ITEM(tmp_args_name_143, 0, tmp_tuple_element_284);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__bases);
            tmp_tuple_element_284 = tmp_QtWidgets$class_creation_51__bases;
            Py_INCREF(tmp_tuple_element_284);
            PyTuple_SET_ITEM(tmp_args_name_143, 1, tmp_tuple_element_284);
            tmp_tuple_element_284 = locals_PyQt5$uic$Compiler$qtproxies_403;
            Py_INCREF(tmp_tuple_element_284);
            PyTuple_SET_ITEM(tmp_args_name_143, 2, tmp_tuple_element_284);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_51__class_decl_dict);
            tmp_kw_name_143 = tmp_QtWidgets$class_creation_51__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 403;
            tmp_assign_source_531 = CALL_FUNCTION(tmp_called_name_145, tmp_args_name_143, tmp_kw_name_143);
            Py_DECREF(tmp_args_name_143);
            if (tmp_assign_source_531 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_2 = "o";
                goto try_except_handler_217;
            }
            assert(outline_71_var___class__ == NULL);
            outline_71_var___class__ = tmp_assign_source_531;
        }
        CHECK_OBJECT(outline_71_var___class__);
        tmp_dictset_value = outline_71_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_217;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_217:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_403);
        locals_PyQt5$uic$Compiler$qtproxies_403 = NULL;
        goto try_return_handler_216;
        // Exception handler code:
        try_except_handler_217:;
        exception_keeper_type_212 = exception_type;
        exception_keeper_value_212 = exception_value;
        exception_keeper_tb_212 = exception_tb;
        exception_keeper_lineno_212 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_403);
        locals_PyQt5$uic$Compiler$qtproxies_403 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_212;
        exception_value = exception_keeper_value_212;
        exception_tb = exception_keeper_tb_212;
        exception_lineno = exception_keeper_lineno_212;

        goto try_except_handler_216;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_216:;
        CHECK_OBJECT((PyObject *)outline_71_var___class__);
        Py_DECREF(outline_71_var___class__);
        outline_71_var___class__ = NULL;

        goto outline_result_72;
        // Exception handler code:
        try_except_handler_216:;
        exception_keeper_type_213 = exception_type;
        exception_keeper_value_213 = exception_value;
        exception_keeper_tb_213 = exception_tb;
        exception_keeper_lineno_213 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_213;
        exception_value = exception_keeper_value_213;
        exception_tb = exception_keeper_tb_213;
        exception_lineno = exception_keeper_lineno_213;

        goto outline_exception_72;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_72:;
        exception_lineno = 403;
        goto try_except_handler_215;
        outline_result_72:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QListView, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 403;
            type_description_2 = "o";
            goto try_except_handler_215;
        }
        goto try_end_72;
        // Exception handler code:
        try_except_handler_215:;
        exception_keeper_type_214 = exception_type;
        exception_keeper_value_214 = exception_value;
        exception_keeper_tb_214 = exception_tb;
        exception_keeper_lineno_214 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_51__bases_orig);
        tmp_QtWidgets$class_creation_51__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_51__bases);
        tmp_QtWidgets$class_creation_51__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_51__class_decl_dict);
        tmp_QtWidgets$class_creation_51__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_51__metaclass);
        tmp_QtWidgets$class_creation_51__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_51__prepared);
        tmp_QtWidgets$class_creation_51__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_214;
        exception_value = exception_keeper_value_214;
        exception_tb = exception_keeper_tb_214;
        exception_lineno = exception_keeper_lineno_214;

        goto frame_exception_exit_12;
        // End of try:
        try_end_72:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_51__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_51__bases_orig);
        tmp_QtWidgets$class_creation_51__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_51__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_51__bases);
        tmp_QtWidgets$class_creation_51__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_51__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_51__class_decl_dict);
        tmp_QtWidgets$class_creation_51__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_51__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_51__metaclass);
        tmp_QtWidgets$class_creation_51__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_51__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_51__prepared);
        tmp_QtWidgets$class_creation_51__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_532;
            PyObject *tmp_tuple_element_285;
            PyObject *tmp_mvar_value_63;
            tmp_tuple_element_285 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractItemView);

            if (tmp_tuple_element_285 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_63 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);

                    if (unlikely(tmp_mvar_value_63 == NULL)) {
                        tmp_mvar_value_63 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);
                    }

                    if (tmp_mvar_value_63 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1890 ], 39, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 405;
                        type_description_2 = "o";
                        goto try_except_handler_218;
                    }

                    tmp_tuple_element_285 = tmp_mvar_value_63;
                    Py_INCREF(tmp_tuple_element_285);
                }
            }

            tmp_assign_source_532 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_532, 0, tmp_tuple_element_285);
            assert(tmp_QtWidgets$class_creation_52__bases_orig == NULL);
            tmp_QtWidgets$class_creation_52__bases_orig = tmp_assign_source_532;
        }
        {
            PyObject *tmp_assign_source_533;
            PyObject *tmp_dircall_arg1_73;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases_orig);
            tmp_dircall_arg1_73 = tmp_QtWidgets$class_creation_52__bases_orig;
            Py_INCREF(tmp_dircall_arg1_73);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_73};
                tmp_assign_source_533 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_533 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            assert(tmp_QtWidgets$class_creation_52__bases == NULL);
            tmp_QtWidgets$class_creation_52__bases = tmp_assign_source_533;
        }
        {
            PyObject *tmp_assign_source_534;
            tmp_assign_source_534 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_52__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_52__class_decl_dict = tmp_assign_source_534;
        }
        {
            PyObject *tmp_assign_source_535;
            PyObject *tmp_metaclass_name_73;
            nuitka_bool tmp_condition_result_435;
            PyObject *tmp_key_name_217;
            PyObject *tmp_dict_name_217;
            PyObject *tmp_dict_name_218;
            PyObject *tmp_key_name_218;
            nuitka_bool tmp_condition_result_436;
            int tmp_truth_name_73;
            PyObject *tmp_type_arg_145;
            PyObject *tmp_subscribed_name_73;
            PyObject *tmp_subscript_name_73;
            PyObject *tmp_bases_name_73;
            tmp_key_name_217 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__class_decl_dict);
            tmp_dict_name_217 = tmp_QtWidgets$class_creation_52__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_217, tmp_key_name_217);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            tmp_condition_result_435 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_435 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_147;
            } else {
                goto condexpr_false_147;
            }
            condexpr_true_147:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__class_decl_dict);
            tmp_dict_name_218 = tmp_QtWidgets$class_creation_52__class_decl_dict;
            tmp_key_name_218 = const_str_plain_metaclass;
            tmp_metaclass_name_73 = DICT_GET_ITEM(tmp_dict_name_218, tmp_key_name_218);
            if (tmp_metaclass_name_73 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            goto condexpr_end_147;
            condexpr_false_147:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases);
            tmp_truth_name_73 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_52__bases);
            if (tmp_truth_name_73 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            tmp_condition_result_436 = tmp_truth_name_73 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_436 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_148;
            } else {
                goto condexpr_false_148;
            }
            condexpr_true_148:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases);
            tmp_subscribed_name_73 = tmp_QtWidgets$class_creation_52__bases;
            tmp_subscript_name_73 = const_int_0;
            tmp_type_arg_145 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_73, tmp_subscript_name_73, 0);
            if (tmp_type_arg_145 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            tmp_metaclass_name_73 = BUILTIN_TYPE1(tmp_type_arg_145);
            Py_DECREF(tmp_type_arg_145);
            if (tmp_metaclass_name_73 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            goto condexpr_end_148;
            condexpr_false_148:;
            tmp_metaclass_name_73 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_73);
            condexpr_end_148:;
            condexpr_end_147:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases);
            tmp_bases_name_73 = tmp_QtWidgets$class_creation_52__bases;
            tmp_assign_source_535 = SELECT_METACLASS(tmp_metaclass_name_73, tmp_bases_name_73);
            Py_DECREF(tmp_metaclass_name_73);
            if (tmp_assign_source_535 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            assert(tmp_QtWidgets$class_creation_52__metaclass == NULL);
            tmp_QtWidgets$class_creation_52__metaclass = tmp_assign_source_535;
        }
        {
            nuitka_bool tmp_condition_result_437;
            PyObject *tmp_key_name_219;
            PyObject *tmp_dict_name_219;
            tmp_key_name_219 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__class_decl_dict);
            tmp_dict_name_219 = tmp_QtWidgets$class_creation_52__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_219, tmp_key_name_219);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            tmp_condition_result_437 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_437 == NUITKA_BOOL_TRUE) {
                goto branch_yes_289;
            } else {
                goto branch_no_289;
            }
            branch_yes_289:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_52__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_218;
            }
            branch_no_289:;
        }
        {
            nuitka_bool tmp_condition_result_438;
            PyObject *tmp_source_name_296;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__metaclass);
            tmp_source_name_296 = tmp_QtWidgets$class_creation_52__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_296, const_str_plain___prepare__);
            tmp_condition_result_438 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_438 == NUITKA_BOOL_TRUE) {
                goto branch_yes_290;
            } else {
                goto branch_no_290;
            }
            branch_yes_290:;
            {
                PyObject *tmp_assign_source_536;
                PyObject *tmp_called_name_146;
                PyObject *tmp_source_name_297;
                PyObject *tmp_args_name_144;
                PyObject *tmp_tuple_element_286;
                PyObject *tmp_kw_name_144;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_52__metaclass);
                tmp_source_name_297 = tmp_QtWidgets$class_creation_52__metaclass;
                tmp_called_name_146 = LOOKUP_ATTRIBUTE(tmp_source_name_297, const_str_plain___prepare__);
                if (tmp_called_name_146 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 405;
                    type_description_2 = "o";
                    goto try_except_handler_218;
                }
                tmp_tuple_element_286 = const_str_plain_QTableView;
                tmp_args_name_144 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_286);
                PyTuple_SET_ITEM(tmp_args_name_144, 0, tmp_tuple_element_286);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases);
                tmp_tuple_element_286 = tmp_QtWidgets$class_creation_52__bases;
                Py_INCREF(tmp_tuple_element_286);
                PyTuple_SET_ITEM(tmp_args_name_144, 1, tmp_tuple_element_286);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_52__class_decl_dict);
                tmp_kw_name_144 = tmp_QtWidgets$class_creation_52__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 405;
                tmp_assign_source_536 = CALL_FUNCTION(tmp_called_name_146, tmp_args_name_144, tmp_kw_name_144);
                Py_DECREF(tmp_called_name_146);
                Py_DECREF(tmp_args_name_144);
                if (tmp_assign_source_536 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 405;
                    type_description_2 = "o";
                    goto try_except_handler_218;
                }
                assert(tmp_QtWidgets$class_creation_52__prepared == NULL);
                tmp_QtWidgets$class_creation_52__prepared = tmp_assign_source_536;
            }
            {
                nuitka_bool tmp_condition_result_439;
                PyObject *tmp_operand_name_73;
                PyObject *tmp_source_name_298;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_52__prepared);
                tmp_source_name_298 = tmp_QtWidgets$class_creation_52__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_298, const_str_plain___getitem__);
                tmp_operand_name_73 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_73);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 405;
                    type_description_2 = "o";
                    goto try_except_handler_218;
                }
                tmp_condition_result_439 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_439 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_291;
                } else {
                    goto branch_no_291;
                }
                branch_yes_291:;
                {
                    PyObject *tmp_raise_type_73;
                    PyObject *tmp_raise_value_73;
                    PyObject *tmp_left_name_73;
                    PyObject *tmp_right_name_73;
                    PyObject *tmp_tuple_element_287;
                    PyObject *tmp_getattr_target_73;
                    PyObject *tmp_getattr_attr_73;
                    PyObject *tmp_getattr_default_73;
                    PyObject *tmp_source_name_299;
                    PyObject *tmp_type_arg_146;
                    tmp_raise_type_73 = PyExc_TypeError;
                    tmp_left_name_73 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_52__metaclass);
                    tmp_getattr_target_73 = tmp_QtWidgets$class_creation_52__metaclass;
                    tmp_getattr_attr_73 = const_str_plain___name__;
                    tmp_getattr_default_73 = const_str_angle_metaclass;
                    tmp_tuple_element_287 = BUILTIN_GETATTR(tmp_getattr_target_73, tmp_getattr_attr_73, tmp_getattr_default_73);
                    if (tmp_tuple_element_287 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 405;
                        type_description_2 = "o";
                        goto try_except_handler_218;
                    }
                    tmp_right_name_73 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_73, 0, tmp_tuple_element_287);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_52__prepared);
                    tmp_type_arg_146 = tmp_QtWidgets$class_creation_52__prepared;
                    tmp_source_name_299 = BUILTIN_TYPE1(tmp_type_arg_146);
                    assert(!(tmp_source_name_299 == NULL));
                    tmp_tuple_element_287 = LOOKUP_ATTRIBUTE(tmp_source_name_299, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_299);
                    if (tmp_tuple_element_287 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_73);

                        exception_lineno = 405;
                        type_description_2 = "o";
                        goto try_except_handler_218;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_73, 1, tmp_tuple_element_287);
                    tmp_raise_value_73 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_73, tmp_right_name_73);
                    Py_DECREF(tmp_right_name_73);
                    if (tmp_raise_value_73 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 405;
                        type_description_2 = "o";
                        goto try_except_handler_218;
                    }
                    exception_type = tmp_raise_type_73;
                    Py_INCREF(tmp_raise_type_73);
                    exception_value = tmp_raise_value_73;
                    exception_lineno = 405;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_218;
                }
                branch_no_291:;
            }
            goto branch_end_290;
            branch_no_290:;
            {
                PyObject *tmp_assign_source_537;
                tmp_assign_source_537 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_52__prepared == NULL);
                tmp_QtWidgets$class_creation_52__prepared = tmp_assign_source_537;
            }
            branch_end_290:;
        }
        {
            PyObject *tmp_set_locals_73;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__prepared);
            tmp_set_locals_73 = tmp_QtWidgets$class_creation_52__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_405 = tmp_set_locals_73;
            Py_INCREF(tmp_set_locals_73);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_405, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 405;
            type_description_2 = "o";
            goto try_except_handler_220;
        }
        tmp_dictset_value = const_str_digest_56cfbe8c43c38edc3b3bd9fb1cb1389c;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_405, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 405;
            type_description_2 = "o";
            goto try_except_handler_220;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_a22e0e1aa09d904eb786d76c3dcebdb5_19, codeobj_a22e0e1aa09d904eb786d76c3dcebdb5, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_a22e0e1aa09d904eb786d76c3dcebdb5_19 = cache_frame_a22e0e1aa09d904eb786d76c3dcebdb5_19;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_a22e0e1aa09d904eb786d76c3dcebdb5_19);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_a22e0e1aa09d904eb786d76c3dcebdb5_19) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_32_horizontalHeader();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_405, const_str_plain_horizontalHeader, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 406;
            type_description_3 = "o";
            goto frame_exception_exit_19;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_33_verticalHeader();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_405, const_str_plain_verticalHeader, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 410;
            type_description_3 = "o";
            goto frame_exception_exit_19;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a22e0e1aa09d904eb786d76c3dcebdb5_19);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_17;

        frame_exception_exit_19:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_a22e0e1aa09d904eb786d76c3dcebdb5_19);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_a22e0e1aa09d904eb786d76c3dcebdb5_19, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_a22e0e1aa09d904eb786d76c3dcebdb5_19->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_a22e0e1aa09d904eb786d76c3dcebdb5_19, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_a22e0e1aa09d904eb786d76c3dcebdb5_19,
            type_description_3,
            outline_72_var___class__
        );


        // Release cached frame.
        if (frame_a22e0e1aa09d904eb786d76c3dcebdb5_19 == cache_frame_a22e0e1aa09d904eb786d76c3dcebdb5_19) {
            Py_DECREF(frame_a22e0e1aa09d904eb786d76c3dcebdb5_19);
        }
        cache_frame_a22e0e1aa09d904eb786d76c3dcebdb5_19 = NULL;

        assertFrameObject(frame_a22e0e1aa09d904eb786d76c3dcebdb5_19);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_18;

        frame_no_exception_17:;
        goto skip_nested_handling_17;
        nested_frame_exit_18:;
        type_description_2 = "o";
        goto try_except_handler_220;
        skip_nested_handling_17:;
        {
            nuitka_bool tmp_condition_result_440;
            PyObject *tmp_compexpr_left_73;
            PyObject *tmp_compexpr_right_73;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases);
            tmp_compexpr_left_73 = tmp_QtWidgets$class_creation_52__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases_orig);
            tmp_compexpr_right_73 = tmp_QtWidgets$class_creation_52__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_73, tmp_compexpr_right_73);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_220;
            }
            tmp_condition_result_440 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_440 == NUITKA_BOOL_TRUE) {
                goto branch_yes_292;
            } else {
                goto branch_no_292;
            }
            branch_yes_292:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_52__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_405, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_220;
            }
            branch_no_292:;
        }
        {
            PyObject *tmp_assign_source_538;
            PyObject *tmp_called_name_147;
            PyObject *tmp_args_name_145;
            PyObject *tmp_tuple_element_288;
            PyObject *tmp_kw_name_145;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__metaclass);
            tmp_called_name_147 = tmp_QtWidgets$class_creation_52__metaclass;
            tmp_tuple_element_288 = const_str_plain_QTableView;
            tmp_args_name_145 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_288);
            PyTuple_SET_ITEM(tmp_args_name_145, 0, tmp_tuple_element_288);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__bases);
            tmp_tuple_element_288 = tmp_QtWidgets$class_creation_52__bases;
            Py_INCREF(tmp_tuple_element_288);
            PyTuple_SET_ITEM(tmp_args_name_145, 1, tmp_tuple_element_288);
            tmp_tuple_element_288 = locals_PyQt5$uic$Compiler$qtproxies_405;
            Py_INCREF(tmp_tuple_element_288);
            PyTuple_SET_ITEM(tmp_args_name_145, 2, tmp_tuple_element_288);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_52__class_decl_dict);
            tmp_kw_name_145 = tmp_QtWidgets$class_creation_52__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 405;
            tmp_assign_source_538 = CALL_FUNCTION(tmp_called_name_147, tmp_args_name_145, tmp_kw_name_145);
            Py_DECREF(tmp_args_name_145);
            if (tmp_assign_source_538 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_2 = "o";
                goto try_except_handler_220;
            }
            assert(outline_72_var___class__ == NULL);
            outline_72_var___class__ = tmp_assign_source_538;
        }
        CHECK_OBJECT(outline_72_var___class__);
        tmp_dictset_value = outline_72_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_220;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_220:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_405);
        locals_PyQt5$uic$Compiler$qtproxies_405 = NULL;
        goto try_return_handler_219;
        // Exception handler code:
        try_except_handler_220:;
        exception_keeper_type_215 = exception_type;
        exception_keeper_value_215 = exception_value;
        exception_keeper_tb_215 = exception_tb;
        exception_keeper_lineno_215 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_405);
        locals_PyQt5$uic$Compiler$qtproxies_405 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_215;
        exception_value = exception_keeper_value_215;
        exception_tb = exception_keeper_tb_215;
        exception_lineno = exception_keeper_lineno_215;

        goto try_except_handler_219;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_219:;
        CHECK_OBJECT((PyObject *)outline_72_var___class__);
        Py_DECREF(outline_72_var___class__);
        outline_72_var___class__ = NULL;

        goto outline_result_73;
        // Exception handler code:
        try_except_handler_219:;
        exception_keeper_type_216 = exception_type;
        exception_keeper_value_216 = exception_value;
        exception_keeper_tb_216 = exception_tb;
        exception_keeper_lineno_216 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_216;
        exception_value = exception_keeper_value_216;
        exception_tb = exception_keeper_tb_216;
        exception_lineno = exception_keeper_lineno_216;

        goto outline_exception_73;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_73:;
        exception_lineno = 405;
        goto try_except_handler_218;
        outline_result_73:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTableView, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 405;
            type_description_2 = "o";
            goto try_except_handler_218;
        }
        goto try_end_73;
        // Exception handler code:
        try_except_handler_218:;
        exception_keeper_type_217 = exception_type;
        exception_keeper_value_217 = exception_value;
        exception_keeper_tb_217 = exception_tb;
        exception_keeper_lineno_217 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_52__bases_orig);
        tmp_QtWidgets$class_creation_52__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_52__bases);
        tmp_QtWidgets$class_creation_52__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_52__class_decl_dict);
        tmp_QtWidgets$class_creation_52__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_52__metaclass);
        tmp_QtWidgets$class_creation_52__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_52__prepared);
        tmp_QtWidgets$class_creation_52__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_217;
        exception_value = exception_keeper_value_217;
        exception_tb = exception_keeper_tb_217;
        exception_lineno = exception_keeper_lineno_217;

        goto frame_exception_exit_12;
        // End of try:
        try_end_73:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_52__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_52__bases_orig);
        tmp_QtWidgets$class_creation_52__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_52__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_52__bases);
        tmp_QtWidgets$class_creation_52__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_52__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_52__class_decl_dict);
        tmp_QtWidgets$class_creation_52__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_52__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_52__metaclass);
        tmp_QtWidgets$class_creation_52__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_52__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_52__prepared);
        tmp_QtWidgets$class_creation_52__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_539;
            PyObject *tmp_tuple_element_289;
            PyObject *tmp_mvar_value_64;
            tmp_tuple_element_289 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractItemView);

            if (tmp_tuple_element_289 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_64 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);

                    if (unlikely(tmp_mvar_value_64 == NULL)) {
                        tmp_mvar_value_64 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractItemView);
                    }

                    if (tmp_mvar_value_64 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1890 ], 39, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 414;
                        type_description_2 = "o";
                        goto try_except_handler_221;
                    }

                    tmp_tuple_element_289 = tmp_mvar_value_64;
                    Py_INCREF(tmp_tuple_element_289);
                }
            }

            tmp_assign_source_539 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_539, 0, tmp_tuple_element_289);
            assert(tmp_QtWidgets$class_creation_53__bases_orig == NULL);
            tmp_QtWidgets$class_creation_53__bases_orig = tmp_assign_source_539;
        }
        {
            PyObject *tmp_assign_source_540;
            PyObject *tmp_dircall_arg1_74;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases_orig);
            tmp_dircall_arg1_74 = tmp_QtWidgets$class_creation_53__bases_orig;
            Py_INCREF(tmp_dircall_arg1_74);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_74};
                tmp_assign_source_540 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_540 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            assert(tmp_QtWidgets$class_creation_53__bases == NULL);
            tmp_QtWidgets$class_creation_53__bases = tmp_assign_source_540;
        }
        {
            PyObject *tmp_assign_source_541;
            tmp_assign_source_541 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_53__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_53__class_decl_dict = tmp_assign_source_541;
        }
        {
            PyObject *tmp_assign_source_542;
            PyObject *tmp_metaclass_name_74;
            nuitka_bool tmp_condition_result_441;
            PyObject *tmp_key_name_220;
            PyObject *tmp_dict_name_220;
            PyObject *tmp_dict_name_221;
            PyObject *tmp_key_name_221;
            nuitka_bool tmp_condition_result_442;
            int tmp_truth_name_74;
            PyObject *tmp_type_arg_147;
            PyObject *tmp_subscribed_name_74;
            PyObject *tmp_subscript_name_74;
            PyObject *tmp_bases_name_74;
            tmp_key_name_220 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__class_decl_dict);
            tmp_dict_name_220 = tmp_QtWidgets$class_creation_53__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_220, tmp_key_name_220);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            tmp_condition_result_441 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_441 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_149;
            } else {
                goto condexpr_false_149;
            }
            condexpr_true_149:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__class_decl_dict);
            tmp_dict_name_221 = tmp_QtWidgets$class_creation_53__class_decl_dict;
            tmp_key_name_221 = const_str_plain_metaclass;
            tmp_metaclass_name_74 = DICT_GET_ITEM(tmp_dict_name_221, tmp_key_name_221);
            if (tmp_metaclass_name_74 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            goto condexpr_end_149;
            condexpr_false_149:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases);
            tmp_truth_name_74 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_53__bases);
            if (tmp_truth_name_74 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            tmp_condition_result_442 = tmp_truth_name_74 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_442 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_150;
            } else {
                goto condexpr_false_150;
            }
            condexpr_true_150:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases);
            tmp_subscribed_name_74 = tmp_QtWidgets$class_creation_53__bases;
            tmp_subscript_name_74 = const_int_0;
            tmp_type_arg_147 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_74, tmp_subscript_name_74, 0);
            if (tmp_type_arg_147 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            tmp_metaclass_name_74 = BUILTIN_TYPE1(tmp_type_arg_147);
            Py_DECREF(tmp_type_arg_147);
            if (tmp_metaclass_name_74 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            goto condexpr_end_150;
            condexpr_false_150:;
            tmp_metaclass_name_74 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_74);
            condexpr_end_150:;
            condexpr_end_149:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases);
            tmp_bases_name_74 = tmp_QtWidgets$class_creation_53__bases;
            tmp_assign_source_542 = SELECT_METACLASS(tmp_metaclass_name_74, tmp_bases_name_74);
            Py_DECREF(tmp_metaclass_name_74);
            if (tmp_assign_source_542 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            assert(tmp_QtWidgets$class_creation_53__metaclass == NULL);
            tmp_QtWidgets$class_creation_53__metaclass = tmp_assign_source_542;
        }
        {
            nuitka_bool tmp_condition_result_443;
            PyObject *tmp_key_name_222;
            PyObject *tmp_dict_name_222;
            tmp_key_name_222 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__class_decl_dict);
            tmp_dict_name_222 = tmp_QtWidgets$class_creation_53__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_222, tmp_key_name_222);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            tmp_condition_result_443 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_443 == NUITKA_BOOL_TRUE) {
                goto branch_yes_293;
            } else {
                goto branch_no_293;
            }
            branch_yes_293:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_53__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_221;
            }
            branch_no_293:;
        }
        {
            nuitka_bool tmp_condition_result_444;
            PyObject *tmp_source_name_300;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__metaclass);
            tmp_source_name_300 = tmp_QtWidgets$class_creation_53__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_300, const_str_plain___prepare__);
            tmp_condition_result_444 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_444 == NUITKA_BOOL_TRUE) {
                goto branch_yes_294;
            } else {
                goto branch_no_294;
            }
            branch_yes_294:;
            {
                PyObject *tmp_assign_source_543;
                PyObject *tmp_called_name_148;
                PyObject *tmp_source_name_301;
                PyObject *tmp_args_name_146;
                PyObject *tmp_tuple_element_290;
                PyObject *tmp_kw_name_146;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_53__metaclass);
                tmp_source_name_301 = tmp_QtWidgets$class_creation_53__metaclass;
                tmp_called_name_148 = LOOKUP_ATTRIBUTE(tmp_source_name_301, const_str_plain___prepare__);
                if (tmp_called_name_148 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 414;
                    type_description_2 = "o";
                    goto try_except_handler_221;
                }
                tmp_tuple_element_290 = const_str_plain_QTreeView;
                tmp_args_name_146 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_290);
                PyTuple_SET_ITEM(tmp_args_name_146, 0, tmp_tuple_element_290);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases);
                tmp_tuple_element_290 = tmp_QtWidgets$class_creation_53__bases;
                Py_INCREF(tmp_tuple_element_290);
                PyTuple_SET_ITEM(tmp_args_name_146, 1, tmp_tuple_element_290);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_53__class_decl_dict);
                tmp_kw_name_146 = tmp_QtWidgets$class_creation_53__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 414;
                tmp_assign_source_543 = CALL_FUNCTION(tmp_called_name_148, tmp_args_name_146, tmp_kw_name_146);
                Py_DECREF(tmp_called_name_148);
                Py_DECREF(tmp_args_name_146);
                if (tmp_assign_source_543 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 414;
                    type_description_2 = "o";
                    goto try_except_handler_221;
                }
                assert(tmp_QtWidgets$class_creation_53__prepared == NULL);
                tmp_QtWidgets$class_creation_53__prepared = tmp_assign_source_543;
            }
            {
                nuitka_bool tmp_condition_result_445;
                PyObject *tmp_operand_name_74;
                PyObject *tmp_source_name_302;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_53__prepared);
                tmp_source_name_302 = tmp_QtWidgets$class_creation_53__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_302, const_str_plain___getitem__);
                tmp_operand_name_74 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_74);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 414;
                    type_description_2 = "o";
                    goto try_except_handler_221;
                }
                tmp_condition_result_445 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_445 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_295;
                } else {
                    goto branch_no_295;
                }
                branch_yes_295:;
                {
                    PyObject *tmp_raise_type_74;
                    PyObject *tmp_raise_value_74;
                    PyObject *tmp_left_name_74;
                    PyObject *tmp_right_name_74;
                    PyObject *tmp_tuple_element_291;
                    PyObject *tmp_getattr_target_74;
                    PyObject *tmp_getattr_attr_74;
                    PyObject *tmp_getattr_default_74;
                    PyObject *tmp_source_name_303;
                    PyObject *tmp_type_arg_148;
                    tmp_raise_type_74 = PyExc_TypeError;
                    tmp_left_name_74 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_53__metaclass);
                    tmp_getattr_target_74 = tmp_QtWidgets$class_creation_53__metaclass;
                    tmp_getattr_attr_74 = const_str_plain___name__;
                    tmp_getattr_default_74 = const_str_angle_metaclass;
                    tmp_tuple_element_291 = BUILTIN_GETATTR(tmp_getattr_target_74, tmp_getattr_attr_74, tmp_getattr_default_74);
                    if (tmp_tuple_element_291 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 414;
                        type_description_2 = "o";
                        goto try_except_handler_221;
                    }
                    tmp_right_name_74 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_74, 0, tmp_tuple_element_291);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_53__prepared);
                    tmp_type_arg_148 = tmp_QtWidgets$class_creation_53__prepared;
                    tmp_source_name_303 = BUILTIN_TYPE1(tmp_type_arg_148);
                    assert(!(tmp_source_name_303 == NULL));
                    tmp_tuple_element_291 = LOOKUP_ATTRIBUTE(tmp_source_name_303, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_303);
                    if (tmp_tuple_element_291 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_74);

                        exception_lineno = 414;
                        type_description_2 = "o";
                        goto try_except_handler_221;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_74, 1, tmp_tuple_element_291);
                    tmp_raise_value_74 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_74, tmp_right_name_74);
                    Py_DECREF(tmp_right_name_74);
                    if (tmp_raise_value_74 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 414;
                        type_description_2 = "o";
                        goto try_except_handler_221;
                    }
                    exception_type = tmp_raise_type_74;
                    Py_INCREF(tmp_raise_type_74);
                    exception_value = tmp_raise_value_74;
                    exception_lineno = 414;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_221;
                }
                branch_no_295:;
            }
            goto branch_end_294;
            branch_no_294:;
            {
                PyObject *tmp_assign_source_544;
                tmp_assign_source_544 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_53__prepared == NULL);
                tmp_QtWidgets$class_creation_53__prepared = tmp_assign_source_544;
            }
            branch_end_294:;
        }
        {
            PyObject *tmp_set_locals_74;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__prepared);
            tmp_set_locals_74 = tmp_QtWidgets$class_creation_53__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_414 = tmp_set_locals_74;
            Py_INCREF(tmp_set_locals_74);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_414, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;
            type_description_2 = "o";
            goto try_except_handler_223;
        }
        tmp_dictset_value = const_str_digest_2cb9647935ecf0d5be585c589b74d9e6;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_414, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;
            type_description_2 = "o";
            goto try_except_handler_223;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_1bca3a6f0a6831653abb6bc56056eae1_20, codeobj_1bca3a6f0a6831653abb6bc56056eae1, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_1bca3a6f0a6831653abb6bc56056eae1_20 = cache_frame_1bca3a6f0a6831653abb6bc56056eae1_20;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_1bca3a6f0a6831653abb6bc56056eae1_20);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_1bca3a6f0a6831653abb6bc56056eae1_20) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_34_header();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_414, const_str_plain_header, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 415;
            type_description_3 = "o";
            goto frame_exception_exit_20;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_1bca3a6f0a6831653abb6bc56056eae1_20);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_18;

        frame_exception_exit_20:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_1bca3a6f0a6831653abb6bc56056eae1_20);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_1bca3a6f0a6831653abb6bc56056eae1_20, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_1bca3a6f0a6831653abb6bc56056eae1_20->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_1bca3a6f0a6831653abb6bc56056eae1_20, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_1bca3a6f0a6831653abb6bc56056eae1_20,
            type_description_3,
            outline_73_var___class__
        );


        // Release cached frame.
        if (frame_1bca3a6f0a6831653abb6bc56056eae1_20 == cache_frame_1bca3a6f0a6831653abb6bc56056eae1_20) {
            Py_DECREF(frame_1bca3a6f0a6831653abb6bc56056eae1_20);
        }
        cache_frame_1bca3a6f0a6831653abb6bc56056eae1_20 = NULL;

        assertFrameObject(frame_1bca3a6f0a6831653abb6bc56056eae1_20);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_19;

        frame_no_exception_18:;
        goto skip_nested_handling_18;
        nested_frame_exit_19:;
        type_description_2 = "o";
        goto try_except_handler_223;
        skip_nested_handling_18:;
        {
            nuitka_bool tmp_condition_result_446;
            PyObject *tmp_compexpr_left_74;
            PyObject *tmp_compexpr_right_74;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases);
            tmp_compexpr_left_74 = tmp_QtWidgets$class_creation_53__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases_orig);
            tmp_compexpr_right_74 = tmp_QtWidgets$class_creation_53__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_74, tmp_compexpr_right_74);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_223;
            }
            tmp_condition_result_446 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_446 == NUITKA_BOOL_TRUE) {
                goto branch_yes_296;
            } else {
                goto branch_no_296;
            }
            branch_yes_296:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_53__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_414, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_223;
            }
            branch_no_296:;
        }
        {
            PyObject *tmp_assign_source_545;
            PyObject *tmp_called_name_149;
            PyObject *tmp_args_name_147;
            PyObject *tmp_tuple_element_292;
            PyObject *tmp_kw_name_147;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__metaclass);
            tmp_called_name_149 = tmp_QtWidgets$class_creation_53__metaclass;
            tmp_tuple_element_292 = const_str_plain_QTreeView;
            tmp_args_name_147 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_292);
            PyTuple_SET_ITEM(tmp_args_name_147, 0, tmp_tuple_element_292);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__bases);
            tmp_tuple_element_292 = tmp_QtWidgets$class_creation_53__bases;
            Py_INCREF(tmp_tuple_element_292);
            PyTuple_SET_ITEM(tmp_args_name_147, 1, tmp_tuple_element_292);
            tmp_tuple_element_292 = locals_PyQt5$uic$Compiler$qtproxies_414;
            Py_INCREF(tmp_tuple_element_292);
            PyTuple_SET_ITEM(tmp_args_name_147, 2, tmp_tuple_element_292);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_53__class_decl_dict);
            tmp_kw_name_147 = tmp_QtWidgets$class_creation_53__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 414;
            tmp_assign_source_545 = CALL_FUNCTION(tmp_called_name_149, tmp_args_name_147, tmp_kw_name_147);
            Py_DECREF(tmp_args_name_147);
            if (tmp_assign_source_545 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 414;
                type_description_2 = "o";
                goto try_except_handler_223;
            }
            assert(outline_73_var___class__ == NULL);
            outline_73_var___class__ = tmp_assign_source_545;
        }
        CHECK_OBJECT(outline_73_var___class__);
        tmp_dictset_value = outline_73_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_223;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_223:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_414);
        locals_PyQt5$uic$Compiler$qtproxies_414 = NULL;
        goto try_return_handler_222;
        // Exception handler code:
        try_except_handler_223:;
        exception_keeper_type_218 = exception_type;
        exception_keeper_value_218 = exception_value;
        exception_keeper_tb_218 = exception_tb;
        exception_keeper_lineno_218 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_414);
        locals_PyQt5$uic$Compiler$qtproxies_414 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_218;
        exception_value = exception_keeper_value_218;
        exception_tb = exception_keeper_tb_218;
        exception_lineno = exception_keeper_lineno_218;

        goto try_except_handler_222;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_222:;
        CHECK_OBJECT((PyObject *)outline_73_var___class__);
        Py_DECREF(outline_73_var___class__);
        outline_73_var___class__ = NULL;

        goto outline_result_74;
        // Exception handler code:
        try_except_handler_222:;
        exception_keeper_type_219 = exception_type;
        exception_keeper_value_219 = exception_value;
        exception_keeper_tb_219 = exception_tb;
        exception_keeper_lineno_219 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_219;
        exception_value = exception_keeper_value_219;
        exception_tb = exception_keeper_tb_219;
        exception_lineno = exception_keeper_lineno_219;

        goto outline_exception_74;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_74:;
        exception_lineno = 414;
        goto try_except_handler_221;
        outline_result_74:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTreeView, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;
            type_description_2 = "o";
            goto try_except_handler_221;
        }
        goto try_end_74;
        // Exception handler code:
        try_except_handler_221:;
        exception_keeper_type_220 = exception_type;
        exception_keeper_value_220 = exception_value;
        exception_keeper_tb_220 = exception_tb;
        exception_keeper_lineno_220 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_53__bases_orig);
        tmp_QtWidgets$class_creation_53__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_53__bases);
        tmp_QtWidgets$class_creation_53__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_53__class_decl_dict);
        tmp_QtWidgets$class_creation_53__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_53__metaclass);
        tmp_QtWidgets$class_creation_53__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_53__prepared);
        tmp_QtWidgets$class_creation_53__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_220;
        exception_value = exception_keeper_value_220;
        exception_tb = exception_keeper_tb_220;
        exception_lineno = exception_keeper_lineno_220;

        goto frame_exception_exit_12;
        // End of try:
        try_end_74:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_53__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_53__bases_orig);
        tmp_QtWidgets$class_creation_53__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_53__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_53__bases);
        tmp_QtWidgets$class_creation_53__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_53__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_53__class_decl_dict);
        tmp_QtWidgets$class_creation_53__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_53__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_53__metaclass);
        tmp_QtWidgets$class_creation_53__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_53__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_53__prepared);
        tmp_QtWidgets$class_creation_53__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_546;
            PyObject *tmp_tuple_element_293;
            PyObject *tmp_mvar_value_65;
            tmp_tuple_element_293 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_ProxyClass);

            if (tmp_tuple_element_293 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_65 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_65 == NULL)) {
                        tmp_mvar_value_65 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_65 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 419;
                        type_description_2 = "o";
                        goto try_except_handler_224;
                    }

                    tmp_tuple_element_293 = tmp_mvar_value_65;
                    Py_INCREF(tmp_tuple_element_293);
                }
            }

            tmp_assign_source_546 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_546, 0, tmp_tuple_element_293);
            assert(tmp_QtWidgets$class_creation_54__bases_orig == NULL);
            tmp_QtWidgets$class_creation_54__bases_orig = tmp_assign_source_546;
        }
        {
            PyObject *tmp_assign_source_547;
            PyObject *tmp_dircall_arg1_75;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases_orig);
            tmp_dircall_arg1_75 = tmp_QtWidgets$class_creation_54__bases_orig;
            Py_INCREF(tmp_dircall_arg1_75);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_75};
                tmp_assign_source_547 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_547 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            assert(tmp_QtWidgets$class_creation_54__bases == NULL);
            tmp_QtWidgets$class_creation_54__bases = tmp_assign_source_547;
        }
        {
            PyObject *tmp_assign_source_548;
            tmp_assign_source_548 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_54__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_54__class_decl_dict = tmp_assign_source_548;
        }
        {
            PyObject *tmp_assign_source_549;
            PyObject *tmp_metaclass_name_75;
            nuitka_bool tmp_condition_result_447;
            PyObject *tmp_key_name_223;
            PyObject *tmp_dict_name_223;
            PyObject *tmp_dict_name_224;
            PyObject *tmp_key_name_224;
            nuitka_bool tmp_condition_result_448;
            int tmp_truth_name_75;
            PyObject *tmp_type_arg_149;
            PyObject *tmp_subscribed_name_75;
            PyObject *tmp_subscript_name_75;
            PyObject *tmp_bases_name_75;
            tmp_key_name_223 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__class_decl_dict);
            tmp_dict_name_223 = tmp_QtWidgets$class_creation_54__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_223, tmp_key_name_223);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            tmp_condition_result_447 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_447 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_151;
            } else {
                goto condexpr_false_151;
            }
            condexpr_true_151:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__class_decl_dict);
            tmp_dict_name_224 = tmp_QtWidgets$class_creation_54__class_decl_dict;
            tmp_key_name_224 = const_str_plain_metaclass;
            tmp_metaclass_name_75 = DICT_GET_ITEM(tmp_dict_name_224, tmp_key_name_224);
            if (tmp_metaclass_name_75 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            goto condexpr_end_151;
            condexpr_false_151:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases);
            tmp_truth_name_75 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_54__bases);
            if (tmp_truth_name_75 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            tmp_condition_result_448 = tmp_truth_name_75 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_448 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_152;
            } else {
                goto condexpr_false_152;
            }
            condexpr_true_152:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases);
            tmp_subscribed_name_75 = tmp_QtWidgets$class_creation_54__bases;
            tmp_subscript_name_75 = const_int_0;
            tmp_type_arg_149 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_75, tmp_subscript_name_75, 0);
            if (tmp_type_arg_149 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            tmp_metaclass_name_75 = BUILTIN_TYPE1(tmp_type_arg_149);
            Py_DECREF(tmp_type_arg_149);
            if (tmp_metaclass_name_75 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            goto condexpr_end_152;
            condexpr_false_152:;
            tmp_metaclass_name_75 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_75);
            condexpr_end_152:;
            condexpr_end_151:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases);
            tmp_bases_name_75 = tmp_QtWidgets$class_creation_54__bases;
            tmp_assign_source_549 = SELECT_METACLASS(tmp_metaclass_name_75, tmp_bases_name_75);
            Py_DECREF(tmp_metaclass_name_75);
            if (tmp_assign_source_549 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            assert(tmp_QtWidgets$class_creation_54__metaclass == NULL);
            tmp_QtWidgets$class_creation_54__metaclass = tmp_assign_source_549;
        }
        {
            nuitka_bool tmp_condition_result_449;
            PyObject *tmp_key_name_225;
            PyObject *tmp_dict_name_225;
            tmp_key_name_225 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__class_decl_dict);
            tmp_dict_name_225 = tmp_QtWidgets$class_creation_54__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_225, tmp_key_name_225);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            tmp_condition_result_449 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_449 == NUITKA_BOOL_TRUE) {
                goto branch_yes_297;
            } else {
                goto branch_no_297;
            }
            branch_yes_297:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_54__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_224;
            }
            branch_no_297:;
        }
        {
            nuitka_bool tmp_condition_result_450;
            PyObject *tmp_source_name_304;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__metaclass);
            tmp_source_name_304 = tmp_QtWidgets$class_creation_54__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_304, const_str_plain___prepare__);
            tmp_condition_result_450 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_450 == NUITKA_BOOL_TRUE) {
                goto branch_yes_298;
            } else {
                goto branch_no_298;
            }
            branch_yes_298:;
            {
                PyObject *tmp_assign_source_550;
                PyObject *tmp_called_name_150;
                PyObject *tmp_source_name_305;
                PyObject *tmp_args_name_148;
                PyObject *tmp_tuple_element_294;
                PyObject *tmp_kw_name_148;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_54__metaclass);
                tmp_source_name_305 = tmp_QtWidgets$class_creation_54__metaclass;
                tmp_called_name_150 = LOOKUP_ATTRIBUTE(tmp_source_name_305, const_str_plain___prepare__);
                if (tmp_called_name_150 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 419;
                    type_description_2 = "o";
                    goto try_except_handler_224;
                }
                tmp_tuple_element_294 = const_str_plain_QListWidgetItem;
                tmp_args_name_148 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_294);
                PyTuple_SET_ITEM(tmp_args_name_148, 0, tmp_tuple_element_294);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases);
                tmp_tuple_element_294 = tmp_QtWidgets$class_creation_54__bases;
                Py_INCREF(tmp_tuple_element_294);
                PyTuple_SET_ITEM(tmp_args_name_148, 1, tmp_tuple_element_294);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_54__class_decl_dict);
                tmp_kw_name_148 = tmp_QtWidgets$class_creation_54__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 419;
                tmp_assign_source_550 = CALL_FUNCTION(tmp_called_name_150, tmp_args_name_148, tmp_kw_name_148);
                Py_DECREF(tmp_called_name_150);
                Py_DECREF(tmp_args_name_148);
                if (tmp_assign_source_550 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 419;
                    type_description_2 = "o";
                    goto try_except_handler_224;
                }
                assert(tmp_QtWidgets$class_creation_54__prepared == NULL);
                tmp_QtWidgets$class_creation_54__prepared = tmp_assign_source_550;
            }
            {
                nuitka_bool tmp_condition_result_451;
                PyObject *tmp_operand_name_75;
                PyObject *tmp_source_name_306;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_54__prepared);
                tmp_source_name_306 = tmp_QtWidgets$class_creation_54__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_306, const_str_plain___getitem__);
                tmp_operand_name_75 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_75);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 419;
                    type_description_2 = "o";
                    goto try_except_handler_224;
                }
                tmp_condition_result_451 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_451 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_299;
                } else {
                    goto branch_no_299;
                }
                branch_yes_299:;
                {
                    PyObject *tmp_raise_type_75;
                    PyObject *tmp_raise_value_75;
                    PyObject *tmp_left_name_75;
                    PyObject *tmp_right_name_75;
                    PyObject *tmp_tuple_element_295;
                    PyObject *tmp_getattr_target_75;
                    PyObject *tmp_getattr_attr_75;
                    PyObject *tmp_getattr_default_75;
                    PyObject *tmp_source_name_307;
                    PyObject *tmp_type_arg_150;
                    tmp_raise_type_75 = PyExc_TypeError;
                    tmp_left_name_75 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_54__metaclass);
                    tmp_getattr_target_75 = tmp_QtWidgets$class_creation_54__metaclass;
                    tmp_getattr_attr_75 = const_str_plain___name__;
                    tmp_getattr_default_75 = const_str_angle_metaclass;
                    tmp_tuple_element_295 = BUILTIN_GETATTR(tmp_getattr_target_75, tmp_getattr_attr_75, tmp_getattr_default_75);
                    if (tmp_tuple_element_295 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 419;
                        type_description_2 = "o";
                        goto try_except_handler_224;
                    }
                    tmp_right_name_75 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_75, 0, tmp_tuple_element_295);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_54__prepared);
                    tmp_type_arg_150 = tmp_QtWidgets$class_creation_54__prepared;
                    tmp_source_name_307 = BUILTIN_TYPE1(tmp_type_arg_150);
                    assert(!(tmp_source_name_307 == NULL));
                    tmp_tuple_element_295 = LOOKUP_ATTRIBUTE(tmp_source_name_307, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_307);
                    if (tmp_tuple_element_295 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_75);

                        exception_lineno = 419;
                        type_description_2 = "o";
                        goto try_except_handler_224;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_75, 1, tmp_tuple_element_295);
                    tmp_raise_value_75 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_75, tmp_right_name_75);
                    Py_DECREF(tmp_right_name_75);
                    if (tmp_raise_value_75 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 419;
                        type_description_2 = "o";
                        goto try_except_handler_224;
                    }
                    exception_type = tmp_raise_type_75;
                    Py_INCREF(tmp_raise_type_75);
                    exception_value = tmp_raise_value_75;
                    exception_lineno = 419;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_224;
                }
                branch_no_299:;
            }
            goto branch_end_298;
            branch_no_298:;
            {
                PyObject *tmp_assign_source_551;
                tmp_assign_source_551 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_54__prepared == NULL);
                tmp_QtWidgets$class_creation_54__prepared = tmp_assign_source_551;
            }
            branch_end_298:;
        }
        {
            PyObject *tmp_set_locals_75;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__prepared);
            tmp_set_locals_75 = tmp_QtWidgets$class_creation_54__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_419 = tmp_set_locals_75;
            Py_INCREF(tmp_set_locals_75);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_419, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;
            type_description_2 = "o";
            goto try_except_handler_226;
        }
        tmp_dictset_value = const_str_digest_dc1d22f46ac99cb3d62711464e0b3a9e;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_419, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;
            type_description_2 = "o";
            goto try_except_handler_226;
        }
        {
            nuitka_bool tmp_condition_result_452;
            PyObject *tmp_compexpr_left_75;
            PyObject *tmp_compexpr_right_75;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases);
            tmp_compexpr_left_75 = tmp_QtWidgets$class_creation_54__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases_orig);
            tmp_compexpr_right_75 = tmp_QtWidgets$class_creation_54__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_75, tmp_compexpr_right_75);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_226;
            }
            tmp_condition_result_452 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_452 == NUITKA_BOOL_TRUE) {
                goto branch_yes_300;
            } else {
                goto branch_no_300;
            }
            branch_yes_300:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_54__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_419, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_226;
            }
            branch_no_300:;
        }
        {
            PyObject *tmp_assign_source_552;
            PyObject *tmp_called_name_151;
            PyObject *tmp_args_name_149;
            PyObject *tmp_tuple_element_296;
            PyObject *tmp_kw_name_149;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__metaclass);
            tmp_called_name_151 = tmp_QtWidgets$class_creation_54__metaclass;
            tmp_tuple_element_296 = const_str_plain_QListWidgetItem;
            tmp_args_name_149 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_296);
            PyTuple_SET_ITEM(tmp_args_name_149, 0, tmp_tuple_element_296);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__bases);
            tmp_tuple_element_296 = tmp_QtWidgets$class_creation_54__bases;
            Py_INCREF(tmp_tuple_element_296);
            PyTuple_SET_ITEM(tmp_args_name_149, 1, tmp_tuple_element_296);
            tmp_tuple_element_296 = locals_PyQt5$uic$Compiler$qtproxies_419;
            Py_INCREF(tmp_tuple_element_296);
            PyTuple_SET_ITEM(tmp_args_name_149, 2, tmp_tuple_element_296);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_54__class_decl_dict);
            tmp_kw_name_149 = tmp_QtWidgets$class_creation_54__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 419;
            tmp_assign_source_552 = CALL_FUNCTION(tmp_called_name_151, tmp_args_name_149, tmp_kw_name_149);
            Py_DECREF(tmp_args_name_149);
            if (tmp_assign_source_552 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_2 = "o";
                goto try_except_handler_226;
            }
            assert(outline_74_var___class__ == NULL);
            outline_74_var___class__ = tmp_assign_source_552;
        }
        CHECK_OBJECT(outline_74_var___class__);
        tmp_dictset_value = outline_74_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_226;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_226:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_419);
        locals_PyQt5$uic$Compiler$qtproxies_419 = NULL;
        goto try_return_handler_225;
        // Exception handler code:
        try_except_handler_226:;
        exception_keeper_type_221 = exception_type;
        exception_keeper_value_221 = exception_value;
        exception_keeper_tb_221 = exception_tb;
        exception_keeper_lineno_221 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_419);
        locals_PyQt5$uic$Compiler$qtproxies_419 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_221;
        exception_value = exception_keeper_value_221;
        exception_tb = exception_keeper_tb_221;
        exception_lineno = exception_keeper_lineno_221;

        goto try_except_handler_225;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_225:;
        CHECK_OBJECT((PyObject *)outline_74_var___class__);
        Py_DECREF(outline_74_var___class__);
        outline_74_var___class__ = NULL;

        goto outline_result_75;
        // Exception handler code:
        try_except_handler_225:;
        exception_keeper_type_222 = exception_type;
        exception_keeper_value_222 = exception_value;
        exception_keeper_tb_222 = exception_tb;
        exception_keeper_lineno_222 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_222;
        exception_value = exception_keeper_value_222;
        exception_tb = exception_keeper_tb_222;
        exception_lineno = exception_keeper_lineno_222;

        goto outline_exception_75;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_75:;
        exception_lineno = 419;
        goto try_except_handler_224;
        outline_result_75:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QListWidgetItem, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;
            type_description_2 = "o";
            goto try_except_handler_224;
        }
        goto try_end_75;
        // Exception handler code:
        try_except_handler_224:;
        exception_keeper_type_223 = exception_type;
        exception_keeper_value_223 = exception_value;
        exception_keeper_tb_223 = exception_tb;
        exception_keeper_lineno_223 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_54__bases_orig);
        tmp_QtWidgets$class_creation_54__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_54__bases);
        tmp_QtWidgets$class_creation_54__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_54__class_decl_dict);
        tmp_QtWidgets$class_creation_54__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_54__metaclass);
        tmp_QtWidgets$class_creation_54__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_54__prepared);
        tmp_QtWidgets$class_creation_54__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_223;
        exception_value = exception_keeper_value_223;
        exception_tb = exception_keeper_tb_223;
        exception_lineno = exception_keeper_lineno_223;

        goto frame_exception_exit_12;
        // End of try:
        try_end_75:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_54__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_54__bases_orig);
        tmp_QtWidgets$class_creation_54__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_54__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_54__bases);
        tmp_QtWidgets$class_creation_54__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_54__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_54__class_decl_dict);
        tmp_QtWidgets$class_creation_54__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_54__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_54__metaclass);
        tmp_QtWidgets$class_creation_54__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_54__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_54__prepared);
        tmp_QtWidgets$class_creation_54__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_553;
            PyObject *tmp_tuple_element_297;
            PyObject *tmp_mvar_value_66;
            tmp_tuple_element_297 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QListView);

            if (tmp_tuple_element_297 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_66 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QListView);

                    if (unlikely(tmp_mvar_value_66 == NULL)) {
                        tmp_mvar_value_66 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QListView);
                    }

                    if (tmp_mvar_value_66 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1929 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 421;
                        type_description_2 = "o";
                        goto try_except_handler_227;
                    }

                    tmp_tuple_element_297 = tmp_mvar_value_66;
                    Py_INCREF(tmp_tuple_element_297);
                }
            }

            tmp_assign_source_553 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_553, 0, tmp_tuple_element_297);
            assert(tmp_QtWidgets$class_creation_55__bases_orig == NULL);
            tmp_QtWidgets$class_creation_55__bases_orig = tmp_assign_source_553;
        }
        {
            PyObject *tmp_assign_source_554;
            PyObject *tmp_dircall_arg1_76;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases_orig);
            tmp_dircall_arg1_76 = tmp_QtWidgets$class_creation_55__bases_orig;
            Py_INCREF(tmp_dircall_arg1_76);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_76};
                tmp_assign_source_554 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_554 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            assert(tmp_QtWidgets$class_creation_55__bases == NULL);
            tmp_QtWidgets$class_creation_55__bases = tmp_assign_source_554;
        }
        {
            PyObject *tmp_assign_source_555;
            tmp_assign_source_555 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_55__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_55__class_decl_dict = tmp_assign_source_555;
        }
        {
            PyObject *tmp_assign_source_556;
            PyObject *tmp_metaclass_name_76;
            nuitka_bool tmp_condition_result_453;
            PyObject *tmp_key_name_226;
            PyObject *tmp_dict_name_226;
            PyObject *tmp_dict_name_227;
            PyObject *tmp_key_name_227;
            nuitka_bool tmp_condition_result_454;
            int tmp_truth_name_76;
            PyObject *tmp_type_arg_151;
            PyObject *tmp_subscribed_name_76;
            PyObject *tmp_subscript_name_76;
            PyObject *tmp_bases_name_76;
            tmp_key_name_226 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__class_decl_dict);
            tmp_dict_name_226 = tmp_QtWidgets$class_creation_55__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_226, tmp_key_name_226);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            tmp_condition_result_453 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_453 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_153;
            } else {
                goto condexpr_false_153;
            }
            condexpr_true_153:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__class_decl_dict);
            tmp_dict_name_227 = tmp_QtWidgets$class_creation_55__class_decl_dict;
            tmp_key_name_227 = const_str_plain_metaclass;
            tmp_metaclass_name_76 = DICT_GET_ITEM(tmp_dict_name_227, tmp_key_name_227);
            if (tmp_metaclass_name_76 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            goto condexpr_end_153;
            condexpr_false_153:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases);
            tmp_truth_name_76 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_55__bases);
            if (tmp_truth_name_76 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            tmp_condition_result_454 = tmp_truth_name_76 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_454 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_154;
            } else {
                goto condexpr_false_154;
            }
            condexpr_true_154:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases);
            tmp_subscribed_name_76 = tmp_QtWidgets$class_creation_55__bases;
            tmp_subscript_name_76 = const_int_0;
            tmp_type_arg_151 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_76, tmp_subscript_name_76, 0);
            if (tmp_type_arg_151 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            tmp_metaclass_name_76 = BUILTIN_TYPE1(tmp_type_arg_151);
            Py_DECREF(tmp_type_arg_151);
            if (tmp_metaclass_name_76 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            goto condexpr_end_154;
            condexpr_false_154:;
            tmp_metaclass_name_76 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_76);
            condexpr_end_154:;
            condexpr_end_153:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases);
            tmp_bases_name_76 = tmp_QtWidgets$class_creation_55__bases;
            tmp_assign_source_556 = SELECT_METACLASS(tmp_metaclass_name_76, tmp_bases_name_76);
            Py_DECREF(tmp_metaclass_name_76);
            if (tmp_assign_source_556 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            assert(tmp_QtWidgets$class_creation_55__metaclass == NULL);
            tmp_QtWidgets$class_creation_55__metaclass = tmp_assign_source_556;
        }
        {
            nuitka_bool tmp_condition_result_455;
            PyObject *tmp_key_name_228;
            PyObject *tmp_dict_name_228;
            tmp_key_name_228 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__class_decl_dict);
            tmp_dict_name_228 = tmp_QtWidgets$class_creation_55__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_228, tmp_key_name_228);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            tmp_condition_result_455 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_455 == NUITKA_BOOL_TRUE) {
                goto branch_yes_301;
            } else {
                goto branch_no_301;
            }
            branch_yes_301:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_55__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_227;
            }
            branch_no_301:;
        }
        {
            nuitka_bool tmp_condition_result_456;
            PyObject *tmp_source_name_308;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__metaclass);
            tmp_source_name_308 = tmp_QtWidgets$class_creation_55__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_308, const_str_plain___prepare__);
            tmp_condition_result_456 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_456 == NUITKA_BOOL_TRUE) {
                goto branch_yes_302;
            } else {
                goto branch_no_302;
            }
            branch_yes_302:;
            {
                PyObject *tmp_assign_source_557;
                PyObject *tmp_called_name_152;
                PyObject *tmp_source_name_309;
                PyObject *tmp_args_name_150;
                PyObject *tmp_tuple_element_298;
                PyObject *tmp_kw_name_150;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_55__metaclass);
                tmp_source_name_309 = tmp_QtWidgets$class_creation_55__metaclass;
                tmp_called_name_152 = LOOKUP_ATTRIBUTE(tmp_source_name_309, const_str_plain___prepare__);
                if (tmp_called_name_152 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 421;
                    type_description_2 = "o";
                    goto try_except_handler_227;
                }
                tmp_tuple_element_298 = const_str_plain_QListWidget;
                tmp_args_name_150 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_298);
                PyTuple_SET_ITEM(tmp_args_name_150, 0, tmp_tuple_element_298);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases);
                tmp_tuple_element_298 = tmp_QtWidgets$class_creation_55__bases;
                Py_INCREF(tmp_tuple_element_298);
                PyTuple_SET_ITEM(tmp_args_name_150, 1, tmp_tuple_element_298);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_55__class_decl_dict);
                tmp_kw_name_150 = tmp_QtWidgets$class_creation_55__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 421;
                tmp_assign_source_557 = CALL_FUNCTION(tmp_called_name_152, tmp_args_name_150, tmp_kw_name_150);
                Py_DECREF(tmp_called_name_152);
                Py_DECREF(tmp_args_name_150);
                if (tmp_assign_source_557 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 421;
                    type_description_2 = "o";
                    goto try_except_handler_227;
                }
                assert(tmp_QtWidgets$class_creation_55__prepared == NULL);
                tmp_QtWidgets$class_creation_55__prepared = tmp_assign_source_557;
            }
            {
                nuitka_bool tmp_condition_result_457;
                PyObject *tmp_operand_name_76;
                PyObject *tmp_source_name_310;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_55__prepared);
                tmp_source_name_310 = tmp_QtWidgets$class_creation_55__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_310, const_str_plain___getitem__);
                tmp_operand_name_76 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_76);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 421;
                    type_description_2 = "o";
                    goto try_except_handler_227;
                }
                tmp_condition_result_457 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_457 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_303;
                } else {
                    goto branch_no_303;
                }
                branch_yes_303:;
                {
                    PyObject *tmp_raise_type_76;
                    PyObject *tmp_raise_value_76;
                    PyObject *tmp_left_name_76;
                    PyObject *tmp_right_name_76;
                    PyObject *tmp_tuple_element_299;
                    PyObject *tmp_getattr_target_76;
                    PyObject *tmp_getattr_attr_76;
                    PyObject *tmp_getattr_default_76;
                    PyObject *tmp_source_name_311;
                    PyObject *tmp_type_arg_152;
                    tmp_raise_type_76 = PyExc_TypeError;
                    tmp_left_name_76 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_55__metaclass);
                    tmp_getattr_target_76 = tmp_QtWidgets$class_creation_55__metaclass;
                    tmp_getattr_attr_76 = const_str_plain___name__;
                    tmp_getattr_default_76 = const_str_angle_metaclass;
                    tmp_tuple_element_299 = BUILTIN_GETATTR(tmp_getattr_target_76, tmp_getattr_attr_76, tmp_getattr_default_76);
                    if (tmp_tuple_element_299 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 421;
                        type_description_2 = "o";
                        goto try_except_handler_227;
                    }
                    tmp_right_name_76 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_76, 0, tmp_tuple_element_299);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_55__prepared);
                    tmp_type_arg_152 = tmp_QtWidgets$class_creation_55__prepared;
                    tmp_source_name_311 = BUILTIN_TYPE1(tmp_type_arg_152);
                    assert(!(tmp_source_name_311 == NULL));
                    tmp_tuple_element_299 = LOOKUP_ATTRIBUTE(tmp_source_name_311, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_311);
                    if (tmp_tuple_element_299 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_76);

                        exception_lineno = 421;
                        type_description_2 = "o";
                        goto try_except_handler_227;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_76, 1, tmp_tuple_element_299);
                    tmp_raise_value_76 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_76, tmp_right_name_76);
                    Py_DECREF(tmp_right_name_76);
                    if (tmp_raise_value_76 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 421;
                        type_description_2 = "o";
                        goto try_except_handler_227;
                    }
                    exception_type = tmp_raise_type_76;
                    Py_INCREF(tmp_raise_type_76);
                    exception_value = tmp_raise_value_76;
                    exception_lineno = 421;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_227;
                }
                branch_no_303:;
            }
            goto branch_end_302;
            branch_no_302:;
            {
                PyObject *tmp_assign_source_558;
                tmp_assign_source_558 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_55__prepared == NULL);
                tmp_QtWidgets$class_creation_55__prepared = tmp_assign_source_558;
            }
            branch_end_302:;
        }
        {
            PyObject *tmp_set_locals_76;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__prepared);
            tmp_set_locals_76 = tmp_QtWidgets$class_creation_55__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_421 = tmp_set_locals_76;
            Py_INCREF(tmp_set_locals_76);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 421;
            type_description_2 = "o";
            goto try_except_handler_229;
        }
        tmp_dictset_value = const_str_digest_2f6d3749ee4d642bfa28f5311b8ba1b7;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 421;
            type_description_2 = "o";
            goto try_except_handler_229;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_677ae2976b24110d4f56789d42886e8b_21, codeobj_677ae2976b24110d4f56789d42886e8b, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_677ae2976b24110d4f56789d42886e8b_21 = cache_frame_677ae2976b24110d4f56789d42886e8b_21;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_677ae2976b24110d4f56789d42886e8b_21);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_677ae2976b24110d4f56789d42886e8b_21) == 2); // Frame stack

        // Framed code:
        {
            PyObject *tmp_called_name_153;
            PyObject *tmp_mvar_value_67;
            tmp_called_name_153 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain_i18n_void_func);

            if (tmp_called_name_153 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_67 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_void_func);

                    if (unlikely(tmp_mvar_value_67 == NULL)) {
                        tmp_mvar_value_67 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_void_func);
                    }

                    if (tmp_mvar_value_67 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1960 ], 36, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 422;
                        type_description_3 = "o";
                        goto frame_exception_exit_21;
                    }

                    tmp_called_name_153 = tmp_mvar_value_67;
                    Py_INCREF(tmp_called_name_153);
                }
            }

            frame_677ae2976b24110d4f56789d42886e8b_21->m_frame.f_lineno = 422;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_153, &PyTuple_GET_ITEM(const_tuple_str_plain_setSortingEnabled_tuple, 0));

            Py_DECREF(tmp_called_name_153);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 422;
                type_description_3 = "o";
                goto frame_exception_exit_21;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain_setSortingEnabled, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 422;
                type_description_3 = "o";
                goto frame_exception_exit_21;
            }
        }
        {
            PyObject *tmp_called_name_154;
            PyObject *tmp_mvar_value_68;
            tmp_called_name_154 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain_i18n_func);

            if (tmp_called_name_154 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_68 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func);

                    if (unlikely(tmp_mvar_value_68 == NULL)) {
                        tmp_mvar_value_68 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_func);
                    }

                    if (tmp_mvar_value_68 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1996 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 423;
                        type_description_3 = "o";
                        goto frame_exception_exit_21;
                    }

                    tmp_called_name_154 = tmp_mvar_value_68;
                    Py_INCREF(tmp_called_name_154);
                }
            }

            frame_677ae2976b24110d4f56789d42886e8b_21->m_frame.f_lineno = 423;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_154, &PyTuple_GET_ITEM(const_tuple_str_plain_isSortingEnabled_tuple, 0));

            Py_DECREF(tmp_called_name_154);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_3 = "o";
                goto frame_exception_exit_21;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain_isSortingEnabled, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_3 = "o";
                goto frame_exception_exit_21;
            }
        }
        {
            PyObject *tmp_called_name_155;
            PyObject *tmp_mvar_value_69;
            tmp_called_name_155 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain_i18n_func);

            if (tmp_called_name_155 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_69 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func);

                    if (unlikely(tmp_mvar_value_69 == NULL)) {
                        tmp_mvar_value_69 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_func);
                    }

                    if (tmp_mvar_value_69 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1996 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 424;
                        type_description_3 = "o";
                        goto frame_exception_exit_21;
                    }

                    tmp_called_name_155 = tmp_mvar_value_69;
                    Py_INCREF(tmp_called_name_155);
                }
            }

            frame_677ae2976b24110d4f56789d42886e8b_21->m_frame.f_lineno = 424;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_155, &PyTuple_GET_ITEM(const_tuple_str_plain_item_tuple, 0));

            Py_DECREF(tmp_called_name_155);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 424;
                type_description_3 = "o";
                goto frame_exception_exit_21;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain_item, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 424;
                type_description_3 = "o";
                goto frame_exception_exit_21;
            }
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_677ae2976b24110d4f56789d42886e8b_21);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_19;

        frame_exception_exit_21:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_677ae2976b24110d4f56789d42886e8b_21);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_677ae2976b24110d4f56789d42886e8b_21, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_677ae2976b24110d4f56789d42886e8b_21->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_677ae2976b24110d4f56789d42886e8b_21, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_677ae2976b24110d4f56789d42886e8b_21,
            type_description_3,
            outline_75_var___class__
        );


        // Release cached frame.
        if (frame_677ae2976b24110d4f56789d42886e8b_21 == cache_frame_677ae2976b24110d4f56789d42886e8b_21) {
            Py_DECREF(frame_677ae2976b24110d4f56789d42886e8b_21);
        }
        cache_frame_677ae2976b24110d4f56789d42886e8b_21 = NULL;

        assertFrameObject(frame_677ae2976b24110d4f56789d42886e8b_21);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_20;

        frame_no_exception_19:;
        goto skip_nested_handling_19;
        nested_frame_exit_20:;
        type_description_2 = "o";
        goto try_except_handler_229;
        skip_nested_handling_19:;
        {
            nuitka_bool tmp_condition_result_458;
            PyObject *tmp_compexpr_left_76;
            PyObject *tmp_compexpr_right_76;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases);
            tmp_compexpr_left_76 = tmp_QtWidgets$class_creation_55__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases_orig);
            tmp_compexpr_right_76 = tmp_QtWidgets$class_creation_55__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_76, tmp_compexpr_right_76);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_229;
            }
            tmp_condition_result_458 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_458 == NUITKA_BOOL_TRUE) {
                goto branch_yes_304;
            } else {
                goto branch_no_304;
            }
            branch_yes_304:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_55__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_421, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_229;
            }
            branch_no_304:;
        }
        {
            PyObject *tmp_assign_source_559;
            PyObject *tmp_called_name_156;
            PyObject *tmp_args_name_151;
            PyObject *tmp_tuple_element_300;
            PyObject *tmp_kw_name_151;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__metaclass);
            tmp_called_name_156 = tmp_QtWidgets$class_creation_55__metaclass;
            tmp_tuple_element_300 = const_str_plain_QListWidget;
            tmp_args_name_151 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_300);
            PyTuple_SET_ITEM(tmp_args_name_151, 0, tmp_tuple_element_300);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__bases);
            tmp_tuple_element_300 = tmp_QtWidgets$class_creation_55__bases;
            Py_INCREF(tmp_tuple_element_300);
            PyTuple_SET_ITEM(tmp_args_name_151, 1, tmp_tuple_element_300);
            tmp_tuple_element_300 = locals_PyQt5$uic$Compiler$qtproxies_421;
            Py_INCREF(tmp_tuple_element_300);
            PyTuple_SET_ITEM(tmp_args_name_151, 2, tmp_tuple_element_300);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_55__class_decl_dict);
            tmp_kw_name_151 = tmp_QtWidgets$class_creation_55__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 421;
            tmp_assign_source_559 = CALL_FUNCTION(tmp_called_name_156, tmp_args_name_151, tmp_kw_name_151);
            Py_DECREF(tmp_args_name_151);
            if (tmp_assign_source_559 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_2 = "o";
                goto try_except_handler_229;
            }
            assert(outline_75_var___class__ == NULL);
            outline_75_var___class__ = tmp_assign_source_559;
        }
        CHECK_OBJECT(outline_75_var___class__);
        tmp_dictset_value = outline_75_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_229;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_229:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_421);
        locals_PyQt5$uic$Compiler$qtproxies_421 = NULL;
        goto try_return_handler_228;
        // Exception handler code:
        try_except_handler_229:;
        exception_keeper_type_224 = exception_type;
        exception_keeper_value_224 = exception_value;
        exception_keeper_tb_224 = exception_tb;
        exception_keeper_lineno_224 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_421);
        locals_PyQt5$uic$Compiler$qtproxies_421 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_224;
        exception_value = exception_keeper_value_224;
        exception_tb = exception_keeper_tb_224;
        exception_lineno = exception_keeper_lineno_224;

        goto try_except_handler_228;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_228:;
        CHECK_OBJECT((PyObject *)outline_75_var___class__);
        Py_DECREF(outline_75_var___class__);
        outline_75_var___class__ = NULL;

        goto outline_result_76;
        // Exception handler code:
        try_except_handler_228:;
        exception_keeper_type_225 = exception_type;
        exception_keeper_value_225 = exception_value;
        exception_keeper_tb_225 = exception_tb;
        exception_keeper_lineno_225 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_225;
        exception_value = exception_keeper_value_225;
        exception_tb = exception_keeper_tb_225;
        exception_lineno = exception_keeper_lineno_225;

        goto outline_exception_76;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_76:;
        exception_lineno = 421;
        goto try_except_handler_227;
        outline_result_76:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QListWidget, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 421;
            type_description_2 = "o";
            goto try_except_handler_227;
        }
        goto try_end_76;
        // Exception handler code:
        try_except_handler_227:;
        exception_keeper_type_226 = exception_type;
        exception_keeper_value_226 = exception_value;
        exception_keeper_tb_226 = exception_tb;
        exception_keeper_lineno_226 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_55__bases_orig);
        tmp_QtWidgets$class_creation_55__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_55__bases);
        tmp_QtWidgets$class_creation_55__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_55__class_decl_dict);
        tmp_QtWidgets$class_creation_55__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_55__metaclass);
        tmp_QtWidgets$class_creation_55__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_55__prepared);
        tmp_QtWidgets$class_creation_55__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_226;
        exception_value = exception_keeper_value_226;
        exception_tb = exception_keeper_tb_226;
        exception_lineno = exception_keeper_lineno_226;

        goto frame_exception_exit_12;
        // End of try:
        try_end_76:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_55__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_55__bases_orig);
        tmp_QtWidgets$class_creation_55__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_55__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_55__bases);
        tmp_QtWidgets$class_creation_55__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_55__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_55__class_decl_dict);
        tmp_QtWidgets$class_creation_55__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_55__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_55__metaclass);
        tmp_QtWidgets$class_creation_55__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_55__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_55__prepared);
        tmp_QtWidgets$class_creation_55__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_560;
            PyObject *tmp_tuple_element_301;
            PyObject *tmp_mvar_value_70;
            tmp_tuple_element_301 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_ProxyClass);

            if (tmp_tuple_element_301 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_70 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_70 == NULL)) {
                        tmp_mvar_value_70 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_70 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 426;
                        type_description_2 = "o";
                        goto try_except_handler_230;
                    }

                    tmp_tuple_element_301 = tmp_mvar_value_70;
                    Py_INCREF(tmp_tuple_element_301);
                }
            }

            tmp_assign_source_560 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_560, 0, tmp_tuple_element_301);
            assert(tmp_QtWidgets$class_creation_56__bases_orig == NULL);
            tmp_QtWidgets$class_creation_56__bases_orig = tmp_assign_source_560;
        }
        {
            PyObject *tmp_assign_source_561;
            PyObject *tmp_dircall_arg1_77;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases_orig);
            tmp_dircall_arg1_77 = tmp_QtWidgets$class_creation_56__bases_orig;
            Py_INCREF(tmp_dircall_arg1_77);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_77};
                tmp_assign_source_561 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_561 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            assert(tmp_QtWidgets$class_creation_56__bases == NULL);
            tmp_QtWidgets$class_creation_56__bases = tmp_assign_source_561;
        }
        {
            PyObject *tmp_assign_source_562;
            tmp_assign_source_562 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_56__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_56__class_decl_dict = tmp_assign_source_562;
        }
        {
            PyObject *tmp_assign_source_563;
            PyObject *tmp_metaclass_name_77;
            nuitka_bool tmp_condition_result_459;
            PyObject *tmp_key_name_229;
            PyObject *tmp_dict_name_229;
            PyObject *tmp_dict_name_230;
            PyObject *tmp_key_name_230;
            nuitka_bool tmp_condition_result_460;
            int tmp_truth_name_77;
            PyObject *tmp_type_arg_153;
            PyObject *tmp_subscribed_name_77;
            PyObject *tmp_subscript_name_77;
            PyObject *tmp_bases_name_77;
            tmp_key_name_229 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__class_decl_dict);
            tmp_dict_name_229 = tmp_QtWidgets$class_creation_56__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_229, tmp_key_name_229);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            tmp_condition_result_459 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_459 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_155;
            } else {
                goto condexpr_false_155;
            }
            condexpr_true_155:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__class_decl_dict);
            tmp_dict_name_230 = tmp_QtWidgets$class_creation_56__class_decl_dict;
            tmp_key_name_230 = const_str_plain_metaclass;
            tmp_metaclass_name_77 = DICT_GET_ITEM(tmp_dict_name_230, tmp_key_name_230);
            if (tmp_metaclass_name_77 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            goto condexpr_end_155;
            condexpr_false_155:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases);
            tmp_truth_name_77 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_56__bases);
            if (tmp_truth_name_77 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            tmp_condition_result_460 = tmp_truth_name_77 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_460 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_156;
            } else {
                goto condexpr_false_156;
            }
            condexpr_true_156:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases);
            tmp_subscribed_name_77 = tmp_QtWidgets$class_creation_56__bases;
            tmp_subscript_name_77 = const_int_0;
            tmp_type_arg_153 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_77, tmp_subscript_name_77, 0);
            if (tmp_type_arg_153 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            tmp_metaclass_name_77 = BUILTIN_TYPE1(tmp_type_arg_153);
            Py_DECREF(tmp_type_arg_153);
            if (tmp_metaclass_name_77 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            goto condexpr_end_156;
            condexpr_false_156:;
            tmp_metaclass_name_77 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_77);
            condexpr_end_156:;
            condexpr_end_155:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases);
            tmp_bases_name_77 = tmp_QtWidgets$class_creation_56__bases;
            tmp_assign_source_563 = SELECT_METACLASS(tmp_metaclass_name_77, tmp_bases_name_77);
            Py_DECREF(tmp_metaclass_name_77);
            if (tmp_assign_source_563 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            assert(tmp_QtWidgets$class_creation_56__metaclass == NULL);
            tmp_QtWidgets$class_creation_56__metaclass = tmp_assign_source_563;
        }
        {
            nuitka_bool tmp_condition_result_461;
            PyObject *tmp_key_name_231;
            PyObject *tmp_dict_name_231;
            tmp_key_name_231 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__class_decl_dict);
            tmp_dict_name_231 = tmp_QtWidgets$class_creation_56__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_231, tmp_key_name_231);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            tmp_condition_result_461 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_461 == NUITKA_BOOL_TRUE) {
                goto branch_yes_305;
            } else {
                goto branch_no_305;
            }
            branch_yes_305:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_56__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_230;
            }
            branch_no_305:;
        }
        {
            nuitka_bool tmp_condition_result_462;
            PyObject *tmp_source_name_312;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__metaclass);
            tmp_source_name_312 = tmp_QtWidgets$class_creation_56__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_312, const_str_plain___prepare__);
            tmp_condition_result_462 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_462 == NUITKA_BOOL_TRUE) {
                goto branch_yes_306;
            } else {
                goto branch_no_306;
            }
            branch_yes_306:;
            {
                PyObject *tmp_assign_source_564;
                PyObject *tmp_called_name_157;
                PyObject *tmp_source_name_313;
                PyObject *tmp_args_name_152;
                PyObject *tmp_tuple_element_302;
                PyObject *tmp_kw_name_152;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_56__metaclass);
                tmp_source_name_313 = tmp_QtWidgets$class_creation_56__metaclass;
                tmp_called_name_157 = LOOKUP_ATTRIBUTE(tmp_source_name_313, const_str_plain___prepare__);
                if (tmp_called_name_157 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 426;
                    type_description_2 = "o";
                    goto try_except_handler_230;
                }
                tmp_tuple_element_302 = const_str_plain_QTableWidgetItem;
                tmp_args_name_152 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_302);
                PyTuple_SET_ITEM(tmp_args_name_152, 0, tmp_tuple_element_302);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases);
                tmp_tuple_element_302 = tmp_QtWidgets$class_creation_56__bases;
                Py_INCREF(tmp_tuple_element_302);
                PyTuple_SET_ITEM(tmp_args_name_152, 1, tmp_tuple_element_302);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_56__class_decl_dict);
                tmp_kw_name_152 = tmp_QtWidgets$class_creation_56__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 426;
                tmp_assign_source_564 = CALL_FUNCTION(tmp_called_name_157, tmp_args_name_152, tmp_kw_name_152);
                Py_DECREF(tmp_called_name_157);
                Py_DECREF(tmp_args_name_152);
                if (tmp_assign_source_564 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 426;
                    type_description_2 = "o";
                    goto try_except_handler_230;
                }
                assert(tmp_QtWidgets$class_creation_56__prepared == NULL);
                tmp_QtWidgets$class_creation_56__prepared = tmp_assign_source_564;
            }
            {
                nuitka_bool tmp_condition_result_463;
                PyObject *tmp_operand_name_77;
                PyObject *tmp_source_name_314;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_56__prepared);
                tmp_source_name_314 = tmp_QtWidgets$class_creation_56__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_314, const_str_plain___getitem__);
                tmp_operand_name_77 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_77);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 426;
                    type_description_2 = "o";
                    goto try_except_handler_230;
                }
                tmp_condition_result_463 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_463 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_307;
                } else {
                    goto branch_no_307;
                }
                branch_yes_307:;
                {
                    PyObject *tmp_raise_type_77;
                    PyObject *tmp_raise_value_77;
                    PyObject *tmp_left_name_77;
                    PyObject *tmp_right_name_77;
                    PyObject *tmp_tuple_element_303;
                    PyObject *tmp_getattr_target_77;
                    PyObject *tmp_getattr_attr_77;
                    PyObject *tmp_getattr_default_77;
                    PyObject *tmp_source_name_315;
                    PyObject *tmp_type_arg_154;
                    tmp_raise_type_77 = PyExc_TypeError;
                    tmp_left_name_77 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_56__metaclass);
                    tmp_getattr_target_77 = tmp_QtWidgets$class_creation_56__metaclass;
                    tmp_getattr_attr_77 = const_str_plain___name__;
                    tmp_getattr_default_77 = const_str_angle_metaclass;
                    tmp_tuple_element_303 = BUILTIN_GETATTR(tmp_getattr_target_77, tmp_getattr_attr_77, tmp_getattr_default_77);
                    if (tmp_tuple_element_303 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 426;
                        type_description_2 = "o";
                        goto try_except_handler_230;
                    }
                    tmp_right_name_77 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_77, 0, tmp_tuple_element_303);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_56__prepared);
                    tmp_type_arg_154 = tmp_QtWidgets$class_creation_56__prepared;
                    tmp_source_name_315 = BUILTIN_TYPE1(tmp_type_arg_154);
                    assert(!(tmp_source_name_315 == NULL));
                    tmp_tuple_element_303 = LOOKUP_ATTRIBUTE(tmp_source_name_315, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_315);
                    if (tmp_tuple_element_303 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_77);

                        exception_lineno = 426;
                        type_description_2 = "o";
                        goto try_except_handler_230;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_77, 1, tmp_tuple_element_303);
                    tmp_raise_value_77 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_77, tmp_right_name_77);
                    Py_DECREF(tmp_right_name_77);
                    if (tmp_raise_value_77 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 426;
                        type_description_2 = "o";
                        goto try_except_handler_230;
                    }
                    exception_type = tmp_raise_type_77;
                    Py_INCREF(tmp_raise_type_77);
                    exception_value = tmp_raise_value_77;
                    exception_lineno = 426;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_230;
                }
                branch_no_307:;
            }
            goto branch_end_306;
            branch_no_306:;
            {
                PyObject *tmp_assign_source_565;
                tmp_assign_source_565 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_56__prepared == NULL);
                tmp_QtWidgets$class_creation_56__prepared = tmp_assign_source_565;
            }
            branch_end_306:;
        }
        {
            PyObject *tmp_set_locals_77;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__prepared);
            tmp_set_locals_77 = tmp_QtWidgets$class_creation_56__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_426 = tmp_set_locals_77;
            Py_INCREF(tmp_set_locals_77);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_426, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 426;
            type_description_2 = "o";
            goto try_except_handler_232;
        }
        tmp_dictset_value = const_str_digest_4affdb4cc5ab447930b1364346a5bdfe;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_426, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 426;
            type_description_2 = "o";
            goto try_except_handler_232;
        }
        {
            nuitka_bool tmp_condition_result_464;
            PyObject *tmp_compexpr_left_77;
            PyObject *tmp_compexpr_right_77;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases);
            tmp_compexpr_left_77 = tmp_QtWidgets$class_creation_56__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases_orig);
            tmp_compexpr_right_77 = tmp_QtWidgets$class_creation_56__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_77, tmp_compexpr_right_77);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_232;
            }
            tmp_condition_result_464 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_464 == NUITKA_BOOL_TRUE) {
                goto branch_yes_308;
            } else {
                goto branch_no_308;
            }
            branch_yes_308:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_56__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_426, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_232;
            }
            branch_no_308:;
        }
        {
            PyObject *tmp_assign_source_566;
            PyObject *tmp_called_name_158;
            PyObject *tmp_args_name_153;
            PyObject *tmp_tuple_element_304;
            PyObject *tmp_kw_name_153;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__metaclass);
            tmp_called_name_158 = tmp_QtWidgets$class_creation_56__metaclass;
            tmp_tuple_element_304 = const_str_plain_QTableWidgetItem;
            tmp_args_name_153 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_304);
            PyTuple_SET_ITEM(tmp_args_name_153, 0, tmp_tuple_element_304);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__bases);
            tmp_tuple_element_304 = tmp_QtWidgets$class_creation_56__bases;
            Py_INCREF(tmp_tuple_element_304);
            PyTuple_SET_ITEM(tmp_args_name_153, 1, tmp_tuple_element_304);
            tmp_tuple_element_304 = locals_PyQt5$uic$Compiler$qtproxies_426;
            Py_INCREF(tmp_tuple_element_304);
            PyTuple_SET_ITEM(tmp_args_name_153, 2, tmp_tuple_element_304);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_56__class_decl_dict);
            tmp_kw_name_153 = tmp_QtWidgets$class_creation_56__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 426;
            tmp_assign_source_566 = CALL_FUNCTION(tmp_called_name_158, tmp_args_name_153, tmp_kw_name_153);
            Py_DECREF(tmp_args_name_153);
            if (tmp_assign_source_566 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_2 = "o";
                goto try_except_handler_232;
            }
            assert(outline_76_var___class__ == NULL);
            outline_76_var___class__ = tmp_assign_source_566;
        }
        CHECK_OBJECT(outline_76_var___class__);
        tmp_dictset_value = outline_76_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_232;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_232:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_426);
        locals_PyQt5$uic$Compiler$qtproxies_426 = NULL;
        goto try_return_handler_231;
        // Exception handler code:
        try_except_handler_232:;
        exception_keeper_type_227 = exception_type;
        exception_keeper_value_227 = exception_value;
        exception_keeper_tb_227 = exception_tb;
        exception_keeper_lineno_227 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_426);
        locals_PyQt5$uic$Compiler$qtproxies_426 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_227;
        exception_value = exception_keeper_value_227;
        exception_tb = exception_keeper_tb_227;
        exception_lineno = exception_keeper_lineno_227;

        goto try_except_handler_231;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_231:;
        CHECK_OBJECT((PyObject *)outline_76_var___class__);
        Py_DECREF(outline_76_var___class__);
        outline_76_var___class__ = NULL;

        goto outline_result_77;
        // Exception handler code:
        try_except_handler_231:;
        exception_keeper_type_228 = exception_type;
        exception_keeper_value_228 = exception_value;
        exception_keeper_tb_228 = exception_tb;
        exception_keeper_lineno_228 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_228;
        exception_value = exception_keeper_value_228;
        exception_tb = exception_keeper_tb_228;
        exception_lineno = exception_keeper_lineno_228;

        goto outline_exception_77;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_77:;
        exception_lineno = 426;
        goto try_except_handler_230;
        outline_result_77:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTableWidgetItem, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 426;
            type_description_2 = "o";
            goto try_except_handler_230;
        }
        goto try_end_77;
        // Exception handler code:
        try_except_handler_230:;
        exception_keeper_type_229 = exception_type;
        exception_keeper_value_229 = exception_value;
        exception_keeper_tb_229 = exception_tb;
        exception_keeper_lineno_229 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_56__bases_orig);
        tmp_QtWidgets$class_creation_56__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_56__bases);
        tmp_QtWidgets$class_creation_56__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_56__class_decl_dict);
        tmp_QtWidgets$class_creation_56__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_56__metaclass);
        tmp_QtWidgets$class_creation_56__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_56__prepared);
        tmp_QtWidgets$class_creation_56__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_229;
        exception_value = exception_keeper_value_229;
        exception_tb = exception_keeper_tb_229;
        exception_lineno = exception_keeper_lineno_229;

        goto frame_exception_exit_12;
        // End of try:
        try_end_77:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_56__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_56__bases_orig);
        tmp_QtWidgets$class_creation_56__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_56__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_56__bases);
        tmp_QtWidgets$class_creation_56__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_56__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_56__class_decl_dict);
        tmp_QtWidgets$class_creation_56__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_56__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_56__metaclass);
        tmp_QtWidgets$class_creation_56__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_56__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_56__prepared);
        tmp_QtWidgets$class_creation_56__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_567;
            PyObject *tmp_tuple_element_305;
            PyObject *tmp_mvar_value_71;
            tmp_tuple_element_305 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTableView);

            if (tmp_tuple_element_305 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_71 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QTableView);

                    if (unlikely(tmp_mvar_value_71 == NULL)) {
                        tmp_mvar_value_71 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QTableView);
                    }

                    if (tmp_mvar_value_71 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 2027 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 428;
                        type_description_2 = "o";
                        goto try_except_handler_233;
                    }

                    tmp_tuple_element_305 = tmp_mvar_value_71;
                    Py_INCREF(tmp_tuple_element_305);
                }
            }

            tmp_assign_source_567 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_567, 0, tmp_tuple_element_305);
            assert(tmp_QtWidgets$class_creation_57__bases_orig == NULL);
            tmp_QtWidgets$class_creation_57__bases_orig = tmp_assign_source_567;
        }
        {
            PyObject *tmp_assign_source_568;
            PyObject *tmp_dircall_arg1_78;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases_orig);
            tmp_dircall_arg1_78 = tmp_QtWidgets$class_creation_57__bases_orig;
            Py_INCREF(tmp_dircall_arg1_78);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_78};
                tmp_assign_source_568 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_568 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            assert(tmp_QtWidgets$class_creation_57__bases == NULL);
            tmp_QtWidgets$class_creation_57__bases = tmp_assign_source_568;
        }
        {
            PyObject *tmp_assign_source_569;
            tmp_assign_source_569 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_57__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_57__class_decl_dict = tmp_assign_source_569;
        }
        {
            PyObject *tmp_assign_source_570;
            PyObject *tmp_metaclass_name_78;
            nuitka_bool tmp_condition_result_465;
            PyObject *tmp_key_name_232;
            PyObject *tmp_dict_name_232;
            PyObject *tmp_dict_name_233;
            PyObject *tmp_key_name_233;
            nuitka_bool tmp_condition_result_466;
            int tmp_truth_name_78;
            PyObject *tmp_type_arg_155;
            PyObject *tmp_subscribed_name_78;
            PyObject *tmp_subscript_name_78;
            PyObject *tmp_bases_name_78;
            tmp_key_name_232 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__class_decl_dict);
            tmp_dict_name_232 = tmp_QtWidgets$class_creation_57__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_232, tmp_key_name_232);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            tmp_condition_result_465 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_465 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_157;
            } else {
                goto condexpr_false_157;
            }
            condexpr_true_157:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__class_decl_dict);
            tmp_dict_name_233 = tmp_QtWidgets$class_creation_57__class_decl_dict;
            tmp_key_name_233 = const_str_plain_metaclass;
            tmp_metaclass_name_78 = DICT_GET_ITEM(tmp_dict_name_233, tmp_key_name_233);
            if (tmp_metaclass_name_78 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            goto condexpr_end_157;
            condexpr_false_157:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases);
            tmp_truth_name_78 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_57__bases);
            if (tmp_truth_name_78 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            tmp_condition_result_466 = tmp_truth_name_78 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_466 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_158;
            } else {
                goto condexpr_false_158;
            }
            condexpr_true_158:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases);
            tmp_subscribed_name_78 = tmp_QtWidgets$class_creation_57__bases;
            tmp_subscript_name_78 = const_int_0;
            tmp_type_arg_155 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_78, tmp_subscript_name_78, 0);
            if (tmp_type_arg_155 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            tmp_metaclass_name_78 = BUILTIN_TYPE1(tmp_type_arg_155);
            Py_DECREF(tmp_type_arg_155);
            if (tmp_metaclass_name_78 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            goto condexpr_end_158;
            condexpr_false_158:;
            tmp_metaclass_name_78 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_78);
            condexpr_end_158:;
            condexpr_end_157:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases);
            tmp_bases_name_78 = tmp_QtWidgets$class_creation_57__bases;
            tmp_assign_source_570 = SELECT_METACLASS(tmp_metaclass_name_78, tmp_bases_name_78);
            Py_DECREF(tmp_metaclass_name_78);
            if (tmp_assign_source_570 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            assert(tmp_QtWidgets$class_creation_57__metaclass == NULL);
            tmp_QtWidgets$class_creation_57__metaclass = tmp_assign_source_570;
        }
        {
            nuitka_bool tmp_condition_result_467;
            PyObject *tmp_key_name_234;
            PyObject *tmp_dict_name_234;
            tmp_key_name_234 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__class_decl_dict);
            tmp_dict_name_234 = tmp_QtWidgets$class_creation_57__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_234, tmp_key_name_234);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            tmp_condition_result_467 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_467 == NUITKA_BOOL_TRUE) {
                goto branch_yes_309;
            } else {
                goto branch_no_309;
            }
            branch_yes_309:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_57__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_233;
            }
            branch_no_309:;
        }
        {
            nuitka_bool tmp_condition_result_468;
            PyObject *tmp_source_name_316;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__metaclass);
            tmp_source_name_316 = tmp_QtWidgets$class_creation_57__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_316, const_str_plain___prepare__);
            tmp_condition_result_468 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_468 == NUITKA_BOOL_TRUE) {
                goto branch_yes_310;
            } else {
                goto branch_no_310;
            }
            branch_yes_310:;
            {
                PyObject *tmp_assign_source_571;
                PyObject *tmp_called_name_159;
                PyObject *tmp_source_name_317;
                PyObject *tmp_args_name_154;
                PyObject *tmp_tuple_element_306;
                PyObject *tmp_kw_name_154;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_57__metaclass);
                tmp_source_name_317 = tmp_QtWidgets$class_creation_57__metaclass;
                tmp_called_name_159 = LOOKUP_ATTRIBUTE(tmp_source_name_317, const_str_plain___prepare__);
                if (tmp_called_name_159 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 428;
                    type_description_2 = "o";
                    goto try_except_handler_233;
                }
                tmp_tuple_element_306 = const_str_plain_QTableWidget;
                tmp_args_name_154 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_306);
                PyTuple_SET_ITEM(tmp_args_name_154, 0, tmp_tuple_element_306);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases);
                tmp_tuple_element_306 = tmp_QtWidgets$class_creation_57__bases;
                Py_INCREF(tmp_tuple_element_306);
                PyTuple_SET_ITEM(tmp_args_name_154, 1, tmp_tuple_element_306);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_57__class_decl_dict);
                tmp_kw_name_154 = tmp_QtWidgets$class_creation_57__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 428;
                tmp_assign_source_571 = CALL_FUNCTION(tmp_called_name_159, tmp_args_name_154, tmp_kw_name_154);
                Py_DECREF(tmp_called_name_159);
                Py_DECREF(tmp_args_name_154);
                if (tmp_assign_source_571 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 428;
                    type_description_2 = "o";
                    goto try_except_handler_233;
                }
                assert(tmp_QtWidgets$class_creation_57__prepared == NULL);
                tmp_QtWidgets$class_creation_57__prepared = tmp_assign_source_571;
            }
            {
                nuitka_bool tmp_condition_result_469;
                PyObject *tmp_operand_name_78;
                PyObject *tmp_source_name_318;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_57__prepared);
                tmp_source_name_318 = tmp_QtWidgets$class_creation_57__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_318, const_str_plain___getitem__);
                tmp_operand_name_78 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_78);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 428;
                    type_description_2 = "o";
                    goto try_except_handler_233;
                }
                tmp_condition_result_469 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_469 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_311;
                } else {
                    goto branch_no_311;
                }
                branch_yes_311:;
                {
                    PyObject *tmp_raise_type_78;
                    PyObject *tmp_raise_value_78;
                    PyObject *tmp_left_name_78;
                    PyObject *tmp_right_name_78;
                    PyObject *tmp_tuple_element_307;
                    PyObject *tmp_getattr_target_78;
                    PyObject *tmp_getattr_attr_78;
                    PyObject *tmp_getattr_default_78;
                    PyObject *tmp_source_name_319;
                    PyObject *tmp_type_arg_156;
                    tmp_raise_type_78 = PyExc_TypeError;
                    tmp_left_name_78 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_57__metaclass);
                    tmp_getattr_target_78 = tmp_QtWidgets$class_creation_57__metaclass;
                    tmp_getattr_attr_78 = const_str_plain___name__;
                    tmp_getattr_default_78 = const_str_angle_metaclass;
                    tmp_tuple_element_307 = BUILTIN_GETATTR(tmp_getattr_target_78, tmp_getattr_attr_78, tmp_getattr_default_78);
                    if (tmp_tuple_element_307 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 428;
                        type_description_2 = "o";
                        goto try_except_handler_233;
                    }
                    tmp_right_name_78 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_78, 0, tmp_tuple_element_307);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_57__prepared);
                    tmp_type_arg_156 = tmp_QtWidgets$class_creation_57__prepared;
                    tmp_source_name_319 = BUILTIN_TYPE1(tmp_type_arg_156);
                    assert(!(tmp_source_name_319 == NULL));
                    tmp_tuple_element_307 = LOOKUP_ATTRIBUTE(tmp_source_name_319, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_319);
                    if (tmp_tuple_element_307 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_78);

                        exception_lineno = 428;
                        type_description_2 = "o";
                        goto try_except_handler_233;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_78, 1, tmp_tuple_element_307);
                    tmp_raise_value_78 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_78, tmp_right_name_78);
                    Py_DECREF(tmp_right_name_78);
                    if (tmp_raise_value_78 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 428;
                        type_description_2 = "o";
                        goto try_except_handler_233;
                    }
                    exception_type = tmp_raise_type_78;
                    Py_INCREF(tmp_raise_type_78);
                    exception_value = tmp_raise_value_78;
                    exception_lineno = 428;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_233;
                }
                branch_no_311:;
            }
            goto branch_end_310;
            branch_no_310:;
            {
                PyObject *tmp_assign_source_572;
                tmp_assign_source_572 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_57__prepared == NULL);
                tmp_QtWidgets$class_creation_57__prepared = tmp_assign_source_572;
            }
            branch_end_310:;
        }
        {
            PyObject *tmp_set_locals_78;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__prepared);
            tmp_set_locals_78 = tmp_QtWidgets$class_creation_57__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_428 = tmp_set_locals_78;
            Py_INCREF(tmp_set_locals_78);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 428;
            type_description_2 = "o";
            goto try_except_handler_235;
        }
        tmp_dictset_value = const_str_digest_62eec9ac327ec8d9d51c3a9ffef00567;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 428;
            type_description_2 = "o";
            goto try_except_handler_235;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_8e5a210a9997e6027f0b1cf555f7a089_22, codeobj_8e5a210a9997e6027f0b1cf555f7a089, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_8e5a210a9997e6027f0b1cf555f7a089_22 = cache_frame_8e5a210a9997e6027f0b1cf555f7a089_22;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_8e5a210a9997e6027f0b1cf555f7a089_22);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_8e5a210a9997e6027f0b1cf555f7a089_22) == 2); // Frame stack

        // Framed code:
        {
            PyObject *tmp_called_name_160;
            PyObject *tmp_mvar_value_72;
            tmp_called_name_160 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_i18n_void_func);

            if (tmp_called_name_160 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_72 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_void_func);

                    if (unlikely(tmp_mvar_value_72 == NULL)) {
                        tmp_mvar_value_72 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_void_func);
                    }

                    if (tmp_mvar_value_72 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1960 ], 36, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 429;
                        type_description_3 = "o";
                        goto frame_exception_exit_22;
                    }

                    tmp_called_name_160 = tmp_mvar_value_72;
                    Py_INCREF(tmp_called_name_160);
                }
            }

            frame_8e5a210a9997e6027f0b1cf555f7a089_22->m_frame.f_lineno = 429;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_160, &PyTuple_GET_ITEM(const_tuple_str_plain_setSortingEnabled_tuple, 0));

            Py_DECREF(tmp_called_name_160);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 429;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_setSortingEnabled, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 429;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
        }
        {
            PyObject *tmp_called_name_161;
            PyObject *tmp_mvar_value_73;
            tmp_called_name_161 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_i18n_func);

            if (tmp_called_name_161 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_73 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func);

                    if (unlikely(tmp_mvar_value_73 == NULL)) {
                        tmp_mvar_value_73 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_func);
                    }

                    if (tmp_mvar_value_73 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1996 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 430;
                        type_description_3 = "o";
                        goto frame_exception_exit_22;
                    }

                    tmp_called_name_161 = tmp_mvar_value_73;
                    Py_INCREF(tmp_called_name_161);
                }
            }

            frame_8e5a210a9997e6027f0b1cf555f7a089_22->m_frame.f_lineno = 430;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_161, &PyTuple_GET_ITEM(const_tuple_str_plain_isSortingEnabled_tuple, 0));

            Py_DECREF(tmp_called_name_161);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 430;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_isSortingEnabled, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 430;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
        }
        {
            PyObject *tmp_called_name_162;
            PyObject *tmp_mvar_value_74;
            tmp_called_name_162 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_i18n_func);

            if (tmp_called_name_162 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_74 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func);

                    if (unlikely(tmp_mvar_value_74 == NULL)) {
                        tmp_mvar_value_74 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_func);
                    }

                    if (tmp_mvar_value_74 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1996 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 431;
                        type_description_3 = "o";
                        goto frame_exception_exit_22;
                    }

                    tmp_called_name_162 = tmp_mvar_value_74;
                    Py_INCREF(tmp_called_name_162);
                }
            }

            frame_8e5a210a9997e6027f0b1cf555f7a089_22->m_frame.f_lineno = 431;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_162, &PyTuple_GET_ITEM(const_tuple_str_plain_item_tuple, 0));

            Py_DECREF(tmp_called_name_162);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 431;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_item, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 431;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
        }
        {
            PyObject *tmp_called_name_163;
            PyObject *tmp_mvar_value_75;
            tmp_called_name_163 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_i18n_func);

            if (tmp_called_name_163 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_75 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func);

                    if (unlikely(tmp_mvar_value_75 == NULL)) {
                        tmp_mvar_value_75 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_func);
                    }

                    if (tmp_mvar_value_75 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1996 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 432;
                        type_description_3 = "o";
                        goto frame_exception_exit_22;
                    }

                    tmp_called_name_163 = tmp_mvar_value_75;
                    Py_INCREF(tmp_called_name_163);
                }
            }

            frame_8e5a210a9997e6027f0b1cf555f7a089_22->m_frame.f_lineno = 432;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_163, &PyTuple_GET_ITEM(const_tuple_str_plain_horizontalHeaderItem_tuple, 0));

            Py_DECREF(tmp_called_name_163);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 432;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_horizontalHeaderItem, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 432;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
        }
        {
            PyObject *tmp_called_name_164;
            PyObject *tmp_mvar_value_76;
            tmp_called_name_164 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_i18n_func);

            if (tmp_called_name_164 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_76 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func);

                    if (unlikely(tmp_mvar_value_76 == NULL)) {
                        tmp_mvar_value_76 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_func);
                    }

                    if (tmp_mvar_value_76 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1996 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 433;
                        type_description_3 = "o";
                        goto frame_exception_exit_22;
                    }

                    tmp_called_name_164 = tmp_mvar_value_76;
                    Py_INCREF(tmp_called_name_164);
                }
            }

            frame_8e5a210a9997e6027f0b1cf555f7a089_22->m_frame.f_lineno = 433;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_164, &PyTuple_GET_ITEM(const_tuple_str_plain_verticalHeaderItem_tuple, 0));

            Py_DECREF(tmp_called_name_164);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 433;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain_verticalHeaderItem, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 433;
                type_description_3 = "o";
                goto frame_exception_exit_22;
            }
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_8e5a210a9997e6027f0b1cf555f7a089_22);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_20;

        frame_exception_exit_22:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_8e5a210a9997e6027f0b1cf555f7a089_22);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_8e5a210a9997e6027f0b1cf555f7a089_22, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_8e5a210a9997e6027f0b1cf555f7a089_22->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_8e5a210a9997e6027f0b1cf555f7a089_22, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_8e5a210a9997e6027f0b1cf555f7a089_22,
            type_description_3,
            outline_77_var___class__
        );


        // Release cached frame.
        if (frame_8e5a210a9997e6027f0b1cf555f7a089_22 == cache_frame_8e5a210a9997e6027f0b1cf555f7a089_22) {
            Py_DECREF(frame_8e5a210a9997e6027f0b1cf555f7a089_22);
        }
        cache_frame_8e5a210a9997e6027f0b1cf555f7a089_22 = NULL;

        assertFrameObject(frame_8e5a210a9997e6027f0b1cf555f7a089_22);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_21;

        frame_no_exception_20:;
        goto skip_nested_handling_20;
        nested_frame_exit_21:;
        type_description_2 = "o";
        goto try_except_handler_235;
        skip_nested_handling_20:;
        {
            nuitka_bool tmp_condition_result_470;
            PyObject *tmp_compexpr_left_78;
            PyObject *tmp_compexpr_right_78;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases);
            tmp_compexpr_left_78 = tmp_QtWidgets$class_creation_57__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases_orig);
            tmp_compexpr_right_78 = tmp_QtWidgets$class_creation_57__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_78, tmp_compexpr_right_78);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_235;
            }
            tmp_condition_result_470 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_470 == NUITKA_BOOL_TRUE) {
                goto branch_yes_312;
            } else {
                goto branch_no_312;
            }
            branch_yes_312:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_57__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_428, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_235;
            }
            branch_no_312:;
        }
        {
            PyObject *tmp_assign_source_573;
            PyObject *tmp_called_name_165;
            PyObject *tmp_args_name_155;
            PyObject *tmp_tuple_element_308;
            PyObject *tmp_kw_name_155;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__metaclass);
            tmp_called_name_165 = tmp_QtWidgets$class_creation_57__metaclass;
            tmp_tuple_element_308 = const_str_plain_QTableWidget;
            tmp_args_name_155 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_308);
            PyTuple_SET_ITEM(tmp_args_name_155, 0, tmp_tuple_element_308);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__bases);
            tmp_tuple_element_308 = tmp_QtWidgets$class_creation_57__bases;
            Py_INCREF(tmp_tuple_element_308);
            PyTuple_SET_ITEM(tmp_args_name_155, 1, tmp_tuple_element_308);
            tmp_tuple_element_308 = locals_PyQt5$uic$Compiler$qtproxies_428;
            Py_INCREF(tmp_tuple_element_308);
            PyTuple_SET_ITEM(tmp_args_name_155, 2, tmp_tuple_element_308);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_57__class_decl_dict);
            tmp_kw_name_155 = tmp_QtWidgets$class_creation_57__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 428;
            tmp_assign_source_573 = CALL_FUNCTION(tmp_called_name_165, tmp_args_name_155, tmp_kw_name_155);
            Py_DECREF(tmp_args_name_155);
            if (tmp_assign_source_573 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_2 = "o";
                goto try_except_handler_235;
            }
            assert(outline_77_var___class__ == NULL);
            outline_77_var___class__ = tmp_assign_source_573;
        }
        CHECK_OBJECT(outline_77_var___class__);
        tmp_dictset_value = outline_77_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_235;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_235:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_428);
        locals_PyQt5$uic$Compiler$qtproxies_428 = NULL;
        goto try_return_handler_234;
        // Exception handler code:
        try_except_handler_235:;
        exception_keeper_type_230 = exception_type;
        exception_keeper_value_230 = exception_value;
        exception_keeper_tb_230 = exception_tb;
        exception_keeper_lineno_230 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_428);
        locals_PyQt5$uic$Compiler$qtproxies_428 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_230;
        exception_value = exception_keeper_value_230;
        exception_tb = exception_keeper_tb_230;
        exception_lineno = exception_keeper_lineno_230;

        goto try_except_handler_234;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_234:;
        CHECK_OBJECT((PyObject *)outline_77_var___class__);
        Py_DECREF(outline_77_var___class__);
        outline_77_var___class__ = NULL;

        goto outline_result_78;
        // Exception handler code:
        try_except_handler_234:;
        exception_keeper_type_231 = exception_type;
        exception_keeper_value_231 = exception_value;
        exception_keeper_tb_231 = exception_tb;
        exception_keeper_lineno_231 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_231;
        exception_value = exception_keeper_value_231;
        exception_tb = exception_keeper_tb_231;
        exception_lineno = exception_keeper_lineno_231;

        goto outline_exception_78;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_78:;
        exception_lineno = 428;
        goto try_except_handler_233;
        outline_result_78:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTableWidget, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 428;
            type_description_2 = "o";
            goto try_except_handler_233;
        }
        goto try_end_78;
        // Exception handler code:
        try_except_handler_233:;
        exception_keeper_type_232 = exception_type;
        exception_keeper_value_232 = exception_value;
        exception_keeper_tb_232 = exception_tb;
        exception_keeper_lineno_232 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_57__bases_orig);
        tmp_QtWidgets$class_creation_57__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_57__bases);
        tmp_QtWidgets$class_creation_57__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_57__class_decl_dict);
        tmp_QtWidgets$class_creation_57__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_57__metaclass);
        tmp_QtWidgets$class_creation_57__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_57__prepared);
        tmp_QtWidgets$class_creation_57__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_232;
        exception_value = exception_keeper_value_232;
        exception_tb = exception_keeper_tb_232;
        exception_lineno = exception_keeper_lineno_232;

        goto frame_exception_exit_12;
        // End of try:
        try_end_78:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_57__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_57__bases_orig);
        tmp_QtWidgets$class_creation_57__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_57__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_57__bases);
        tmp_QtWidgets$class_creation_57__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_57__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_57__class_decl_dict);
        tmp_QtWidgets$class_creation_57__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_57__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_57__metaclass);
        tmp_QtWidgets$class_creation_57__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_57__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_57__prepared);
        tmp_QtWidgets$class_creation_57__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_574;
            PyObject *tmp_tuple_element_309;
            PyObject *tmp_mvar_value_77;
            tmp_tuple_element_309 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_ProxyClass);

            if (tmp_tuple_element_309 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_77 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_ProxyClass);

                    if (unlikely(tmp_mvar_value_77 == NULL)) {
                        tmp_mvar_value_77 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ProxyClass);
                    }

                    if (tmp_mvar_value_77 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1400 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 435;
                        type_description_2 = "o";
                        goto try_except_handler_236;
                    }

                    tmp_tuple_element_309 = tmp_mvar_value_77;
                    Py_INCREF(tmp_tuple_element_309);
                }
            }

            tmp_assign_source_574 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_574, 0, tmp_tuple_element_309);
            assert(tmp_QtWidgets$class_creation_58__bases_orig == NULL);
            tmp_QtWidgets$class_creation_58__bases_orig = tmp_assign_source_574;
        }
        {
            PyObject *tmp_assign_source_575;
            PyObject *tmp_dircall_arg1_79;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases_orig);
            tmp_dircall_arg1_79 = tmp_QtWidgets$class_creation_58__bases_orig;
            Py_INCREF(tmp_dircall_arg1_79);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_79};
                tmp_assign_source_575 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_575 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            assert(tmp_QtWidgets$class_creation_58__bases == NULL);
            tmp_QtWidgets$class_creation_58__bases = tmp_assign_source_575;
        }
        {
            PyObject *tmp_assign_source_576;
            tmp_assign_source_576 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_58__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_58__class_decl_dict = tmp_assign_source_576;
        }
        {
            PyObject *tmp_assign_source_577;
            PyObject *tmp_metaclass_name_79;
            nuitka_bool tmp_condition_result_471;
            PyObject *tmp_key_name_235;
            PyObject *tmp_dict_name_235;
            PyObject *tmp_dict_name_236;
            PyObject *tmp_key_name_236;
            nuitka_bool tmp_condition_result_472;
            int tmp_truth_name_79;
            PyObject *tmp_type_arg_157;
            PyObject *tmp_subscribed_name_79;
            PyObject *tmp_subscript_name_79;
            PyObject *tmp_bases_name_79;
            tmp_key_name_235 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__class_decl_dict);
            tmp_dict_name_235 = tmp_QtWidgets$class_creation_58__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_235, tmp_key_name_235);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            tmp_condition_result_471 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_471 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_159;
            } else {
                goto condexpr_false_159;
            }
            condexpr_true_159:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__class_decl_dict);
            tmp_dict_name_236 = tmp_QtWidgets$class_creation_58__class_decl_dict;
            tmp_key_name_236 = const_str_plain_metaclass;
            tmp_metaclass_name_79 = DICT_GET_ITEM(tmp_dict_name_236, tmp_key_name_236);
            if (tmp_metaclass_name_79 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            goto condexpr_end_159;
            condexpr_false_159:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases);
            tmp_truth_name_79 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_58__bases);
            if (tmp_truth_name_79 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            tmp_condition_result_472 = tmp_truth_name_79 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_472 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_160;
            } else {
                goto condexpr_false_160;
            }
            condexpr_true_160:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases);
            tmp_subscribed_name_79 = tmp_QtWidgets$class_creation_58__bases;
            tmp_subscript_name_79 = const_int_0;
            tmp_type_arg_157 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_79, tmp_subscript_name_79, 0);
            if (tmp_type_arg_157 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            tmp_metaclass_name_79 = BUILTIN_TYPE1(tmp_type_arg_157);
            Py_DECREF(tmp_type_arg_157);
            if (tmp_metaclass_name_79 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            goto condexpr_end_160;
            condexpr_false_160:;
            tmp_metaclass_name_79 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_79);
            condexpr_end_160:;
            condexpr_end_159:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases);
            tmp_bases_name_79 = tmp_QtWidgets$class_creation_58__bases;
            tmp_assign_source_577 = SELECT_METACLASS(tmp_metaclass_name_79, tmp_bases_name_79);
            Py_DECREF(tmp_metaclass_name_79);
            if (tmp_assign_source_577 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            assert(tmp_QtWidgets$class_creation_58__metaclass == NULL);
            tmp_QtWidgets$class_creation_58__metaclass = tmp_assign_source_577;
        }
        {
            nuitka_bool tmp_condition_result_473;
            PyObject *tmp_key_name_237;
            PyObject *tmp_dict_name_237;
            tmp_key_name_237 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__class_decl_dict);
            tmp_dict_name_237 = tmp_QtWidgets$class_creation_58__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_237, tmp_key_name_237);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            tmp_condition_result_473 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_473 == NUITKA_BOOL_TRUE) {
                goto branch_yes_313;
            } else {
                goto branch_no_313;
            }
            branch_yes_313:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_58__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_236;
            }
            branch_no_313:;
        }
        {
            nuitka_bool tmp_condition_result_474;
            PyObject *tmp_source_name_320;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__metaclass);
            tmp_source_name_320 = tmp_QtWidgets$class_creation_58__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_320, const_str_plain___prepare__);
            tmp_condition_result_474 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_474 == NUITKA_BOOL_TRUE) {
                goto branch_yes_314;
            } else {
                goto branch_no_314;
            }
            branch_yes_314:;
            {
                PyObject *tmp_assign_source_578;
                PyObject *tmp_called_name_166;
                PyObject *tmp_source_name_321;
                PyObject *tmp_args_name_156;
                PyObject *tmp_tuple_element_310;
                PyObject *tmp_kw_name_156;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_58__metaclass);
                tmp_source_name_321 = tmp_QtWidgets$class_creation_58__metaclass;
                tmp_called_name_166 = LOOKUP_ATTRIBUTE(tmp_source_name_321, const_str_plain___prepare__);
                if (tmp_called_name_166 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 435;
                    type_description_2 = "o";
                    goto try_except_handler_236;
                }
                tmp_tuple_element_310 = const_str_plain_QTreeWidgetItem;
                tmp_args_name_156 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_310);
                PyTuple_SET_ITEM(tmp_args_name_156, 0, tmp_tuple_element_310);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases);
                tmp_tuple_element_310 = tmp_QtWidgets$class_creation_58__bases;
                Py_INCREF(tmp_tuple_element_310);
                PyTuple_SET_ITEM(tmp_args_name_156, 1, tmp_tuple_element_310);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_58__class_decl_dict);
                tmp_kw_name_156 = tmp_QtWidgets$class_creation_58__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 435;
                tmp_assign_source_578 = CALL_FUNCTION(tmp_called_name_166, tmp_args_name_156, tmp_kw_name_156);
                Py_DECREF(tmp_called_name_166);
                Py_DECREF(tmp_args_name_156);
                if (tmp_assign_source_578 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 435;
                    type_description_2 = "o";
                    goto try_except_handler_236;
                }
                assert(tmp_QtWidgets$class_creation_58__prepared == NULL);
                tmp_QtWidgets$class_creation_58__prepared = tmp_assign_source_578;
            }
            {
                nuitka_bool tmp_condition_result_475;
                PyObject *tmp_operand_name_79;
                PyObject *tmp_source_name_322;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_58__prepared);
                tmp_source_name_322 = tmp_QtWidgets$class_creation_58__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_322, const_str_plain___getitem__);
                tmp_operand_name_79 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_79);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 435;
                    type_description_2 = "o";
                    goto try_except_handler_236;
                }
                tmp_condition_result_475 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_475 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_315;
                } else {
                    goto branch_no_315;
                }
                branch_yes_315:;
                {
                    PyObject *tmp_raise_type_79;
                    PyObject *tmp_raise_value_79;
                    PyObject *tmp_left_name_79;
                    PyObject *tmp_right_name_79;
                    PyObject *tmp_tuple_element_311;
                    PyObject *tmp_getattr_target_79;
                    PyObject *tmp_getattr_attr_79;
                    PyObject *tmp_getattr_default_79;
                    PyObject *tmp_source_name_323;
                    PyObject *tmp_type_arg_158;
                    tmp_raise_type_79 = PyExc_TypeError;
                    tmp_left_name_79 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_58__metaclass);
                    tmp_getattr_target_79 = tmp_QtWidgets$class_creation_58__metaclass;
                    tmp_getattr_attr_79 = const_str_plain___name__;
                    tmp_getattr_default_79 = const_str_angle_metaclass;
                    tmp_tuple_element_311 = BUILTIN_GETATTR(tmp_getattr_target_79, tmp_getattr_attr_79, tmp_getattr_default_79);
                    if (tmp_tuple_element_311 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 435;
                        type_description_2 = "o";
                        goto try_except_handler_236;
                    }
                    tmp_right_name_79 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_79, 0, tmp_tuple_element_311);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_58__prepared);
                    tmp_type_arg_158 = tmp_QtWidgets$class_creation_58__prepared;
                    tmp_source_name_323 = BUILTIN_TYPE1(tmp_type_arg_158);
                    assert(!(tmp_source_name_323 == NULL));
                    tmp_tuple_element_311 = LOOKUP_ATTRIBUTE(tmp_source_name_323, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_323);
                    if (tmp_tuple_element_311 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_79);

                        exception_lineno = 435;
                        type_description_2 = "o";
                        goto try_except_handler_236;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_79, 1, tmp_tuple_element_311);
                    tmp_raise_value_79 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_79, tmp_right_name_79);
                    Py_DECREF(tmp_right_name_79);
                    if (tmp_raise_value_79 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 435;
                        type_description_2 = "o";
                        goto try_except_handler_236;
                    }
                    exception_type = tmp_raise_type_79;
                    Py_INCREF(tmp_raise_type_79);
                    exception_value = tmp_raise_value_79;
                    exception_lineno = 435;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_236;
                }
                branch_no_315:;
            }
            goto branch_end_314;
            branch_no_314:;
            {
                PyObject *tmp_assign_source_579;
                tmp_assign_source_579 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_58__prepared == NULL);
                tmp_QtWidgets$class_creation_58__prepared = tmp_assign_source_579;
            }
            branch_end_314:;
        }
        {
            PyObject *tmp_set_locals_79;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__prepared);
            tmp_set_locals_79 = tmp_QtWidgets$class_creation_58__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_435 = tmp_set_locals_79;
            Py_INCREF(tmp_set_locals_79);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_435, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 435;
            type_description_2 = "o";
            goto try_except_handler_238;
        }
        tmp_dictset_value = const_str_digest_d93e165baf38636c16e3abc7d249b07f;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_435, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 435;
            type_description_2 = "o";
            goto try_except_handler_238;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_50a860bdb6599023474a313618a2830b_23, codeobj_50a860bdb6599023474a313618a2830b, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_50a860bdb6599023474a313618a2830b_23 = cache_frame_50a860bdb6599023474a313618a2830b_23;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_50a860bdb6599023474a313618a2830b_23);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_50a860bdb6599023474a313618a2830b_23) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_35_child();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_435, const_str_plain_child, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 436;
            type_description_3 = "o";
            goto frame_exception_exit_23;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_50a860bdb6599023474a313618a2830b_23);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_21;

        frame_exception_exit_23:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_50a860bdb6599023474a313618a2830b_23);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_50a860bdb6599023474a313618a2830b_23, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_50a860bdb6599023474a313618a2830b_23->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_50a860bdb6599023474a313618a2830b_23, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_50a860bdb6599023474a313618a2830b_23,
            type_description_3,
            outline_78_var___class__
        );


        // Release cached frame.
        if (frame_50a860bdb6599023474a313618a2830b_23 == cache_frame_50a860bdb6599023474a313618a2830b_23) {
            Py_DECREF(frame_50a860bdb6599023474a313618a2830b_23);
        }
        cache_frame_50a860bdb6599023474a313618a2830b_23 = NULL;

        assertFrameObject(frame_50a860bdb6599023474a313618a2830b_23);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_22;

        frame_no_exception_21:;
        goto skip_nested_handling_21;
        nested_frame_exit_22:;
        type_description_2 = "o";
        goto try_except_handler_238;
        skip_nested_handling_21:;
        {
            nuitka_bool tmp_condition_result_476;
            PyObject *tmp_compexpr_left_79;
            PyObject *tmp_compexpr_right_79;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases);
            tmp_compexpr_left_79 = tmp_QtWidgets$class_creation_58__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases_orig);
            tmp_compexpr_right_79 = tmp_QtWidgets$class_creation_58__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_79, tmp_compexpr_right_79);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_238;
            }
            tmp_condition_result_476 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_476 == NUITKA_BOOL_TRUE) {
                goto branch_yes_316;
            } else {
                goto branch_no_316;
            }
            branch_yes_316:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_58__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_435, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_238;
            }
            branch_no_316:;
        }
        {
            PyObject *tmp_assign_source_580;
            PyObject *tmp_called_name_167;
            PyObject *tmp_args_name_157;
            PyObject *tmp_tuple_element_312;
            PyObject *tmp_kw_name_157;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__metaclass);
            tmp_called_name_167 = tmp_QtWidgets$class_creation_58__metaclass;
            tmp_tuple_element_312 = const_str_plain_QTreeWidgetItem;
            tmp_args_name_157 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_312);
            PyTuple_SET_ITEM(tmp_args_name_157, 0, tmp_tuple_element_312);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__bases);
            tmp_tuple_element_312 = tmp_QtWidgets$class_creation_58__bases;
            Py_INCREF(tmp_tuple_element_312);
            PyTuple_SET_ITEM(tmp_args_name_157, 1, tmp_tuple_element_312);
            tmp_tuple_element_312 = locals_PyQt5$uic$Compiler$qtproxies_435;
            Py_INCREF(tmp_tuple_element_312);
            PyTuple_SET_ITEM(tmp_args_name_157, 2, tmp_tuple_element_312);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_58__class_decl_dict);
            tmp_kw_name_157 = tmp_QtWidgets$class_creation_58__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 435;
            tmp_assign_source_580 = CALL_FUNCTION(tmp_called_name_167, tmp_args_name_157, tmp_kw_name_157);
            Py_DECREF(tmp_args_name_157);
            if (tmp_assign_source_580 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_2 = "o";
                goto try_except_handler_238;
            }
            assert(outline_78_var___class__ == NULL);
            outline_78_var___class__ = tmp_assign_source_580;
        }
        CHECK_OBJECT(outline_78_var___class__);
        tmp_dictset_value = outline_78_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_238;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_238:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_435);
        locals_PyQt5$uic$Compiler$qtproxies_435 = NULL;
        goto try_return_handler_237;
        // Exception handler code:
        try_except_handler_238:;
        exception_keeper_type_233 = exception_type;
        exception_keeper_value_233 = exception_value;
        exception_keeper_tb_233 = exception_tb;
        exception_keeper_lineno_233 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_435);
        locals_PyQt5$uic$Compiler$qtproxies_435 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_233;
        exception_value = exception_keeper_value_233;
        exception_tb = exception_keeper_tb_233;
        exception_lineno = exception_keeper_lineno_233;

        goto try_except_handler_237;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_237:;
        CHECK_OBJECT((PyObject *)outline_78_var___class__);
        Py_DECREF(outline_78_var___class__);
        outline_78_var___class__ = NULL;

        goto outline_result_79;
        // Exception handler code:
        try_except_handler_237:;
        exception_keeper_type_234 = exception_type;
        exception_keeper_value_234 = exception_value;
        exception_keeper_tb_234 = exception_tb;
        exception_keeper_lineno_234 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_234;
        exception_value = exception_keeper_value_234;
        exception_tb = exception_keeper_tb_234;
        exception_lineno = exception_keeper_lineno_234;

        goto outline_exception_79;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_79:;
        exception_lineno = 435;
        goto try_except_handler_236;
        outline_result_79:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTreeWidgetItem, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 435;
            type_description_2 = "o";
            goto try_except_handler_236;
        }
        goto try_end_79;
        // Exception handler code:
        try_except_handler_236:;
        exception_keeper_type_235 = exception_type;
        exception_keeper_value_235 = exception_value;
        exception_keeper_tb_235 = exception_tb;
        exception_keeper_lineno_235 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_58__bases_orig);
        tmp_QtWidgets$class_creation_58__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_58__bases);
        tmp_QtWidgets$class_creation_58__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_58__class_decl_dict);
        tmp_QtWidgets$class_creation_58__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_58__metaclass);
        tmp_QtWidgets$class_creation_58__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_58__prepared);
        tmp_QtWidgets$class_creation_58__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_235;
        exception_value = exception_keeper_value_235;
        exception_tb = exception_keeper_tb_235;
        exception_lineno = exception_keeper_lineno_235;

        goto frame_exception_exit_12;
        // End of try:
        try_end_79:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_58__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_58__bases_orig);
        tmp_QtWidgets$class_creation_58__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_58__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_58__bases);
        tmp_QtWidgets$class_creation_58__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_58__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_58__class_decl_dict);
        tmp_QtWidgets$class_creation_58__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_58__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_58__metaclass);
        tmp_QtWidgets$class_creation_58__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_58__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_58__prepared);
        tmp_QtWidgets$class_creation_58__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_581;
            PyObject *tmp_tuple_element_313;
            PyObject *tmp_mvar_value_78;
            tmp_tuple_element_313 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTreeView);

            if (tmp_tuple_element_313 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_78 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QTreeView);

                    if (unlikely(tmp_mvar_value_78 == NULL)) {
                        tmp_mvar_value_78 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QTreeView);
                    }

                    if (tmp_mvar_value_78 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 2059 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 440;
                        type_description_2 = "o";
                        goto try_except_handler_239;
                    }

                    tmp_tuple_element_313 = tmp_mvar_value_78;
                    Py_INCREF(tmp_tuple_element_313);
                }
            }

            tmp_assign_source_581 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_581, 0, tmp_tuple_element_313);
            assert(tmp_QtWidgets$class_creation_59__bases_orig == NULL);
            tmp_QtWidgets$class_creation_59__bases_orig = tmp_assign_source_581;
        }
        {
            PyObject *tmp_assign_source_582;
            PyObject *tmp_dircall_arg1_80;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases_orig);
            tmp_dircall_arg1_80 = tmp_QtWidgets$class_creation_59__bases_orig;
            Py_INCREF(tmp_dircall_arg1_80);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_80};
                tmp_assign_source_582 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_582 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            assert(tmp_QtWidgets$class_creation_59__bases == NULL);
            tmp_QtWidgets$class_creation_59__bases = tmp_assign_source_582;
        }
        {
            PyObject *tmp_assign_source_583;
            tmp_assign_source_583 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_59__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_59__class_decl_dict = tmp_assign_source_583;
        }
        {
            PyObject *tmp_assign_source_584;
            PyObject *tmp_metaclass_name_80;
            nuitka_bool tmp_condition_result_477;
            PyObject *tmp_key_name_238;
            PyObject *tmp_dict_name_238;
            PyObject *tmp_dict_name_239;
            PyObject *tmp_key_name_239;
            nuitka_bool tmp_condition_result_478;
            int tmp_truth_name_80;
            PyObject *tmp_type_arg_159;
            PyObject *tmp_subscribed_name_80;
            PyObject *tmp_subscript_name_80;
            PyObject *tmp_bases_name_80;
            tmp_key_name_238 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__class_decl_dict);
            tmp_dict_name_238 = tmp_QtWidgets$class_creation_59__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_238, tmp_key_name_238);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            tmp_condition_result_477 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_477 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_161;
            } else {
                goto condexpr_false_161;
            }
            condexpr_true_161:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__class_decl_dict);
            tmp_dict_name_239 = tmp_QtWidgets$class_creation_59__class_decl_dict;
            tmp_key_name_239 = const_str_plain_metaclass;
            tmp_metaclass_name_80 = DICT_GET_ITEM(tmp_dict_name_239, tmp_key_name_239);
            if (tmp_metaclass_name_80 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            goto condexpr_end_161;
            condexpr_false_161:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases);
            tmp_truth_name_80 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_59__bases);
            if (tmp_truth_name_80 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            tmp_condition_result_478 = tmp_truth_name_80 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_478 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_162;
            } else {
                goto condexpr_false_162;
            }
            condexpr_true_162:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases);
            tmp_subscribed_name_80 = tmp_QtWidgets$class_creation_59__bases;
            tmp_subscript_name_80 = const_int_0;
            tmp_type_arg_159 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_80, tmp_subscript_name_80, 0);
            if (tmp_type_arg_159 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            tmp_metaclass_name_80 = BUILTIN_TYPE1(tmp_type_arg_159);
            Py_DECREF(tmp_type_arg_159);
            if (tmp_metaclass_name_80 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            goto condexpr_end_162;
            condexpr_false_162:;
            tmp_metaclass_name_80 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_80);
            condexpr_end_162:;
            condexpr_end_161:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases);
            tmp_bases_name_80 = tmp_QtWidgets$class_creation_59__bases;
            tmp_assign_source_584 = SELECT_METACLASS(tmp_metaclass_name_80, tmp_bases_name_80);
            Py_DECREF(tmp_metaclass_name_80);
            if (tmp_assign_source_584 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            assert(tmp_QtWidgets$class_creation_59__metaclass == NULL);
            tmp_QtWidgets$class_creation_59__metaclass = tmp_assign_source_584;
        }
        {
            nuitka_bool tmp_condition_result_479;
            PyObject *tmp_key_name_240;
            PyObject *tmp_dict_name_240;
            tmp_key_name_240 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__class_decl_dict);
            tmp_dict_name_240 = tmp_QtWidgets$class_creation_59__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_240, tmp_key_name_240);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            tmp_condition_result_479 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_479 == NUITKA_BOOL_TRUE) {
                goto branch_yes_317;
            } else {
                goto branch_no_317;
            }
            branch_yes_317:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_59__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_239;
            }
            branch_no_317:;
        }
        {
            nuitka_bool tmp_condition_result_480;
            PyObject *tmp_source_name_324;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__metaclass);
            tmp_source_name_324 = tmp_QtWidgets$class_creation_59__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_324, const_str_plain___prepare__);
            tmp_condition_result_480 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_480 == NUITKA_BOOL_TRUE) {
                goto branch_yes_318;
            } else {
                goto branch_no_318;
            }
            branch_yes_318:;
            {
                PyObject *tmp_assign_source_585;
                PyObject *tmp_called_name_168;
                PyObject *tmp_source_name_325;
                PyObject *tmp_args_name_158;
                PyObject *tmp_tuple_element_314;
                PyObject *tmp_kw_name_158;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_59__metaclass);
                tmp_source_name_325 = tmp_QtWidgets$class_creation_59__metaclass;
                tmp_called_name_168 = LOOKUP_ATTRIBUTE(tmp_source_name_325, const_str_plain___prepare__);
                if (tmp_called_name_168 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 440;
                    type_description_2 = "o";
                    goto try_except_handler_239;
                }
                tmp_tuple_element_314 = const_str_plain_QTreeWidget;
                tmp_args_name_158 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_314);
                PyTuple_SET_ITEM(tmp_args_name_158, 0, tmp_tuple_element_314);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases);
                tmp_tuple_element_314 = tmp_QtWidgets$class_creation_59__bases;
                Py_INCREF(tmp_tuple_element_314);
                PyTuple_SET_ITEM(tmp_args_name_158, 1, tmp_tuple_element_314);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_59__class_decl_dict);
                tmp_kw_name_158 = tmp_QtWidgets$class_creation_59__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 440;
                tmp_assign_source_585 = CALL_FUNCTION(tmp_called_name_168, tmp_args_name_158, tmp_kw_name_158);
                Py_DECREF(tmp_called_name_168);
                Py_DECREF(tmp_args_name_158);
                if (tmp_assign_source_585 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 440;
                    type_description_2 = "o";
                    goto try_except_handler_239;
                }
                assert(tmp_QtWidgets$class_creation_59__prepared == NULL);
                tmp_QtWidgets$class_creation_59__prepared = tmp_assign_source_585;
            }
            {
                nuitka_bool tmp_condition_result_481;
                PyObject *tmp_operand_name_80;
                PyObject *tmp_source_name_326;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_59__prepared);
                tmp_source_name_326 = tmp_QtWidgets$class_creation_59__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_326, const_str_plain___getitem__);
                tmp_operand_name_80 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_80);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 440;
                    type_description_2 = "o";
                    goto try_except_handler_239;
                }
                tmp_condition_result_481 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_481 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_319;
                } else {
                    goto branch_no_319;
                }
                branch_yes_319:;
                {
                    PyObject *tmp_raise_type_80;
                    PyObject *tmp_raise_value_80;
                    PyObject *tmp_left_name_80;
                    PyObject *tmp_right_name_80;
                    PyObject *tmp_tuple_element_315;
                    PyObject *tmp_getattr_target_80;
                    PyObject *tmp_getattr_attr_80;
                    PyObject *tmp_getattr_default_80;
                    PyObject *tmp_source_name_327;
                    PyObject *tmp_type_arg_160;
                    tmp_raise_type_80 = PyExc_TypeError;
                    tmp_left_name_80 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_59__metaclass);
                    tmp_getattr_target_80 = tmp_QtWidgets$class_creation_59__metaclass;
                    tmp_getattr_attr_80 = const_str_plain___name__;
                    tmp_getattr_default_80 = const_str_angle_metaclass;
                    tmp_tuple_element_315 = BUILTIN_GETATTR(tmp_getattr_target_80, tmp_getattr_attr_80, tmp_getattr_default_80);
                    if (tmp_tuple_element_315 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 440;
                        type_description_2 = "o";
                        goto try_except_handler_239;
                    }
                    tmp_right_name_80 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_80, 0, tmp_tuple_element_315);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_59__prepared);
                    tmp_type_arg_160 = tmp_QtWidgets$class_creation_59__prepared;
                    tmp_source_name_327 = BUILTIN_TYPE1(tmp_type_arg_160);
                    assert(!(tmp_source_name_327 == NULL));
                    tmp_tuple_element_315 = LOOKUP_ATTRIBUTE(tmp_source_name_327, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_327);
                    if (tmp_tuple_element_315 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_80);

                        exception_lineno = 440;
                        type_description_2 = "o";
                        goto try_except_handler_239;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_80, 1, tmp_tuple_element_315);
                    tmp_raise_value_80 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_80, tmp_right_name_80);
                    Py_DECREF(tmp_right_name_80);
                    if (tmp_raise_value_80 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 440;
                        type_description_2 = "o";
                        goto try_except_handler_239;
                    }
                    exception_type = tmp_raise_type_80;
                    Py_INCREF(tmp_raise_type_80);
                    exception_value = tmp_raise_value_80;
                    exception_lineno = 440;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_239;
                }
                branch_no_319:;
            }
            goto branch_end_318;
            branch_no_318:;
            {
                PyObject *tmp_assign_source_586;
                tmp_assign_source_586 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_59__prepared == NULL);
                tmp_QtWidgets$class_creation_59__prepared = tmp_assign_source_586;
            }
            branch_end_318:;
        }
        {
            PyObject *tmp_set_locals_80;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__prepared);
            tmp_set_locals_80 = tmp_QtWidgets$class_creation_59__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_440 = tmp_set_locals_80;
            Py_INCREF(tmp_set_locals_80);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 440;
            type_description_2 = "o";
            goto try_except_handler_241;
        }
        tmp_dictset_value = const_str_digest_1bd12fdb4ca92db7ed4c0a9f5c58c1d0;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 440;
            type_description_2 = "o";
            goto try_except_handler_241;
        }
        MAKE_OR_REUSE_FRAME(cache_frame_bacb55f861c453ab9ab67002e7cba0fe_24, codeobj_bacb55f861c453ab9ab67002e7cba0fe, module_PyQt5$uic$Compiler$qtproxies, sizeof(void *));
        frame_bacb55f861c453ab9ab67002e7cba0fe_24 = cache_frame_bacb55f861c453ab9ab67002e7cba0fe_24;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_bacb55f861c453ab9ab67002e7cba0fe_24);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_bacb55f861c453ab9ab67002e7cba0fe_24) == 2); // Frame stack

        // Framed code:
        {
            PyObject *tmp_called_name_169;
            PyObject *tmp_mvar_value_79;
            tmp_called_name_169 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain_i18n_void_func);

            if (tmp_called_name_169 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_79 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_void_func);

                    if (unlikely(tmp_mvar_value_79 == NULL)) {
                        tmp_mvar_value_79 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_void_func);
                    }

                    if (tmp_mvar_value_79 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1960 ], 36, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 441;
                        type_description_3 = "o";
                        goto frame_exception_exit_24;
                    }

                    tmp_called_name_169 = tmp_mvar_value_79;
                    Py_INCREF(tmp_called_name_169);
                }
            }

            frame_bacb55f861c453ab9ab67002e7cba0fe_24->m_frame.f_lineno = 441;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_169, &PyTuple_GET_ITEM(const_tuple_str_plain_setSortingEnabled_tuple, 0));

            Py_DECREF(tmp_called_name_169);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_3 = "o";
                goto frame_exception_exit_24;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain_setSortingEnabled, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_3 = "o";
                goto frame_exception_exit_24;
            }
        }
        {
            PyObject *tmp_called_name_170;
            PyObject *tmp_mvar_value_80;
            tmp_called_name_170 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain_i18n_func);

            if (tmp_called_name_170 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_80 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_i18n_func);

                    if (unlikely(tmp_mvar_value_80 == NULL)) {
                        tmp_mvar_value_80 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_i18n_func);
                    }

                    if (tmp_mvar_value_80 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1996 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 442;
                        type_description_3 = "o";
                        goto frame_exception_exit_24;
                    }

                    tmp_called_name_170 = tmp_mvar_value_80;
                    Py_INCREF(tmp_called_name_170);
                }
            }

            frame_bacb55f861c453ab9ab67002e7cba0fe_24->m_frame.f_lineno = 442;
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1(tmp_called_name_170, &PyTuple_GET_ITEM(const_tuple_str_plain_isSortingEnabled_tuple, 0));

            Py_DECREF(tmp_called_name_170);
            if (tmp_dictset_value == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 442;
                type_description_3 = "o";
                goto frame_exception_exit_24;
            }
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain_isSortingEnabled, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 442;
                type_description_3 = "o";
                goto frame_exception_exit_24;
            }
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_36_headerItem();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain_headerItem, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 444;
            type_description_3 = "o";
            goto frame_exception_exit_24;
        }
        tmp_dictset_value = MAKE_FUNCTION_PyQt5$uic$Compiler$qtproxies$$$function_37_topLevelItem();



        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain_topLevelItem, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 448;
            type_description_3 = "o";
            goto frame_exception_exit_24;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_bacb55f861c453ab9ab67002e7cba0fe_24);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_22;

        frame_exception_exit_24:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_bacb55f861c453ab9ab67002e7cba0fe_24);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_bacb55f861c453ab9ab67002e7cba0fe_24, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_bacb55f861c453ab9ab67002e7cba0fe_24->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_bacb55f861c453ab9ab67002e7cba0fe_24, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_bacb55f861c453ab9ab67002e7cba0fe_24,
            type_description_3,
            outline_79_var___class__
        );


        // Release cached frame.
        if (frame_bacb55f861c453ab9ab67002e7cba0fe_24 == cache_frame_bacb55f861c453ab9ab67002e7cba0fe_24) {
            Py_DECREF(frame_bacb55f861c453ab9ab67002e7cba0fe_24);
        }
        cache_frame_bacb55f861c453ab9ab67002e7cba0fe_24 = NULL;

        assertFrameObject(frame_bacb55f861c453ab9ab67002e7cba0fe_24);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_23;

        frame_no_exception_22:;
        goto skip_nested_handling_22;
        nested_frame_exit_23:;
        type_description_2 = "o";
        goto try_except_handler_241;
        skip_nested_handling_22:;
        {
            nuitka_bool tmp_condition_result_482;
            PyObject *tmp_compexpr_left_80;
            PyObject *tmp_compexpr_right_80;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases);
            tmp_compexpr_left_80 = tmp_QtWidgets$class_creation_59__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases_orig);
            tmp_compexpr_right_80 = tmp_QtWidgets$class_creation_59__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_80, tmp_compexpr_right_80);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_241;
            }
            tmp_condition_result_482 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_482 == NUITKA_BOOL_TRUE) {
                goto branch_yes_320;
            } else {
                goto branch_no_320;
            }
            branch_yes_320:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_59__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_440, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_241;
            }
            branch_no_320:;
        }
        {
            PyObject *tmp_assign_source_587;
            PyObject *tmp_called_name_171;
            PyObject *tmp_args_name_159;
            PyObject *tmp_tuple_element_316;
            PyObject *tmp_kw_name_159;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__metaclass);
            tmp_called_name_171 = tmp_QtWidgets$class_creation_59__metaclass;
            tmp_tuple_element_316 = const_str_plain_QTreeWidget;
            tmp_args_name_159 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_316);
            PyTuple_SET_ITEM(tmp_args_name_159, 0, tmp_tuple_element_316);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__bases);
            tmp_tuple_element_316 = tmp_QtWidgets$class_creation_59__bases;
            Py_INCREF(tmp_tuple_element_316);
            PyTuple_SET_ITEM(tmp_args_name_159, 1, tmp_tuple_element_316);
            tmp_tuple_element_316 = locals_PyQt5$uic$Compiler$qtproxies_440;
            Py_INCREF(tmp_tuple_element_316);
            PyTuple_SET_ITEM(tmp_args_name_159, 2, tmp_tuple_element_316);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_59__class_decl_dict);
            tmp_kw_name_159 = tmp_QtWidgets$class_creation_59__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 440;
            tmp_assign_source_587 = CALL_FUNCTION(tmp_called_name_171, tmp_args_name_159, tmp_kw_name_159);
            Py_DECREF(tmp_args_name_159);
            if (tmp_assign_source_587 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_2 = "o";
                goto try_except_handler_241;
            }
            assert(outline_79_var___class__ == NULL);
            outline_79_var___class__ = tmp_assign_source_587;
        }
        CHECK_OBJECT(outline_79_var___class__);
        tmp_dictset_value = outline_79_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_241;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_241:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_440);
        locals_PyQt5$uic$Compiler$qtproxies_440 = NULL;
        goto try_return_handler_240;
        // Exception handler code:
        try_except_handler_241:;
        exception_keeper_type_236 = exception_type;
        exception_keeper_value_236 = exception_value;
        exception_keeper_tb_236 = exception_tb;
        exception_keeper_lineno_236 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_440);
        locals_PyQt5$uic$Compiler$qtproxies_440 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_236;
        exception_value = exception_keeper_value_236;
        exception_tb = exception_keeper_tb_236;
        exception_lineno = exception_keeper_lineno_236;

        goto try_except_handler_240;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_240:;
        CHECK_OBJECT((PyObject *)outline_79_var___class__);
        Py_DECREF(outline_79_var___class__);
        outline_79_var___class__ = NULL;

        goto outline_result_80;
        // Exception handler code:
        try_except_handler_240:;
        exception_keeper_type_237 = exception_type;
        exception_keeper_value_237 = exception_value;
        exception_keeper_tb_237 = exception_tb;
        exception_keeper_lineno_237 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_237;
        exception_value = exception_keeper_value_237;
        exception_tb = exception_keeper_tb_237;
        exception_lineno = exception_keeper_lineno_237;

        goto outline_exception_80;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_80:;
        exception_lineno = 440;
        goto try_except_handler_239;
        outline_result_80:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QTreeWidget, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 440;
            type_description_2 = "o";
            goto try_except_handler_239;
        }
        goto try_end_80;
        // Exception handler code:
        try_except_handler_239:;
        exception_keeper_type_238 = exception_type;
        exception_keeper_value_238 = exception_value;
        exception_keeper_tb_238 = exception_tb;
        exception_keeper_lineno_238 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_59__bases_orig);
        tmp_QtWidgets$class_creation_59__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_59__bases);
        tmp_QtWidgets$class_creation_59__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_59__class_decl_dict);
        tmp_QtWidgets$class_creation_59__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_59__metaclass);
        tmp_QtWidgets$class_creation_59__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_59__prepared);
        tmp_QtWidgets$class_creation_59__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_238;
        exception_value = exception_keeper_value_238;
        exception_tb = exception_keeper_tb_238;
        exception_lineno = exception_keeper_lineno_238;

        goto frame_exception_exit_12;
        // End of try:
        try_end_80:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_59__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_59__bases_orig);
        tmp_QtWidgets$class_creation_59__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_59__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_59__bases);
        tmp_QtWidgets$class_creation_59__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_59__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_59__class_decl_dict);
        tmp_QtWidgets$class_creation_59__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_59__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_59__metaclass);
        tmp_QtWidgets$class_creation_59__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_59__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_59__prepared);
        tmp_QtWidgets$class_creation_59__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_588;
            PyObject *tmp_tuple_element_317;
            PyObject *tmp_mvar_value_81;
            tmp_tuple_element_317 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_317 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_81 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_81 == NULL)) {
                        tmp_mvar_value_81 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_81 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 452;
                        type_description_2 = "o";
                        goto try_except_handler_242;
                    }

                    tmp_tuple_element_317 = tmp_mvar_value_81;
                    Py_INCREF(tmp_tuple_element_317);
                }
            }

            tmp_assign_source_588 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_588, 0, tmp_tuple_element_317);
            assert(tmp_QtWidgets$class_creation_60__bases_orig == NULL);
            tmp_QtWidgets$class_creation_60__bases_orig = tmp_assign_source_588;
        }
        {
            PyObject *tmp_assign_source_589;
            PyObject *tmp_dircall_arg1_81;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases_orig);
            tmp_dircall_arg1_81 = tmp_QtWidgets$class_creation_60__bases_orig;
            Py_INCREF(tmp_dircall_arg1_81);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_81};
                tmp_assign_source_589 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_589 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            assert(tmp_QtWidgets$class_creation_60__bases == NULL);
            tmp_QtWidgets$class_creation_60__bases = tmp_assign_source_589;
        }
        {
            PyObject *tmp_assign_source_590;
            tmp_assign_source_590 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_60__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_60__class_decl_dict = tmp_assign_source_590;
        }
        {
            PyObject *tmp_assign_source_591;
            PyObject *tmp_metaclass_name_81;
            nuitka_bool tmp_condition_result_483;
            PyObject *tmp_key_name_241;
            PyObject *tmp_dict_name_241;
            PyObject *tmp_dict_name_242;
            PyObject *tmp_key_name_242;
            nuitka_bool tmp_condition_result_484;
            int tmp_truth_name_81;
            PyObject *tmp_type_arg_161;
            PyObject *tmp_subscribed_name_81;
            PyObject *tmp_subscript_name_81;
            PyObject *tmp_bases_name_81;
            tmp_key_name_241 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__class_decl_dict);
            tmp_dict_name_241 = tmp_QtWidgets$class_creation_60__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_241, tmp_key_name_241);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            tmp_condition_result_483 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_483 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_163;
            } else {
                goto condexpr_false_163;
            }
            condexpr_true_163:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__class_decl_dict);
            tmp_dict_name_242 = tmp_QtWidgets$class_creation_60__class_decl_dict;
            tmp_key_name_242 = const_str_plain_metaclass;
            tmp_metaclass_name_81 = DICT_GET_ITEM(tmp_dict_name_242, tmp_key_name_242);
            if (tmp_metaclass_name_81 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            goto condexpr_end_163;
            condexpr_false_163:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases);
            tmp_truth_name_81 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_60__bases);
            if (tmp_truth_name_81 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            tmp_condition_result_484 = tmp_truth_name_81 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_484 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_164;
            } else {
                goto condexpr_false_164;
            }
            condexpr_true_164:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases);
            tmp_subscribed_name_81 = tmp_QtWidgets$class_creation_60__bases;
            tmp_subscript_name_81 = const_int_0;
            tmp_type_arg_161 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_81, tmp_subscript_name_81, 0);
            if (tmp_type_arg_161 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            tmp_metaclass_name_81 = BUILTIN_TYPE1(tmp_type_arg_161);
            Py_DECREF(tmp_type_arg_161);
            if (tmp_metaclass_name_81 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            goto condexpr_end_164;
            condexpr_false_164:;
            tmp_metaclass_name_81 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_81);
            condexpr_end_164:;
            condexpr_end_163:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases);
            tmp_bases_name_81 = tmp_QtWidgets$class_creation_60__bases;
            tmp_assign_source_591 = SELECT_METACLASS(tmp_metaclass_name_81, tmp_bases_name_81);
            Py_DECREF(tmp_metaclass_name_81);
            if (tmp_assign_source_591 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            assert(tmp_QtWidgets$class_creation_60__metaclass == NULL);
            tmp_QtWidgets$class_creation_60__metaclass = tmp_assign_source_591;
        }
        {
            nuitka_bool tmp_condition_result_485;
            PyObject *tmp_key_name_243;
            PyObject *tmp_dict_name_243;
            tmp_key_name_243 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__class_decl_dict);
            tmp_dict_name_243 = tmp_QtWidgets$class_creation_60__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_243, tmp_key_name_243);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            tmp_condition_result_485 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_485 == NUITKA_BOOL_TRUE) {
                goto branch_yes_321;
            } else {
                goto branch_no_321;
            }
            branch_yes_321:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_60__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_242;
            }
            branch_no_321:;
        }
        {
            nuitka_bool tmp_condition_result_486;
            PyObject *tmp_source_name_328;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__metaclass);
            tmp_source_name_328 = tmp_QtWidgets$class_creation_60__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_328, const_str_plain___prepare__);
            tmp_condition_result_486 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_486 == NUITKA_BOOL_TRUE) {
                goto branch_yes_322;
            } else {
                goto branch_no_322;
            }
            branch_yes_322:;
            {
                PyObject *tmp_assign_source_592;
                PyObject *tmp_called_name_172;
                PyObject *tmp_source_name_329;
                PyObject *tmp_args_name_160;
                PyObject *tmp_tuple_element_318;
                PyObject *tmp_kw_name_160;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_60__metaclass);
                tmp_source_name_329 = tmp_QtWidgets$class_creation_60__metaclass;
                tmp_called_name_172 = LOOKUP_ATTRIBUTE(tmp_source_name_329, const_str_plain___prepare__);
                if (tmp_called_name_172 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 452;
                    type_description_2 = "o";
                    goto try_except_handler_242;
                }
                tmp_tuple_element_318 = const_str_plain_QAbstractButton;
                tmp_args_name_160 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_318);
                PyTuple_SET_ITEM(tmp_args_name_160, 0, tmp_tuple_element_318);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases);
                tmp_tuple_element_318 = tmp_QtWidgets$class_creation_60__bases;
                Py_INCREF(tmp_tuple_element_318);
                PyTuple_SET_ITEM(tmp_args_name_160, 1, tmp_tuple_element_318);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_60__class_decl_dict);
                tmp_kw_name_160 = tmp_QtWidgets$class_creation_60__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 452;
                tmp_assign_source_592 = CALL_FUNCTION(tmp_called_name_172, tmp_args_name_160, tmp_kw_name_160);
                Py_DECREF(tmp_called_name_172);
                Py_DECREF(tmp_args_name_160);
                if (tmp_assign_source_592 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 452;
                    type_description_2 = "o";
                    goto try_except_handler_242;
                }
                assert(tmp_QtWidgets$class_creation_60__prepared == NULL);
                tmp_QtWidgets$class_creation_60__prepared = tmp_assign_source_592;
            }
            {
                nuitka_bool tmp_condition_result_487;
                PyObject *tmp_operand_name_81;
                PyObject *tmp_source_name_330;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_60__prepared);
                tmp_source_name_330 = tmp_QtWidgets$class_creation_60__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_330, const_str_plain___getitem__);
                tmp_operand_name_81 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_81);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 452;
                    type_description_2 = "o";
                    goto try_except_handler_242;
                }
                tmp_condition_result_487 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_487 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_323;
                } else {
                    goto branch_no_323;
                }
                branch_yes_323:;
                {
                    PyObject *tmp_raise_type_81;
                    PyObject *tmp_raise_value_81;
                    PyObject *tmp_left_name_81;
                    PyObject *tmp_right_name_81;
                    PyObject *tmp_tuple_element_319;
                    PyObject *tmp_getattr_target_81;
                    PyObject *tmp_getattr_attr_81;
                    PyObject *tmp_getattr_default_81;
                    PyObject *tmp_source_name_331;
                    PyObject *tmp_type_arg_162;
                    tmp_raise_type_81 = PyExc_TypeError;
                    tmp_left_name_81 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_60__metaclass);
                    tmp_getattr_target_81 = tmp_QtWidgets$class_creation_60__metaclass;
                    tmp_getattr_attr_81 = const_str_plain___name__;
                    tmp_getattr_default_81 = const_str_angle_metaclass;
                    tmp_tuple_element_319 = BUILTIN_GETATTR(tmp_getattr_target_81, tmp_getattr_attr_81, tmp_getattr_default_81);
                    if (tmp_tuple_element_319 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 452;
                        type_description_2 = "o";
                        goto try_except_handler_242;
                    }
                    tmp_right_name_81 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_81, 0, tmp_tuple_element_319);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_60__prepared);
                    tmp_type_arg_162 = tmp_QtWidgets$class_creation_60__prepared;
                    tmp_source_name_331 = BUILTIN_TYPE1(tmp_type_arg_162);
                    assert(!(tmp_source_name_331 == NULL));
                    tmp_tuple_element_319 = LOOKUP_ATTRIBUTE(tmp_source_name_331, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_331);
                    if (tmp_tuple_element_319 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_81);

                        exception_lineno = 452;
                        type_description_2 = "o";
                        goto try_except_handler_242;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_81, 1, tmp_tuple_element_319);
                    tmp_raise_value_81 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_81, tmp_right_name_81);
                    Py_DECREF(tmp_right_name_81);
                    if (tmp_raise_value_81 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 452;
                        type_description_2 = "o";
                        goto try_except_handler_242;
                    }
                    exception_type = tmp_raise_type_81;
                    Py_INCREF(tmp_raise_type_81);
                    exception_value = tmp_raise_value_81;
                    exception_lineno = 452;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_242;
                }
                branch_no_323:;
            }
            goto branch_end_322;
            branch_no_322:;
            {
                PyObject *tmp_assign_source_593;
                tmp_assign_source_593 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_60__prepared == NULL);
                tmp_QtWidgets$class_creation_60__prepared = tmp_assign_source_593;
            }
            branch_end_322:;
        }
        {
            PyObject *tmp_set_locals_81;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__prepared);
            tmp_set_locals_81 = tmp_QtWidgets$class_creation_60__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_452 = tmp_set_locals_81;
            Py_INCREF(tmp_set_locals_81);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_452, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_2 = "o";
            goto try_except_handler_244;
        }
        tmp_dictset_value = const_str_digest_42acd81bf0526310bebd9713acd5dd71;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_452, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_2 = "o";
            goto try_except_handler_244;
        }
        {
            nuitka_bool tmp_condition_result_488;
            PyObject *tmp_compexpr_left_81;
            PyObject *tmp_compexpr_right_81;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases);
            tmp_compexpr_left_81 = tmp_QtWidgets$class_creation_60__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases_orig);
            tmp_compexpr_right_81 = tmp_QtWidgets$class_creation_60__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_81, tmp_compexpr_right_81);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_244;
            }
            tmp_condition_result_488 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_488 == NUITKA_BOOL_TRUE) {
                goto branch_yes_324;
            } else {
                goto branch_no_324;
            }
            branch_yes_324:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_60__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_452, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_244;
            }
            branch_no_324:;
        }
        {
            PyObject *tmp_assign_source_594;
            PyObject *tmp_called_name_173;
            PyObject *tmp_args_name_161;
            PyObject *tmp_tuple_element_320;
            PyObject *tmp_kw_name_161;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__metaclass);
            tmp_called_name_173 = tmp_QtWidgets$class_creation_60__metaclass;
            tmp_tuple_element_320 = const_str_plain_QAbstractButton;
            tmp_args_name_161 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_320);
            PyTuple_SET_ITEM(tmp_args_name_161, 0, tmp_tuple_element_320);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__bases);
            tmp_tuple_element_320 = tmp_QtWidgets$class_creation_60__bases;
            Py_INCREF(tmp_tuple_element_320);
            PyTuple_SET_ITEM(tmp_args_name_161, 1, tmp_tuple_element_320);
            tmp_tuple_element_320 = locals_PyQt5$uic$Compiler$qtproxies_452;
            Py_INCREF(tmp_tuple_element_320);
            PyTuple_SET_ITEM(tmp_args_name_161, 2, tmp_tuple_element_320);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_60__class_decl_dict);
            tmp_kw_name_161 = tmp_QtWidgets$class_creation_60__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 452;
            tmp_assign_source_594 = CALL_FUNCTION(tmp_called_name_173, tmp_args_name_161, tmp_kw_name_161);
            Py_DECREF(tmp_args_name_161);
            if (tmp_assign_source_594 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_2 = "o";
                goto try_except_handler_244;
            }
            assert(outline_80_var___class__ == NULL);
            outline_80_var___class__ = tmp_assign_source_594;
        }
        CHECK_OBJECT(outline_80_var___class__);
        tmp_dictset_value = outline_80_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_244;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_244:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_452);
        locals_PyQt5$uic$Compiler$qtproxies_452 = NULL;
        goto try_return_handler_243;
        // Exception handler code:
        try_except_handler_244:;
        exception_keeper_type_239 = exception_type;
        exception_keeper_value_239 = exception_value;
        exception_keeper_tb_239 = exception_tb;
        exception_keeper_lineno_239 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_452);
        locals_PyQt5$uic$Compiler$qtproxies_452 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_239;
        exception_value = exception_keeper_value_239;
        exception_tb = exception_keeper_tb_239;
        exception_lineno = exception_keeper_lineno_239;

        goto try_except_handler_243;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_243:;
        CHECK_OBJECT((PyObject *)outline_80_var___class__);
        Py_DECREF(outline_80_var___class__);
        outline_80_var___class__ = NULL;

        goto outline_result_81;
        // Exception handler code:
        try_except_handler_243:;
        exception_keeper_type_240 = exception_type;
        exception_keeper_value_240 = exception_value;
        exception_keeper_tb_240 = exception_tb;
        exception_keeper_lineno_240 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_240;
        exception_value = exception_keeper_value_240;
        exception_tb = exception_keeper_tb_240;
        exception_lineno = exception_keeper_lineno_240;

        goto outline_exception_81;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_81:;
        exception_lineno = 452;
        goto try_except_handler_242;
        outline_result_81:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractButton, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_2 = "o";
            goto try_except_handler_242;
        }
        goto try_end_81;
        // Exception handler code:
        try_except_handler_242:;
        exception_keeper_type_241 = exception_type;
        exception_keeper_value_241 = exception_value;
        exception_keeper_tb_241 = exception_tb;
        exception_keeper_lineno_241 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_60__bases_orig);
        tmp_QtWidgets$class_creation_60__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_60__bases);
        tmp_QtWidgets$class_creation_60__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_60__class_decl_dict);
        tmp_QtWidgets$class_creation_60__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_60__metaclass);
        tmp_QtWidgets$class_creation_60__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_60__prepared);
        tmp_QtWidgets$class_creation_60__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_241;
        exception_value = exception_keeper_value_241;
        exception_tb = exception_keeper_tb_241;
        exception_lineno = exception_keeper_lineno_241;

        goto frame_exception_exit_12;
        // End of try:
        try_end_81:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_60__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_60__bases_orig);
        tmp_QtWidgets$class_creation_60__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_60__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_60__bases);
        tmp_QtWidgets$class_creation_60__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_60__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_60__class_decl_dict);
        tmp_QtWidgets$class_creation_60__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_60__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_60__metaclass);
        tmp_QtWidgets$class_creation_60__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_60__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_60__prepared);
        tmp_QtWidgets$class_creation_60__prepared = NULL;

        {
            PyObject *tmp_assign_source_595;
            PyObject *tmp_tuple_element_321;
            tmp_tuple_element_321 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractButton);

            if (tmp_tuple_element_321 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 2090 ], 37, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 453;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_321 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_595 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_595, 0, tmp_tuple_element_321);
            assert(tmp_QtWidgets$class_creation_61__bases_orig == NULL);
            tmp_QtWidgets$class_creation_61__bases_orig = tmp_assign_source_595;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_596;
            PyObject *tmp_dircall_arg1_82;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases_orig);
            tmp_dircall_arg1_82 = tmp_QtWidgets$class_creation_61__bases_orig;
            Py_INCREF(tmp_dircall_arg1_82);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_82};
                tmp_assign_source_596 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_596 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            assert(tmp_QtWidgets$class_creation_61__bases == NULL);
            tmp_QtWidgets$class_creation_61__bases = tmp_assign_source_596;
        }
        {
            PyObject *tmp_assign_source_597;
            tmp_assign_source_597 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_61__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_61__class_decl_dict = tmp_assign_source_597;
        }
        {
            PyObject *tmp_assign_source_598;
            PyObject *tmp_metaclass_name_82;
            nuitka_bool tmp_condition_result_489;
            PyObject *tmp_key_name_244;
            PyObject *tmp_dict_name_244;
            PyObject *tmp_dict_name_245;
            PyObject *tmp_key_name_245;
            nuitka_bool tmp_condition_result_490;
            int tmp_truth_name_82;
            PyObject *tmp_type_arg_163;
            PyObject *tmp_subscribed_name_82;
            PyObject *tmp_subscript_name_82;
            PyObject *tmp_bases_name_82;
            tmp_key_name_244 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__class_decl_dict);
            tmp_dict_name_244 = tmp_QtWidgets$class_creation_61__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_244, tmp_key_name_244);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            tmp_condition_result_489 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_489 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_165;
            } else {
                goto condexpr_false_165;
            }
            condexpr_true_165:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__class_decl_dict);
            tmp_dict_name_245 = tmp_QtWidgets$class_creation_61__class_decl_dict;
            tmp_key_name_245 = const_str_plain_metaclass;
            tmp_metaclass_name_82 = DICT_GET_ITEM(tmp_dict_name_245, tmp_key_name_245);
            if (tmp_metaclass_name_82 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            goto condexpr_end_165;
            condexpr_false_165:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases);
            tmp_truth_name_82 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_61__bases);
            if (tmp_truth_name_82 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            tmp_condition_result_490 = tmp_truth_name_82 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_490 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_166;
            } else {
                goto condexpr_false_166;
            }
            condexpr_true_166:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases);
            tmp_subscribed_name_82 = tmp_QtWidgets$class_creation_61__bases;
            tmp_subscript_name_82 = const_int_0;
            tmp_type_arg_163 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_82, tmp_subscript_name_82, 0);
            if (tmp_type_arg_163 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            tmp_metaclass_name_82 = BUILTIN_TYPE1(tmp_type_arg_163);
            Py_DECREF(tmp_type_arg_163);
            if (tmp_metaclass_name_82 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            goto condexpr_end_166;
            condexpr_false_166:;
            tmp_metaclass_name_82 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_82);
            condexpr_end_166:;
            condexpr_end_165:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases);
            tmp_bases_name_82 = tmp_QtWidgets$class_creation_61__bases;
            tmp_assign_source_598 = SELECT_METACLASS(tmp_metaclass_name_82, tmp_bases_name_82);
            Py_DECREF(tmp_metaclass_name_82);
            if (tmp_assign_source_598 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            assert(tmp_QtWidgets$class_creation_61__metaclass == NULL);
            tmp_QtWidgets$class_creation_61__metaclass = tmp_assign_source_598;
        }
        {
            nuitka_bool tmp_condition_result_491;
            PyObject *tmp_key_name_246;
            PyObject *tmp_dict_name_246;
            tmp_key_name_246 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__class_decl_dict);
            tmp_dict_name_246 = tmp_QtWidgets$class_creation_61__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_246, tmp_key_name_246);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            tmp_condition_result_491 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_491 == NUITKA_BOOL_TRUE) {
                goto branch_yes_325;
            } else {
                goto branch_no_325;
            }
            branch_yes_325:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_61__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_245;
            }
            branch_no_325:;
        }
        {
            nuitka_bool tmp_condition_result_492;
            PyObject *tmp_source_name_332;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__metaclass);
            tmp_source_name_332 = tmp_QtWidgets$class_creation_61__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_332, const_str_plain___prepare__);
            tmp_condition_result_492 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_492 == NUITKA_BOOL_TRUE) {
                goto branch_yes_326;
            } else {
                goto branch_no_326;
            }
            branch_yes_326:;
            {
                PyObject *tmp_assign_source_599;
                PyObject *tmp_called_name_174;
                PyObject *tmp_source_name_333;
                PyObject *tmp_args_name_162;
                PyObject *tmp_tuple_element_322;
                PyObject *tmp_kw_name_162;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_61__metaclass);
                tmp_source_name_333 = tmp_QtWidgets$class_creation_61__metaclass;
                tmp_called_name_174 = LOOKUP_ATTRIBUTE(tmp_source_name_333, const_str_plain___prepare__);
                if (tmp_called_name_174 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 453;
                    type_description_2 = "o";
                    goto try_except_handler_245;
                }
                tmp_tuple_element_322 = const_str_plain_QCheckBox;
                tmp_args_name_162 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_322);
                PyTuple_SET_ITEM(tmp_args_name_162, 0, tmp_tuple_element_322);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases);
                tmp_tuple_element_322 = tmp_QtWidgets$class_creation_61__bases;
                Py_INCREF(tmp_tuple_element_322);
                PyTuple_SET_ITEM(tmp_args_name_162, 1, tmp_tuple_element_322);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_61__class_decl_dict);
                tmp_kw_name_162 = tmp_QtWidgets$class_creation_61__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 453;
                tmp_assign_source_599 = CALL_FUNCTION(tmp_called_name_174, tmp_args_name_162, tmp_kw_name_162);
                Py_DECREF(tmp_called_name_174);
                Py_DECREF(tmp_args_name_162);
                if (tmp_assign_source_599 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 453;
                    type_description_2 = "o";
                    goto try_except_handler_245;
                }
                assert(tmp_QtWidgets$class_creation_61__prepared == NULL);
                tmp_QtWidgets$class_creation_61__prepared = tmp_assign_source_599;
            }
            {
                nuitka_bool tmp_condition_result_493;
                PyObject *tmp_operand_name_82;
                PyObject *tmp_source_name_334;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_61__prepared);
                tmp_source_name_334 = tmp_QtWidgets$class_creation_61__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_334, const_str_plain___getitem__);
                tmp_operand_name_82 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_82);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 453;
                    type_description_2 = "o";
                    goto try_except_handler_245;
                }
                tmp_condition_result_493 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_493 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_327;
                } else {
                    goto branch_no_327;
                }
                branch_yes_327:;
                {
                    PyObject *tmp_raise_type_82;
                    PyObject *tmp_raise_value_82;
                    PyObject *tmp_left_name_82;
                    PyObject *tmp_right_name_82;
                    PyObject *tmp_tuple_element_323;
                    PyObject *tmp_getattr_target_82;
                    PyObject *tmp_getattr_attr_82;
                    PyObject *tmp_getattr_default_82;
                    PyObject *tmp_source_name_335;
                    PyObject *tmp_type_arg_164;
                    tmp_raise_type_82 = PyExc_TypeError;
                    tmp_left_name_82 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_61__metaclass);
                    tmp_getattr_target_82 = tmp_QtWidgets$class_creation_61__metaclass;
                    tmp_getattr_attr_82 = const_str_plain___name__;
                    tmp_getattr_default_82 = const_str_angle_metaclass;
                    tmp_tuple_element_323 = BUILTIN_GETATTR(tmp_getattr_target_82, tmp_getattr_attr_82, tmp_getattr_default_82);
                    if (tmp_tuple_element_323 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 453;
                        type_description_2 = "o";
                        goto try_except_handler_245;
                    }
                    tmp_right_name_82 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_82, 0, tmp_tuple_element_323);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_61__prepared);
                    tmp_type_arg_164 = tmp_QtWidgets$class_creation_61__prepared;
                    tmp_source_name_335 = BUILTIN_TYPE1(tmp_type_arg_164);
                    assert(!(tmp_source_name_335 == NULL));
                    tmp_tuple_element_323 = LOOKUP_ATTRIBUTE(tmp_source_name_335, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_335);
                    if (tmp_tuple_element_323 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_82);

                        exception_lineno = 453;
                        type_description_2 = "o";
                        goto try_except_handler_245;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_82, 1, tmp_tuple_element_323);
                    tmp_raise_value_82 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_82, tmp_right_name_82);
                    Py_DECREF(tmp_right_name_82);
                    if (tmp_raise_value_82 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 453;
                        type_description_2 = "o";
                        goto try_except_handler_245;
                    }
                    exception_type = tmp_raise_type_82;
                    Py_INCREF(tmp_raise_type_82);
                    exception_value = tmp_raise_value_82;
                    exception_lineno = 453;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_245;
                }
                branch_no_327:;
            }
            goto branch_end_326;
            branch_no_326:;
            {
                PyObject *tmp_assign_source_600;
                tmp_assign_source_600 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_61__prepared == NULL);
                tmp_QtWidgets$class_creation_61__prepared = tmp_assign_source_600;
            }
            branch_end_326:;
        }
        {
            PyObject *tmp_set_locals_82;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__prepared);
            tmp_set_locals_82 = tmp_QtWidgets$class_creation_61__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_453 = tmp_set_locals_82;
            Py_INCREF(tmp_set_locals_82);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_453, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 453;
            type_description_2 = "o";
            goto try_except_handler_247;
        }
        tmp_dictset_value = const_str_digest_265fdac0f13dfed40e92824ef8373d65;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_453, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 453;
            type_description_2 = "o";
            goto try_except_handler_247;
        }
        {
            nuitka_bool tmp_condition_result_494;
            PyObject *tmp_compexpr_left_82;
            PyObject *tmp_compexpr_right_82;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases);
            tmp_compexpr_left_82 = tmp_QtWidgets$class_creation_61__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases_orig);
            tmp_compexpr_right_82 = tmp_QtWidgets$class_creation_61__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_82, tmp_compexpr_right_82);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_247;
            }
            tmp_condition_result_494 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_494 == NUITKA_BOOL_TRUE) {
                goto branch_yes_328;
            } else {
                goto branch_no_328;
            }
            branch_yes_328:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_61__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_453, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_247;
            }
            branch_no_328:;
        }
        {
            PyObject *tmp_assign_source_601;
            PyObject *tmp_called_name_175;
            PyObject *tmp_args_name_163;
            PyObject *tmp_tuple_element_324;
            PyObject *tmp_kw_name_163;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__metaclass);
            tmp_called_name_175 = tmp_QtWidgets$class_creation_61__metaclass;
            tmp_tuple_element_324 = const_str_plain_QCheckBox;
            tmp_args_name_163 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_324);
            PyTuple_SET_ITEM(tmp_args_name_163, 0, tmp_tuple_element_324);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__bases);
            tmp_tuple_element_324 = tmp_QtWidgets$class_creation_61__bases;
            Py_INCREF(tmp_tuple_element_324);
            PyTuple_SET_ITEM(tmp_args_name_163, 1, tmp_tuple_element_324);
            tmp_tuple_element_324 = locals_PyQt5$uic$Compiler$qtproxies_453;
            Py_INCREF(tmp_tuple_element_324);
            PyTuple_SET_ITEM(tmp_args_name_163, 2, tmp_tuple_element_324);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_61__class_decl_dict);
            tmp_kw_name_163 = tmp_QtWidgets$class_creation_61__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 453;
            tmp_assign_source_601 = CALL_FUNCTION(tmp_called_name_175, tmp_args_name_163, tmp_kw_name_163);
            Py_DECREF(tmp_args_name_163);
            if (tmp_assign_source_601 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_2 = "o";
                goto try_except_handler_247;
            }
            assert(outline_81_var___class__ == NULL);
            outline_81_var___class__ = tmp_assign_source_601;
        }
        CHECK_OBJECT(outline_81_var___class__);
        tmp_dictset_value = outline_81_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_247;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_247:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_453);
        locals_PyQt5$uic$Compiler$qtproxies_453 = NULL;
        goto try_return_handler_246;
        // Exception handler code:
        try_except_handler_247:;
        exception_keeper_type_242 = exception_type;
        exception_keeper_value_242 = exception_value;
        exception_keeper_tb_242 = exception_tb;
        exception_keeper_lineno_242 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_453);
        locals_PyQt5$uic$Compiler$qtproxies_453 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_242;
        exception_value = exception_keeper_value_242;
        exception_tb = exception_keeper_tb_242;
        exception_lineno = exception_keeper_lineno_242;

        goto try_except_handler_246;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_246:;
        CHECK_OBJECT((PyObject *)outline_81_var___class__);
        Py_DECREF(outline_81_var___class__);
        outline_81_var___class__ = NULL;

        goto outline_result_82;
        // Exception handler code:
        try_except_handler_246:;
        exception_keeper_type_243 = exception_type;
        exception_keeper_value_243 = exception_value;
        exception_keeper_tb_243 = exception_tb;
        exception_keeper_lineno_243 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_243;
        exception_value = exception_keeper_value_243;
        exception_tb = exception_keeper_tb_243;
        exception_lineno = exception_keeper_lineno_243;

        goto outline_exception_82;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_82:;
        exception_lineno = 453;
        goto try_except_handler_245;
        outline_result_82:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QCheckBox, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 453;
            type_description_2 = "o";
            goto try_except_handler_245;
        }
        goto try_end_82;
        // Exception handler code:
        try_except_handler_245:;
        exception_keeper_type_244 = exception_type;
        exception_keeper_value_244 = exception_value;
        exception_keeper_tb_244 = exception_tb;
        exception_keeper_lineno_244 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_61__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_61__bases_orig);
        tmp_QtWidgets$class_creation_61__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_61__bases);
        tmp_QtWidgets$class_creation_61__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_61__class_decl_dict);
        tmp_QtWidgets$class_creation_61__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_61__metaclass);
        tmp_QtWidgets$class_creation_61__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_61__prepared);
        tmp_QtWidgets$class_creation_61__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_244;
        exception_value = exception_keeper_value_244;
        exception_tb = exception_keeper_tb_244;
        exception_lineno = exception_keeper_lineno_244;

        goto frame_exception_exit_12;
        // End of try:
        try_end_82:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_61__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_61__bases_orig);
        tmp_QtWidgets$class_creation_61__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_61__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_61__bases);
        tmp_QtWidgets$class_creation_61__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_61__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_61__class_decl_dict);
        tmp_QtWidgets$class_creation_61__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_61__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_61__metaclass);
        tmp_QtWidgets$class_creation_61__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_61__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_61__prepared);
        tmp_QtWidgets$class_creation_61__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_602;
            PyObject *tmp_tuple_element_325;
            PyObject *tmp_mvar_value_82;
            tmp_tuple_element_325 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractButton);

            if (tmp_tuple_element_325 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_82 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractButton);

                    if (unlikely(tmp_mvar_value_82 == NULL)) {
                        tmp_mvar_value_82 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractButton);
                    }

                    if (tmp_mvar_value_82 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 2090 ], 37, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 454;
                        type_description_2 = "o";
                        goto try_except_handler_248;
                    }

                    tmp_tuple_element_325 = tmp_mvar_value_82;
                    Py_INCREF(tmp_tuple_element_325);
                }
            }

            tmp_assign_source_602 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_602, 0, tmp_tuple_element_325);
            assert(tmp_QtWidgets$class_creation_62__bases_orig == NULL);
            tmp_QtWidgets$class_creation_62__bases_orig = tmp_assign_source_602;
        }
        {
            PyObject *tmp_assign_source_603;
            PyObject *tmp_dircall_arg1_83;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases_orig);
            tmp_dircall_arg1_83 = tmp_QtWidgets$class_creation_62__bases_orig;
            Py_INCREF(tmp_dircall_arg1_83);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_83};
                tmp_assign_source_603 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_603 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            assert(tmp_QtWidgets$class_creation_62__bases == NULL);
            tmp_QtWidgets$class_creation_62__bases = tmp_assign_source_603;
        }
        {
            PyObject *tmp_assign_source_604;
            tmp_assign_source_604 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_62__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_62__class_decl_dict = tmp_assign_source_604;
        }
        {
            PyObject *tmp_assign_source_605;
            PyObject *tmp_metaclass_name_83;
            nuitka_bool tmp_condition_result_495;
            PyObject *tmp_key_name_247;
            PyObject *tmp_dict_name_247;
            PyObject *tmp_dict_name_248;
            PyObject *tmp_key_name_248;
            nuitka_bool tmp_condition_result_496;
            int tmp_truth_name_83;
            PyObject *tmp_type_arg_165;
            PyObject *tmp_subscribed_name_83;
            PyObject *tmp_subscript_name_83;
            PyObject *tmp_bases_name_83;
            tmp_key_name_247 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__class_decl_dict);
            tmp_dict_name_247 = tmp_QtWidgets$class_creation_62__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_247, tmp_key_name_247);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            tmp_condition_result_495 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_495 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_167;
            } else {
                goto condexpr_false_167;
            }
            condexpr_true_167:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__class_decl_dict);
            tmp_dict_name_248 = tmp_QtWidgets$class_creation_62__class_decl_dict;
            tmp_key_name_248 = const_str_plain_metaclass;
            tmp_metaclass_name_83 = DICT_GET_ITEM(tmp_dict_name_248, tmp_key_name_248);
            if (tmp_metaclass_name_83 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            goto condexpr_end_167;
            condexpr_false_167:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases);
            tmp_truth_name_83 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_62__bases);
            if (tmp_truth_name_83 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            tmp_condition_result_496 = tmp_truth_name_83 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_496 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_168;
            } else {
                goto condexpr_false_168;
            }
            condexpr_true_168:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases);
            tmp_subscribed_name_83 = tmp_QtWidgets$class_creation_62__bases;
            tmp_subscript_name_83 = const_int_0;
            tmp_type_arg_165 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_83, tmp_subscript_name_83, 0);
            if (tmp_type_arg_165 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            tmp_metaclass_name_83 = BUILTIN_TYPE1(tmp_type_arg_165);
            Py_DECREF(tmp_type_arg_165);
            if (tmp_metaclass_name_83 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            goto condexpr_end_168;
            condexpr_false_168:;
            tmp_metaclass_name_83 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_83);
            condexpr_end_168:;
            condexpr_end_167:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases);
            tmp_bases_name_83 = tmp_QtWidgets$class_creation_62__bases;
            tmp_assign_source_605 = SELECT_METACLASS(tmp_metaclass_name_83, tmp_bases_name_83);
            Py_DECREF(tmp_metaclass_name_83);
            if (tmp_assign_source_605 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            assert(tmp_QtWidgets$class_creation_62__metaclass == NULL);
            tmp_QtWidgets$class_creation_62__metaclass = tmp_assign_source_605;
        }
        {
            nuitka_bool tmp_condition_result_497;
            PyObject *tmp_key_name_249;
            PyObject *tmp_dict_name_249;
            tmp_key_name_249 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__class_decl_dict);
            tmp_dict_name_249 = tmp_QtWidgets$class_creation_62__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_249, tmp_key_name_249);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            tmp_condition_result_497 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_497 == NUITKA_BOOL_TRUE) {
                goto branch_yes_329;
            } else {
                goto branch_no_329;
            }
            branch_yes_329:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_62__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_248;
            }
            branch_no_329:;
        }
        {
            nuitka_bool tmp_condition_result_498;
            PyObject *tmp_source_name_336;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__metaclass);
            tmp_source_name_336 = tmp_QtWidgets$class_creation_62__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_336, const_str_plain___prepare__);
            tmp_condition_result_498 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_498 == NUITKA_BOOL_TRUE) {
                goto branch_yes_330;
            } else {
                goto branch_no_330;
            }
            branch_yes_330:;
            {
                PyObject *tmp_assign_source_606;
                PyObject *tmp_called_name_176;
                PyObject *tmp_source_name_337;
                PyObject *tmp_args_name_164;
                PyObject *tmp_tuple_element_326;
                PyObject *tmp_kw_name_164;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_62__metaclass);
                tmp_source_name_337 = tmp_QtWidgets$class_creation_62__metaclass;
                tmp_called_name_176 = LOOKUP_ATTRIBUTE(tmp_source_name_337, const_str_plain___prepare__);
                if (tmp_called_name_176 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 454;
                    type_description_2 = "o";
                    goto try_except_handler_248;
                }
                tmp_tuple_element_326 = const_str_plain_QRadioButton;
                tmp_args_name_164 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_326);
                PyTuple_SET_ITEM(tmp_args_name_164, 0, tmp_tuple_element_326);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases);
                tmp_tuple_element_326 = tmp_QtWidgets$class_creation_62__bases;
                Py_INCREF(tmp_tuple_element_326);
                PyTuple_SET_ITEM(tmp_args_name_164, 1, tmp_tuple_element_326);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_62__class_decl_dict);
                tmp_kw_name_164 = tmp_QtWidgets$class_creation_62__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 454;
                tmp_assign_source_606 = CALL_FUNCTION(tmp_called_name_176, tmp_args_name_164, tmp_kw_name_164);
                Py_DECREF(tmp_called_name_176);
                Py_DECREF(tmp_args_name_164);
                if (tmp_assign_source_606 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 454;
                    type_description_2 = "o";
                    goto try_except_handler_248;
                }
                assert(tmp_QtWidgets$class_creation_62__prepared == NULL);
                tmp_QtWidgets$class_creation_62__prepared = tmp_assign_source_606;
            }
            {
                nuitka_bool tmp_condition_result_499;
                PyObject *tmp_operand_name_83;
                PyObject *tmp_source_name_338;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_62__prepared);
                tmp_source_name_338 = tmp_QtWidgets$class_creation_62__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_338, const_str_plain___getitem__);
                tmp_operand_name_83 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_83);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 454;
                    type_description_2 = "o";
                    goto try_except_handler_248;
                }
                tmp_condition_result_499 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_499 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_331;
                } else {
                    goto branch_no_331;
                }
                branch_yes_331:;
                {
                    PyObject *tmp_raise_type_83;
                    PyObject *tmp_raise_value_83;
                    PyObject *tmp_left_name_83;
                    PyObject *tmp_right_name_83;
                    PyObject *tmp_tuple_element_327;
                    PyObject *tmp_getattr_target_83;
                    PyObject *tmp_getattr_attr_83;
                    PyObject *tmp_getattr_default_83;
                    PyObject *tmp_source_name_339;
                    PyObject *tmp_type_arg_166;
                    tmp_raise_type_83 = PyExc_TypeError;
                    tmp_left_name_83 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_62__metaclass);
                    tmp_getattr_target_83 = tmp_QtWidgets$class_creation_62__metaclass;
                    tmp_getattr_attr_83 = const_str_plain___name__;
                    tmp_getattr_default_83 = const_str_angle_metaclass;
                    tmp_tuple_element_327 = BUILTIN_GETATTR(tmp_getattr_target_83, tmp_getattr_attr_83, tmp_getattr_default_83);
                    if (tmp_tuple_element_327 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 454;
                        type_description_2 = "o";
                        goto try_except_handler_248;
                    }
                    tmp_right_name_83 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_83, 0, tmp_tuple_element_327);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_62__prepared);
                    tmp_type_arg_166 = tmp_QtWidgets$class_creation_62__prepared;
                    tmp_source_name_339 = BUILTIN_TYPE1(tmp_type_arg_166);
                    assert(!(tmp_source_name_339 == NULL));
                    tmp_tuple_element_327 = LOOKUP_ATTRIBUTE(tmp_source_name_339, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_339);
                    if (tmp_tuple_element_327 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_83);

                        exception_lineno = 454;
                        type_description_2 = "o";
                        goto try_except_handler_248;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_83, 1, tmp_tuple_element_327);
                    tmp_raise_value_83 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_83, tmp_right_name_83);
                    Py_DECREF(tmp_right_name_83);
                    if (tmp_raise_value_83 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 454;
                        type_description_2 = "o";
                        goto try_except_handler_248;
                    }
                    exception_type = tmp_raise_type_83;
                    Py_INCREF(tmp_raise_type_83);
                    exception_value = tmp_raise_value_83;
                    exception_lineno = 454;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_248;
                }
                branch_no_331:;
            }
            goto branch_end_330;
            branch_no_330:;
            {
                PyObject *tmp_assign_source_607;
                tmp_assign_source_607 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_62__prepared == NULL);
                tmp_QtWidgets$class_creation_62__prepared = tmp_assign_source_607;
            }
            branch_end_330:;
        }
        {
            PyObject *tmp_set_locals_83;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__prepared);
            tmp_set_locals_83 = tmp_QtWidgets$class_creation_62__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_454 = tmp_set_locals_83;
            Py_INCREF(tmp_set_locals_83);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_454, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;
            type_description_2 = "o";
            goto try_except_handler_250;
        }
        tmp_dictset_value = const_str_digest_8d6215461f312bb3399dbff7458d5754;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_454, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;
            type_description_2 = "o";
            goto try_except_handler_250;
        }
        {
            nuitka_bool tmp_condition_result_500;
            PyObject *tmp_compexpr_left_83;
            PyObject *tmp_compexpr_right_83;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases);
            tmp_compexpr_left_83 = tmp_QtWidgets$class_creation_62__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases_orig);
            tmp_compexpr_right_83 = tmp_QtWidgets$class_creation_62__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_83, tmp_compexpr_right_83);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_250;
            }
            tmp_condition_result_500 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_500 == NUITKA_BOOL_TRUE) {
                goto branch_yes_332;
            } else {
                goto branch_no_332;
            }
            branch_yes_332:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_62__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_454, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_250;
            }
            branch_no_332:;
        }
        {
            PyObject *tmp_assign_source_608;
            PyObject *tmp_called_name_177;
            PyObject *tmp_args_name_165;
            PyObject *tmp_tuple_element_328;
            PyObject *tmp_kw_name_165;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__metaclass);
            tmp_called_name_177 = tmp_QtWidgets$class_creation_62__metaclass;
            tmp_tuple_element_328 = const_str_plain_QRadioButton;
            tmp_args_name_165 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_328);
            PyTuple_SET_ITEM(tmp_args_name_165, 0, tmp_tuple_element_328);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__bases);
            tmp_tuple_element_328 = tmp_QtWidgets$class_creation_62__bases;
            Py_INCREF(tmp_tuple_element_328);
            PyTuple_SET_ITEM(tmp_args_name_165, 1, tmp_tuple_element_328);
            tmp_tuple_element_328 = locals_PyQt5$uic$Compiler$qtproxies_454;
            Py_INCREF(tmp_tuple_element_328);
            PyTuple_SET_ITEM(tmp_args_name_165, 2, tmp_tuple_element_328);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_62__class_decl_dict);
            tmp_kw_name_165 = tmp_QtWidgets$class_creation_62__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 454;
            tmp_assign_source_608 = CALL_FUNCTION(tmp_called_name_177, tmp_args_name_165, tmp_kw_name_165);
            Py_DECREF(tmp_args_name_165);
            if (tmp_assign_source_608 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_2 = "o";
                goto try_except_handler_250;
            }
            assert(outline_82_var___class__ == NULL);
            outline_82_var___class__ = tmp_assign_source_608;
        }
        CHECK_OBJECT(outline_82_var___class__);
        tmp_dictset_value = outline_82_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_250;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_250:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_454);
        locals_PyQt5$uic$Compiler$qtproxies_454 = NULL;
        goto try_return_handler_249;
        // Exception handler code:
        try_except_handler_250:;
        exception_keeper_type_245 = exception_type;
        exception_keeper_value_245 = exception_value;
        exception_keeper_tb_245 = exception_tb;
        exception_keeper_lineno_245 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_454);
        locals_PyQt5$uic$Compiler$qtproxies_454 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_245;
        exception_value = exception_keeper_value_245;
        exception_tb = exception_keeper_tb_245;
        exception_lineno = exception_keeper_lineno_245;

        goto try_except_handler_249;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_249:;
        CHECK_OBJECT((PyObject *)outline_82_var___class__);
        Py_DECREF(outline_82_var___class__);
        outline_82_var___class__ = NULL;

        goto outline_result_83;
        // Exception handler code:
        try_except_handler_249:;
        exception_keeper_type_246 = exception_type;
        exception_keeper_value_246 = exception_value;
        exception_keeper_tb_246 = exception_tb;
        exception_keeper_lineno_246 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_246;
        exception_value = exception_keeper_value_246;
        exception_tb = exception_keeper_tb_246;
        exception_lineno = exception_keeper_lineno_246;

        goto outline_exception_83;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_83:;
        exception_lineno = 454;
        goto try_except_handler_248;
        outline_result_83:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QRadioButton, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;
            type_description_2 = "o";
            goto try_except_handler_248;
        }
        goto try_end_83;
        // Exception handler code:
        try_except_handler_248:;
        exception_keeper_type_247 = exception_type;
        exception_keeper_value_247 = exception_value;
        exception_keeper_tb_247 = exception_tb;
        exception_keeper_lineno_247 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_62__bases_orig);
        tmp_QtWidgets$class_creation_62__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_62__bases);
        tmp_QtWidgets$class_creation_62__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_62__class_decl_dict);
        tmp_QtWidgets$class_creation_62__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_62__metaclass);
        tmp_QtWidgets$class_creation_62__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_62__prepared);
        tmp_QtWidgets$class_creation_62__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_247;
        exception_value = exception_keeper_value_247;
        exception_tb = exception_keeper_tb_247;
        exception_lineno = exception_keeper_lineno_247;

        goto frame_exception_exit_12;
        // End of try:
        try_end_83:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_62__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_62__bases_orig);
        tmp_QtWidgets$class_creation_62__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_62__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_62__bases);
        tmp_QtWidgets$class_creation_62__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_62__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_62__class_decl_dict);
        tmp_QtWidgets$class_creation_62__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_62__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_62__metaclass);
        tmp_QtWidgets$class_creation_62__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_62__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_62__prepared);
        tmp_QtWidgets$class_creation_62__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_609;
            PyObject *tmp_tuple_element_329;
            PyObject *tmp_mvar_value_83;
            tmp_tuple_element_329 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractButton);

            if (tmp_tuple_element_329 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_83 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractButton);

                    if (unlikely(tmp_mvar_value_83 == NULL)) {
                        tmp_mvar_value_83 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractButton);
                    }

                    if (tmp_mvar_value_83 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 2090 ], 37, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 455;
                        type_description_2 = "o";
                        goto try_except_handler_251;
                    }

                    tmp_tuple_element_329 = tmp_mvar_value_83;
                    Py_INCREF(tmp_tuple_element_329);
                }
            }

            tmp_assign_source_609 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_609, 0, tmp_tuple_element_329);
            assert(tmp_QtWidgets$class_creation_63__bases_orig == NULL);
            tmp_QtWidgets$class_creation_63__bases_orig = tmp_assign_source_609;
        }
        {
            PyObject *tmp_assign_source_610;
            PyObject *tmp_dircall_arg1_84;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases_orig);
            tmp_dircall_arg1_84 = tmp_QtWidgets$class_creation_63__bases_orig;
            Py_INCREF(tmp_dircall_arg1_84);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_84};
                tmp_assign_source_610 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_610 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            assert(tmp_QtWidgets$class_creation_63__bases == NULL);
            tmp_QtWidgets$class_creation_63__bases = tmp_assign_source_610;
        }
        {
            PyObject *tmp_assign_source_611;
            tmp_assign_source_611 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_63__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_63__class_decl_dict = tmp_assign_source_611;
        }
        {
            PyObject *tmp_assign_source_612;
            PyObject *tmp_metaclass_name_84;
            nuitka_bool tmp_condition_result_501;
            PyObject *tmp_key_name_250;
            PyObject *tmp_dict_name_250;
            PyObject *tmp_dict_name_251;
            PyObject *tmp_key_name_251;
            nuitka_bool tmp_condition_result_502;
            int tmp_truth_name_84;
            PyObject *tmp_type_arg_167;
            PyObject *tmp_subscribed_name_84;
            PyObject *tmp_subscript_name_84;
            PyObject *tmp_bases_name_84;
            tmp_key_name_250 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__class_decl_dict);
            tmp_dict_name_250 = tmp_QtWidgets$class_creation_63__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_250, tmp_key_name_250);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            tmp_condition_result_501 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_501 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_169;
            } else {
                goto condexpr_false_169;
            }
            condexpr_true_169:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__class_decl_dict);
            tmp_dict_name_251 = tmp_QtWidgets$class_creation_63__class_decl_dict;
            tmp_key_name_251 = const_str_plain_metaclass;
            tmp_metaclass_name_84 = DICT_GET_ITEM(tmp_dict_name_251, tmp_key_name_251);
            if (tmp_metaclass_name_84 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            goto condexpr_end_169;
            condexpr_false_169:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases);
            tmp_truth_name_84 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_63__bases);
            if (tmp_truth_name_84 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            tmp_condition_result_502 = tmp_truth_name_84 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_502 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_170;
            } else {
                goto condexpr_false_170;
            }
            condexpr_true_170:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases);
            tmp_subscribed_name_84 = tmp_QtWidgets$class_creation_63__bases;
            tmp_subscript_name_84 = const_int_0;
            tmp_type_arg_167 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_84, tmp_subscript_name_84, 0);
            if (tmp_type_arg_167 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            tmp_metaclass_name_84 = BUILTIN_TYPE1(tmp_type_arg_167);
            Py_DECREF(tmp_type_arg_167);
            if (tmp_metaclass_name_84 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            goto condexpr_end_170;
            condexpr_false_170:;
            tmp_metaclass_name_84 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_84);
            condexpr_end_170:;
            condexpr_end_169:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases);
            tmp_bases_name_84 = tmp_QtWidgets$class_creation_63__bases;
            tmp_assign_source_612 = SELECT_METACLASS(tmp_metaclass_name_84, tmp_bases_name_84);
            Py_DECREF(tmp_metaclass_name_84);
            if (tmp_assign_source_612 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            assert(tmp_QtWidgets$class_creation_63__metaclass == NULL);
            tmp_QtWidgets$class_creation_63__metaclass = tmp_assign_source_612;
        }
        {
            nuitka_bool tmp_condition_result_503;
            PyObject *tmp_key_name_252;
            PyObject *tmp_dict_name_252;
            tmp_key_name_252 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__class_decl_dict);
            tmp_dict_name_252 = tmp_QtWidgets$class_creation_63__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_252, tmp_key_name_252);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            tmp_condition_result_503 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_503 == NUITKA_BOOL_TRUE) {
                goto branch_yes_333;
            } else {
                goto branch_no_333;
            }
            branch_yes_333:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_63__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_251;
            }
            branch_no_333:;
        }
        {
            nuitka_bool tmp_condition_result_504;
            PyObject *tmp_source_name_340;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__metaclass);
            tmp_source_name_340 = tmp_QtWidgets$class_creation_63__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_340, const_str_plain___prepare__);
            tmp_condition_result_504 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_504 == NUITKA_BOOL_TRUE) {
                goto branch_yes_334;
            } else {
                goto branch_no_334;
            }
            branch_yes_334:;
            {
                PyObject *tmp_assign_source_613;
                PyObject *tmp_called_name_178;
                PyObject *tmp_source_name_341;
                PyObject *tmp_args_name_166;
                PyObject *tmp_tuple_element_330;
                PyObject *tmp_kw_name_166;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_63__metaclass);
                tmp_source_name_341 = tmp_QtWidgets$class_creation_63__metaclass;
                tmp_called_name_178 = LOOKUP_ATTRIBUTE(tmp_source_name_341, const_str_plain___prepare__);
                if (tmp_called_name_178 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 455;
                    type_description_2 = "o";
                    goto try_except_handler_251;
                }
                tmp_tuple_element_330 = const_str_plain_QToolButton;
                tmp_args_name_166 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_330);
                PyTuple_SET_ITEM(tmp_args_name_166, 0, tmp_tuple_element_330);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases);
                tmp_tuple_element_330 = tmp_QtWidgets$class_creation_63__bases;
                Py_INCREF(tmp_tuple_element_330);
                PyTuple_SET_ITEM(tmp_args_name_166, 1, tmp_tuple_element_330);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_63__class_decl_dict);
                tmp_kw_name_166 = tmp_QtWidgets$class_creation_63__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 455;
                tmp_assign_source_613 = CALL_FUNCTION(tmp_called_name_178, tmp_args_name_166, tmp_kw_name_166);
                Py_DECREF(tmp_called_name_178);
                Py_DECREF(tmp_args_name_166);
                if (tmp_assign_source_613 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 455;
                    type_description_2 = "o";
                    goto try_except_handler_251;
                }
                assert(tmp_QtWidgets$class_creation_63__prepared == NULL);
                tmp_QtWidgets$class_creation_63__prepared = tmp_assign_source_613;
            }
            {
                nuitka_bool tmp_condition_result_505;
                PyObject *tmp_operand_name_84;
                PyObject *tmp_source_name_342;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_63__prepared);
                tmp_source_name_342 = tmp_QtWidgets$class_creation_63__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_342, const_str_plain___getitem__);
                tmp_operand_name_84 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_84);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 455;
                    type_description_2 = "o";
                    goto try_except_handler_251;
                }
                tmp_condition_result_505 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_505 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_335;
                } else {
                    goto branch_no_335;
                }
                branch_yes_335:;
                {
                    PyObject *tmp_raise_type_84;
                    PyObject *tmp_raise_value_84;
                    PyObject *tmp_left_name_84;
                    PyObject *tmp_right_name_84;
                    PyObject *tmp_tuple_element_331;
                    PyObject *tmp_getattr_target_84;
                    PyObject *tmp_getattr_attr_84;
                    PyObject *tmp_getattr_default_84;
                    PyObject *tmp_source_name_343;
                    PyObject *tmp_type_arg_168;
                    tmp_raise_type_84 = PyExc_TypeError;
                    tmp_left_name_84 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_63__metaclass);
                    tmp_getattr_target_84 = tmp_QtWidgets$class_creation_63__metaclass;
                    tmp_getattr_attr_84 = const_str_plain___name__;
                    tmp_getattr_default_84 = const_str_angle_metaclass;
                    tmp_tuple_element_331 = BUILTIN_GETATTR(tmp_getattr_target_84, tmp_getattr_attr_84, tmp_getattr_default_84);
                    if (tmp_tuple_element_331 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 455;
                        type_description_2 = "o";
                        goto try_except_handler_251;
                    }
                    tmp_right_name_84 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_84, 0, tmp_tuple_element_331);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_63__prepared);
                    tmp_type_arg_168 = tmp_QtWidgets$class_creation_63__prepared;
                    tmp_source_name_343 = BUILTIN_TYPE1(tmp_type_arg_168);
                    assert(!(tmp_source_name_343 == NULL));
                    tmp_tuple_element_331 = LOOKUP_ATTRIBUTE(tmp_source_name_343, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_343);
                    if (tmp_tuple_element_331 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_84);

                        exception_lineno = 455;
                        type_description_2 = "o";
                        goto try_except_handler_251;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_84, 1, tmp_tuple_element_331);
                    tmp_raise_value_84 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_84, tmp_right_name_84);
                    Py_DECREF(tmp_right_name_84);
                    if (tmp_raise_value_84 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 455;
                        type_description_2 = "o";
                        goto try_except_handler_251;
                    }
                    exception_type = tmp_raise_type_84;
                    Py_INCREF(tmp_raise_type_84);
                    exception_value = tmp_raise_value_84;
                    exception_lineno = 455;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_251;
                }
                branch_no_335:;
            }
            goto branch_end_334;
            branch_no_334:;
            {
                PyObject *tmp_assign_source_614;
                tmp_assign_source_614 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_63__prepared == NULL);
                tmp_QtWidgets$class_creation_63__prepared = tmp_assign_source_614;
            }
            branch_end_334:;
        }
        {
            PyObject *tmp_set_locals_84;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__prepared);
            tmp_set_locals_84 = tmp_QtWidgets$class_creation_63__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_455 = tmp_set_locals_84;
            Py_INCREF(tmp_set_locals_84);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_455, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 455;
            type_description_2 = "o";
            goto try_except_handler_253;
        }
        tmp_dictset_value = const_str_digest_8e6b9b6743ebab7ab0dc90d2a86ce125;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_455, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 455;
            type_description_2 = "o";
            goto try_except_handler_253;
        }
        {
            nuitka_bool tmp_condition_result_506;
            PyObject *tmp_compexpr_left_84;
            PyObject *tmp_compexpr_right_84;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases);
            tmp_compexpr_left_84 = tmp_QtWidgets$class_creation_63__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases_orig);
            tmp_compexpr_right_84 = tmp_QtWidgets$class_creation_63__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_84, tmp_compexpr_right_84);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_253;
            }
            tmp_condition_result_506 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_506 == NUITKA_BOOL_TRUE) {
                goto branch_yes_336;
            } else {
                goto branch_no_336;
            }
            branch_yes_336:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_63__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_455, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_253;
            }
            branch_no_336:;
        }
        {
            PyObject *tmp_assign_source_615;
            PyObject *tmp_called_name_179;
            PyObject *tmp_args_name_167;
            PyObject *tmp_tuple_element_332;
            PyObject *tmp_kw_name_167;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__metaclass);
            tmp_called_name_179 = tmp_QtWidgets$class_creation_63__metaclass;
            tmp_tuple_element_332 = const_str_plain_QToolButton;
            tmp_args_name_167 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_332);
            PyTuple_SET_ITEM(tmp_args_name_167, 0, tmp_tuple_element_332);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__bases);
            tmp_tuple_element_332 = tmp_QtWidgets$class_creation_63__bases;
            Py_INCREF(tmp_tuple_element_332);
            PyTuple_SET_ITEM(tmp_args_name_167, 1, tmp_tuple_element_332);
            tmp_tuple_element_332 = locals_PyQt5$uic$Compiler$qtproxies_455;
            Py_INCREF(tmp_tuple_element_332);
            PyTuple_SET_ITEM(tmp_args_name_167, 2, tmp_tuple_element_332);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_63__class_decl_dict);
            tmp_kw_name_167 = tmp_QtWidgets$class_creation_63__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 455;
            tmp_assign_source_615 = CALL_FUNCTION(tmp_called_name_179, tmp_args_name_167, tmp_kw_name_167);
            Py_DECREF(tmp_args_name_167);
            if (tmp_assign_source_615 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_2 = "o";
                goto try_except_handler_253;
            }
            assert(outline_83_var___class__ == NULL);
            outline_83_var___class__ = tmp_assign_source_615;
        }
        CHECK_OBJECT(outline_83_var___class__);
        tmp_dictset_value = outline_83_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_253;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_253:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_455);
        locals_PyQt5$uic$Compiler$qtproxies_455 = NULL;
        goto try_return_handler_252;
        // Exception handler code:
        try_except_handler_253:;
        exception_keeper_type_248 = exception_type;
        exception_keeper_value_248 = exception_value;
        exception_keeper_tb_248 = exception_tb;
        exception_keeper_lineno_248 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_455);
        locals_PyQt5$uic$Compiler$qtproxies_455 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_248;
        exception_value = exception_keeper_value_248;
        exception_tb = exception_keeper_tb_248;
        exception_lineno = exception_keeper_lineno_248;

        goto try_except_handler_252;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_252:;
        CHECK_OBJECT((PyObject *)outline_83_var___class__);
        Py_DECREF(outline_83_var___class__);
        outline_83_var___class__ = NULL;

        goto outline_result_84;
        // Exception handler code:
        try_except_handler_252:;
        exception_keeper_type_249 = exception_type;
        exception_keeper_value_249 = exception_value;
        exception_keeper_tb_249 = exception_tb;
        exception_keeper_lineno_249 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_249;
        exception_value = exception_keeper_value_249;
        exception_tb = exception_keeper_tb_249;
        exception_lineno = exception_keeper_lineno_249;

        goto outline_exception_84;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_84:;
        exception_lineno = 455;
        goto try_except_handler_251;
        outline_result_84:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QToolButton, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 455;
            type_description_2 = "o";
            goto try_except_handler_251;
        }
        goto try_end_84;
        // Exception handler code:
        try_except_handler_251:;
        exception_keeper_type_250 = exception_type;
        exception_keeper_value_250 = exception_value;
        exception_keeper_tb_250 = exception_tb;
        exception_keeper_lineno_250 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_63__bases_orig);
        tmp_QtWidgets$class_creation_63__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_63__bases);
        tmp_QtWidgets$class_creation_63__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_63__class_decl_dict);
        tmp_QtWidgets$class_creation_63__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_63__metaclass);
        tmp_QtWidgets$class_creation_63__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_63__prepared);
        tmp_QtWidgets$class_creation_63__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_250;
        exception_value = exception_keeper_value_250;
        exception_tb = exception_keeper_tb_250;
        exception_lineno = exception_keeper_lineno_250;

        goto frame_exception_exit_12;
        // End of try:
        try_end_84:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_63__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_63__bases_orig);
        tmp_QtWidgets$class_creation_63__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_63__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_63__bases);
        tmp_QtWidgets$class_creation_63__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_63__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_63__class_decl_dict);
        tmp_QtWidgets$class_creation_63__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_63__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_63__metaclass);
        tmp_QtWidgets$class_creation_63__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_63__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_63__prepared);
        tmp_QtWidgets$class_creation_63__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_616;
            PyObject *tmp_tuple_element_333;
            PyObject *tmp_mvar_value_84;
            tmp_tuple_element_333 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QAbstractButton);

            if (tmp_tuple_element_333 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_84 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QAbstractButton);

                    if (unlikely(tmp_mvar_value_84 == NULL)) {
                        tmp_mvar_value_84 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QAbstractButton);
                    }

                    if (tmp_mvar_value_84 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 2090 ], 37, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 457;
                        type_description_2 = "o";
                        goto try_except_handler_254;
                    }

                    tmp_tuple_element_333 = tmp_mvar_value_84;
                    Py_INCREF(tmp_tuple_element_333);
                }
            }

            tmp_assign_source_616 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_616, 0, tmp_tuple_element_333);
            assert(tmp_QtWidgets$class_creation_64__bases_orig == NULL);
            tmp_QtWidgets$class_creation_64__bases_orig = tmp_assign_source_616;
        }
        {
            PyObject *tmp_assign_source_617;
            PyObject *tmp_dircall_arg1_85;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases_orig);
            tmp_dircall_arg1_85 = tmp_QtWidgets$class_creation_64__bases_orig;
            Py_INCREF(tmp_dircall_arg1_85);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_85};
                tmp_assign_source_617 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_617 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            assert(tmp_QtWidgets$class_creation_64__bases == NULL);
            tmp_QtWidgets$class_creation_64__bases = tmp_assign_source_617;
        }
        {
            PyObject *tmp_assign_source_618;
            tmp_assign_source_618 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_64__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_64__class_decl_dict = tmp_assign_source_618;
        }
        {
            PyObject *tmp_assign_source_619;
            PyObject *tmp_metaclass_name_85;
            nuitka_bool tmp_condition_result_507;
            PyObject *tmp_key_name_253;
            PyObject *tmp_dict_name_253;
            PyObject *tmp_dict_name_254;
            PyObject *tmp_key_name_254;
            nuitka_bool tmp_condition_result_508;
            int tmp_truth_name_85;
            PyObject *tmp_type_arg_169;
            PyObject *tmp_subscribed_name_85;
            PyObject *tmp_subscript_name_85;
            PyObject *tmp_bases_name_85;
            tmp_key_name_253 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__class_decl_dict);
            tmp_dict_name_253 = tmp_QtWidgets$class_creation_64__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_253, tmp_key_name_253);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            tmp_condition_result_507 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_507 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_171;
            } else {
                goto condexpr_false_171;
            }
            condexpr_true_171:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__class_decl_dict);
            tmp_dict_name_254 = tmp_QtWidgets$class_creation_64__class_decl_dict;
            tmp_key_name_254 = const_str_plain_metaclass;
            tmp_metaclass_name_85 = DICT_GET_ITEM(tmp_dict_name_254, tmp_key_name_254);
            if (tmp_metaclass_name_85 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            goto condexpr_end_171;
            condexpr_false_171:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases);
            tmp_truth_name_85 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_64__bases);
            if (tmp_truth_name_85 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            tmp_condition_result_508 = tmp_truth_name_85 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_508 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_172;
            } else {
                goto condexpr_false_172;
            }
            condexpr_true_172:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases);
            tmp_subscribed_name_85 = tmp_QtWidgets$class_creation_64__bases;
            tmp_subscript_name_85 = const_int_0;
            tmp_type_arg_169 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_85, tmp_subscript_name_85, 0);
            if (tmp_type_arg_169 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            tmp_metaclass_name_85 = BUILTIN_TYPE1(tmp_type_arg_169);
            Py_DECREF(tmp_type_arg_169);
            if (tmp_metaclass_name_85 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            goto condexpr_end_172;
            condexpr_false_172:;
            tmp_metaclass_name_85 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_85);
            condexpr_end_172:;
            condexpr_end_171:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases);
            tmp_bases_name_85 = tmp_QtWidgets$class_creation_64__bases;
            tmp_assign_source_619 = SELECT_METACLASS(tmp_metaclass_name_85, tmp_bases_name_85);
            Py_DECREF(tmp_metaclass_name_85);
            if (tmp_assign_source_619 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            assert(tmp_QtWidgets$class_creation_64__metaclass == NULL);
            tmp_QtWidgets$class_creation_64__metaclass = tmp_assign_source_619;
        }
        {
            nuitka_bool tmp_condition_result_509;
            PyObject *tmp_key_name_255;
            PyObject *tmp_dict_name_255;
            tmp_key_name_255 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__class_decl_dict);
            tmp_dict_name_255 = tmp_QtWidgets$class_creation_64__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_255, tmp_key_name_255);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            tmp_condition_result_509 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_509 == NUITKA_BOOL_TRUE) {
                goto branch_yes_337;
            } else {
                goto branch_no_337;
            }
            branch_yes_337:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_64__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_254;
            }
            branch_no_337:;
        }
        {
            nuitka_bool tmp_condition_result_510;
            PyObject *tmp_source_name_344;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__metaclass);
            tmp_source_name_344 = tmp_QtWidgets$class_creation_64__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_344, const_str_plain___prepare__);
            tmp_condition_result_510 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_510 == NUITKA_BOOL_TRUE) {
                goto branch_yes_338;
            } else {
                goto branch_no_338;
            }
            branch_yes_338:;
            {
                PyObject *tmp_assign_source_620;
                PyObject *tmp_called_name_180;
                PyObject *tmp_source_name_345;
                PyObject *tmp_args_name_168;
                PyObject *tmp_tuple_element_334;
                PyObject *tmp_kw_name_168;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_64__metaclass);
                tmp_source_name_345 = tmp_QtWidgets$class_creation_64__metaclass;
                tmp_called_name_180 = LOOKUP_ATTRIBUTE(tmp_source_name_345, const_str_plain___prepare__);
                if (tmp_called_name_180 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 457;
                    type_description_2 = "o";
                    goto try_except_handler_254;
                }
                tmp_tuple_element_334 = const_str_plain_QPushButton;
                tmp_args_name_168 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_334);
                PyTuple_SET_ITEM(tmp_args_name_168, 0, tmp_tuple_element_334);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases);
                tmp_tuple_element_334 = tmp_QtWidgets$class_creation_64__bases;
                Py_INCREF(tmp_tuple_element_334);
                PyTuple_SET_ITEM(tmp_args_name_168, 1, tmp_tuple_element_334);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_64__class_decl_dict);
                tmp_kw_name_168 = tmp_QtWidgets$class_creation_64__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 457;
                tmp_assign_source_620 = CALL_FUNCTION(tmp_called_name_180, tmp_args_name_168, tmp_kw_name_168);
                Py_DECREF(tmp_called_name_180);
                Py_DECREF(tmp_args_name_168);
                if (tmp_assign_source_620 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 457;
                    type_description_2 = "o";
                    goto try_except_handler_254;
                }
                assert(tmp_QtWidgets$class_creation_64__prepared == NULL);
                tmp_QtWidgets$class_creation_64__prepared = tmp_assign_source_620;
            }
            {
                nuitka_bool tmp_condition_result_511;
                PyObject *tmp_operand_name_85;
                PyObject *tmp_source_name_346;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_64__prepared);
                tmp_source_name_346 = tmp_QtWidgets$class_creation_64__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_346, const_str_plain___getitem__);
                tmp_operand_name_85 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_85);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 457;
                    type_description_2 = "o";
                    goto try_except_handler_254;
                }
                tmp_condition_result_511 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_511 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_339;
                } else {
                    goto branch_no_339;
                }
                branch_yes_339:;
                {
                    PyObject *tmp_raise_type_85;
                    PyObject *tmp_raise_value_85;
                    PyObject *tmp_left_name_85;
                    PyObject *tmp_right_name_85;
                    PyObject *tmp_tuple_element_335;
                    PyObject *tmp_getattr_target_85;
                    PyObject *tmp_getattr_attr_85;
                    PyObject *tmp_getattr_default_85;
                    PyObject *tmp_source_name_347;
                    PyObject *tmp_type_arg_170;
                    tmp_raise_type_85 = PyExc_TypeError;
                    tmp_left_name_85 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_64__metaclass);
                    tmp_getattr_target_85 = tmp_QtWidgets$class_creation_64__metaclass;
                    tmp_getattr_attr_85 = const_str_plain___name__;
                    tmp_getattr_default_85 = const_str_angle_metaclass;
                    tmp_tuple_element_335 = BUILTIN_GETATTR(tmp_getattr_target_85, tmp_getattr_attr_85, tmp_getattr_default_85);
                    if (tmp_tuple_element_335 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 457;
                        type_description_2 = "o";
                        goto try_except_handler_254;
                    }
                    tmp_right_name_85 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_85, 0, tmp_tuple_element_335);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_64__prepared);
                    tmp_type_arg_170 = tmp_QtWidgets$class_creation_64__prepared;
                    tmp_source_name_347 = BUILTIN_TYPE1(tmp_type_arg_170);
                    assert(!(tmp_source_name_347 == NULL));
                    tmp_tuple_element_335 = LOOKUP_ATTRIBUTE(tmp_source_name_347, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_347);
                    if (tmp_tuple_element_335 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_85);

                        exception_lineno = 457;
                        type_description_2 = "o";
                        goto try_except_handler_254;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_85, 1, tmp_tuple_element_335);
                    tmp_raise_value_85 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_85, tmp_right_name_85);
                    Py_DECREF(tmp_right_name_85);
                    if (tmp_raise_value_85 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 457;
                        type_description_2 = "o";
                        goto try_except_handler_254;
                    }
                    exception_type = tmp_raise_type_85;
                    Py_INCREF(tmp_raise_type_85);
                    exception_value = tmp_raise_value_85;
                    exception_lineno = 457;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_254;
                }
                branch_no_339:;
            }
            goto branch_end_338;
            branch_no_338:;
            {
                PyObject *tmp_assign_source_621;
                tmp_assign_source_621 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_64__prepared == NULL);
                tmp_QtWidgets$class_creation_64__prepared = tmp_assign_source_621;
            }
            branch_end_338:;
        }
        {
            PyObject *tmp_set_locals_85;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__prepared);
            tmp_set_locals_85 = tmp_QtWidgets$class_creation_64__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_457 = tmp_set_locals_85;
            Py_INCREF(tmp_set_locals_85);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_457, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 457;
            type_description_2 = "o";
            goto try_except_handler_256;
        }
        tmp_dictset_value = const_str_digest_17dbf1120b5730e87af274283d813a48;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_457, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 457;
            type_description_2 = "o";
            goto try_except_handler_256;
        }
        {
            nuitka_bool tmp_condition_result_512;
            PyObject *tmp_compexpr_left_85;
            PyObject *tmp_compexpr_right_85;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases);
            tmp_compexpr_left_85 = tmp_QtWidgets$class_creation_64__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases_orig);
            tmp_compexpr_right_85 = tmp_QtWidgets$class_creation_64__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_85, tmp_compexpr_right_85);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_256;
            }
            tmp_condition_result_512 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_512 == NUITKA_BOOL_TRUE) {
                goto branch_yes_340;
            } else {
                goto branch_no_340;
            }
            branch_yes_340:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_64__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_457, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_256;
            }
            branch_no_340:;
        }
        {
            PyObject *tmp_assign_source_622;
            PyObject *tmp_called_name_181;
            PyObject *tmp_args_name_169;
            PyObject *tmp_tuple_element_336;
            PyObject *tmp_kw_name_169;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__metaclass);
            tmp_called_name_181 = tmp_QtWidgets$class_creation_64__metaclass;
            tmp_tuple_element_336 = const_str_plain_QPushButton;
            tmp_args_name_169 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_336);
            PyTuple_SET_ITEM(tmp_args_name_169, 0, tmp_tuple_element_336);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__bases);
            tmp_tuple_element_336 = tmp_QtWidgets$class_creation_64__bases;
            Py_INCREF(tmp_tuple_element_336);
            PyTuple_SET_ITEM(tmp_args_name_169, 1, tmp_tuple_element_336);
            tmp_tuple_element_336 = locals_PyQt5$uic$Compiler$qtproxies_457;
            Py_INCREF(tmp_tuple_element_336);
            PyTuple_SET_ITEM(tmp_args_name_169, 2, tmp_tuple_element_336);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_64__class_decl_dict);
            tmp_kw_name_169 = tmp_QtWidgets$class_creation_64__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 457;
            tmp_assign_source_622 = CALL_FUNCTION(tmp_called_name_181, tmp_args_name_169, tmp_kw_name_169);
            Py_DECREF(tmp_args_name_169);
            if (tmp_assign_source_622 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_2 = "o";
                goto try_except_handler_256;
            }
            assert(outline_84_var___class__ == NULL);
            outline_84_var___class__ = tmp_assign_source_622;
        }
        CHECK_OBJECT(outline_84_var___class__);
        tmp_dictset_value = outline_84_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_256;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_256:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_457);
        locals_PyQt5$uic$Compiler$qtproxies_457 = NULL;
        goto try_return_handler_255;
        // Exception handler code:
        try_except_handler_256:;
        exception_keeper_type_251 = exception_type;
        exception_keeper_value_251 = exception_value;
        exception_keeper_tb_251 = exception_tb;
        exception_keeper_lineno_251 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_457);
        locals_PyQt5$uic$Compiler$qtproxies_457 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_251;
        exception_value = exception_keeper_value_251;
        exception_tb = exception_keeper_tb_251;
        exception_lineno = exception_keeper_lineno_251;

        goto try_except_handler_255;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_255:;
        CHECK_OBJECT((PyObject *)outline_84_var___class__);
        Py_DECREF(outline_84_var___class__);
        outline_84_var___class__ = NULL;

        goto outline_result_85;
        // Exception handler code:
        try_except_handler_255:;
        exception_keeper_type_252 = exception_type;
        exception_keeper_value_252 = exception_value;
        exception_keeper_tb_252 = exception_tb;
        exception_keeper_lineno_252 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_252;
        exception_value = exception_keeper_value_252;
        exception_tb = exception_keeper_tb_252;
        exception_lineno = exception_keeper_lineno_252;

        goto outline_exception_85;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_85:;
        exception_lineno = 457;
        goto try_except_handler_254;
        outline_result_85:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QPushButton, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 457;
            type_description_2 = "o";
            goto try_except_handler_254;
        }
        goto try_end_85;
        // Exception handler code:
        try_except_handler_254:;
        exception_keeper_type_253 = exception_type;
        exception_keeper_value_253 = exception_value;
        exception_keeper_tb_253 = exception_tb;
        exception_keeper_lineno_253 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_64__bases_orig);
        tmp_QtWidgets$class_creation_64__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_64__bases);
        tmp_QtWidgets$class_creation_64__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_64__class_decl_dict);
        tmp_QtWidgets$class_creation_64__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_64__metaclass);
        tmp_QtWidgets$class_creation_64__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_64__prepared);
        tmp_QtWidgets$class_creation_64__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_253;
        exception_value = exception_keeper_value_253;
        exception_tb = exception_keeper_tb_253;
        exception_lineno = exception_keeper_lineno_253;

        goto frame_exception_exit_12;
        // End of try:
        try_end_85:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_64__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_64__bases_orig);
        tmp_QtWidgets$class_creation_64__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_64__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_64__bases);
        tmp_QtWidgets$class_creation_64__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_64__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_64__class_decl_dict);
        tmp_QtWidgets$class_creation_64__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_64__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_64__metaclass);
        tmp_QtWidgets$class_creation_64__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_64__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_64__prepared);
        tmp_QtWidgets$class_creation_64__prepared = NULL;

        {
            PyObject *tmp_assign_source_623;
            PyObject *tmp_tuple_element_337;
            tmp_tuple_element_337 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QPushButton);

            if (tmp_tuple_element_337 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 2127 ], 33, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 458;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }

            if (tmp_tuple_element_337 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            tmp_assign_source_623 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_623, 0, tmp_tuple_element_337);
            assert(tmp_QtWidgets$class_creation_65__bases_orig == NULL);
            tmp_QtWidgets$class_creation_65__bases_orig = tmp_assign_source_623;
        }
        // Tried code:
        {
            PyObject *tmp_assign_source_624;
            PyObject *tmp_dircall_arg1_86;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases_orig);
            tmp_dircall_arg1_86 = tmp_QtWidgets$class_creation_65__bases_orig;
            Py_INCREF(tmp_dircall_arg1_86);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_86};
                tmp_assign_source_624 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_624 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            assert(tmp_QtWidgets$class_creation_65__bases == NULL);
            tmp_QtWidgets$class_creation_65__bases = tmp_assign_source_624;
        }
        {
            PyObject *tmp_assign_source_625;
            tmp_assign_source_625 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_65__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_65__class_decl_dict = tmp_assign_source_625;
        }
        {
            PyObject *tmp_assign_source_626;
            PyObject *tmp_metaclass_name_86;
            nuitka_bool tmp_condition_result_513;
            PyObject *tmp_key_name_256;
            PyObject *tmp_dict_name_256;
            PyObject *tmp_dict_name_257;
            PyObject *tmp_key_name_257;
            nuitka_bool tmp_condition_result_514;
            int tmp_truth_name_86;
            PyObject *tmp_type_arg_171;
            PyObject *tmp_subscribed_name_86;
            PyObject *tmp_subscript_name_86;
            PyObject *tmp_bases_name_86;
            tmp_key_name_256 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__class_decl_dict);
            tmp_dict_name_256 = tmp_QtWidgets$class_creation_65__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_256, tmp_key_name_256);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            tmp_condition_result_513 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_513 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_173;
            } else {
                goto condexpr_false_173;
            }
            condexpr_true_173:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__class_decl_dict);
            tmp_dict_name_257 = tmp_QtWidgets$class_creation_65__class_decl_dict;
            tmp_key_name_257 = const_str_plain_metaclass;
            tmp_metaclass_name_86 = DICT_GET_ITEM(tmp_dict_name_257, tmp_key_name_257);
            if (tmp_metaclass_name_86 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            goto condexpr_end_173;
            condexpr_false_173:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases);
            tmp_truth_name_86 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_65__bases);
            if (tmp_truth_name_86 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            tmp_condition_result_514 = tmp_truth_name_86 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_514 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_174;
            } else {
                goto condexpr_false_174;
            }
            condexpr_true_174:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases);
            tmp_subscribed_name_86 = tmp_QtWidgets$class_creation_65__bases;
            tmp_subscript_name_86 = const_int_0;
            tmp_type_arg_171 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_86, tmp_subscript_name_86, 0);
            if (tmp_type_arg_171 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            tmp_metaclass_name_86 = BUILTIN_TYPE1(tmp_type_arg_171);
            Py_DECREF(tmp_type_arg_171);
            if (tmp_metaclass_name_86 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            goto condexpr_end_174;
            condexpr_false_174:;
            tmp_metaclass_name_86 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_86);
            condexpr_end_174:;
            condexpr_end_173:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases);
            tmp_bases_name_86 = tmp_QtWidgets$class_creation_65__bases;
            tmp_assign_source_626 = SELECT_METACLASS(tmp_metaclass_name_86, tmp_bases_name_86);
            Py_DECREF(tmp_metaclass_name_86);
            if (tmp_assign_source_626 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            assert(tmp_QtWidgets$class_creation_65__metaclass == NULL);
            tmp_QtWidgets$class_creation_65__metaclass = tmp_assign_source_626;
        }
        {
            nuitka_bool tmp_condition_result_515;
            PyObject *tmp_key_name_258;
            PyObject *tmp_dict_name_258;
            tmp_key_name_258 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__class_decl_dict);
            tmp_dict_name_258 = tmp_QtWidgets$class_creation_65__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_258, tmp_key_name_258);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            tmp_condition_result_515 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_515 == NUITKA_BOOL_TRUE) {
                goto branch_yes_341;
            } else {
                goto branch_no_341;
            }
            branch_yes_341:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_65__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_257;
            }
            branch_no_341:;
        }
        {
            nuitka_bool tmp_condition_result_516;
            PyObject *tmp_source_name_348;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__metaclass);
            tmp_source_name_348 = tmp_QtWidgets$class_creation_65__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_348, const_str_plain___prepare__);
            tmp_condition_result_516 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_516 == NUITKA_BOOL_TRUE) {
                goto branch_yes_342;
            } else {
                goto branch_no_342;
            }
            branch_yes_342:;
            {
                PyObject *tmp_assign_source_627;
                PyObject *tmp_called_name_182;
                PyObject *tmp_source_name_349;
                PyObject *tmp_args_name_170;
                PyObject *tmp_tuple_element_338;
                PyObject *tmp_kw_name_170;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_65__metaclass);
                tmp_source_name_349 = tmp_QtWidgets$class_creation_65__metaclass;
                tmp_called_name_182 = LOOKUP_ATTRIBUTE(tmp_source_name_349, const_str_plain___prepare__);
                if (tmp_called_name_182 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 458;
                    type_description_2 = "o";
                    goto try_except_handler_257;
                }
                tmp_tuple_element_338 = const_str_plain_QCommandLinkButton;
                tmp_args_name_170 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_338);
                PyTuple_SET_ITEM(tmp_args_name_170, 0, tmp_tuple_element_338);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases);
                tmp_tuple_element_338 = tmp_QtWidgets$class_creation_65__bases;
                Py_INCREF(tmp_tuple_element_338);
                PyTuple_SET_ITEM(tmp_args_name_170, 1, tmp_tuple_element_338);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_65__class_decl_dict);
                tmp_kw_name_170 = tmp_QtWidgets$class_creation_65__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 458;
                tmp_assign_source_627 = CALL_FUNCTION(tmp_called_name_182, tmp_args_name_170, tmp_kw_name_170);
                Py_DECREF(tmp_called_name_182);
                Py_DECREF(tmp_args_name_170);
                if (tmp_assign_source_627 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 458;
                    type_description_2 = "o";
                    goto try_except_handler_257;
                }
                assert(tmp_QtWidgets$class_creation_65__prepared == NULL);
                tmp_QtWidgets$class_creation_65__prepared = tmp_assign_source_627;
            }
            {
                nuitka_bool tmp_condition_result_517;
                PyObject *tmp_operand_name_86;
                PyObject *tmp_source_name_350;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_65__prepared);
                tmp_source_name_350 = tmp_QtWidgets$class_creation_65__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_350, const_str_plain___getitem__);
                tmp_operand_name_86 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_86);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 458;
                    type_description_2 = "o";
                    goto try_except_handler_257;
                }
                tmp_condition_result_517 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_517 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_343;
                } else {
                    goto branch_no_343;
                }
                branch_yes_343:;
                {
                    PyObject *tmp_raise_type_86;
                    PyObject *tmp_raise_value_86;
                    PyObject *tmp_left_name_86;
                    PyObject *tmp_right_name_86;
                    PyObject *tmp_tuple_element_339;
                    PyObject *tmp_getattr_target_86;
                    PyObject *tmp_getattr_attr_86;
                    PyObject *tmp_getattr_default_86;
                    PyObject *tmp_source_name_351;
                    PyObject *tmp_type_arg_172;
                    tmp_raise_type_86 = PyExc_TypeError;
                    tmp_left_name_86 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_65__metaclass);
                    tmp_getattr_target_86 = tmp_QtWidgets$class_creation_65__metaclass;
                    tmp_getattr_attr_86 = const_str_plain___name__;
                    tmp_getattr_default_86 = const_str_angle_metaclass;
                    tmp_tuple_element_339 = BUILTIN_GETATTR(tmp_getattr_target_86, tmp_getattr_attr_86, tmp_getattr_default_86);
                    if (tmp_tuple_element_339 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 458;
                        type_description_2 = "o";
                        goto try_except_handler_257;
                    }
                    tmp_right_name_86 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_86, 0, tmp_tuple_element_339);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_65__prepared);
                    tmp_type_arg_172 = tmp_QtWidgets$class_creation_65__prepared;
                    tmp_source_name_351 = BUILTIN_TYPE1(tmp_type_arg_172);
                    assert(!(tmp_source_name_351 == NULL));
                    tmp_tuple_element_339 = LOOKUP_ATTRIBUTE(tmp_source_name_351, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_351);
                    if (tmp_tuple_element_339 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_86);

                        exception_lineno = 458;
                        type_description_2 = "o";
                        goto try_except_handler_257;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_86, 1, tmp_tuple_element_339);
                    tmp_raise_value_86 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_86, tmp_right_name_86);
                    Py_DECREF(tmp_right_name_86);
                    if (tmp_raise_value_86 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 458;
                        type_description_2 = "o";
                        goto try_except_handler_257;
                    }
                    exception_type = tmp_raise_type_86;
                    Py_INCREF(tmp_raise_type_86);
                    exception_value = tmp_raise_value_86;
                    exception_lineno = 458;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_257;
                }
                branch_no_343:;
            }
            goto branch_end_342;
            branch_no_342:;
            {
                PyObject *tmp_assign_source_628;
                tmp_assign_source_628 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_65__prepared == NULL);
                tmp_QtWidgets$class_creation_65__prepared = tmp_assign_source_628;
            }
            branch_end_342:;
        }
        {
            PyObject *tmp_set_locals_86;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__prepared);
            tmp_set_locals_86 = tmp_QtWidgets$class_creation_65__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_458 = tmp_set_locals_86;
            Py_INCREF(tmp_set_locals_86);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_458, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 458;
            type_description_2 = "o";
            goto try_except_handler_259;
        }
        tmp_dictset_value = const_str_digest_938b51037dad752fd1fbf84cf8bf860b;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_458, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 458;
            type_description_2 = "o";
            goto try_except_handler_259;
        }
        {
            nuitka_bool tmp_condition_result_518;
            PyObject *tmp_compexpr_left_86;
            PyObject *tmp_compexpr_right_86;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases);
            tmp_compexpr_left_86 = tmp_QtWidgets$class_creation_65__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases_orig);
            tmp_compexpr_right_86 = tmp_QtWidgets$class_creation_65__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_86, tmp_compexpr_right_86);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_259;
            }
            tmp_condition_result_518 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_518 == NUITKA_BOOL_TRUE) {
                goto branch_yes_344;
            } else {
                goto branch_no_344;
            }
            branch_yes_344:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_65__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_458, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_259;
            }
            branch_no_344:;
        }
        {
            PyObject *tmp_assign_source_629;
            PyObject *tmp_called_name_183;
            PyObject *tmp_args_name_171;
            PyObject *tmp_tuple_element_340;
            PyObject *tmp_kw_name_171;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__metaclass);
            tmp_called_name_183 = tmp_QtWidgets$class_creation_65__metaclass;
            tmp_tuple_element_340 = const_str_plain_QCommandLinkButton;
            tmp_args_name_171 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_340);
            PyTuple_SET_ITEM(tmp_args_name_171, 0, tmp_tuple_element_340);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__bases);
            tmp_tuple_element_340 = tmp_QtWidgets$class_creation_65__bases;
            Py_INCREF(tmp_tuple_element_340);
            PyTuple_SET_ITEM(tmp_args_name_171, 1, tmp_tuple_element_340);
            tmp_tuple_element_340 = locals_PyQt5$uic$Compiler$qtproxies_458;
            Py_INCREF(tmp_tuple_element_340);
            PyTuple_SET_ITEM(tmp_args_name_171, 2, tmp_tuple_element_340);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_65__class_decl_dict);
            tmp_kw_name_171 = tmp_QtWidgets$class_creation_65__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 458;
            tmp_assign_source_629 = CALL_FUNCTION(tmp_called_name_183, tmp_args_name_171, tmp_kw_name_171);
            Py_DECREF(tmp_args_name_171);
            if (tmp_assign_source_629 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_2 = "o";
                goto try_except_handler_259;
            }
            assert(outline_85_var___class__ == NULL);
            outline_85_var___class__ = tmp_assign_source_629;
        }
        CHECK_OBJECT(outline_85_var___class__);
        tmp_dictset_value = outline_85_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_259;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_259:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_458);
        locals_PyQt5$uic$Compiler$qtproxies_458 = NULL;
        goto try_return_handler_258;
        // Exception handler code:
        try_except_handler_259:;
        exception_keeper_type_254 = exception_type;
        exception_keeper_value_254 = exception_value;
        exception_keeper_tb_254 = exception_tb;
        exception_keeper_lineno_254 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_458);
        locals_PyQt5$uic$Compiler$qtproxies_458 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_254;
        exception_value = exception_keeper_value_254;
        exception_tb = exception_keeper_tb_254;
        exception_lineno = exception_keeper_lineno_254;

        goto try_except_handler_258;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_258:;
        CHECK_OBJECT((PyObject *)outline_85_var___class__);
        Py_DECREF(outline_85_var___class__);
        outline_85_var___class__ = NULL;

        goto outline_result_86;
        // Exception handler code:
        try_except_handler_258:;
        exception_keeper_type_255 = exception_type;
        exception_keeper_value_255 = exception_value;
        exception_keeper_tb_255 = exception_tb;
        exception_keeper_lineno_255 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_255;
        exception_value = exception_keeper_value_255;
        exception_tb = exception_keeper_tb_255;
        exception_lineno = exception_keeper_lineno_255;

        goto outline_exception_86;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_86:;
        exception_lineno = 458;
        goto try_except_handler_257;
        outline_result_86:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QCommandLinkButton, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 458;
            type_description_2 = "o";
            goto try_except_handler_257;
        }
        goto try_end_86;
        // Exception handler code:
        try_except_handler_257:;
        exception_keeper_type_256 = exception_type;
        exception_keeper_value_256 = exception_value;
        exception_keeper_tb_256 = exception_tb;
        exception_keeper_lineno_256 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_65__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_65__bases_orig);
        tmp_QtWidgets$class_creation_65__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_65__bases);
        tmp_QtWidgets$class_creation_65__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_65__class_decl_dict);
        tmp_QtWidgets$class_creation_65__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_65__metaclass);
        tmp_QtWidgets$class_creation_65__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_65__prepared);
        tmp_QtWidgets$class_creation_65__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_256;
        exception_value = exception_keeper_value_256;
        exception_tb = exception_keeper_tb_256;
        exception_lineno = exception_keeper_lineno_256;

        goto frame_exception_exit_12;
        // End of try:
        try_end_86:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_65__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_65__bases_orig);
        tmp_QtWidgets$class_creation_65__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_65__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_65__bases);
        tmp_QtWidgets$class_creation_65__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_65__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_65__class_decl_dict);
        tmp_QtWidgets$class_creation_65__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_65__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_65__metaclass);
        tmp_QtWidgets$class_creation_65__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_65__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_65__prepared);
        tmp_QtWidgets$class_creation_65__prepared = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_630;
            PyObject *tmp_tuple_element_341;
            PyObject *tmp_mvar_value_85;
            tmp_tuple_element_341 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

            if (tmp_tuple_element_341 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_85 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                    if (unlikely(tmp_mvar_value_85 == NULL)) {
                        tmp_mvar_value_85 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                    }

                    if (tmp_mvar_value_85 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 459;
                        type_description_2 = "o";
                        goto try_except_handler_260;
                    }

                    tmp_tuple_element_341 = tmp_mvar_value_85;
                    Py_INCREF(tmp_tuple_element_341);
                }
            }

            tmp_assign_source_630 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_assign_source_630, 0, tmp_tuple_element_341);
            assert(tmp_QtWidgets$class_creation_66__bases_orig == NULL);
            tmp_QtWidgets$class_creation_66__bases_orig = tmp_assign_source_630;
        }
        {
            PyObject *tmp_assign_source_631;
            PyObject *tmp_dircall_arg1_87;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases_orig);
            tmp_dircall_arg1_87 = tmp_QtWidgets$class_creation_66__bases_orig;
            Py_INCREF(tmp_dircall_arg1_87);

            {
                PyObject *dir_call_args[] = {tmp_dircall_arg1_87};
                tmp_assign_source_631 = impl___internal__$$$function_1__mro_entries_conversion(dir_call_args);
            }
            if (tmp_assign_source_631 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            assert(tmp_QtWidgets$class_creation_66__bases == NULL);
            tmp_QtWidgets$class_creation_66__bases = tmp_assign_source_631;
        }
        {
            PyObject *tmp_assign_source_632;
            tmp_assign_source_632 = PyDict_New();
            assert(tmp_QtWidgets$class_creation_66__class_decl_dict == NULL);
            tmp_QtWidgets$class_creation_66__class_decl_dict = tmp_assign_source_632;
        }
        {
            PyObject *tmp_assign_source_633;
            PyObject *tmp_metaclass_name_87;
            nuitka_bool tmp_condition_result_519;
            PyObject *tmp_key_name_259;
            PyObject *tmp_dict_name_259;
            PyObject *tmp_dict_name_260;
            PyObject *tmp_key_name_260;
            nuitka_bool tmp_condition_result_520;
            int tmp_truth_name_87;
            PyObject *tmp_type_arg_173;
            PyObject *tmp_subscribed_name_87;
            PyObject *tmp_subscript_name_87;
            PyObject *tmp_bases_name_87;
            tmp_key_name_259 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__class_decl_dict);
            tmp_dict_name_259 = tmp_QtWidgets$class_creation_66__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_259, tmp_key_name_259);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            tmp_condition_result_519 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_519 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_175;
            } else {
                goto condexpr_false_175;
            }
            condexpr_true_175:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__class_decl_dict);
            tmp_dict_name_260 = tmp_QtWidgets$class_creation_66__class_decl_dict;
            tmp_key_name_260 = const_str_plain_metaclass;
            tmp_metaclass_name_87 = DICT_GET_ITEM(tmp_dict_name_260, tmp_key_name_260);
            if (tmp_metaclass_name_87 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            goto condexpr_end_175;
            condexpr_false_175:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases);
            tmp_truth_name_87 = CHECK_IF_TRUE(tmp_QtWidgets$class_creation_66__bases);
            if (tmp_truth_name_87 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            tmp_condition_result_520 = tmp_truth_name_87 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_520 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_176;
            } else {
                goto condexpr_false_176;
            }
            condexpr_true_176:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases);
            tmp_subscribed_name_87 = tmp_QtWidgets$class_creation_66__bases;
            tmp_subscript_name_87 = const_int_0;
            tmp_type_arg_173 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_87, tmp_subscript_name_87, 0);
            if (tmp_type_arg_173 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            tmp_metaclass_name_87 = BUILTIN_TYPE1(tmp_type_arg_173);
            Py_DECREF(tmp_type_arg_173);
            if (tmp_metaclass_name_87 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            goto condexpr_end_176;
            condexpr_false_176:;
            tmp_metaclass_name_87 = (PyObject *)&PyType_Type;
            Py_INCREF(tmp_metaclass_name_87);
            condexpr_end_176:;
            condexpr_end_175:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases);
            tmp_bases_name_87 = tmp_QtWidgets$class_creation_66__bases;
            tmp_assign_source_633 = SELECT_METACLASS(tmp_metaclass_name_87, tmp_bases_name_87);
            Py_DECREF(tmp_metaclass_name_87);
            if (tmp_assign_source_633 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            assert(tmp_QtWidgets$class_creation_66__metaclass == NULL);
            tmp_QtWidgets$class_creation_66__metaclass = tmp_assign_source_633;
        }
        {
            nuitka_bool tmp_condition_result_521;
            PyObject *tmp_key_name_261;
            PyObject *tmp_dict_name_261;
            tmp_key_name_261 = const_str_plain_metaclass;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__class_decl_dict);
            tmp_dict_name_261 = tmp_QtWidgets$class_creation_66__class_decl_dict;
            tmp_res = PyDict_Contains(tmp_dict_name_261, tmp_key_name_261);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            tmp_condition_result_521 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_521 == NUITKA_BOOL_TRUE) {
                goto branch_yes_345;
            } else {
                goto branch_no_345;
            }
            branch_yes_345:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__class_decl_dict);
            tmp_dictdel_dict = tmp_QtWidgets$class_creation_66__class_decl_dict;
            tmp_dictdel_key = const_str_plain_metaclass;
            tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_260;
            }
            branch_no_345:;
        }
        {
            nuitka_bool tmp_condition_result_522;
            PyObject *tmp_source_name_352;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__metaclass);
            tmp_source_name_352 = tmp_QtWidgets$class_creation_66__metaclass;
            tmp_res = PyObject_HasAttr(tmp_source_name_352, const_str_plain___prepare__);
            tmp_condition_result_522 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_522 == NUITKA_BOOL_TRUE) {
                goto branch_yes_346;
            } else {
                goto branch_no_346;
            }
            branch_yes_346:;
            {
                PyObject *tmp_assign_source_634;
                PyObject *tmp_called_name_184;
                PyObject *tmp_source_name_353;
                PyObject *tmp_args_name_172;
                PyObject *tmp_tuple_element_342;
                PyObject *tmp_kw_name_172;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_66__metaclass);
                tmp_source_name_353 = tmp_QtWidgets$class_creation_66__metaclass;
                tmp_called_name_184 = LOOKUP_ATTRIBUTE(tmp_source_name_353, const_str_plain___prepare__);
                if (tmp_called_name_184 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 459;
                    type_description_2 = "o";
                    goto try_except_handler_260;
                }
                tmp_tuple_element_342 = const_str_plain_QKeySequenceEdit;
                tmp_args_name_172 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_342);
                PyTuple_SET_ITEM(tmp_args_name_172, 0, tmp_tuple_element_342);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases);
                tmp_tuple_element_342 = tmp_QtWidgets$class_creation_66__bases;
                Py_INCREF(tmp_tuple_element_342);
                PyTuple_SET_ITEM(tmp_args_name_172, 1, tmp_tuple_element_342);
                CHECK_OBJECT(tmp_QtWidgets$class_creation_66__class_decl_dict);
                tmp_kw_name_172 = tmp_QtWidgets$class_creation_66__class_decl_dict;
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 459;
                tmp_assign_source_634 = CALL_FUNCTION(tmp_called_name_184, tmp_args_name_172, tmp_kw_name_172);
                Py_DECREF(tmp_called_name_184);
                Py_DECREF(tmp_args_name_172);
                if (tmp_assign_source_634 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 459;
                    type_description_2 = "o";
                    goto try_except_handler_260;
                }
                assert(tmp_QtWidgets$class_creation_66__prepared == NULL);
                tmp_QtWidgets$class_creation_66__prepared = tmp_assign_source_634;
            }
            {
                nuitka_bool tmp_condition_result_523;
                PyObject *tmp_operand_name_87;
                PyObject *tmp_source_name_354;
                CHECK_OBJECT(tmp_QtWidgets$class_creation_66__prepared);
                tmp_source_name_354 = tmp_QtWidgets$class_creation_66__prepared;
                tmp_res = PyObject_HasAttr(tmp_source_name_354, const_str_plain___getitem__);
                tmp_operand_name_87 = (tmp_res != 0) ? Py_True : Py_False;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_87);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 459;
                    type_description_2 = "o";
                    goto try_except_handler_260;
                }
                tmp_condition_result_523 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_523 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_347;
                } else {
                    goto branch_no_347;
                }
                branch_yes_347:;
                {
                    PyObject *tmp_raise_type_87;
                    PyObject *tmp_raise_value_87;
                    PyObject *tmp_left_name_87;
                    PyObject *tmp_right_name_87;
                    PyObject *tmp_tuple_element_343;
                    PyObject *tmp_getattr_target_87;
                    PyObject *tmp_getattr_attr_87;
                    PyObject *tmp_getattr_default_87;
                    PyObject *tmp_source_name_355;
                    PyObject *tmp_type_arg_174;
                    tmp_raise_type_87 = PyExc_TypeError;
                    tmp_left_name_87 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_66__metaclass);
                    tmp_getattr_target_87 = tmp_QtWidgets$class_creation_66__metaclass;
                    tmp_getattr_attr_87 = const_str_plain___name__;
                    tmp_getattr_default_87 = const_str_angle_metaclass;
                    tmp_tuple_element_343 = BUILTIN_GETATTR(tmp_getattr_target_87, tmp_getattr_attr_87, tmp_getattr_default_87);
                    if (tmp_tuple_element_343 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 459;
                        type_description_2 = "o";
                        goto try_except_handler_260;
                    }
                    tmp_right_name_87 = PyTuple_New(2);
                    PyTuple_SET_ITEM(tmp_right_name_87, 0, tmp_tuple_element_343);
                    CHECK_OBJECT(tmp_QtWidgets$class_creation_66__prepared);
                    tmp_type_arg_174 = tmp_QtWidgets$class_creation_66__prepared;
                    tmp_source_name_355 = BUILTIN_TYPE1(tmp_type_arg_174);
                    assert(!(tmp_source_name_355 == NULL));
                    tmp_tuple_element_343 = LOOKUP_ATTRIBUTE(tmp_source_name_355, const_str_plain___name__);
                    Py_DECREF(tmp_source_name_355);
                    if (tmp_tuple_element_343 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_right_name_87);

                        exception_lineno = 459;
                        type_description_2 = "o";
                        goto try_except_handler_260;
                    }
                    PyTuple_SET_ITEM(tmp_right_name_87, 1, tmp_tuple_element_343);
                    tmp_raise_value_87 = BINARY_OPERATION_MOD_UNICODE_TUPLE(tmp_left_name_87, tmp_right_name_87);
                    Py_DECREF(tmp_right_name_87);
                    if (tmp_raise_value_87 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 459;
                        type_description_2 = "o";
                        goto try_except_handler_260;
                    }
                    exception_type = tmp_raise_type_87;
                    Py_INCREF(tmp_raise_type_87);
                    exception_value = tmp_raise_value_87;
                    exception_lineno = 459;
                    RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    goto try_except_handler_260;
                }
                branch_no_347:;
            }
            goto branch_end_346;
            branch_no_346:;
            {
                PyObject *tmp_assign_source_635;
                tmp_assign_source_635 = PyDict_New();
                assert(tmp_QtWidgets$class_creation_66__prepared == NULL);
                tmp_QtWidgets$class_creation_66__prepared = tmp_assign_source_635;
            }
            branch_end_346:;
        }
        {
            PyObject *tmp_set_locals_87;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__prepared);
            tmp_set_locals_87 = tmp_QtWidgets$class_creation_66__prepared;
            locals_PyQt5$uic$Compiler$qtproxies_459 = tmp_set_locals_87;
            Py_INCREF(tmp_set_locals_87);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_459, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;
            type_description_2 = "o";
            goto try_except_handler_262;
        }
        tmp_dictset_value = const_str_digest_e7f9c8b6aa5904b185ea8d09bb2f82ee;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_459, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;
            type_description_2 = "o";
            goto try_except_handler_262;
        }
        {
            nuitka_bool tmp_condition_result_524;
            PyObject *tmp_compexpr_left_87;
            PyObject *tmp_compexpr_right_87;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases);
            tmp_compexpr_left_87 = tmp_QtWidgets$class_creation_66__bases;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases_orig);
            tmp_compexpr_right_87 = tmp_QtWidgets$class_creation_66__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_87, tmp_compexpr_right_87);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_262;
            }
            tmp_condition_result_524 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_524 == NUITKA_BOOL_TRUE) {
                goto branch_yes_348;
            } else {
                goto branch_no_348;
            }
            branch_yes_348:;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases_orig);
            tmp_dictset_value = tmp_QtWidgets$class_creation_66__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_459, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_262;
            }
            branch_no_348:;
        }
        {
            PyObject *tmp_assign_source_636;
            PyObject *tmp_called_name_185;
            PyObject *tmp_args_name_173;
            PyObject *tmp_tuple_element_344;
            PyObject *tmp_kw_name_173;
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__metaclass);
            tmp_called_name_185 = tmp_QtWidgets$class_creation_66__metaclass;
            tmp_tuple_element_344 = const_str_plain_QKeySequenceEdit;
            tmp_args_name_173 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_344);
            PyTuple_SET_ITEM(tmp_args_name_173, 0, tmp_tuple_element_344);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__bases);
            tmp_tuple_element_344 = tmp_QtWidgets$class_creation_66__bases;
            Py_INCREF(tmp_tuple_element_344);
            PyTuple_SET_ITEM(tmp_args_name_173, 1, tmp_tuple_element_344);
            tmp_tuple_element_344 = locals_PyQt5$uic$Compiler$qtproxies_459;
            Py_INCREF(tmp_tuple_element_344);
            PyTuple_SET_ITEM(tmp_args_name_173, 2, tmp_tuple_element_344);
            CHECK_OBJECT(tmp_QtWidgets$class_creation_66__class_decl_dict);
            tmp_kw_name_173 = tmp_QtWidgets$class_creation_66__class_decl_dict;
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 459;
            tmp_assign_source_636 = CALL_FUNCTION(tmp_called_name_185, tmp_args_name_173, tmp_kw_name_173);
            Py_DECREF(tmp_args_name_173);
            if (tmp_assign_source_636 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_2 = "o";
                goto try_except_handler_262;
            }
            assert(outline_86_var___class__ == NULL);
            outline_86_var___class__ = tmp_assign_source_636;
        }
        CHECK_OBJECT(outline_86_var___class__);
        tmp_dictset_value = outline_86_var___class__;
        Py_INCREF(tmp_dictset_value);
        goto try_return_handler_262;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_262:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_459);
        locals_PyQt5$uic$Compiler$qtproxies_459 = NULL;
        goto try_return_handler_261;
        // Exception handler code:
        try_except_handler_262:;
        exception_keeper_type_257 = exception_type;
        exception_keeper_value_257 = exception_value;
        exception_keeper_tb_257 = exception_tb;
        exception_keeper_lineno_257 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_459);
        locals_PyQt5$uic$Compiler$qtproxies_459 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_257;
        exception_value = exception_keeper_value_257;
        exception_tb = exception_keeper_tb_257;
        exception_lineno = exception_keeper_lineno_257;

        goto try_except_handler_261;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_261:;
        CHECK_OBJECT((PyObject *)outline_86_var___class__);
        Py_DECREF(outline_86_var___class__);
        outline_86_var___class__ = NULL;

        goto outline_result_87;
        // Exception handler code:
        try_except_handler_261:;
        exception_keeper_type_258 = exception_type;
        exception_keeper_value_258 = exception_value;
        exception_keeper_tb_258 = exception_tb;
        exception_keeper_lineno_258 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_258;
        exception_value = exception_keeper_value_258;
        exception_tb = exception_keeper_tb_258;
        exception_lineno = exception_keeper_lineno_258;

        goto outline_exception_87;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_87:;
        exception_lineno = 459;
        goto try_except_handler_260;
        outline_result_87:;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QKeySequenceEdit, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;
            type_description_2 = "o";
            goto try_except_handler_260;
        }
        goto try_end_87;
        // Exception handler code:
        try_except_handler_260:;
        exception_keeper_type_259 = exception_type;
        exception_keeper_value_259 = exception_value;
        exception_keeper_tb_259 = exception_tb;
        exception_keeper_lineno_259 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$class_creation_66__bases_orig);
        tmp_QtWidgets$class_creation_66__bases_orig = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_66__bases);
        tmp_QtWidgets$class_creation_66__bases = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_66__class_decl_dict);
        tmp_QtWidgets$class_creation_66__class_decl_dict = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_66__metaclass);
        tmp_QtWidgets$class_creation_66__metaclass = NULL;

        Py_XDECREF(tmp_QtWidgets$class_creation_66__prepared);
        tmp_QtWidgets$class_creation_66__prepared = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_259;
        exception_value = exception_keeper_value_259;
        exception_tb = exception_keeper_tb_259;
        exception_lineno = exception_keeper_lineno_259;

        goto frame_exception_exit_12;
        // End of try:
        try_end_87:;
        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_66__bases_orig);
        Py_DECREF(tmp_QtWidgets$class_creation_66__bases_orig);
        tmp_QtWidgets$class_creation_66__bases_orig = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_66__bases);
        Py_DECREF(tmp_QtWidgets$class_creation_66__bases);
        tmp_QtWidgets$class_creation_66__bases = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_66__class_decl_dict);
        Py_DECREF(tmp_QtWidgets$class_creation_66__class_decl_dict);
        tmp_QtWidgets$class_creation_66__class_decl_dict = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_66__metaclass);
        Py_DECREF(tmp_QtWidgets$class_creation_66__metaclass);
        tmp_QtWidgets$class_creation_66__metaclass = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$class_creation_66__prepared);
        Py_DECREF(tmp_QtWidgets$class_creation_66__prepared);
        tmp_QtWidgets$class_creation_66__prepared = NULL;

        {
            PyObject *tmp_assign_source_637;
            PyObject *tmp_iter_arg_1;
            PyObject *tmp_mvar_value_86;
            tmp_iter_arg_1 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain__qwidgets);

            if (tmp_iter_arg_1 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_86 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain__qwidgets);

                    if (unlikely(tmp_mvar_value_86 == NULL)) {
                        tmp_mvar_value_86 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain__qwidgets);
                    }

                    if (tmp_mvar_value_86 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 2160 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 462;
                        type_description_2 = "o";
                        goto frame_exception_exit_12;
                    }

                    tmp_iter_arg_1 = tmp_mvar_value_86;
                    Py_INCREF(tmp_iter_arg_1);
                }
            }

            tmp_assign_source_637 = MAKE_ITERATOR(tmp_iter_arg_1);
            Py_DECREF(tmp_iter_arg_1);
            if (tmp_assign_source_637 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 462;
                type_description_2 = "o";
                goto frame_exception_exit_12;
            }
            assert(tmp_QtWidgets$for_loop_1__for_iterator == NULL);
            tmp_QtWidgets$for_loop_1__for_iterator = tmp_assign_source_637;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_638;
            CHECK_OBJECT(tmp_QtWidgets$for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_QtWidgets$for_loop_1__for_iterator;
            tmp_assign_source_638 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_638 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    exception_lineno = 462;
                    goto try_except_handler_263;
                }
            }

            {
                PyObject *old = tmp_QtWidgets$for_loop_1__iter_value;
                tmp_QtWidgets$for_loop_1__iter_value = tmp_assign_source_638;
                Py_XDECREF(old);
            }

        }
        CHECK_OBJECT(tmp_QtWidgets$for_loop_1__iter_value);
        tmp_dictset_value = tmp_QtWidgets$for_loop_1__iter_value;
        tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain__class, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 462;
            type_description_2 = "o";
            goto try_except_handler_263;
        }
        {
            nuitka_bool tmp_condition_result_525;
            PyObject *tmp_compexpr_left_88;
            PyObject *tmp_compexpr_right_88;
            nuitka_bool tmp_condition_result_526;
            PyObject *tmp_called_name_186;
            tmp_compexpr_left_88 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain__class);

            if (tmp_compexpr_left_88 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 2191 ], 28, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 463;
                type_description_2 = "o";
                goto try_except_handler_263;
            }

            if (tmp_compexpr_left_88 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 463;
                type_description_2 = "o";
                goto try_except_handler_263;
            }
            tmp_res = MAPPING_HAS_ITEM(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_locals);

            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_compexpr_left_88);

                exception_lineno = 463;
                type_description_2 = "o";
                goto try_except_handler_263;
            }
            tmp_condition_result_526 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_526 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_177;
            } else {
                goto condexpr_false_177;
            }
            condexpr_true_177:;
            tmp_called_name_186 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_locals);

            if (tmp_called_name_186 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                Py_DECREF(tmp_compexpr_left_88);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 2219 ], 28, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 463;
                type_description_2 = "o";
                goto try_except_handler_263;
            }

            if (tmp_called_name_186 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_compexpr_left_88);

                exception_lineno = 463;
                type_description_2 = "o";
                goto try_except_handler_263;
            }
            frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 463;
            tmp_compexpr_right_88 = CALL_FUNCTION_NO_ARGS(tmp_called_name_186);
            Py_DECREF(tmp_called_name_186);
            if (tmp_compexpr_right_88 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_compexpr_left_88);

                exception_lineno = 463;
                type_description_2 = "o";
                goto try_except_handler_263;
            }
            goto condexpr_end_177;
            condexpr_false_177:;
            tmp_compexpr_right_88 = locals_PyQt5$uic$Compiler$qtproxies_288;
            Py_INCREF(tmp_compexpr_right_88);
            condexpr_end_177:;
            tmp_res = PySequence_Contains(tmp_compexpr_right_88, tmp_compexpr_left_88);
            Py_DECREF(tmp_compexpr_left_88);
            Py_DECREF(tmp_compexpr_right_88);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 463;
                type_description_2 = "o";
                goto try_except_handler_263;
            }
            tmp_condition_result_525 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_525 == NUITKA_BOOL_TRUE) {
                goto branch_yes_349;
            } else {
                goto branch_no_349;
            }
            branch_yes_349:;
            {
                PyObject *tmp_ass_subvalue_1;
                nuitka_bool tmp_condition_result_527;
                PyObject *tmp_called_name_187;
                PyObject *tmp_args_element_name_3;
                PyObject *tmp_args_element_name_4;
                PyObject *tmp_tuple_element_345;
                PyObject *tmp_mvar_value_87;
                PyObject *tmp_args_element_name_5;
                PyObject *tmp_type_name_name_1;
                PyObject *tmp_bases_name_88;
                PyObject *tmp_tuple_element_346;
                PyObject *tmp_mvar_value_88;
                PyObject *tmp_dict_name_262;
                PyObject *tmp_ass_subscribed_1;
                nuitka_bool tmp_condition_result_528;
                PyObject *tmp_called_name_188;
                PyObject *tmp_ass_subscript_1;
                tmp_res = MAPPING_HAS_ITEM(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_type);

                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                tmp_condition_result_527 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_527 == NUITKA_BOOL_TRUE) {
                    goto condexpr_true_178;
                } else {
                    goto condexpr_false_178;
                }
                condexpr_true_178:;
                tmp_called_name_187 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_type);

                if (tmp_called_name_187 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 2247 ], 26, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }

                if (tmp_called_name_187 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                tmp_args_element_name_3 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain__class);

                if (tmp_args_element_name_3 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    Py_DECREF(tmp_called_name_187);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 2191 ], 28, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }

                if (tmp_args_element_name_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_187);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                tmp_tuple_element_345 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

                if (tmp_tuple_element_345 == NULL) {
                    if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                        tmp_mvar_value_87 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                        if (unlikely(tmp_mvar_value_87 == NULL)) {
                            tmp_mvar_value_87 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                        }

                        if (tmp_mvar_value_87 == NULL) {
                            Py_DECREF(tmp_called_name_187);
                            Py_DECREF(tmp_args_element_name_3);
                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                            exception_tb = NULL;
                            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                            CHAIN_EXCEPTION(exception_value);

                            exception_lineno = 464;
                            type_description_2 = "o";
                            goto try_except_handler_263;
                        }

                        tmp_tuple_element_345 = tmp_mvar_value_87;
                        Py_INCREF(tmp_tuple_element_345);
                    }
                }

                tmp_args_element_name_4 = PyTuple_New(1);
                PyTuple_SET_ITEM(tmp_args_element_name_4, 0, tmp_tuple_element_345);
                tmp_args_element_name_5 = PyDict_New();
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 464;
                {
                    PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4, tmp_args_element_name_5};
                    tmp_ass_subvalue_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_187, call_args);
                }

                Py_DECREF(tmp_called_name_187);
                Py_DECREF(tmp_args_element_name_3);
                Py_DECREF(tmp_args_element_name_4);
                Py_DECREF(tmp_args_element_name_5);
                if (tmp_ass_subvalue_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                goto condexpr_end_178;
                condexpr_false_178:;
                tmp_type_name_name_1 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain__class);

                if (tmp_type_name_name_1 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 2191 ], 28, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }

                if (tmp_type_name_name_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                tmp_tuple_element_346 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_QWidget);

                if (tmp_tuple_element_346 == NULL) {
                    if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                        tmp_mvar_value_88 = GET_STRING_DICT_VALUE(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QWidget);

                        if (unlikely(tmp_mvar_value_88 == NULL)) {
                            tmp_mvar_value_88 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_QWidget);
                        }

                        if (tmp_mvar_value_88 == NULL) {
                            Py_DECREF(tmp_type_name_name_1);
                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 1591 ], 29, 0);
                            exception_tb = NULL;
                            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                            CHAIN_EXCEPTION(exception_value);

                            exception_lineno = 464;
                            type_description_2 = "o";
                            goto try_except_handler_263;
                        }

                        tmp_tuple_element_346 = tmp_mvar_value_88;
                        Py_INCREF(tmp_tuple_element_346);
                    }
                }

                tmp_bases_name_88 = PyTuple_New(1);
                PyTuple_SET_ITEM(tmp_bases_name_88, 0, tmp_tuple_element_346);
                tmp_dict_name_262 = PyDict_New();
                tmp_ass_subvalue_1 = BUILTIN_TYPE3(const_str_digest_fdd7141f5aeca63f2da938ad0ba466e5, tmp_type_name_name_1, tmp_bases_name_88, tmp_dict_name_262);
                Py_DECREF(tmp_type_name_name_1);
                Py_DECREF(tmp_bases_name_88);
                Py_DECREF(tmp_dict_name_262);
                if (tmp_ass_subvalue_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                condexpr_end_178:;
                tmp_res = MAPPING_HAS_ITEM(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_locals);

                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_ass_subvalue_1);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                tmp_condition_result_528 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_528 == NUITKA_BOOL_TRUE) {
                    goto condexpr_true_179;
                } else {
                    goto condexpr_false_179;
                }
                condexpr_true_179:;
                tmp_called_name_188 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain_locals);

                if (tmp_called_name_188 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    Py_DECREF(tmp_ass_subvalue_1);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 2219 ], 28, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }

                if (tmp_called_name_188 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_ass_subvalue_1);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame.f_lineno = 464;
                tmp_ass_subscribed_1 = CALL_FUNCTION_NO_ARGS(tmp_called_name_188);
                Py_DECREF(tmp_called_name_188);
                if (tmp_ass_subscribed_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_ass_subvalue_1);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                goto condexpr_end_179;
                condexpr_false_179:;
                tmp_ass_subscribed_1 = locals_PyQt5$uic$Compiler$qtproxies_288;
                Py_INCREF(tmp_ass_subscribed_1);
                condexpr_end_179:;
                tmp_ass_subscript_1 = PyObject_GetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain__class);

                if (tmp_ass_subscript_1 == NULL && CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    Py_DECREF(tmp_ass_subvalue_1);
                    Py_DECREF(tmp_ass_subscribed_1);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 2191 ], 28, 0);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }

                if (tmp_ass_subscript_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_ass_subvalue_1);
                    Py_DECREF(tmp_ass_subscribed_1);

                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
                Py_DECREF(tmp_ass_subscribed_1);
                Py_DECREF(tmp_ass_subscript_1);
                Py_DECREF(tmp_ass_subvalue_1);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 464;
                    type_description_2 = "o";
                    goto try_except_handler_263;
                }
            }
            branch_no_349:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 462;
            type_description_2 = "o";
            goto try_except_handler_263;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_88;
        // Exception handler code:
        try_except_handler_263:;
        exception_keeper_type_260 = exception_type;
        exception_keeper_value_260 = exception_value;
        exception_keeper_tb_260 = exception_tb;
        exception_keeper_lineno_260 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_QtWidgets$for_loop_1__iter_value);
        tmp_QtWidgets$for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$for_loop_1__for_iterator);
        Py_DECREF(tmp_QtWidgets$for_loop_1__for_iterator);
        tmp_QtWidgets$for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_260;
        exception_value = exception_keeper_value_260;
        exception_tb = exception_keeper_tb_260;
        exception_lineno = exception_keeper_lineno_260;

        goto frame_exception_exit_12;
        // End of try:
        try_end_88:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d8c51ce26a6825461415e7bb5df0a78e_12);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_23;

        frame_exception_exit_12:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d8c51ce26a6825461415e7bb5df0a78e_12);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_d8c51ce26a6825461415e7bb5df0a78e_12, exception_lineno);
        }
        else if (exception_tb->tb_frame != &frame_d8c51ce26a6825461415e7bb5df0a78e_12->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_d8c51ce26a6825461415e7bb5df0a78e_12, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            (struct Nuitka_FrameObject *)frame_d8c51ce26a6825461415e7bb5df0a78e_12,
            type_description_2,
            outline_20_var___class__
        );


        // Release cached frame.
        if (frame_d8c51ce26a6825461415e7bb5df0a78e_12 == cache_frame_d8c51ce26a6825461415e7bb5df0a78e_12) {
            Py_DECREF(frame_d8c51ce26a6825461415e7bb5df0a78e_12);
        }
        cache_frame_d8c51ce26a6825461415e7bb5df0a78e_12 = NULL;

        assertFrameObject(frame_d8c51ce26a6825461415e7bb5df0a78e_12);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_11;

        frame_no_exception_23:;
        goto skip_nested_handling_23;
        nested_frame_exit_11:;

        goto try_except_handler_64;
        skip_nested_handling_23:;
        Py_XDECREF(tmp_QtWidgets$for_loop_1__iter_value);
        tmp_QtWidgets$for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_QtWidgets$for_loop_1__for_iterator);
        Py_DECREF(tmp_QtWidgets$for_loop_1__for_iterator);
        tmp_QtWidgets$for_loop_1__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_529;
            PyObject *tmp_compexpr_left_89;
            PyObject *tmp_compexpr_right_89;
            CHECK_OBJECT(tmp_class_creation_9__bases);
            tmp_compexpr_left_89 = tmp_class_creation_9__bases;
            CHECK_OBJECT(tmp_class_creation_9__bases_orig);
            tmp_compexpr_right_89 = tmp_class_creation_9__bases_orig;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_89, tmp_compexpr_right_89);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;

                goto try_except_handler_64;
            }
            tmp_condition_result_529 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_529 == NUITKA_BOOL_TRUE) {
                goto branch_yes_350;
            } else {
                goto branch_no_350;
            }
            branch_yes_350:;
            CHECK_OBJECT(tmp_class_creation_9__bases_orig);
            tmp_dictset_value = tmp_class_creation_9__bases_orig;
            tmp_res = PyObject_SetItem(locals_PyQt5$uic$Compiler$qtproxies_288, const_str_plain___orig_bases__, tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;

                goto try_except_handler_64;
            }
            branch_no_350:;
        }
        {
            PyObject *tmp_assign_source_639;
            PyObject *tmp_called_name_189;
            PyObject *tmp_args_name_174;
            PyObject *tmp_tuple_element_347;
            PyObject *tmp_kw_name_174;
            CHECK_OBJECT(tmp_class_creation_9__metaclass);
            tmp_called_name_189 = tmp_class_creation_9__metaclass;
            tmp_tuple_element_347 = const_str_plain_QtWidgets;
            tmp_args_name_174 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_347);
            PyTuple_SET_ITEM(tmp_args_name_174, 0, tmp_tuple_element_347);
            CHECK_OBJECT(tmp_class_creation_9__bases);
            tmp_tuple_element_347 = tmp_class_creation_9__bases;
            Py_INCREF(tmp_tuple_element_347);
            PyTuple_SET_ITEM(tmp_args_name_174, 1, tmp_tuple_element_347);
            tmp_tuple_element_347 = locals_PyQt5$uic$Compiler$qtproxies_288;
            Py_INCREF(tmp_tuple_element_347);
            PyTuple_SET_ITEM(tmp_args_name_174, 2, tmp_tuple_element_347);
            CHECK_OBJECT(tmp_class_creation_9__class_decl_dict);
            tmp_kw_name_174 = tmp_class_creation_9__class_decl_dict;
            frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame.f_lineno = 288;
            tmp_assign_source_639 = CALL_FUNCTION(tmp_called_name_189, tmp_args_name_174, tmp_kw_name_174);
            Py_DECREF(tmp_args_name_174);
            if (tmp_assign_source_639 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;

                goto try_except_handler_64;
            }
            assert(outline_20_var___class__ == NULL);
            outline_20_var___class__ = tmp_assign_source_639;
        }
        CHECK_OBJECT(outline_20_var___class__);
        tmp_assign_source_174 = outline_20_var___class__;
        Py_INCREF(tmp_assign_source_174);
        goto try_return_handler_64;
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_64:;
        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_288);
        locals_PyQt5$uic$Compiler$qtproxies_288 = NULL;
        goto try_return_handler_63;
        // Exception handler code:
        try_except_handler_64:;
        exception_keeper_type_261 = exception_type;
        exception_keeper_value_261 = exception_value;
        exception_keeper_tb_261 = exception_tb;
        exception_keeper_lineno_261 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_PyQt5$uic$Compiler$qtproxies_288);
        locals_PyQt5$uic$Compiler$qtproxies_288 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_261;
        exception_value = exception_keeper_value_261;
        exception_tb = exception_keeper_tb_261;
        exception_lineno = exception_keeper_lineno_261;

        goto try_except_handler_63;
        // End of try:
        // tried codes exits in all cases
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        // Return handler code:
        try_return_handler_63:;
        CHECK_OBJECT((PyObject *)outline_20_var___class__);
        Py_DECREF(outline_20_var___class__);
        outline_20_var___class__ = NULL;

        goto outline_result_21;
        // Exception handler code:
        try_except_handler_63:;
        exception_keeper_type_262 = exception_type;
        exception_keeper_value_262 = exception_value;
        exception_keeper_tb_262 = exception_tb;
        exception_keeper_lineno_262 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_262;
        exception_value = exception_keeper_value_262;
        exception_tb = exception_keeper_tb_262;
        exception_lineno = exception_keeper_lineno_262;

        goto outline_exception_21;
        // End of try:
        // Return statement must have exited already.
        NUITKA_CANNOT_GET_HERE(PyQt5$uic$Compiler$qtproxies);
        return NULL;
        outline_exception_21:;
        exception_lineno = 288;
        goto try_except_handler_62;
        outline_result_21:;
        UPDATE_STRING_DICT1(moduledict_PyQt5$uic$Compiler$qtproxies, (Nuitka_StringObject *)const_str_plain_QtWidgets, tmp_assign_source_174);
    }
    goto try_end_89;
    // Exception handler code:
    try_except_handler_62:;
    exception_keeper_type_263 = exception_type;
    exception_keeper_value_263 = exception_value;
    exception_keeper_tb_263 = exception_tb;
    exception_keeper_lineno_263 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_9__bases_orig);
    tmp_class_creation_9__bases_orig = NULL;

    Py_XDECREF(tmp_class_creation_9__bases);
    tmp_class_creation_9__bases = NULL;

    Py_XDECREF(tmp_class_creation_9__class_decl_dict);
    tmp_class_creation_9__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_9__metaclass);
    tmp_class_creation_9__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_9__prepared);
    tmp_class_creation_9__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_263;
    exception_value = exception_keeper_value_263;
    exception_tb = exception_keeper_tb_263;
    exception_lineno = exception_keeper_lineno_263;

    goto frame_exception_exit_1;
    // End of try:
    try_end_89:;

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_d988ce8ae87f78fb5ef322326ef27f66);
#endif
    popFrameStack();

    assertFrameObject(frame_d988ce8ae87f78fb5ef322326ef27f66);

    goto frame_no_exception_24;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_d988ce8ae87f78fb5ef322326ef27f66);
#endif

    if ( exception_tb == NULL )
    {
        exception_tb = MAKE_TRACEBACK(frame_d988ce8ae87f78fb5ef322326ef27f66, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_d988ce8ae87f78fb5ef322326ef27f66->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_d988ce8ae87f78fb5ef322326ef27f66, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_24:;
    CHECK_OBJECT((PyObject *)tmp_class_creation_9__bases_orig);
    Py_DECREF(tmp_class_creation_9__bases_orig);
    tmp_class_creation_9__bases_orig = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_9__bases);
    Py_DECREF(tmp_class_creation_9__bases);
    tmp_class_creation_9__bases = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_9__class_decl_dict);
    Py_DECREF(tmp_class_creation_9__class_decl_dict);
    tmp_class_creation_9__class_decl_dict = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_9__metaclass);
    Py_DECREF(tmp_class_creation_9__metaclass);
    tmp_class_creation_9__metaclass = NULL;

    CHECK_OBJECT((PyObject *)tmp_class_creation_9__prepared);
    Py_DECREF(tmp_class_creation_9__prepared);
    tmp_class_creation_9__prepared = NULL;


    return module_PyQt5$uic$Compiler$qtproxies;
    module_exception_exit:
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
